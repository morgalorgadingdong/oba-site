var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key2, value) => key2 in obj ? __defProp(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key2 of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key2) && key2 !== except)
        __defProp(to, key2, { get: () => from[key2], enumerable: !(desc = __getOwnPropDesc(from, key2)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target, mod));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// .netlify/server/chunks/index2.js
function noop() {
}
function run(fn) {
  return fn();
}
function blank_object() {
  return /* @__PURE__ */ Object.create(null);
}
function run_all(fns) {
  fns.forEach(run);
}
function safe_not_equal(a, b) {
  return a != a ? b == b : a !== b || (a && typeof a === "object" || typeof a === "function");
}
function subscribe(store, ...callbacks) {
  if (store == null) {
    return noop;
  }
  const unsub = store.subscribe(...callbacks);
  return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function compute_rest_props(props, keys) {
  const rest = {};
  keys = new Set(keys);
  for (const k in props)
    if (!keys.has(k) && k[0] !== "$")
      rest[k] = props[k];
  return rest;
}
function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
  const e = document.createEvent("CustomEvent");
  e.initCustomEvent(type, bubbles, cancelable, detail);
  return e;
}
function set_current_component(component5) {
  current_component = component5;
}
function get_current_component() {
  if (!current_component)
    throw new Error("Function called outside component initialization");
  return current_component;
}
function createEventDispatcher() {
  const component5 = get_current_component();
  return (type, detail, { cancelable = false } = {}) => {
    const callbacks = component5.$$.callbacks[type];
    if (callbacks) {
      const event = custom_event(type, detail, { cancelable });
      callbacks.slice().forEach((fn) => {
        fn.call(component5, event);
      });
      return !event.defaultPrevented;
    }
    return true;
  };
}
function setContext(key2, context) {
  get_current_component().$$.context.set(key2, context);
  return context;
}
function getContext(key2) {
  return get_current_component().$$.context.get(key2);
}
function spread(args, attrs_to_add) {
  const attributes = Object.assign({}, ...args);
  if (attrs_to_add) {
    const classes_to_add = attrs_to_add.classes;
    const styles_to_add = attrs_to_add.styles;
    if (classes_to_add) {
      if (attributes.class == null) {
        attributes.class = classes_to_add;
      } else {
        attributes.class += " " + classes_to_add;
      }
    }
    if (styles_to_add) {
      if (attributes.style == null) {
        attributes.style = style_object_to_string(styles_to_add);
      } else {
        attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));
      }
    }
  }
  let str = "";
  Object.keys(attributes).forEach((name) => {
    if (invalid_attribute_name_character.test(name))
      return;
    const value = attributes[name];
    if (value === true)
      str += " " + name;
    else if (boolean_attributes.has(name.toLowerCase())) {
      if (value)
        str += " " + name;
    } else if (value != null) {
      str += ` ${name}="${value}"`;
    }
  });
  return str;
}
function merge_ssr_styles(style_attribute, style_directive) {
  const style_object = {};
  for (const individual_style of style_attribute.split(";")) {
    const colon_index = individual_style.indexOf(":");
    const name = individual_style.slice(0, colon_index).trim();
    const value = individual_style.slice(colon_index + 1).trim();
    if (!name)
      continue;
    style_object[name] = value;
  }
  for (const name in style_directive) {
    const value = style_directive[name];
    if (value) {
      style_object[name] = value;
    } else {
      delete style_object[name];
    }
  }
  return style_object;
}
function escape(value, is_attr = false) {
  const str = String(value);
  const pattern2 = is_attr ? ATTR_REGEX : CONTENT_REGEX;
  pattern2.lastIndex = 0;
  let escaped2 = "";
  let last = 0;
  while (pattern2.test(str)) {
    const i = pattern2.lastIndex - 1;
    const ch = str[i];
    escaped2 += str.substring(last, i) + (ch === "&" ? "&amp;" : ch === '"' ? "&quot;" : "&lt;");
    last = i + 1;
  }
  return escaped2 + str.substring(last);
}
function escape_attribute_value(value) {
  const should_escape = typeof value === "string" || value && typeof value === "object";
  return should_escape ? escape(value, true) : value;
}
function escape_object(obj) {
  const result = {};
  for (const key2 in obj) {
    result[key2] = escape_attribute_value(obj[key2]);
  }
  return result;
}
function each(items2, fn) {
  let str = "";
  for (let i = 0; i < items2.length; i += 1) {
    str += fn(items2[i], i);
  }
  return str;
}
function validate_component(component5, name) {
  if (!component5 || !component5.$$render) {
    if (name === "svelte:component")
      name += " this={...}";
    throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);
  }
  return component5;
}
function create_ssr_component(fn) {
  function $$render(result, props, bindings, slots, context) {
    const parent_component = current_component;
    const $$ = {
      on_destroy,
      context: new Map(context || (parent_component ? parent_component.$$.context : [])),
      on_mount: [],
      before_update: [],
      after_update: [],
      callbacks: blank_object()
    };
    set_current_component({ $$ });
    const html = fn(result, props, bindings, slots);
    set_current_component(parent_component);
    return html;
  }
  return {
    render: (props = {}, { $$slots = {}, context = /* @__PURE__ */ new Map() } = {}) => {
      on_destroy = [];
      const result = { title: "", head: "", css: /* @__PURE__ */ new Set() };
      const html = $$render(result, props, {}, $$slots, context);
      run_all(on_destroy);
      return {
        html,
        css: {
          code: Array.from(result.css).map((css4) => css4.code).join("\n"),
          map: null
        },
        head: result.title + result.head
      };
    },
    $$render
  };
}
function add_attribute(name, value, boolean) {
  if (value == null || boolean && !value)
    return "";
  const assignment = boolean && value === true ? "" : `="${escape(value, true)}"`;
  return ` ${name}${assignment}`;
}
function style_object_to_string(style_object) {
  return Object.keys(style_object).filter((key2) => style_object[key2]).map((key2) => `${key2}: ${escape_attribute_value(style_object[key2])};`).join(" ");
}
var current_component, boolean_attributes, invalid_attribute_name_character, ATTR_REGEX, CONTENT_REGEX, missing_component, on_destroy;
var init_index2 = __esm({
  ".netlify/server/chunks/index2.js"() {
    Promise.resolve();
    boolean_attributes = /* @__PURE__ */ new Set([
      "allowfullscreen",
      "allowpaymentrequest",
      "async",
      "autofocus",
      "autoplay",
      "checked",
      "controls",
      "default",
      "defer",
      "disabled",
      "formnovalidate",
      "hidden",
      "inert",
      "ismap",
      "itemscope",
      "loop",
      "multiple",
      "muted",
      "nomodule",
      "novalidate",
      "open",
      "playsinline",
      "readonly",
      "required",
      "reversed",
      "selected"
    ]);
    invalid_attribute_name_character = /[\s'">/=\u{FDD0}-\u{FDEF}\u{FFFE}\u{FFFF}\u{1FFFE}\u{1FFFF}\u{2FFFE}\u{2FFFF}\u{3FFFE}\u{3FFFF}\u{4FFFE}\u{4FFFF}\u{5FFFE}\u{5FFFF}\u{6FFFE}\u{6FFFF}\u{7FFFE}\u{7FFFF}\u{8FFFE}\u{8FFFF}\u{9FFFE}\u{9FFFF}\u{AFFFE}\u{AFFFF}\u{BFFFE}\u{BFFFF}\u{CFFFE}\u{CFFFF}\u{DFFFE}\u{DFFFF}\u{EFFFE}\u{EFFFF}\u{FFFFE}\u{FFFFF}\u{10FFFE}\u{10FFFF}]/u;
    ATTR_REGEX = /[&"]/g;
    CONTENT_REGEX = /[&<]/g;
    missing_component = {
      $$render: () => ""
    };
  }
});

// node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "node_modules/tslib/tslib.js"(exports, module2) {
    var __extends;
    var __assign;
    var __rest;
    var __decorate;
    var __param;
    var __esDecorate;
    var __runInitializers;
    var __propKey;
    var __setFunctionName;
    var __metadata;
    var __awaiter;
    var __generator;
    var __exportStar;
    var __values;
    var __read;
    var __spread;
    var __spreadArrays;
    var __spreadArray;
    var __await;
    var __asyncGenerator;
    var __asyncDelegator;
    var __asyncValues;
    var __makeTemplateObject;
    var __importStar;
    var __importDefault;
    var __classPrivateFieldGet;
    var __classPrivateFieldSet;
    var __classPrivateFieldIn;
    var __createBinding;
    (function(factory) {
      var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
      if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function(exports2) {
          factory(createExporter(root, createExporter(exports2)));
        });
      } else if (typeof module2 === "object" && typeof module2.exports === "object") {
        factory(createExporter(root, createExporter(module2.exports)));
      } else {
        factory(createExporter(root));
      }
      function createExporter(exports2, previous) {
        if (exports2 !== root) {
          if (typeof Object.create === "function") {
            Object.defineProperty(exports2, "__esModule", { value: true });
          } else {
            exports2.__esModule = true;
          }
        }
        return function(id, v) {
          return exports2[id] = previous ? previous(id, v) : v;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d, b) {
        d.__proto__ = b;
      } || function(d, b) {
        for (var p in b)
          if (Object.prototype.hasOwnProperty.call(b, p))
            d[p] = b[p];
      };
      __extends = function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
      __assign = Object.assign || function(t) {
        for (var s2, i = 1, n = arguments.length; i < n; i++) {
          s2 = arguments[i];
          for (var p in s2)
            if (Object.prototype.hasOwnProperty.call(s2, p))
              t[p] = s2[p];
        }
        return t;
      };
      __rest = function(s2, e) {
        var t = {};
        for (var p in s2)
          if (Object.prototype.hasOwnProperty.call(s2, p) && e.indexOf(p) < 0)
            t[p] = s2[p];
        if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i = 0, p = Object.getOwnPropertySymbols(s2); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p[i]))
              t[p[i]] = s2[p[i]];
          }
        return t;
      };
      __decorate = function(decorators, target, key2, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key2) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key2, desc);
        else
          for (var i = decorators.length - 1; i >= 0; i--)
            if (d = decorators[i])
              r = (c < 3 ? d(r) : c > 3 ? d(target, key2, r) : d(target, key2)) || r;
        return c > 3 && r && Object.defineProperty(target, key2, r), r;
      };
      __param = function(paramIndex, decorator) {
        return function(target, key2) {
          decorator(target, key2, paramIndex);
        };
      };
      __esDecorate = function(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) {
          if (f !== void 0 && typeof f !== "function")
            throw new TypeError("Function expected");
          return f;
        }
        var kind = contextIn.kind, key2 = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
          var context = {};
          for (var p in contextIn)
            context[p] = p === "access" ? {} : contextIn[p];
          for (var p in contextIn.access)
            context.access[p] = contextIn.access[p];
          context.addInitializer = function(f) {
            if (done)
              throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f || null));
          };
          var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key2], context);
          if (kind === "accessor") {
            if (result === void 0)
              continue;
            if (result === null || typeof result !== "object")
              throw new TypeError("Object expected");
            if (_ = accept(result.get))
              descriptor.get = _;
            if (_ = accept(result.set))
              descriptor.set = _;
            if (_ = accept(result.init))
              initializers.push(_);
          } else if (_ = accept(result)) {
            if (kind === "field")
              initializers.push(_);
            else
              descriptor[key2] = _;
          }
        }
        if (target)
          Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
      };
      __runInitializers = function(thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
          value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
      };
      __propKey = function(x) {
        return typeof x === "symbol" ? x : "".concat(x);
      };
      __setFunctionName = function(f, name, prefix) {
        if (typeof name === "symbol")
          name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
      };
      __metadata = function(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
      };
      __awaiter = function(thisArg, _arguments, P, generator) {
        function adopt(value) {
          return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }
          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      };
      __generator = function(thisArg, body2) {
        var _ = { label: 0, sent: function() {
          if (t[0] & 1)
            throw t[1];
          return t[1];
        }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
          return this;
        }), g;
        function verb(n) {
          return function(v) {
            return step([n, v]);
          };
        }
        function step(op) {
          if (f)
            throw new TypeError("Generator is already executing.");
          while (g && (g = 0, op[0] && (_ = 0)), _)
            try {
              if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                return t;
              if (y = 0, t)
                op = [op[0] & 2, t.value];
              switch (op[0]) {
                case 0:
                case 1:
                  t = op;
                  break;
                case 4:
                  _.label++;
                  return { value: op[1], done: false };
                case 5:
                  _.label++;
                  y = op[1];
                  op = [0];
                  continue;
                case 7:
                  op = _.ops.pop();
                  _.trys.pop();
                  continue;
                default:
                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _ = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                    _.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _.label < t[1]) {
                    _.label = t[1];
                    t = op;
                    break;
                  }
                  if (t && _.label < t[2]) {
                    _.label = t[2];
                    _.ops.push(op);
                    break;
                  }
                  if (t[2])
                    _.ops.pop();
                  _.trys.pop();
                  continue;
              }
              op = body2.call(thisArg, _);
            } catch (e) {
              op = [6, e];
              y = 0;
            } finally {
              f = t = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
        }
      };
      __exportStar = function(m, o) {
        for (var p in m)
          if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
            __createBinding(o, m, p);
      };
      __createBinding = Object.create ? function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
          desc = { enumerable: true, get: function() {
            return m[k];
          } };
        }
        Object.defineProperty(o, k2, desc);
      } : function(o, m, k, k2) {
        if (k2 === void 0)
          k2 = k;
        o[k2] = m[k];
      };
      __values = function(o) {
        var s2 = typeof Symbol === "function" && Symbol.iterator, m = s2 && o[s2], i = 0;
        if (m)
          return m.call(o);
        if (o && typeof o.length === "number")
          return {
            next: function() {
              if (o && i >= o.length)
                o = void 0;
              return { value: o && o[i++], done: !o };
            }
          };
        throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      };
      __read = function(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
          return o;
        var i = m.call(o), r, ar = [], e;
        try {
          while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
            ar.push(r.value);
        } catch (error2) {
          e = { error: error2 };
        } finally {
          try {
            if (r && !r.done && (m = i["return"]))
              m.call(i);
          } finally {
            if (e)
              throw e.error;
          }
        }
        return ar;
      };
      __spread = function() {
        for (var ar = [], i = 0; i < arguments.length; i++)
          ar = ar.concat(__read(arguments[i]));
        return ar;
      };
      __spreadArrays = function() {
        for (var s2 = 0, i = 0, il = arguments.length; i < il; i++)
          s2 += arguments[i].length;
        for (var r = Array(s2), k = 0, i = 0; i < il; i++)
          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
        return r;
      };
      __spreadArray = function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
              if (!ar)
                ar = Array.prototype.slice.call(from, 0, i);
              ar[i] = from[i];
            }
          }
        return to.concat(ar || Array.prototype.slice.call(from));
      };
      __await = function(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
      };
      __asyncGenerator = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
          return this;
        }, i;
        function verb(n) {
          if (g[n])
            i[n] = function(v) {
              return new Promise(function(a, b) {
                q.push([n, v, a, b]) > 1 || resume2(n, v);
              });
            };
        }
        function resume2(n, v) {
          try {
            step(g[n](v));
          } catch (e) {
            settle(q[0][3], e);
          }
        }
        function step(r) {
          r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
        }
        function fulfill(value) {
          resume2("next", value);
        }
        function reject(value) {
          resume2("throw", value);
        }
        function settle(f, v) {
          if (f(v), q.shift(), q.length)
            resume2(q[0][0], q[0][1]);
        }
      };
      __asyncDelegator = function(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function(e) {
          throw e;
        }), verb("return"), i[Symbol.iterator] = function() {
          return this;
        }, i;
        function verb(n, f) {
          i[n] = o[n] ? function(v) {
            return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v;
          } : f;
        }
      };
      __asyncValues = function(o) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
          return this;
        }, i);
        function verb(n) {
          i[n] = o[n] && function(v) {
            return new Promise(function(resolve, reject) {
              v = o[n](v), settle(resolve, reject, v.done, v.value);
            });
          };
        }
        function settle(resolve, reject, d, v) {
          Promise.resolve(v).then(function(v2) {
            resolve({ value: v2, done: d });
          }, reject);
        }
      };
      __makeTemplateObject = function(cooked, raw) {
        if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
        } else {
          cooked.raw = raw;
        }
        return cooked;
      };
      var __setModuleDefault = Object.create ? function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      } : function(o, v) {
        o["default"] = v;
      };
      __importStar = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null) {
          for (var k in mod)
            if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
              __createBinding(result, mod, k);
        }
        __setModuleDefault(result, mod);
        return result;
      };
      __importDefault = function(mod) {
        return mod && mod.__esModule ? mod : { "default": mod };
      };
      __classPrivateFieldGet = function(receiver, state, kind, f) {
        if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
      };
      __classPrivateFieldSet = function(receiver, state, value, kind, f) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
      };
      __classPrivateFieldIn = function(state, receiver) {
        if (receiver === null || typeof receiver !== "object" && typeof receiver !== "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
      };
      exporter("__extends", __extends);
      exporter("__assign", __assign);
      exporter("__rest", __rest);
      exporter("__decorate", __decorate);
      exporter("__param", __param);
      exporter("__esDecorate", __esDecorate);
      exporter("__runInitializers", __runInitializers);
      exporter("__propKey", __propKey);
      exporter("__setFunctionName", __setFunctionName);
      exporter("__metadata", __metadata);
      exporter("__awaiter", __awaiter);
      exporter("__generator", __generator);
      exporter("__exportStar", __exportStar);
      exporter("__createBinding", __createBinding);
      exporter("__values", __values);
      exporter("__read", __read);
      exporter("__spread", __spread);
      exporter("__spreadArrays", __spreadArrays);
      exporter("__spreadArray", __spreadArray);
      exporter("__await", __await);
      exporter("__asyncGenerator", __asyncGenerator);
      exporter("__asyncDelegator", __asyncDelegator);
      exporter("__asyncValues", __asyncValues);
      exporter("__makeTemplateObject", __makeTemplateObject);
      exporter("__importStar", __importStar);
      exporter("__importDefault", __importDefault);
      exporter("__classPrivateFieldGet", __classPrivateFieldGet);
      exporter("__classPrivateFieldSet", __classPrivateFieldSet);
      exporter("__classPrivateFieldIn", __classPrivateFieldIn);
    });
  }
});

// node_modules/@apimatic/schema/lib/utils.js
var require_utils = __commonJS({
  "node_modules/@apimatic/schema/lib/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.objectKeyEncode = exports.omitKeysFromObject = exports.once = exports.coerceStringOrNumberToBigInt = exports.coerceNumericStringToNumber = exports.isNumericString = exports.createSymmetricSchema = exports.toValidator = exports.identityFn = exports.literalToString = exports.objectEntries = exports.arrayEntries = void 0;
    var tslib_1 = require_tslib();
    function arrayEntries(arr) {
      var entries = [];
      for (var index5 = 0; index5 < arr.length; index5++) {
        var element = arr[index5];
        entries.push([index5, element]);
      }
      return entries;
    }
    exports.arrayEntries = arrayEntries;
    function objectEntries(obj) {
      var ownProps = Object.keys(obj);
      var i = ownProps.length;
      var resArray = new Array(i);
      while (i--) {
        resArray[i] = [ownProps[i], obj[ownProps[i]]];
      }
      return resArray;
    }
    exports.objectEntries = objectEntries;
    function literalToString(value) {
      return typeof value === "string" ? '"' + value.replace(/"/g, '"') + '"' : "" + value;
    }
    exports.literalToString = literalToString;
    function identityFn(value) {
      return value;
    }
    exports.identityFn = identityFn;
    function toValidator(fn) {
      return function(value, ctxt) {
        return fn(value) ? [] : ctxt.fail();
      };
    }
    exports.toValidator = toValidator;
    function createSymmetricSchema(schema) {
      return createBasicSchema({
        type: function() {
          return schema.type;
        },
        validateBeforeMap: schema.validate,
        validateBeforeUnmap: schema.validate,
        map: schema.map,
        unmap: schema.map
      });
    }
    exports.createSymmetricSchema = createSymmetricSchema;
    function createBasicSchema(basicSchema) {
      return tslib_1.__assign(tslib_1.__assign({}, basicSchema), { validateBeforeMapXml: basicSchema.validateBeforeUnmap, mapXml: basicSchema.map, unmapXml: basicSchema.unmap });
    }
    function isNumericString(value) {
      return typeof value === "number" || typeof value === "string" && !isNaN(value);
    }
    exports.isNumericString = isNumericString;
    function coerceNumericStringToNumber(value) {
      return typeof value === "number" ? value : +value;
    }
    exports.coerceNumericStringToNumber = coerceNumericStringToNumber;
    function coerceStringOrNumberToBigInt(value) {
      return typeof value === "bigint" ? value : BigInt(value);
    }
    exports.coerceStringOrNumberToBigInt = coerceStringOrNumberToBigInt;
    function once2(func) {
      var ran = false;
      var memo;
      return function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        if (ran) {
          return memo;
        }
        ran = true;
        memo = func.apply(this, args);
        return memo;
      };
    }
    exports.once = once2;
    function omitKeysFromObject(object, keysToOmit) {
      var omitSet = new Set(keysToOmit);
      var output = {};
      for (var key2 in object) {
        if (Object.prototype.hasOwnProperty.call(object, key2) && !omitSet.has(key2)) {
          output[key2] = object[key2];
        }
      }
      return output;
    }
    exports.omitKeysFromObject = omitKeysFromObject;
    function objectKeyEncode(key2) {
      return key2.indexOf(" ") !== -1 ? literalToString(key2) : key2;
    }
    exports.objectKeyEncode = objectKeyEncode;
  }
});

// node_modules/@apimatic/schema/lib/schema.js
var require_schema = __commonJS({
  "node_modules/@apimatic/schema/lib/schema.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.validateAndUnmapXml = exports.validateAndMapXml = exports.validateAndUnmap = exports.validateAndMap = void 0;
    var tslib_1 = require_tslib();
    var utils_1 = require_utils();
    function validateAndMap(value, schema) {
      var contextCreator = createSchemaContextCreator(createNewSchemaContext(value, schema.type()));
      var validationResult = schema.validateBeforeMap(value, contextCreator);
      if (validationResult.length === 0) {
        return { errors: false, result: schema.map(value, contextCreator) };
      } else {
        return { errors: validationResult };
      }
    }
    exports.validateAndMap = validateAndMap;
    function validateAndUnmap(value, schema) {
      var contextCreator = createSchemaContextCreator(createNewSchemaContext(value, schema.type()));
      var validationResult = schema.validateBeforeUnmap(value, contextCreator);
      if (validationResult.length === 0) {
        return { errors: false, result: schema.unmap(value, contextCreator) };
      } else {
        return { errors: validationResult };
      }
    }
    exports.validateAndUnmap = validateAndUnmap;
    function validateAndMapXml(value, schema) {
      var contextCreator = createSchemaContextCreator(createNewSchemaContext(value, schema.type()));
      var validationResult = schema.validateBeforeMapXml(value, contextCreator);
      if (validationResult.length === 0) {
        return { errors: false, result: schema.mapXml(value, contextCreator) };
      } else {
        return { errors: validationResult };
      }
    }
    exports.validateAndMapXml = validateAndMapXml;
    function validateAndUnmapXml(value, schema) {
      var contextCreator = createSchemaContextCreator(createNewSchemaContext(value, schema.type()));
      var validationResult = schema.validateBeforeUnmap(value, contextCreator);
      if (validationResult.length === 0) {
        return { errors: false, result: schema.unmapXml(value, contextCreator) };
      } else {
        return { errors: validationResult };
      }
    }
    exports.validateAndUnmapXml = validateAndUnmapXml;
    function createNewSchemaContext(value, type) {
      return {
        value,
        type,
        branch: [value],
        path: []
      };
    }
    function createSchemaContextCreator(currentContext) {
      var createChildContext = function(key2, value, childSchema) {
        return createSchemaContextCreator({
          value,
          type: childSchema.type(),
          branch: tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(currentContext.branch)), [value]),
          path: tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(currentContext.path)), [key2])
        });
      };
      var mapChildren = function(items2, itemSchema, mapper) {
        return items2.map(function(item) {
          return mapper(item, createChildContext(item[0], item[1], itemSchema));
        });
      };
      return tslib_1.__assign(tslib_1.__assign({}, currentContext), { createChild: createChildContext, flatmapChildren: function() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return flatten(mapChildren.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args))));
      }, mapChildren, fail: function(message) {
        return [
          tslib_1.__assign(tslib_1.__assign({}, currentContext), { message: createErrorMessage(currentContext, message) })
        ];
      } });
    }
    function createErrorMessage(ctxt, message) {
      var giveValue = JSON.stringify(ctxt.value, function(_, value) {
        return typeof value === "bigint" ? value.toString() : value;
      });
      message = (message !== null && message !== void 0 ? message : "Expected value to be of type '" + ctxt.type + "' but found '" + typeof ctxt.value + "'.") + "\n" + ("\nGiven value: " + giveValue) + ("\nType: '" + typeof ctxt.value + "'") + ("\nExpected type: '" + ctxt.type + "'");
      if (ctxt.path.length > 0) {
        var pathString = ctxt.path.map(function(value) {
          return utils_1.objectKeyEncode(value.toString());
        }).join(" \u203A ");
        message += "\nPath: " + pathString;
      }
      return message;
    }
    function flatten(array2) {
      var e_1, _a, e_2, _b;
      var output = [];
      try {
        for (var array_1 = tslib_1.__values(array2), array_1_1 = array_1.next(); !array_1_1.done; array_1_1 = array_1.next()) {
          var ele = array_1_1.value;
          try {
            for (var ele_1 = (e_2 = void 0, tslib_1.__values(ele)), ele_1_1 = ele_1.next(); !ele_1_1.done; ele_1_1 = ele_1.next()) {
              var x = ele_1_1.value;
              output.push(x);
            }
          } catch (e_2_1) {
            e_2 = { error: e_2_1 };
          } finally {
            try {
              if (ele_1_1 && !ele_1_1.done && (_b = ele_1.return))
                _b.call(ele_1);
            } finally {
              if (e_2)
                throw e_2.error;
            }
          }
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (array_1_1 && !array_1_1.done && (_a = array_1.return))
            _a.call(array_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      return output;
    }
  }
});

// node_modules/@apimatic/schema/lib/types/array.js
var require_array = __commonJS({
  "node_modules/@apimatic/schema/lib/types/array.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.array = void 0;
    var utils_1 = require_utils();
    function array2(itemsSchema, xmlOptions) {
      var arraySchema;
      arraySchema = {
        type: function() {
          return "Array<" + itemsSchema.type() + ">";
        },
        validateBeforeMap: function(value, ctxt) {
          return Array.isArray(value) ? ctxt.flatmapChildren(utils_1.arrayEntries(value), itemsSchema, function(v, childCtxt) {
            return itemsSchema.validateBeforeMap(v[1], childCtxt);
          }) : ctxt.fail();
        },
        validateBeforeUnmap: function(value, ctxt) {
          return Array.isArray(value) ? ctxt.flatmapChildren(utils_1.arrayEntries(value), itemsSchema, function(v, childCtxt) {
            return itemsSchema.validateBeforeUnmap(v[1], childCtxt);
          }) : ctxt.fail();
        },
        map: function(value, ctxt) {
          return ctxt.mapChildren(utils_1.arrayEntries(value), itemsSchema, function(v, childCtxt) {
            return itemsSchema.map(v[1], childCtxt);
          });
        },
        unmap: function(value, ctxt) {
          return ctxt.mapChildren(utils_1.arrayEntries(value), itemsSchema, function(v, childCtxt) {
            return itemsSchema.unmap(v[1], childCtxt);
          });
        },
        mapXml: function(value, ctxt) {
          var items2 = value;
          if (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlItemName) {
            items2 = value[xmlOptions.xmlItemName];
            ctxt = ctxt.createChild(xmlOptions.xmlItemName, items2, itemsSchema);
          }
          return ctxt.mapChildren(utils_1.arrayEntries(items2), itemsSchema, function(v, childCtxt) {
            return itemsSchema.mapXml(v[1], childCtxt);
          });
        },
        unmapXml: function(value, ctxt) {
          var _a;
          var items2 = ctxt.mapChildren(utils_1.arrayEntries(value), itemsSchema, function(v, childCtxt) {
            return itemsSchema.unmapXml(v[1], childCtxt);
          });
          if (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlItemName) {
            return _a = {}, _a[xmlOptions.xmlItemName] = items2, _a;
          } else {
            return items2;
          }
        },
        validateBeforeMapXml: function(value, ctxt) {
          var items2 = value;
          if (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlItemName) {
            var errorMessage = "Expected array to be wrapped with XML element " + xmlOptions.xmlItemName + ".";
            if (typeof value !== "object" || value === null || !(xmlOptions.xmlItemName in value)) {
              return ctxt.fail(errorMessage);
            }
            items2 = value[xmlOptions.xmlItemName];
            ctxt = ctxt.createChild(xmlOptions.xmlItemName, items2, itemsSchema);
          }
          return Array.isArray(items2) ? ctxt.flatmapChildren(utils_1.arrayEntries(items2), itemsSchema, function(v, childCtxt) {
            return itemsSchema.validateBeforeMapXml(v[1], childCtxt);
          }) : ctxt.fail();
        }
      };
      return arraySchema;
    }
    exports.array = array2;
  }
});

// node_modules/@apimatic/schema/lib/types/bigint.js
var require_bigint = __commonJS({
  "node_modules/@apimatic/schema/lib/types/bigint.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.bigint = void 0;
    var utils_1 = require_utils();
    function isValidBigIntValue(value) {
      return typeof value === "bigint" || typeof value === "number" || typeof value === "string" && /^-?\d+$/.test(value);
    }
    function bigint() {
      return utils_1.createSymmetricSchema({
        type: "bigint",
        validate: utils_1.toValidator(isValidBigIntValue),
        map: utils_1.coerceStringOrNumberToBigInt
      });
    }
    exports.bigint = bigint;
  }
});

// node_modules/@apimatic/schema/lib/types/boolean.js
var require_boolean = __commonJS({
  "node_modules/@apimatic/schema/lib/types/boolean.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.boolean = void 0;
    var utils_1 = require_utils();
    function isValidBooleanValue(value) {
      return typeof value === "boolean" || typeof value === "string" && (value === "true" || value === "false");
    }
    function boolean() {
      return utils_1.createSymmetricSchema({
        type: "boolean",
        validate: utils_1.toValidator(isValidBooleanValue),
        map: function(value) {
          return typeof value === "boolean" ? value : value === "true";
        }
      });
    }
    exports.boolean = boolean;
  }
});

// node_modules/@apimatic/schema/lib/types/defaults.js
var require_defaults = __commonJS({
  "node_modules/@apimatic/schema/lib/types/defaults.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.defaults = void 0;
    var utils_1 = require_utils();
    function defaults(schema, defaultValue) {
      return {
        type: function() {
          return "Defaults<" + schema.type() + "," + utils_1.literalToString(defaultValue) + ">";
        },
        validateBeforeMap: function(v, ctxt) {
          return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeMap(v, ctxt);
        },
        validateBeforeUnmap: function(v, ctxt) {
          return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeUnmap(v, ctxt);
        },
        map: function(v, ctxt) {
          return shouldDefault(v, defaultValue) ? defaultValue : schema.map(v, ctxt);
        },
        unmap: function(v, ctxt) {
          return shouldDefault(v, defaultValue) ? defaultValue : schema.unmap(v, ctxt);
        },
        validateBeforeMapXml: function(v, ctxt) {
          return shouldDefault(v, defaultValue) ? [] : schema.validateBeforeMapXml(v, ctxt);
        },
        mapXml: function(v, ctxt) {
          return shouldDefault(v, defaultValue) ? defaultValue : schema.mapXml(v, ctxt);
        },
        unmapXml: function(v, ctxt) {
          return shouldDefault(v, defaultValue) ? defaultValue : schema.unmapXml(v, ctxt);
        }
      };
    }
    exports.defaults = defaults;
    function shouldDefault(value, defaultValue) {
      return value === null || value === void 0 || value === defaultValue;
    }
  }
});

// node_modules/@apimatic/schema/lib/types/dict.js
var require_dict = __commonJS({
  "node_modules/@apimatic/schema/lib/types/dict.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.dict = void 0;
    var tslib_1 = require_tslib();
    var utils_1 = require_utils();
    function dict(itemSchema) {
      var validate = function(validateFn, value, ctxt) {
        if (typeof value !== "object" || value === null) {
          return ctxt.fail();
        }
        var valueObject = value;
        return ctxt.flatmapChildren(utils_1.objectEntries(valueObject), itemSchema, function(v, childCtxt) {
          return itemSchema[validateFn](v[1], childCtxt);
        });
      };
      return {
        type: function() {
          return "Record<string," + itemSchema.type() + ">";
        },
        validateBeforeMap: function() {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return validate.apply(void 0, tslib_1.__spreadArray(["validateBeforeMap"], tslib_1.__read(args)));
        },
        validateBeforeUnmap: function() {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return validate.apply(void 0, tslib_1.__spreadArray(["validateBeforeUnmap"], tslib_1.__read(args)));
        },
        map: function(value, ctxt) {
          var output = {};
          for (var key2 in value) {
            if (Object.prototype.hasOwnProperty.call(value, key2)) {
              var propValue = value[key2];
              output[key2] = itemSchema.map(propValue, ctxt.createChild(key2, propValue, itemSchema));
            }
          }
          return output;
        },
        unmap: function(value, ctxt) {
          var output = {};
          for (var key2 in value) {
            if (Object.prototype.hasOwnProperty.call(value, key2)) {
              var propValue = value[key2];
              output[key2] = itemSchema.unmap(propValue, ctxt.createChild(key2, propValue, itemSchema));
            }
          }
          return output;
        },
        validateBeforeMapXml: function() {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return validate.apply(void 0, tslib_1.__spreadArray(["validateBeforeMapXml"], tslib_1.__read(args)));
        },
        mapXml: function(value, ctxt) {
          var output = {};
          for (var key2 in value) {
            if (Object.prototype.hasOwnProperty.call(value, key2)) {
              var propValue = value[key2];
              output[key2] = itemSchema.mapXml(propValue, ctxt.createChild(key2, propValue, itemSchema));
            }
          }
          return output;
        },
        unmapXml: function(value, ctxt) {
          var output = {};
          for (var key2 in value) {
            if (Object.prototype.hasOwnProperty.call(value, key2)) {
              var propValue = value[key2];
              output[key2] = itemSchema.unmapXml(propValue, ctxt.createChild(key2, propValue, itemSchema));
            }
          }
          return output;
        }
      };
    }
    exports.dict = dict;
  }
});

// node_modules/@apimatic/schema/lib/types/dictWithXmlEntries.js
var require_dictWithXmlEntries = __commonJS({
  "node_modules/@apimatic/schema/lib/types/dictWithXmlEntries.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.dictWithXmlEntries = void 0;
    var tslib_1 = require_tslib();
    var utils_1 = require_utils();
    var dict_1 = require_dict();
    function dictWithXmlEntries(itemSchema) {
      var dictSchema = dict_1.dict(itemSchema);
      var modifiedSchema = tslib_1.__assign({}, dictSchema);
      modifiedSchema.unmapXml = function(inputValue, ctxt) {
        var output = dictSchema.unmapXml(inputValue, ctxt);
        var entries = utils_1.objectEntries(output).map(function(_a) {
          var _b = tslib_1.__read(_a, 2), key2 = _b[0], value = _b[1];
          return {
            $: { key: key2 },
            _: value
          };
        });
        return { entry: entries };
      };
      modifiedSchema.mapXml = function(value, ctxt) {
        var e_1, _a;
        if (!("entry" in value)) {
          return {};
        }
        var entries = value.entry;
        if (!Array.isArray(entries)) {
          entries = [entries];
        }
        var dictObj = {};
        try {
          for (var entries_1 = tslib_1.__values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {
            var item = entries_1_1.value;
            dictObj[item.$.key] = item._;
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (entries_1_1 && !entries_1_1.done && (_a = entries_1.return))
              _a.call(entries_1);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
        return dictSchema.mapXml(dictObj, ctxt);
      };
      modifiedSchema.validateBeforeMapXml = function(value, ctxt) {
        var e_2, _a;
        if (typeof value !== "object" || value === null) {
          return ctxt.fail();
        }
        if (!("entry" in value)) {
          return [];
        }
        var entries = value.entry;
        if (!Array.isArray(entries)) {
          entries = [entries];
        }
        var dictObj = {};
        try {
          for (var entries_2 = tslib_1.__values(entries), entries_2_1 = entries_2.next(); !entries_2_1.done; entries_2_1 = entries_2.next()) {
            var entry = entries_2_1.value;
            if (typeof entry !== "object" || entry === null) {
              return ctxt.fail('Expected "entry" to be an XML element.');
            }
            if (!("$" in entry) || !("key" in entry.$)) {
              return ctxt.fail('Expected "entry" element to have an attribute named "key".');
            }
            var typedEntry = entry;
            dictObj[typedEntry.$.key] = typedEntry._;
          }
        } catch (e_2_1) {
          e_2 = { error: e_2_1 };
        } finally {
          try {
            if (entries_2_1 && !entries_2_1.done && (_a = entries_2.return))
              _a.call(entries_2);
          } finally {
            if (e_2)
              throw e_2.error;
          }
        }
        return dictSchema.validateBeforeMapXml(dictObj, ctxt);
      };
      return modifiedSchema;
    }
    exports.dictWithXmlEntries = dictWithXmlEntries;
  }
});

// node_modules/@apimatic/schema/lib/types/discriminatedObject.js
var require_discriminatedObject = __commonJS({
  "node_modules/@apimatic/schema/lib/types/discriminatedObject.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.discriminatedObject = void 0;
    var tslib_1 = require_tslib();
    var utils_1 = require_utils();
    function discriminatedObject(discriminatorMappedPropName, discriminatorPropName, discriminatorMap, defaultDiscriminator, xmlOptions) {
      var schemaSelector = function(value, discriminatorProp, isAttr) {
        if (isAttr === void 0) {
          isAttr = false;
        }
        if (typeof value === "object" && value !== null && (isAttr && xmlObjectHasAttribute(value, discriminatorProp) || !isAttr && discriminatorProp in value)) {
          var discriminatorValue = isAttr ? value.$[discriminatorProp] : value[discriminatorProp];
          if (typeof discriminatorValue === "string" && discriminatorValue in discriminatorMap) {
            return discriminatorMap[discriminatorValue];
          }
        }
        return discriminatorMap[defaultDiscriminator];
      };
      return {
        type: function() {
          return "DiscriminatedUnion<" + discriminatorPropName + ",[" + utils_1.objectEntries(discriminatorMap).map(function(_a) {
            var _b = tslib_1.__read(_a, 2), _ = _b[0], v = _b[1];
            return v.type;
          }).join(",") + "]>";
        },
        map: function(value, ctxt) {
          return schemaSelector(value, discriminatorPropName).map(value, ctxt);
        },
        unmap: function(value, ctxt) {
          return schemaSelector(value, discriminatorMappedPropName).unmap(value, ctxt);
        },
        validateBeforeMap: function(value, ctxt) {
          return schemaSelector(value, discriminatorPropName).validateBeforeMap(value, ctxt);
        },
        validateBeforeUnmap: function(value, ctxt) {
          return schemaSelector(value, discriminatorMappedPropName).validateBeforeUnmap(value, ctxt);
        },
        mapXml: function(value, ctxt) {
          var _a;
          return schemaSelector(value, (_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : discriminatorPropName, xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr).mapXml(value, ctxt);
        },
        unmapXml: function(value, ctxt) {
          return schemaSelector(value, discriminatorMappedPropName).unmapXml(value, ctxt);
        },
        validateBeforeMapXml: function(value, ctxt) {
          var _a;
          return schemaSelector(value, (_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : discriminatorPropName, xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr).validateBeforeMapXml(value, ctxt);
        }
      };
    }
    exports.discriminatedObject = discriminatedObject;
    function xmlObjectHasAttribute(value, prop) {
      return "$" in value && typeof value.$ === "object" && prop in value.$;
    }
  }
});

// node_modules/@apimatic/schema/lib/types/lazy.js
var require_lazy = __commonJS({
  "node_modules/@apimatic/schema/lib/types/lazy.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lazy = void 0;
    var tslib_1 = require_tslib();
    var utils_1 = require_utils();
    function lazy(schemaFn) {
      var getSchema = utils_1.once(schemaFn);
      return {
        type: function() {
          return "Lazy<" + getSchema().type() + ">";
        },
        map: function() {
          var _a;
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return (_a = getSchema()).map.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args)));
        },
        unmap: function() {
          var _a;
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return (_a = getSchema()).unmap.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args)));
        },
        validateBeforeMap: function() {
          var _a;
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return (_a = getSchema()).validateBeforeMap.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args)));
        },
        validateBeforeUnmap: function() {
          var _a;
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return (_a = getSchema()).validateBeforeUnmap.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args)));
        },
        mapXml: function() {
          var _a;
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return (_a = getSchema()).mapXml.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args)));
        },
        unmapXml: function() {
          var _a;
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return (_a = getSchema()).unmapXml.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args)));
        },
        validateBeforeMapXml: function() {
          var _a;
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          return (_a = getSchema()).validateBeforeMapXml.apply(_a, tslib_1.__spreadArray([], tslib_1.__read(args)));
        }
      };
    }
    exports.lazy = lazy;
  }
});

// node_modules/@apimatic/schema/lib/types/literal.js
var require_literal = __commonJS({
  "node_modules/@apimatic/schema/lib/types/literal.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.literal = void 0;
    var utils_1 = require_utils();
    function literal(literalValue) {
      var validate = function(value) {
        return literalValue === value;
      };
      var map = function() {
        return literalValue;
      };
      return utils_1.createSymmetricSchema({
        type: "Literal<" + utils_1.literalToString(literalValue) + ">",
        validate: utils_1.toValidator(validate),
        map
      });
    }
    exports.literal = literal;
  }
});

// node_modules/@apimatic/schema/lib/types/nullable.js
var require_nullable = __commonJS({
  "node_modules/@apimatic/schema/lib/types/nullable.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.nullable = void 0;
    function nullable(schema) {
      return {
        type: function() {
          return "Nullable<" + schema.type() + ">";
        },
        validateBeforeMap: function(value, ctxt) {
          return value === null ? [] : schema.validateBeforeMap(value, ctxt);
        },
        validateBeforeUnmap: function(value, ctxt) {
          return value === null ? [] : schema.validateBeforeUnmap(value, ctxt);
        },
        map: function(value, ctxt) {
          return value === null ? null : schema.map(value, ctxt);
        },
        unmap: function(value, ctxt) {
          return value === null ? null : schema.unmap(value, ctxt);
        },
        validateBeforeMapXml: function(value, ctxt) {
          return value === null ? [] : schema.validateBeforeMapXml(value, ctxt);
        },
        mapXml: function(value, ctxt) {
          return value === null ? null : schema.mapXml(value, ctxt);
        },
        unmapXml: function(value, ctxt) {
          return value === null ? null : schema.unmapXml(value, ctxt);
        }
      };
    }
    exports.nullable = nullable;
  }
});

// node_modules/@apimatic/schema/lib/types/number.js
var require_number = __commonJS({
  "node_modules/@apimatic/schema/lib/types/number.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.number = void 0;
    var utils_1 = require_utils();
    function number() {
      return utils_1.createSymmetricSchema({
        type: "number",
        validate: utils_1.toValidator(utils_1.isNumericString),
        map: utils_1.coerceNumericStringToNumber
      });
    }
    exports.number = number;
  }
});

// node_modules/@apimatic/schema/lib/types/numberEnum.js
var require_numberEnum = __commonJS({
  "node_modules/@apimatic/schema/lib/types/numberEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.numberEnum = void 0;
    var utils_1 = require_utils();
    function createEnumChecker(enumVariable) {
      var enumValues = Object.values(enumVariable);
      return function(value) {
        return utils_1.isNumericString(value) && enumValues.includes(utils_1.coerceNumericStringToNumber(value));
      };
    }
    function numberEnum(enumVariable) {
      var validate = utils_1.toValidator(createEnumChecker(enumVariable));
      return utils_1.createSymmetricSchema({
        type: "Enum<" + Object.values(enumVariable).filter(function(v) {
          return typeof v === "number";
        }).join(",") + ">",
        map: utils_1.coerceNumericStringToNumber,
        validate
      });
    }
    exports.numberEnum = numberEnum;
  }
});

// node_modules/@apimatic/schema/lib/types/object.js
var require_object = __commonJS({
  "node_modules/@apimatic/schema/lib/types/object.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.extendObject = exports.extendExpandoObject = exports.extendStrictObject = exports.object = exports.expandoObject = exports.strictObject = void 0;
    var tslib_1 = require_tslib();
    var utils_1 = require_utils();
    function strictObject(objectSchema) {
      var schema = internalObject(objectSchema, false, false);
      schema.type = function() {
        return "StrictObject<{" + Object.keys(objectSchema).map(utils_1.objectKeyEncode).join(",") + "}>";
      };
      return schema;
    }
    exports.strictObject = strictObject;
    function expandoObject(objectSchema) {
      return internalObject(objectSchema, true, true);
    }
    exports.expandoObject = expandoObject;
    function object(objectSchema) {
      var schema = internalObject(objectSchema, true, false);
      schema.type = function() {
        return "Object<{" + Object.keys(objectSchema).map(utils_1.objectKeyEncode).join(",") + "}>";
      };
      return schema;
    }
    exports.object = object;
    function extendStrictObject(parentObjectSchema, objectSchema) {
      return strictObject(tslib_1.__assign(tslib_1.__assign({}, parentObjectSchema.objectSchema), objectSchema));
    }
    exports.extendStrictObject = extendStrictObject;
    function extendExpandoObject(parentObjectSchema, objectSchema) {
      return expandoObject(tslib_1.__assign(tslib_1.__assign({}, parentObjectSchema.objectSchema), objectSchema));
    }
    exports.extendExpandoObject = extendExpandoObject;
    function extendObject(parentObjectSchema, objectSchema) {
      return object(tslib_1.__assign(tslib_1.__assign({}, parentObjectSchema.objectSchema), objectSchema));
    }
    exports.extendObject = extendObject;
    function internalObject(objectSchema, skipValidateAdditionalProps, mapAdditionalProps) {
      var keys = Object.keys(objectSchema);
      var reverseObjectSchema = createReverseObjectSchema(objectSchema);
      var xmlMappingInfo = getXmlPropMappingForObjectSchema(objectSchema);
      var xmlObjectSchema = createXmlObjectSchema(objectSchema);
      var reverseXmlObjectSchema = createReverseXmlObjectSchema(xmlObjectSchema);
      return {
        type: function() {
          return "Object<{" + keys.map(utils_1.objectKeyEncode).join(",") + ",...}>";
        },
        validateBeforeMap: validateObject(objectSchema, "validateBeforeMap", skipValidateAdditionalProps),
        validateBeforeUnmap: validateObject(reverseObjectSchema, "validateBeforeUnmap", skipValidateAdditionalProps),
        map: mapObject(objectSchema, "map", mapAdditionalProps),
        unmap: mapObject(reverseObjectSchema, "unmap", mapAdditionalProps),
        validateBeforeMapXml: validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, skipValidateAdditionalProps),
        mapXml: mapObjectFromXml(xmlObjectSchema, mapAdditionalProps),
        unmapXml: unmapObjectToXml(reverseXmlObjectSchema, mapAdditionalProps),
        objectSchema
      };
    }
    function validateObjectBeforeMapXml(objectSchema, xmlMappingInfo, allowAdditionalProperties) {
      var elementsToProps = xmlMappingInfo.elementsToProps, attributesToProps = xmlMappingInfo.attributesToProps;
      return function(value, ctxt) {
        if (typeof value !== "object" || value === null) {
          return ctxt.fail();
        }
        var valueObject = value;
        var attrs = valueObject.$, elements = tslib_1.__rest(valueObject, ["$"]);
        var attributes = attrs !== null && attrs !== void 0 ? attrs : {};
        return tslib_1.__spreadArray(tslib_1.__spreadArray([], tslib_1.__read(validateValueObject({
          validationMethod: "validateBeforeMapXml",
          propTypeName: "child elements",
          propTypePrefix: "element",
          valueTypeName: "element",
          propMapping: elementsToProps,
          objectSchema,
          valueObject: elements,
          ctxt,
          allowAdditionalProperties
        }))), tslib_1.__read(validateValueObject({
          validationMethod: "validateBeforeMapXml",
          propTypeName: "attributes",
          propTypePrefix: "@",
          valueTypeName: "element",
          propMapping: attributesToProps,
          objectSchema,
          valueObject: attributes,
          ctxt,
          allowAdditionalProperties
        })));
      };
    }
    function mapObjectFromXml(xmlObjectSchema, allowAdditionalProps) {
      var elementsSchema = xmlObjectSchema.elementsSchema, attributesSchema = xmlObjectSchema.attributesSchema;
      var mapElements = mapObject(elementsSchema, "mapXml", allowAdditionalProps);
      var mapAttributes = mapObject(attributesSchema, "mapXml", false);
      var attributeKeys = utils_1.objectEntries(attributesSchema).map(function(_a) {
        var _b = tslib_1.__read(_a, 2), _ = _b[0], _c = tslib_1.__read(_b[1], 1), name = _c[0];
        return name;
      });
      return function(value, ctxt) {
        var valueObject = value;
        var attrs = valueObject.$, elements = tslib_1.__rest(valueObject, ["$"]);
        var attributes = attrs !== null && attrs !== void 0 ? attrs : {};
        var output = tslib_1.__assign(tslib_1.__assign({}, mapAttributes(attributes, ctxt)), mapElements(elements, ctxt));
        if (allowAdditionalProps) {
          var additionalAttrs = utils_1.omitKeysFromObject(attributes, attributeKeys);
          if (Object.keys(additionalAttrs).length > 0) {
            output.$ = additionalAttrs;
          }
        }
        return output;
      };
    }
    function unmapObjectToXml(xmlObjectSchema, allowAdditionalProps) {
      var elementsSchema = xmlObjectSchema.elementsSchema, attributesSchema = xmlObjectSchema.attributesSchema;
      var mapElements = mapObject(elementsSchema, "unmapXml", allowAdditionalProps);
      var mapAttributes = mapObject(attributesSchema, "unmapXml", false);
      var attributeKeys = utils_1.objectEntries(attributesSchema).map(function(_a) {
        var _b = tslib_1.__read(_a, 2), _ = _b[0], _c = tslib_1.__read(_b[1], 1), name = _c[0];
        return name;
      });
      return function(value, ctxt) {
        var _a = value, attributes = _a.$, rest = tslib_1.__rest(_a, ["$"]);
        var additionalAttributes = typeof attributes === "object" && attributes !== null && allowAdditionalProps ? attributes : {};
        return tslib_1.__assign(tslib_1.__assign({}, mapElements(utils_1.omitKeysFromObject(rest, attributeKeys), ctxt)), { $: tslib_1.__assign(tslib_1.__assign({}, additionalAttributes), mapAttributes(value, ctxt)) });
      };
    }
    function validateValueObject(_a) {
      var validationMethod = _a.validationMethod, propTypeName = _a.propTypeName, propTypePrefix = _a.propTypePrefix, valueTypeName = _a.valueTypeName, propMapping = _a.propMapping, objectSchema = _a.objectSchema, valueObject = _a.valueObject, ctxt = _a.ctxt, allowAdditionalProperties = _a.allowAdditionalProperties;
      var errors2 = [];
      var missingProps = /* @__PURE__ */ new Set();
      var unknownProps = new Set(Object.keys(valueObject));
      for (var key2 in propMapping) {
        if (Object.prototype.hasOwnProperty.call(propMapping, key2)) {
          var propName = propMapping[key2];
          var schema = objectSchema[propName][1];
          unknownProps.delete(key2);
          if (key2 in valueObject) {
            errors2.push.apply(errors2, tslib_1.__spreadArray([], tslib_1.__read(schema[validationMethod](valueObject[key2], ctxt.createChild(propTypePrefix + key2, valueObject[key2], schema)))));
          } else if (schema.type().indexOf("Optional<") !== 0) {
            missingProps.add(key2);
          }
        }
      }
      var unknownPropsArray = Array.from(unknownProps);
      if (unknownPropsArray.length > 0 && !allowAdditionalProperties) {
        errors2.push.apply(errors2, tslib_1.__spreadArray([], tslib_1.__read(ctxt.fail("Some unknown " + propTypeName + " were found in the " + valueTypeName + ": " + unknownPropsArray.map(utils_1.literalToString).join(", ") + "."))));
      }
      var missingPropsArray = Array.from(missingProps);
      if (missingPropsArray.length > 0) {
        errors2.push.apply(errors2, tslib_1.__spreadArray([], tslib_1.__read(ctxt.fail("Some " + propTypeName + " are missing in the " + valueTypeName + ": " + missingPropsArray.map(utils_1.literalToString).join(", ") + "."))));
      }
      return errors2;
    }
    function validateObject(objectSchema, validationMethod, allowAdditionalProperties) {
      var propsMapping = getPropMappingForObjectSchema(objectSchema);
      return function(value, ctxt) {
        if (typeof value !== "object" || value === null) {
          return ctxt.fail();
        }
        return validateValueObject({
          validationMethod,
          propTypeName: "properties",
          propTypePrefix: "",
          valueTypeName: "object",
          propMapping: propsMapping,
          objectSchema,
          valueObject: value,
          ctxt,
          allowAdditionalProperties
        });
      };
    }
    function mapObject(objectSchema, mappingFn, allowAdditionalProperties) {
      return function(value, ctxt) {
        var output = {};
        var objectValue = value;
        var unknownKeys = new Set(Object.keys(objectValue));
        for (var key2 in objectSchema) {
          if (Object.prototype.hasOwnProperty.call(objectSchema, key2)) {
            var element = objectSchema[key2];
            var propName = element[0];
            var propValue = objectValue[propName];
            unknownKeys.delete(propName);
            if (element[1].type().indexOf("Optional<") !== 0 || propValue !== void 0) {
              output[key2] = element[1][mappingFn](propValue, ctxt.createChild(propName, propValue, element[1]));
            }
          }
        }
        if (allowAdditionalProperties) {
          unknownKeys.forEach(function(unknownKey) {
            output[unknownKey] = objectValue[unknownKey];
          });
        }
        return output;
      };
    }
    function getXmlPropMappingForObjectSchema(objectSchema) {
      var _a, _b;
      var elementsToProps = {};
      var attributesToProps = {};
      for (var key2 in objectSchema) {
        if (Object.prototype.hasOwnProperty.call(objectSchema, key2)) {
          var _c = tslib_1.__read(objectSchema[key2], 3), propName = _c[0], xmlOptions = _c[2];
          if ((xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) === true) {
            attributesToProps[(_a = xmlOptions.xmlName) !== null && _a !== void 0 ? _a : propName] = key2;
          } else {
            elementsToProps[(_b = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _b !== void 0 ? _b : propName] = key2;
          }
        }
      }
      return { elementsToProps, attributesToProps };
    }
    function getPropMappingForObjectSchema(objectSchema) {
      var propsMapping = {};
      for (var key2 in objectSchema) {
        if (Object.prototype.hasOwnProperty.call(objectSchema, key2)) {
          var propDef = objectSchema[key2];
          propsMapping[propDef[0]] = key2;
        }
      }
      return propsMapping;
    }
    function createReverseObjectSchema(objectSchema) {
      var reverseObjectSchema = {};
      for (var key2 in objectSchema) {
        if (Object.prototype.hasOwnProperty.call(objectSchema, key2)) {
          var element = objectSchema[key2];
          reverseObjectSchema[element[0]] = [key2, element[1], element[2]];
        }
      }
      return reverseObjectSchema;
    }
    function createXmlObjectSchema(objectSchema) {
      var _a;
      var elementsSchema = {};
      var attributesSchema = {};
      for (var key2 in objectSchema) {
        if (Object.prototype.hasOwnProperty.call(objectSchema, key2)) {
          var element = objectSchema[key2];
          var _b = tslib_1.__read(element, 3), serializedName = _b[0], schema = _b[1], xmlOptions = _b[2];
          var xmlObjectSchema = (xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.isAttr) ? attributesSchema : elementsSchema;
          xmlObjectSchema[key2] = [
            (_a = xmlOptions === null || xmlOptions === void 0 ? void 0 : xmlOptions.xmlName) !== null && _a !== void 0 ? _a : serializedName,
            schema,
            xmlOptions
          ];
        }
      }
      return { elementsSchema, attributesSchema };
    }
    function createReverseXmlObjectSchema(xmlObjectSchema) {
      return {
        attributesSchema: createReverseObjectSchema(xmlObjectSchema.attributesSchema),
        elementsSchema: createReverseObjectSchema(xmlObjectSchema.elementsSchema)
      };
    }
  }
});

// node_modules/@apimatic/schema/lib/types/optional.js
var require_optional = __commonJS({
  "node_modules/@apimatic/schema/lib/types/optional.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.optional = void 0;
    function optional(schema) {
      return {
        type: function() {
          return "Optional<" + schema.type() + ">";
        },
        validateBeforeMap: function(value, ctxt) {
          return value === void 0 ? [] : schema.validateBeforeMap(value, ctxt);
        },
        validateBeforeUnmap: function(value, ctxt) {
          return value === void 0 ? [] : schema.validateBeforeUnmap(value, ctxt);
        },
        map: function(value, ctxt) {
          return value === void 0 ? void 0 : schema.map(value, ctxt);
        },
        unmap: function(value, ctxt) {
          return value === void 0 ? void 0 : schema.unmap(value, ctxt);
        },
        validateBeforeMapXml: function(value, ctxt) {
          return value === void 0 ? [] : schema.validateBeforeMapXml(value, ctxt);
        },
        mapXml: function(value, ctxt) {
          return value === void 0 ? void 0 : schema.mapXml(value, ctxt);
        },
        unmapXml: function(value, ctxt) {
          return value === void 0 ? void 0 : schema.unmapXml(value, ctxt);
        }
      };
    }
    exports.optional = optional;
  }
});

// node_modules/@apimatic/schema/lib/types/string.js
var require_string = __commonJS({
  "node_modules/@apimatic/schema/lib/types/string.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.string = void 0;
    var utils_1 = require_utils();
    function isValidStringValue(value) {
      return typeof value === "string";
    }
    function string() {
      return utils_1.createSymmetricSchema({
        type: "string",
        validate: utils_1.toValidator(isValidStringValue),
        map: utils_1.identityFn
      });
    }
    exports.string = string;
  }
});

// node_modules/@apimatic/schema/lib/types/stringEnum.js
var require_stringEnum = __commonJS({
  "node_modules/@apimatic/schema/lib/types/stringEnum.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.stringEnum = void 0;
    var utils_1 = require_utils();
    function createEnumChecker(enumVariable) {
      var enumValues = Object.values(enumVariable);
      return function(value) {
        return typeof value === "string" && enumValues.includes(value);
      };
    }
    function stringEnum(enumVariable) {
      var validate = utils_1.toValidator(createEnumChecker(enumVariable));
      return utils_1.createSymmetricSchema({
        type: "Enum<" + Object.values(enumVariable).map(utils_1.literalToString).join(",") + ">",
        map: utils_1.identityFn,
        validate
      });
    }
    exports.stringEnum = stringEnum;
  }
});

// node_modules/@apimatic/schema/lib/types/unknown.js
var require_unknown = __commonJS({
  "node_modules/@apimatic/schema/lib/types/unknown.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.unknown = void 0;
    var utils_1 = require_utils();
    function unknown() {
      return utils_1.createSymmetricSchema({
        type: "unknown",
        validate: function() {
          return [];
        },
        map: utils_1.identityFn
      });
    }
    exports.unknown = unknown;
  }
});

// node_modules/@apimatic/schema/lib/index.js
var require_lib = __commonJS({
  "node_modules/@apimatic/schema/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_schema(), exports);
    tslib_1.__exportStar(require_array(), exports);
    tslib_1.__exportStar(require_bigint(), exports);
    tslib_1.__exportStar(require_boolean(), exports);
    tslib_1.__exportStar(require_defaults(), exports);
    tslib_1.__exportStar(require_dict(), exports);
    tslib_1.__exportStar(require_dictWithXmlEntries(), exports);
    tslib_1.__exportStar(require_discriminatedObject(), exports);
    tslib_1.__exportStar(require_lazy(), exports);
    tslib_1.__exportStar(require_literal(), exports);
    tslib_1.__exportStar(require_nullable(), exports);
    tslib_1.__exportStar(require_number(), exports);
    tslib_1.__exportStar(require_numberEnum(), exports);
    tslib_1.__exportStar(require_object(), exports);
    tslib_1.__exportStar(require_optional(), exports);
    tslib_1.__exportStar(require_string(), exports);
    tslib_1.__exportStar(require_stringEnum(), exports);
    tslib_1.__exportStar(require_unknown(), exports);
  }
});

// node_modules/square/dist/cjs/schema.js
var require_schema2 = __commonJS({
  "node_modules/square/dist/cjs/schema.js"(exports) {
    "use strict";
    exports.__esModule = true;
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib(), exports);
  }
});

// node_modules/square/dist/cjs/models/registerDomainRequest.js
var require_registerDomainRequest = __commonJS({
  "node_modules/square/dist/cjs/models/registerDomainRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.registerDomainRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.registerDomainRequestSchema = (0, schema_1.object)({ domainName: ["domain_name", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/error.js
var require_error = __commonJS({
  "node_modules/square/dist/cjs/models/error.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.errorSchema = void 0;
    var schema_1 = require_schema2();
    exports.errorSchema = (0, schema_1.object)({
      category: ["category", (0, schema_1.string)()],
      code: ["code", (0, schema_1.string)()],
      detail: ["detail", (0, schema_1.optional)((0, schema_1.string)())],
      field: ["field", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/registerDomainResponse.js
var require_registerDomainResponse = __commonJS({
  "node_modules/square/dist/cjs/models/registerDomainResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.registerDomainResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.registerDomainResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/baseApi.js
var require_baseApi = __commonJS({
  "node_modules/square/dist/cjs/api/baseApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.BaseApi = void 0;
    var BaseApi = function() {
      function BaseApi2(client3) {
        this.createRequest = client3.getRequestBuilderFactory();
      }
      return BaseApi2;
    }();
    exports.BaseApi = BaseApi;
  }
});

// node_modules/square/dist/cjs/api/applePayApi.js
var require_applePayApi = __commonJS({
  "node_modules/square/dist/cjs/api/applePayApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.ApplePayApi = void 0;
    var tslib_1 = require_tslib();
    var registerDomainRequest_1 = require_registerDomainRequest();
    var registerDomainResponse_1 = require_registerDomainResponse();
    var baseApi_1 = require_baseApi();
    var ApplePayApi = function(_super) {
      tslib_1.__extends(ApplePayApi2, _super);
      function ApplePayApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      ApplePayApi2.prototype.registerDomain = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/apple-pay/domains");
            mapped = req.prepareArgs({
              body: [body2, registerDomainRequest_1.registerDomainRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(registerDomainResponse_1.registerDomainResponseSchema, requestOptions)];
          });
        });
      };
      return ApplePayApi2;
    }(baseApi_1.BaseApi);
    exports.ApplePayApi = ApplePayApi;
  }
});

// node_modules/square/dist/cjs/models/bankAccount.js
var require_bankAccount = __commonJS({
  "node_modules/square/dist/cjs/models/bankAccount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bankAccountSchema = void 0;
    var schema_1 = require_schema2();
    exports.bankAccountSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      accountNumberSuffix: ["account_number_suffix", (0, schema_1.string)()],
      country: ["country", (0, schema_1.string)()],
      currency: ["currency", (0, schema_1.string)()],
      accountType: ["account_type", (0, schema_1.string)()],
      holderName: ["holder_name", (0, schema_1.string)()],
      primaryBankIdentificationNumber: [
        "primary_bank_identification_number",
        (0, schema_1.string)()
      ],
      secondaryBankIdentificationNumber: [
        "secondary_bank_identification_number",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      debitMandateReferenceId: [
        "debit_mandate_reference_id",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.string)()],
      creditable: ["creditable", (0, schema_1.boolean)()],
      debitable: ["debitable", (0, schema_1.boolean)()],
      fingerprint: ["fingerprint", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      bankName: ["bank_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/getBankAccountByV1IdResponse.js
var require_getBankAccountByV1IdResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getBankAccountByV1IdResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getBankAccountByV1IdResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bankAccount_1 = require_bankAccount();
    var error_1 = require_error();
    exports.getBankAccountByV1IdResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      bankAccount: ["bank_account", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return bankAccount_1.bankAccountSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getBankAccountResponse.js
var require_getBankAccountResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getBankAccountResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getBankAccountResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bankAccount_1 = require_bankAccount();
    var error_1 = require_error();
    exports.getBankAccountResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      bankAccount: ["bank_account", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return bankAccount_1.bankAccountSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listBankAccountsResponse.js
var require_listBankAccountsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listBankAccountsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listBankAccountsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bankAccount_1 = require_bankAccount();
    var error_1 = require_error();
    exports.listBankAccountsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      bankAccounts: [
        "bank_accounts",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return bankAccount_1.bankAccountSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/bankAccountsApi.js
var require_bankAccountsApi = __commonJS({
  "node_modules/square/dist/cjs/api/bankAccountsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.BankAccountsApi = void 0;
    var tslib_1 = require_tslib();
    var getBankAccountByV1IdResponse_1 = require_getBankAccountByV1IdResponse();
    var getBankAccountResponse_1 = require_getBankAccountResponse();
    var listBankAccountsResponse_1 = require_listBankAccountsResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var BankAccountsApi = function(_super) {
      tslib_1.__extends(BankAccountsApi2, _super);
      function BankAccountsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      BankAccountsApi2.prototype.listBankAccounts = function(cursor, limit, locationId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/bank-accounts");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            req.query("location_id", mapped.locationId);
            return [2, req.callAsJson(listBankAccountsResponse_1.listBankAccountsResponseSchema, requestOptions)];
          });
        });
      };
      BankAccountsApi2.prototype.getBankAccountByV1Id = function(v1BankAccountId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              v1BankAccountId: [v1BankAccountId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/bank-accounts/by-v1-id/", ""], ["/v2/bank-accounts/by-v1-id/", ""])), mapped.v1BankAccountId);
            return [2, req.callAsJson(getBankAccountByV1IdResponse_1.getBankAccountByV1IdResponseSchema, requestOptions)];
          });
        });
      };
      BankAccountsApi2.prototype.getBankAccount = function(bankAccountId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              bankAccountId: [bankAccountId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/bank-accounts/", ""], ["/v2/bank-accounts/", ""])), mapped.bankAccountId);
            return [2, req.callAsJson(getBankAccountResponse_1.getBankAccountResponseSchema, requestOptions)];
          });
        });
      };
      return BankAccountsApi2;
    }(baseApi_1.BaseApi);
    exports.BankAccountsApi = BankAccountsApi;
    var templateObject_1;
    var templateObject_2;
  }
});

// node_modules/square/dist/cjs/models/bookingCustomAttributeDeleteRequest.js
var require_bookingCustomAttributeDeleteRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bookingCustomAttributeDeleteRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bookingCustomAttributeDeleteRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.bookingCustomAttributeDeleteRequestSchema = (0, schema_1.object)({ bookingId: ["booking_id", (0, schema_1.string)()], key: ["key", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteBookingCustomAttributesRequest.js
var require_bulkDeleteBookingCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteBookingCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteBookingCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bookingCustomAttributeDeleteRequest_1 = require_bookingCustomAttributeDeleteRequest();
    exports.bulkDeleteBookingCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bookingCustomAttributeDeleteRequest_1.bookingCustomAttributeDeleteRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bookingCustomAttributeDeleteResponse.js
var require_bookingCustomAttributeDeleteResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bookingCustomAttributeDeleteResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bookingCustomAttributeDeleteResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.bookingCustomAttributeDeleteResponseSchema = (0, schema_1.object)({
      bookingId: ["booking_id", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteBookingCustomAttributesResponse.js
var require_bulkDeleteBookingCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteBookingCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteBookingCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bookingCustomAttributeDeleteResponse_1 = require_bookingCustomAttributeDeleteResponse();
    var error_1 = require_error();
    exports.bulkDeleteBookingCustomAttributesResponseSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bookingCustomAttributeDeleteResponse_1.bookingCustomAttributeDeleteResponseSchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/customAttributeDefinition.js
var require_customAttributeDefinition = __commonJS({
  "node_modules/square/dist/cjs/models/customAttributeDefinition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customAttributeDefinitionSchema = void 0;
    var schema_1 = require_schema2();
    exports.customAttributeDefinitionSchema = (0, schema_1.object)({
      key: ["key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      schema: ["schema", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.unknown)())))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      visibility: ["visibility", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/customAttribute.js
var require_customAttribute = __commonJS({
  "node_modules/square/dist/cjs/models/customAttribute.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customAttributeSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.customAttributeSchema = (0, schema_1.object)({
      key: ["key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      value: ["value", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.unknown)()))],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      visibility: ["visibility", (0, schema_1.optional)((0, schema_1.string)())],
      definition: [
        "definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/bookingCustomAttributeUpsertRequest.js
var require_bookingCustomAttributeUpsertRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bookingCustomAttributeUpsertRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bookingCustomAttributeUpsertRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.bookingCustomAttributeUpsertRequestSchema = (0, schema_1.object)({
      bookingId: ["booking_id", (0, schema_1.string)()],
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertBookingCustomAttributesRequest.js
var require_bulkUpsertBookingCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertBookingCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertBookingCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bookingCustomAttributeUpsertRequest_1 = require_bookingCustomAttributeUpsertRequest();
    exports.bulkUpsertBookingCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bookingCustomAttributeUpsertRequest_1.bookingCustomAttributeUpsertRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bookingCustomAttributeUpsertResponse.js
var require_bookingCustomAttributeUpsertResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bookingCustomAttributeUpsertResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bookingCustomAttributeUpsertResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.bookingCustomAttributeUpsertResponseSchema = (0, schema_1.object)({
      bookingId: ["booking_id", (0, schema_1.optional)((0, schema_1.string)())],
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertBookingCustomAttributesResponse.js
var require_bulkUpsertBookingCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertBookingCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertBookingCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bookingCustomAttributeUpsertResponse_1 = require_bookingCustomAttributeUpsertResponse();
    var error_1 = require_error();
    exports.bulkUpsertBookingCustomAttributesResponseSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bookingCustomAttributeUpsertResponse_1.bookingCustomAttributeUpsertResponseSchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createBookingCustomAttributeDefinitionRequest.js
var require_createBookingCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createBookingCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createBookingCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.createBookingCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createBookingCustomAttributeDefinitionResponse.js
var require_createBookingCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createBookingCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createBookingCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.createBookingCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteBookingCustomAttributeDefinitionResponse.js
var require_deleteBookingCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteBookingCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteBookingCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteBookingCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/deleteBookingCustomAttributeResponse.js
var require_deleteBookingCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteBookingCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteBookingCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteBookingCustomAttributeResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listBookingCustomAttributeDefinitionsResponse.js
var require_listBookingCustomAttributeDefinitionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listBookingCustomAttributeDefinitionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listBookingCustomAttributeDefinitionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.listBookingCustomAttributeDefinitionsResponseSchema = (0, schema_1.object)({
      customAttributeDefinitions: [
        "custom_attribute_definitions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listBookingCustomAttributesResponse.js
var require_listBookingCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listBookingCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listBookingCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.listBookingCustomAttributesResponseSchema = (0, schema_1.object)({
      customAttributes: [
        "custom_attributes",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveBookingCustomAttributeDefinitionResponse.js
var require_retrieveBookingCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveBookingCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveBookingCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.retrieveBookingCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveBookingCustomAttributeResponse.js
var require_retrieveBookingCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveBookingCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveBookingCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.retrieveBookingCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateBookingCustomAttributeDefinitionRequest.js
var require_updateBookingCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateBookingCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateBookingCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.updateBookingCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateBookingCustomAttributeDefinitionResponse.js
var require_updateBookingCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateBookingCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateBookingCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.updateBookingCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertBookingCustomAttributeRequest.js
var require_upsertBookingCustomAttributeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/upsertBookingCustomAttributeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertBookingCustomAttributeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.upsertBookingCustomAttributeRequestSchema = (0, schema_1.object)({
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertBookingCustomAttributeResponse.js
var require_upsertBookingCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/upsertBookingCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertBookingCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.upsertBookingCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/bookingCustomAttributesApi.js
var require_bookingCustomAttributesApi = __commonJS({
  "node_modules/square/dist/cjs/api/bookingCustomAttributesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.BookingCustomAttributesApi = void 0;
    var tslib_1 = require_tslib();
    var bulkDeleteBookingCustomAttributesRequest_1 = require_bulkDeleteBookingCustomAttributesRequest();
    var bulkDeleteBookingCustomAttributesResponse_1 = require_bulkDeleteBookingCustomAttributesResponse();
    var bulkUpsertBookingCustomAttributesRequest_1 = require_bulkUpsertBookingCustomAttributesRequest();
    var bulkUpsertBookingCustomAttributesResponse_1 = require_bulkUpsertBookingCustomAttributesResponse();
    var createBookingCustomAttributeDefinitionRequest_1 = require_createBookingCustomAttributeDefinitionRequest();
    var createBookingCustomAttributeDefinitionResponse_1 = require_createBookingCustomAttributeDefinitionResponse();
    var deleteBookingCustomAttributeDefinitionResponse_1 = require_deleteBookingCustomAttributeDefinitionResponse();
    var deleteBookingCustomAttributeResponse_1 = require_deleteBookingCustomAttributeResponse();
    var listBookingCustomAttributeDefinitionsResponse_1 = require_listBookingCustomAttributeDefinitionsResponse();
    var listBookingCustomAttributesResponse_1 = require_listBookingCustomAttributesResponse();
    var retrieveBookingCustomAttributeDefinitionResponse_1 = require_retrieveBookingCustomAttributeDefinitionResponse();
    var retrieveBookingCustomAttributeResponse_1 = require_retrieveBookingCustomAttributeResponse();
    var updateBookingCustomAttributeDefinitionRequest_1 = require_updateBookingCustomAttributeDefinitionRequest();
    var updateBookingCustomAttributeDefinitionResponse_1 = require_updateBookingCustomAttributeDefinitionResponse();
    var upsertBookingCustomAttributeRequest_1 = require_upsertBookingCustomAttributeRequest();
    var upsertBookingCustomAttributeResponse_1 = require_upsertBookingCustomAttributeResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var BookingCustomAttributesApi = function(_super) {
      tslib_1.__extends(BookingCustomAttributesApi2, _super);
      function BookingCustomAttributesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      BookingCustomAttributesApi2.prototype.listBookingCustomAttributeDefinitions = function(limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/bookings/custom-attribute-definitions");
            mapped = req.prepareArgs({
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listBookingCustomAttributeDefinitionsResponse_1.listBookingCustomAttributeDefinitionsResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.createBookingCustomAttributeDefinition = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/bookings/custom-attribute-definitions");
            mapped = req.prepareArgs({
              body: [body2, createBookingCustomAttributeDefinitionRequest_1.createBookingCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createBookingCustomAttributeDefinitionResponse_1.createBookingCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.deleteBookingCustomAttributeDefinition = function(key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ key: [key2, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/bookings/custom-attribute-definitions/", ""], ["/v2/bookings/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(deleteBookingCustomAttributeDefinitionResponse_1.deleteBookingCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.retrieveBookingCustomAttributeDefinition = function(key2, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/bookings/custom-attribute-definitions/", ""], ["/v2/bookings/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(retrieveBookingCustomAttributeDefinitionResponse_1.retrieveBookingCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.updateBookingCustomAttributeDefinition = function(key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              body: [body2, updateBookingCustomAttributeDefinitionRequest_1.updateBookingCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/bookings/custom-attribute-definitions/", ""], ["/v2/bookings/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(updateBookingCustomAttributeDefinitionResponse_1.updateBookingCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.bulkDeleteBookingCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/bookings/custom-attributes/bulk-delete");
            mapped = req.prepareArgs({
              body: [body2, bulkDeleteBookingCustomAttributesRequest_1.bulkDeleteBookingCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkDeleteBookingCustomAttributesResponse_1.bulkDeleteBookingCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.bulkUpsertBookingCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/bookings/custom-attributes/bulk-upsert");
            mapped = req.prepareArgs({
              body: [body2, bulkUpsertBookingCustomAttributesRequest_1.bulkUpsertBookingCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkUpsertBookingCustomAttributesResponse_1.bulkUpsertBookingCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.listBookingCustomAttributes = function(bookingId, limit, cursor, withDefinitions, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              bookingId: [bookingId, (0, schema_1.string)()],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              withDefinitions: [withDefinitions, (0, schema_1.optional)((0, schema_1.boolean)())]
            });
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("with_definitions", mapped.withDefinitions);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/bookings/", "/custom-attributes"], ["/v2/bookings/", "/custom-attributes"])), mapped.bookingId);
            return [2, req.callAsJson(listBookingCustomAttributesResponse_1.listBookingCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.deleteBookingCustomAttribute = function(bookingId, key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              bookingId: [bookingId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/bookings/", "/custom-attributes/", ""], ["/v2/bookings/", "/custom-attributes/", ""])), mapped.bookingId, mapped.key);
            return [2, req.callAsJson(deleteBookingCustomAttributeResponse_1.deleteBookingCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.retrieveBookingCustomAttribute = function(bookingId, key2, withDefinition, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              bookingId: [bookingId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              withDefinition: [withDefinition, (0, schema_1.optional)((0, schema_1.boolean)())],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("with_definition", mapped.withDefinition);
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/bookings/", "/custom-attributes/", ""], ["/v2/bookings/", "/custom-attributes/", ""])), mapped.bookingId, mapped.key);
            return [2, req.callAsJson(retrieveBookingCustomAttributeResponse_1.retrieveBookingCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      BookingCustomAttributesApi2.prototype.upsertBookingCustomAttribute = function(bookingId, key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              bookingId: [bookingId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              body: [body2, upsertBookingCustomAttributeRequest_1.upsertBookingCustomAttributeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/bookings/", "/custom-attributes/", ""], ["/v2/bookings/", "/custom-attributes/", ""])), mapped.bookingId, mapped.key);
            return [2, req.callAsJson(upsertBookingCustomAttributeResponse_1.upsertBookingCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      return BookingCustomAttributesApi2;
    }(baseApi_1.BaseApi);
    exports.BookingCustomAttributesApi = BookingCustomAttributesApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
  }
});

// node_modules/square/dist/cjs/models/cancelBookingRequest.js
var require_cancelBookingRequest = __commonJS({
  "node_modules/square/dist/cjs/models/cancelBookingRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelBookingRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.cancelBookingRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      bookingVersion: ["booking_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/appointmentSegment.js
var require_appointmentSegment = __commonJS({
  "node_modules/square/dist/cjs/models/appointmentSegment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.appointmentSegmentSchema = void 0;
    var schema_1 = require_schema2();
    exports.appointmentSegmentSchema = (0, schema_1.object)({
      durationMinutes: ["duration_minutes", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      serviceVariationId: ["service_variation_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      teamMemberId: ["team_member_id", (0, schema_1.string)()],
      serviceVariationVersion: [
        "service_variation_version",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))
      ],
      intermissionMinutes: ["intermission_minutes", (0, schema_1.optional)((0, schema_1.number)())],
      anyTeamMember: ["any_team_member", (0, schema_1.optional)((0, schema_1.boolean)())],
      resourceIds: ["resource_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/bookingCreatorDetails.js
var require_bookingCreatorDetails = __commonJS({
  "node_modules/square/dist/cjs/models/bookingCreatorDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bookingCreatorDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.bookingCreatorDetailsSchema = (0, schema_1.object)({
      creatorType: ["creator_type", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.string)())],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/booking.js
var require_booking = __commonJS({
  "node_modules/square/dist/cjs/models/booking.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bookingSchema = void 0;
    var schema_1 = require_schema2();
    var appointmentSegment_1 = require_appointmentSegment();
    var bookingCreatorDetails_1 = require_bookingCreatorDetails();
    exports.bookingSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      startAt: ["start_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      customerNote: ["customer_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sellerNote: ["seller_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appointmentSegments: [
        "appointment_segments",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return appointmentSegment_1.appointmentSegmentSchema;
        }))))
      ],
      transitionTimeMinutes: ["transition_time_minutes", (0, schema_1.optional)((0, schema_1.number)())],
      allDay: ["all_day", (0, schema_1.optional)((0, schema_1.boolean)())],
      locationType: ["location_type", (0, schema_1.optional)((0, schema_1.string)())],
      creatorDetails: [
        "creator_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return bookingCreatorDetails_1.bookingCreatorDetailsSchema;
        }))
      ],
      source: ["source", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelBookingResponse.js
var require_cancelBookingResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelBookingResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelBookingResponseSchema = void 0;
    var schema_1 = require_schema2();
    var booking_1 = require_booking();
    var error_1 = require_error();
    exports.cancelBookingResponseSchema = (0, schema_1.object)({
      booking: ["booking", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return booking_1.bookingSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createBookingRequest.js
var require_createBookingRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createBookingRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createBookingRequestSchema = void 0;
    var schema_1 = require_schema2();
    var booking_1 = require_booking();
    exports.createBookingRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      booking: ["booking", (0, schema_1.lazy)(function() {
        return booking_1.bookingSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createBookingResponse.js
var require_createBookingResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createBookingResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createBookingResponseSchema = void 0;
    var schema_1 = require_schema2();
    var booking_1 = require_booking();
    var error_1 = require_error();
    exports.createBookingResponseSchema = (0, schema_1.object)({
      booking: ["booking", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return booking_1.bookingSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listBookingsResponse.js
var require_listBookingsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listBookingsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listBookingsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var booking_1 = require_booking();
    var error_1 = require_error();
    exports.listBookingsResponseSchema = (0, schema_1.object)({
      bookings: ["bookings", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return booking_1.bookingSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/teamMemberBookingProfile.js
var require_teamMemberBookingProfile = __commonJS({
  "node_modules/square/dist/cjs/models/teamMemberBookingProfile.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.teamMemberBookingProfileSchema = void 0;
    var schema_1 = require_schema2();
    exports.teamMemberBookingProfileSchema = (0, schema_1.object)({
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.string)())],
      description: ["description", (0, schema_1.optional)((0, schema_1.string)())],
      displayName: ["display_name", (0, schema_1.optional)((0, schema_1.string)())],
      isBookable: ["is_bookable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      profileImageUrl: ["profile_image_url", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listTeamMemberBookingProfilesResponse.js
var require_listTeamMemberBookingProfilesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listTeamMemberBookingProfilesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listTeamMemberBookingProfilesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMemberBookingProfile_1 = require_teamMemberBookingProfile();
    exports.listTeamMemberBookingProfilesResponseSchema = (0, schema_1.object)({
      teamMemberBookingProfiles: [
        "team_member_booking_profiles",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return teamMemberBookingProfile_1.teamMemberBookingProfileSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveBookingResponse.js
var require_retrieveBookingResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveBookingResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveBookingResponseSchema = void 0;
    var schema_1 = require_schema2();
    var booking_1 = require_booking();
    var error_1 = require_error();
    exports.retrieveBookingResponseSchema = (0, schema_1.object)({
      booking: ["booking", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return booking_1.bookingSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/money.js
var require_money = __commonJS({
  "node_modules/square/dist/cjs/models/money.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.moneySchema = void 0;
    var schema_1 = require_schema2();
    exports.moneySchema = (0, schema_1.object)({
      amount: ["amount", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      currency: ["currency", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/businessAppointmentSettings.js
var require_businessAppointmentSettings = __commonJS({
  "node_modules/square/dist/cjs/models/businessAppointmentSettings.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.businessAppointmentSettingsSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.businessAppointmentSettingsSchema = (0, schema_1.object)({
      locationTypes: ["location_types", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      alignmentTime: ["alignment_time", (0, schema_1.optional)((0, schema_1.string)())],
      minBookingLeadTimeSeconds: [
        "min_booking_lead_time_seconds",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      maxBookingLeadTimeSeconds: [
        "max_booking_lead_time_seconds",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      anyTeamMemberBookingEnabled: [
        "any_team_member_booking_enabled",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      multipleServiceBookingEnabled: [
        "multiple_service_booking_enabled",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      maxAppointmentsPerDayLimitType: [
        "max_appointments_per_day_limit_type",
        (0, schema_1.optional)((0, schema_1.string)())
      ],
      maxAppointmentsPerDayLimit: [
        "max_appointments_per_day_limit",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      cancellationWindowSeconds: [
        "cancellation_window_seconds",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      cancellationFeeMoney: [
        "cancellation_fee_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      cancellationPolicy: ["cancellation_policy", (0, schema_1.optional)((0, schema_1.string)())],
      cancellationPolicyText: [
        "cancellation_policy_text",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      skipBookingFlowStaffSelection: [
        "skip_booking_flow_staff_selection",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/businessBookingProfile.js
var require_businessBookingProfile = __commonJS({
  "node_modules/square/dist/cjs/models/businessBookingProfile.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.businessBookingProfileSchema = void 0;
    var schema_1 = require_schema2();
    var businessAppointmentSettings_1 = require_businessAppointmentSettings();
    exports.businessBookingProfileSchema = (0, schema_1.object)({
      sellerId: ["seller_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      bookingEnabled: ["booking_enabled", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      customerTimezoneChoice: ["customer_timezone_choice", (0, schema_1.optional)((0, schema_1.string)())],
      bookingPolicy: ["booking_policy", (0, schema_1.optional)((0, schema_1.string)())],
      allowUserCancel: ["allow_user_cancel", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      businessAppointmentSettings: [
        "business_appointment_settings",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return businessAppointmentSettings_1.businessAppointmentSettingsSchema;
        }))
      ],
      supportSellerLevelWrites: [
        "support_seller_level_writes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveBusinessBookingProfileResponse.js
var require_retrieveBusinessBookingProfileResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveBusinessBookingProfileResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveBusinessBookingProfileResponseSchema = void 0;
    var schema_1 = require_schema2();
    var businessBookingProfile_1 = require_businessBookingProfile();
    var error_1 = require_error();
    exports.retrieveBusinessBookingProfileResponseSchema = (0, schema_1.object)({
      businessBookingProfile: [
        "business_booking_profile",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return businessBookingProfile_1.businessBookingProfileSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveTeamMemberBookingProfileResponse.js
var require_retrieveTeamMemberBookingProfileResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveTeamMemberBookingProfileResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveTeamMemberBookingProfileResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMemberBookingProfile_1 = require_teamMemberBookingProfile();
    exports.retrieveTeamMemberBookingProfileResponseSchema = (0, schema_1.object)({
      teamMemberBookingProfile: [
        "team_member_booking_profile",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return teamMemberBookingProfile_1.teamMemberBookingProfileSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/filterValue.js
var require_filterValue = __commonJS({
  "node_modules/square/dist/cjs/models/filterValue.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.filterValueSchema = void 0;
    var schema_1 = require_schema2();
    exports.filterValueSchema = (0, schema_1.object)({
      all: ["all", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      any: ["any", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      none: ["none", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/segmentFilter.js
var require_segmentFilter = __commonJS({
  "node_modules/square/dist/cjs/models/segmentFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.segmentFilterSchema = void 0;
    var schema_1 = require_schema2();
    var filterValue_1 = require_filterValue();
    exports.segmentFilterSchema = (0, schema_1.object)({
      serviceVariationId: ["service_variation_id", (0, schema_1.string)()],
      teamMemberIdFilter: [
        "team_member_id_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return filterValue_1.filterValueSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/timeRange.js
var require_timeRange = __commonJS({
  "node_modules/square/dist/cjs/models/timeRange.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.timeRangeSchema = void 0;
    var schema_1 = require_schema2();
    exports.timeRangeSchema = (0, schema_1.object)({
      startAt: ["start_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      endAt: ["end_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchAvailabilityFilter.js
var require_searchAvailabilityFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchAvailabilityFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchAvailabilityFilterSchema = void 0;
    var schema_1 = require_schema2();
    var segmentFilter_1 = require_segmentFilter();
    var timeRange_1 = require_timeRange();
    exports.searchAvailabilityFilterSchema = (0, schema_1.object)({
      startAtRange: ["start_at_range", (0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      })],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      segmentFilters: [
        "segment_filters",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return segmentFilter_1.segmentFilterSchema;
        }))))
      ],
      bookingId: ["booking_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchAvailabilityQuery.js
var require_searchAvailabilityQuery = __commonJS({
  "node_modules/square/dist/cjs/models/searchAvailabilityQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchAvailabilityQuerySchema = void 0;
    var schema_1 = require_schema2();
    var searchAvailabilityFilter_1 = require_searchAvailabilityFilter();
    exports.searchAvailabilityQuerySchema = (0, schema_1.object)({ filter: ["filter", (0, schema_1.lazy)(function() {
      return searchAvailabilityFilter_1.searchAvailabilityFilterSchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/searchAvailabilityRequest.js
var require_searchAvailabilityRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchAvailabilityRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchAvailabilityRequestSchema = void 0;
    var schema_1 = require_schema2();
    var searchAvailabilityQuery_1 = require_searchAvailabilityQuery();
    exports.searchAvailabilityRequestSchema = (0, schema_1.object)({ query: ["query", (0, schema_1.lazy)(function() {
      return searchAvailabilityQuery_1.searchAvailabilityQuerySchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/availability.js
var require_availability = __commonJS({
  "node_modules/square/dist/cjs/models/availability.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.availabilitySchema = void 0;
    var schema_1 = require_schema2();
    var appointmentSegment_1 = require_appointmentSegment();
    exports.availabilitySchema = (0, schema_1.object)({
      startAt: ["start_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      appointmentSegments: [
        "appointment_segments",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return appointmentSegment_1.appointmentSegmentSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/searchAvailabilityResponse.js
var require_searchAvailabilityResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchAvailabilityResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchAvailabilityResponseSchema = void 0;
    var schema_1 = require_schema2();
    var availability_1 = require_availability();
    var error_1 = require_error();
    exports.searchAvailabilityResponseSchema = (0, schema_1.object)({
      availabilities: [
        "availabilities",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return availability_1.availabilitySchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateBookingRequest.js
var require_updateBookingRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateBookingRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateBookingRequestSchema = void 0;
    var schema_1 = require_schema2();
    var booking_1 = require_booking();
    exports.updateBookingRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      booking: ["booking", (0, schema_1.lazy)(function() {
        return booking_1.bookingSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/updateBookingResponse.js
var require_updateBookingResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateBookingResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateBookingResponseSchema = void 0;
    var schema_1 = require_schema2();
    var booking_1 = require_booking();
    var error_1 = require_error();
    exports.updateBookingResponseSchema = (0, schema_1.object)({
      booking: ["booking", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return booking_1.bookingSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/bookingsApi.js
var require_bookingsApi = __commonJS({
  "node_modules/square/dist/cjs/api/bookingsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.BookingsApi = void 0;
    var tslib_1 = require_tslib();
    var cancelBookingRequest_1 = require_cancelBookingRequest();
    var cancelBookingResponse_1 = require_cancelBookingResponse();
    var createBookingRequest_1 = require_createBookingRequest();
    var createBookingResponse_1 = require_createBookingResponse();
    var listBookingsResponse_1 = require_listBookingsResponse();
    var listTeamMemberBookingProfilesResponse_1 = require_listTeamMemberBookingProfilesResponse();
    var retrieveBookingResponse_1 = require_retrieveBookingResponse();
    var retrieveBusinessBookingProfileResponse_1 = require_retrieveBusinessBookingProfileResponse();
    var retrieveTeamMemberBookingProfileResponse_1 = require_retrieveTeamMemberBookingProfileResponse();
    var searchAvailabilityRequest_1 = require_searchAvailabilityRequest();
    var searchAvailabilityResponse_1 = require_searchAvailabilityResponse();
    var updateBookingRequest_1 = require_updateBookingRequest();
    var updateBookingResponse_1 = require_updateBookingResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var BookingsApi = function(_super) {
      tslib_1.__extends(BookingsApi2, _super);
      function BookingsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      BookingsApi2.prototype.listBookings = function(limit, cursor, teamMemberId, locationId, startAtMin, startAtMax, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/bookings");
            mapped = req.prepareArgs({
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              teamMemberId: [teamMemberId, (0, schema_1.optional)((0, schema_1.string)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              startAtMin: [startAtMin, (0, schema_1.optional)((0, schema_1.string)())],
              startAtMax: [startAtMax, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("team_member_id", mapped.teamMemberId);
            req.query("location_id", mapped.locationId);
            req.query("start_at_min", mapped.startAtMin);
            req.query("start_at_max", mapped.startAtMax);
            return [2, req.callAsJson(listBookingsResponse_1.listBookingsResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.createBooking = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/bookings");
            mapped = req.prepareArgs({
              body: [body2, createBookingRequest_1.createBookingRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createBookingResponse_1.createBookingResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.searchAvailability = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/bookings/availability/search");
            mapped = req.prepareArgs({
              body: [body2, searchAvailabilityRequest_1.searchAvailabilityRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchAvailabilityResponse_1.searchAvailabilityResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.retrieveBusinessBookingProfile = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/bookings/business-booking-profile");
            return [2, req.callAsJson(retrieveBusinessBookingProfileResponse_1.retrieveBusinessBookingProfileResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.listTeamMemberBookingProfiles = function(bookableOnly, limit, cursor, locationId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/bookings/team-member-booking-profiles");
            mapped = req.prepareArgs({
              bookableOnly: [bookableOnly, (0, schema_1.optional)((0, schema_1.boolean)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("bookable_only", mapped.bookableOnly);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("location_id", mapped.locationId);
            return [2, req.callAsJson(listTeamMemberBookingProfilesResponse_1.listTeamMemberBookingProfilesResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.retrieveTeamMemberBookingProfile = function(teamMemberId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ teamMemberId: [teamMemberId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/bookings/team-member-booking-profiles/", ""], ["/v2/bookings/team-member-booking-profiles/", ""])), mapped.teamMemberId);
            return [2, req.callAsJson(retrieveTeamMemberBookingProfileResponse_1.retrieveTeamMemberBookingProfileResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.retrieveBooking = function(bookingId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ bookingId: [bookingId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/bookings/", ""], ["/v2/bookings/", ""])), mapped.bookingId);
            return [2, req.callAsJson(retrieveBookingResponse_1.retrieveBookingResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.updateBooking = function(bookingId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              bookingId: [bookingId, (0, schema_1.string)()],
              body: [body2, updateBookingRequest_1.updateBookingRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/bookings/", ""], ["/v2/bookings/", ""])), mapped.bookingId);
            return [2, req.callAsJson(updateBookingResponse_1.updateBookingResponseSchema, requestOptions)];
          });
        });
      };
      BookingsApi2.prototype.cancelBooking = function(bookingId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              bookingId: [bookingId, (0, schema_1.string)()],
              body: [body2, cancelBookingRequest_1.cancelBookingRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/bookings/", "/cancel"], ["/v2/bookings/", "/cancel"])), mapped.bookingId);
            return [2, req.callAsJson(cancelBookingResponse_1.cancelBookingResponseSchema, requestOptions)];
          });
        });
      };
      return BookingsApi2;
    }(baseApi_1.BaseApi);
    exports.BookingsApi = BookingsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
  }
});

// node_modules/square/dist/cjs/models/address.js
var require_address = __commonJS({
  "node_modules/square/dist/cjs/models/address.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.addressSchema = void 0;
    var schema_1 = require_schema2();
    exports.addressSchema = (0, schema_1.object)({
      addressLine1: ["address_line_1", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      addressLine2: ["address_line_2", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      addressLine3: ["address_line_3", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locality: ["locality", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sublocality: ["sublocality", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sublocality2: ["sublocality_2", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sublocality3: ["sublocality_3", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      administrativeDistrictLevel1: [
        "administrative_district_level_1",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      administrativeDistrictLevel2: [
        "administrative_district_level_2",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      administrativeDistrictLevel3: [
        "administrative_district_level_3",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      postalCode: ["postal_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      country: ["country", (0, schema_1.optional)((0, schema_1.string)())],
      firstName: ["first_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      lastName: ["last_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/card.js
var require_card = __commonJS({
  "node_modules/square/dist/cjs/models/card.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cardSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    exports.cardSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      cardBrand: ["card_brand", (0, schema_1.optional)((0, schema_1.string)())],
      last4: ["last_4", (0, schema_1.optional)((0, schema_1.string)())],
      expMonth: ["exp_month", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      expYear: ["exp_year", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      cardholderName: ["cardholder_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      billingAddress: ["billing_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      fingerprint: ["fingerprint", (0, schema_1.optional)((0, schema_1.string)())],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      enabled: ["enabled", (0, schema_1.optional)((0, schema_1.boolean)())],
      cardType: ["card_type", (0, schema_1.optional)((0, schema_1.string)())],
      prepaidType: ["prepaid_type", (0, schema_1.optional)((0, schema_1.string)())],
      bin: ["bin", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.optional)((0, schema_1.bigint)())],
      cardCoBrand: ["card_co_brand", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createCardRequest.js
var require_createCardRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createCardRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCardRequestSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    exports.createCardRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      sourceId: ["source_id", (0, schema_1.string)()],
      verificationToken: ["verification_token", (0, schema_1.optional)((0, schema_1.string)())],
      card: ["card", (0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createCardResponse.js
var require_createCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    var error_1 = require_error();
    exports.createCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      card: ["card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/disableCardResponse.js
var require_disableCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/disableCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.disableCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    var error_1 = require_error();
    exports.disableCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      card: ["card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listCardsResponse.js
var require_listCardsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCardsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCardsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    var error_1 = require_error();
    exports.listCardsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      cards: ["cards", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveCardResponse.js
var require_retrieveCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    var error_1 = require_error();
    exports.retrieveCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      card: ["card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/cardsApi.js
var require_cardsApi = __commonJS({
  "node_modules/square/dist/cjs/api/cardsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CardsApi = void 0;
    var tslib_1 = require_tslib();
    var createCardRequest_1 = require_createCardRequest();
    var createCardResponse_1 = require_createCardResponse();
    var disableCardResponse_1 = require_disableCardResponse();
    var listCardsResponse_1 = require_listCardsResponse();
    var retrieveCardResponse_1 = require_retrieveCardResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CardsApi = function(_super) {
      tslib_1.__extends(CardsApi2, _super);
      function CardsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CardsApi2.prototype.listCards = function(cursor, customerId, includeDisabled, referenceId, sortOrder, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/cards");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              customerId: [customerId, (0, schema_1.optional)((0, schema_1.string)())],
              includeDisabled: [includeDisabled, (0, schema_1.optional)((0, schema_1.boolean)())],
              referenceId: [referenceId, (0, schema_1.optional)((0, schema_1.string)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("customer_id", mapped.customerId);
            req.query("include_disabled", mapped.includeDisabled);
            req.query("reference_id", mapped.referenceId);
            req.query("sort_order", mapped.sortOrder);
            return [2, req.callAsJson(listCardsResponse_1.listCardsResponseSchema, requestOptions)];
          });
        });
      };
      CardsApi2.prototype.createCard = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/cards");
            mapped = req.prepareArgs({ body: [body2, createCardRequest_1.createCardRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createCardResponse_1.createCardResponseSchema, requestOptions)];
          });
        });
      };
      CardsApi2.prototype.retrieveCard = function(cardId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ cardId: [cardId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/cards/", ""], ["/v2/cards/", ""])), mapped.cardId);
            return [2, req.callAsJson(retrieveCardResponse_1.retrieveCardResponseSchema, requestOptions)];
          });
        });
      };
      CardsApi2.prototype.disableCard = function(cardId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({ cardId: [cardId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/cards/", "/disable"], ["/v2/cards/", "/disable"])), mapped.cardId);
            return [2, req.callAsJson(disableCardResponse_1.disableCardResponseSchema, requestOptions)];
          });
        });
      };
      return CardsApi2;
    }(baseApi_1.BaseApi);
    exports.CardsApi = CardsApi;
    var templateObject_1;
    var templateObject_2;
  }
});

// node_modules/square/dist/cjs/models/cashDrawerShiftEvent.js
var require_cashDrawerShiftEvent = __commonJS({
  "node_modules/square/dist/cjs/models/cashDrawerShiftEvent.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cashDrawerShiftEventSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.cashDrawerShiftEventSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      eventType: ["event_type", (0, schema_1.optional)((0, schema_1.string)())],
      eventMoney: ["event_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listCashDrawerShiftEventsResponse.js
var require_listCashDrawerShiftEventsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCashDrawerShiftEventsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCashDrawerShiftEventsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var cashDrawerShiftEvent_1 = require_cashDrawerShiftEvent();
    var error_1 = require_error();
    exports.listCashDrawerShiftEventsResponseSchema = (0, schema_1.object)({
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      cashDrawerShiftEvents: [
        "cash_drawer_shift_events",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return cashDrawerShiftEvent_1.cashDrawerShiftEventSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/cashDrawerShiftSummary.js
var require_cashDrawerShiftSummary = __commonJS({
  "node_modules/square/dist/cjs/models/cashDrawerShiftSummary.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cashDrawerShiftSummarySchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.cashDrawerShiftSummarySchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      openedAt: ["opened_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      endedAt: ["ended_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      closedAt: ["closed_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      openedCashMoney: ["opened_cash_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      expectedCashMoney: [
        "expected_cash_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      closedCashMoney: ["closed_cash_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listCashDrawerShiftsResponse.js
var require_listCashDrawerShiftsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCashDrawerShiftsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCashDrawerShiftsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var cashDrawerShiftSummary_1 = require_cashDrawerShiftSummary();
    var error_1 = require_error();
    exports.listCashDrawerShiftsResponseSchema = (0, schema_1.object)({
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      cashDrawerShifts: [
        "cash_drawer_shifts",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return cashDrawerShiftSummary_1.cashDrawerShiftSummarySchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/cashDrawerDevice.js
var require_cashDrawerDevice = __commonJS({
  "node_modules/square/dist/cjs/models/cashDrawerDevice.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cashDrawerDeviceSchema = void 0;
    var schema_1 = require_schema2();
    exports.cashDrawerDeviceSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/cashDrawerShift.js
var require_cashDrawerShift = __commonJS({
  "node_modules/square/dist/cjs/models/cashDrawerShift.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cashDrawerShiftSchema = void 0;
    var schema_1 = require_schema2();
    var cashDrawerDevice_1 = require_cashDrawerDevice();
    var money_1 = require_money();
    exports.cashDrawerShiftSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      openedAt: ["opened_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      endedAt: ["ended_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      closedAt: ["closed_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      openedCashMoney: ["opened_cash_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      cashPaymentMoney: ["cash_payment_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      cashRefundsMoney: ["cash_refunds_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      cashPaidInMoney: ["cash_paid_in_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      cashPaidOutMoney: ["cash_paid_out_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      expectedCashMoney: ["expected_cash_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      closedCashMoney: ["closed_cash_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      device: ["device", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return cashDrawerDevice_1.cashDrawerDeviceSchema;
      }))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberIds: ["team_member_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      openingTeamMemberId: ["opening_team_member_id", (0, schema_1.optional)((0, schema_1.string)())],
      endingTeamMemberId: ["ending_team_member_id", (0, schema_1.optional)((0, schema_1.string)())],
      closingTeamMemberId: ["closing_team_member_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveCashDrawerShiftResponse.js
var require_retrieveCashDrawerShiftResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCashDrawerShiftResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCashDrawerShiftResponseSchema = void 0;
    var schema_1 = require_schema2();
    var cashDrawerShift_1 = require_cashDrawerShift();
    var error_1 = require_error();
    exports.retrieveCashDrawerShiftResponseSchema = (0, schema_1.object)({
      cashDrawerShift: [
        "cash_drawer_shift",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return cashDrawerShift_1.cashDrawerShiftSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/cashDrawersApi.js
var require_cashDrawersApi = __commonJS({
  "node_modules/square/dist/cjs/api/cashDrawersApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CashDrawersApi = void 0;
    var tslib_1 = require_tslib();
    var listCashDrawerShiftEventsResponse_1 = require_listCashDrawerShiftEventsResponse();
    var listCashDrawerShiftsResponse_1 = require_listCashDrawerShiftsResponse();
    var retrieveCashDrawerShiftResponse_1 = require_retrieveCashDrawerShiftResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CashDrawersApi = function(_super) {
      tslib_1.__extends(CashDrawersApi2, _super);
      function CashDrawersApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CashDrawersApi2.prototype.listCashDrawerShifts = function(locationId, sortOrder, beginTime, endTime, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/cash-drawers/shifts");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())],
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("location_id", mapped.locationId);
            req.query("sort_order", mapped.sortOrder);
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listCashDrawerShiftsResponse_1.listCashDrawerShiftsResponseSchema, requestOptions)];
          });
        });
      };
      CashDrawersApi2.prototype.retrieveCashDrawerShift = function(locationId, shiftId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              shiftId: [shiftId, (0, schema_1.string)()]
            });
            req.query("location_id", mapped.locationId);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/cash-drawers/shifts/", ""], ["/v2/cash-drawers/shifts/", ""])), mapped.shiftId);
            return [2, req.callAsJson(retrieveCashDrawerShiftResponse_1.retrieveCashDrawerShiftResponseSchema, requestOptions)];
          });
        });
      };
      CashDrawersApi2.prototype.listCashDrawerShiftEvents = function(locationId, shiftId, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              shiftId: [shiftId, (0, schema_1.string)()],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("location_id", mapped.locationId);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/cash-drawers/shifts/", "/events"], ["/v2/cash-drawers/shifts/", "/events"])), mapped.shiftId);
            return [2, req.callAsJson(listCashDrawerShiftEventsResponse_1.listCashDrawerShiftEventsResponseSchema, requestOptions)];
          });
        });
      };
      return CashDrawersApi2;
    }(baseApi_1.BaseApi);
    exports.CashDrawersApi = CashDrawersApi;
    var templateObject_1;
    var templateObject_2;
  }
});

// node_modules/square/dist/cjs/models/batchDeleteCatalogObjectsRequest.js
var require_batchDeleteCatalogObjectsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/batchDeleteCatalogObjectsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchDeleteCatalogObjectsRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.batchDeleteCatalogObjectsRequestSchema = (0, schema_1.object)({ objectIds: ["object_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))] });
  }
});

// node_modules/square/dist/cjs/models/batchDeleteCatalogObjectsResponse.js
var require_batchDeleteCatalogObjectsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/batchDeleteCatalogObjectsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchDeleteCatalogObjectsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.batchDeleteCatalogObjectsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      deletedObjectIds: ["deleted_object_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      deletedAt: ["deleted_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveCatalogObjectsRequest.js
var require_batchRetrieveCatalogObjectsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveCatalogObjectsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveCatalogObjectsRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.batchRetrieveCatalogObjectsRequestSchema = (0, schema_1.object)({
      objectIds: ["object_ids", (0, schema_1.array)((0, schema_1.string)())],
      includeRelatedObjects: [
        "include_related_objects",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      includeDeletedObjects: [
        "include_deleted_objects",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogCategory.js
var require_catalogCategory = __commonJS({
  "node_modules/square/dist/cjs/models/catalogCategory.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogCategorySchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogCategorySchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      imageIds: ["image_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionNumberConfig.js
var require_catalogCustomAttributeDefinitionNumberConfig = __commonJS({
  "node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionNumberConfig.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogCustomAttributeDefinitionNumberConfigSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogCustomAttributeDefinitionNumberConfigSchema = (0, schema_1.object)({ precision: ["precision", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))] });
  }
});

// node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.js
var require_catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection = __commonJS({
  "node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelectionSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelectionSchema = (0, schema_1.object)({ uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))], name: ["name", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionSelectionConfig.js
var require_catalogCustomAttributeDefinitionSelectionConfig = __commonJS({
  "node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionSelectionConfig.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogCustomAttributeDefinitionSelectionConfigSchema = void 0;
    var schema_1 = require_schema2();
    var catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection_1 = require_catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection();
    exports.catalogCustomAttributeDefinitionSelectionConfigSchema = (0, schema_1.object)({
      maxAllowedSelections: [
        "max_allowed_selections",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      allowedSelections: [
        "allowed_selections",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelection_1.catalogCustomAttributeDefinitionSelectionConfigCustomAttributeSelectionSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionStringConfig.js
var require_catalogCustomAttributeDefinitionStringConfig = __commonJS({
  "node_modules/square/dist/cjs/models/catalogCustomAttributeDefinitionStringConfig.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogCustomAttributeDefinitionStringConfigSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogCustomAttributeDefinitionStringConfigSchema = (0, schema_1.object)({ enforceUniqueness: ["enforce_uniqueness", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))] });
  }
});

// node_modules/square/dist/cjs/models/sourceApplication.js
var require_sourceApplication = __commonJS({
  "node_modules/square/dist/cjs/models/sourceApplication.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.sourceApplicationSchema = void 0;
    var schema_1 = require_schema2();
    exports.sourceApplicationSchema = (0, schema_1.object)({
      product: ["product", (0, schema_1.optional)((0, schema_1.string)())],
      applicationId: ["application_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogCustomAttributeDefinition.js
var require_catalogCustomAttributeDefinition = __commonJS({
  "node_modules/square/dist/cjs/models/catalogCustomAttributeDefinition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogCustomAttributeDefinitionSchema = void 0;
    var schema_1 = require_schema2();
    var catalogCustomAttributeDefinitionNumberConfig_1 = require_catalogCustomAttributeDefinitionNumberConfig();
    var catalogCustomAttributeDefinitionSelectionConfig_1 = require_catalogCustomAttributeDefinitionSelectionConfig();
    var catalogCustomAttributeDefinitionStringConfig_1 = require_catalogCustomAttributeDefinitionStringConfig();
    var sourceApplication_1 = require_sourceApplication();
    exports.catalogCustomAttributeDefinitionSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.string)()],
      name: ["name", (0, schema_1.string)()],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceApplication: [
        "source_application",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return sourceApplication_1.sourceApplicationSchema;
        }))
      ],
      allowedObjectTypes: ["allowed_object_types", (0, schema_1.array)((0, schema_1.string)())],
      sellerVisibility: ["seller_visibility", (0, schema_1.optional)((0, schema_1.string)())],
      appVisibility: ["app_visibility", (0, schema_1.optional)((0, schema_1.string)())],
      stringConfig: [
        "string_config",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogCustomAttributeDefinitionStringConfig_1.catalogCustomAttributeDefinitionStringConfigSchema;
        }))
      ],
      numberConfig: [
        "number_config",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogCustomAttributeDefinitionNumberConfig_1.catalogCustomAttributeDefinitionNumberConfigSchema;
        }))
      ],
      selectionConfig: [
        "selection_config",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogCustomAttributeDefinitionSelectionConfig_1.catalogCustomAttributeDefinitionSelectionConfigSchema;
        }))
      ],
      customAttributeUsageCount: [
        "custom_attribute_usage_count",
        (0, schema_1.optional)((0, schema_1.number)())
      ],
      key: ["key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogCustomAttributeValue.js
var require_catalogCustomAttributeValue = __commonJS({
  "node_modules/square/dist/cjs/models/catalogCustomAttributeValue.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogCustomAttributeValueSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogCustomAttributeValueSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      stringValue: ["string_value", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      customAttributeDefinitionId: [
        "custom_attribute_definition_id",
        (0, schema_1.optional)((0, schema_1.string)())
      ],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      numberValue: ["number_value", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      booleanValue: ["boolean_value", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      selectionUidValues: [
        "selection_uid_values",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      key: ["key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogDiscount.js
var require_catalogDiscount = __commonJS({
  "node_modules/square/dist/cjs/models/catalogDiscount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogDiscountSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.catalogDiscountSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      discountType: ["discount_type", (0, schema_1.optional)((0, schema_1.string)())],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      pinRequired: ["pin_required", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      labelColor: ["label_color", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      modifyTaxBasis: ["modify_tax_basis", (0, schema_1.optional)((0, schema_1.string)())],
      maximumAmountMoney: [
        "maximum_amount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogImage.js
var require_catalogImage = __commonJS({
  "node_modules/square/dist/cjs/models/catalogImage.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogImageSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogImageSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      url: ["url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      caption: ["caption", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      photoStudioOrderId: ["photo_studio_order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogModifierOverride.js
var require_catalogModifierOverride = __commonJS({
  "node_modules/square/dist/cjs/models/catalogModifierOverride.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogModifierOverrideSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogModifierOverrideSchema = (0, schema_1.object)({
      modifierId: ["modifier_id", (0, schema_1.string)()],
      onByDefault: ["on_by_default", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogItemModifierListInfo.js
var require_catalogItemModifierListInfo = __commonJS({
  "node_modules/square/dist/cjs/models/catalogItemModifierListInfo.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogItemModifierListInfoSchema = void 0;
    var schema_1 = require_schema2();
    var catalogModifierOverride_1 = require_catalogModifierOverride();
    exports.catalogItemModifierListInfoSchema = (0, schema_1.object)({
      modifierListId: ["modifier_list_id", (0, schema_1.string)()],
      modifierOverrides: [
        "modifier_overrides",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogModifierOverride_1.catalogModifierOverrideSchema;
        }))))
      ],
      minSelectedModifiers: [
        "min_selected_modifiers",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      maxSelectedModifiers: [
        "max_selected_modifiers",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      enabled: ["enabled", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogItemOptionForItem.js
var require_catalogItemOptionForItem = __commonJS({
  "node_modules/square/dist/cjs/models/catalogItemOptionForItem.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogItemOptionForItemSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogItemOptionForItemSchema = (0, schema_1.object)({ itemOptionId: ["item_option_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/catalogItem.js
var require_catalogItem = __commonJS({
  "node_modules/square/dist/cjs/models/catalogItem.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogItemSchema = void 0;
    var schema_1 = require_schema2();
    var catalogItemModifierListInfo_1 = require_catalogItemModifierListInfo();
    var catalogItemOptionForItem_1 = require_catalogItemOptionForItem();
    var catalogObject_1 = require_catalogObject();
    exports.catalogItemSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      abbreviation: ["abbreviation", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      labelColor: ["label_color", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      availableOnline: ["available_online", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      availableForPickup: ["available_for_pickup", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      availableElectronically: [
        "available_electronically",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      categoryId: ["category_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      taxIds: ["tax_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      modifierListInfo: [
        "modifier_list_info",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogItemModifierListInfo_1.catalogItemModifierListInfoSchema;
        }))))
      ],
      variations: [
        "variations",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        }))))
      ],
      productType: ["product_type", (0, schema_1.optional)((0, schema_1.string)())],
      skipModifierScreen: ["skip_modifier_screen", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      itemOptions: [
        "item_options",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogItemOptionForItem_1.catalogItemOptionForItemSchema;
        }))))
      ],
      imageIds: ["image_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      sortName: ["sort_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      descriptionHtml: ["description_html", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      descriptionPlaintext: ["description_plaintext", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogItemOption.js
var require_catalogItemOption = __commonJS({
  "node_modules/square/dist/cjs/models/catalogItemOption.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogItemOptionSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    exports.catalogItemOptionSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      displayName: ["display_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      showColors: ["show_colors", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      values: [
        "values",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogItemOptionValue.js
var require_catalogItemOptionValue = __commonJS({
  "node_modules/square/dist/cjs/models/catalogItemOptionValue.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogItemOptionValueSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogItemOptionValueSchema = (0, schema_1.object)({
      itemOptionId: ["item_option_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      color: ["color", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      ordinal: ["ordinal", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogItemOptionValueForItemVariation.js
var require_catalogItemOptionValueForItemVariation = __commonJS({
  "node_modules/square/dist/cjs/models/catalogItemOptionValueForItemVariation.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogItemOptionValueForItemVariationSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogItemOptionValueForItemVariationSchema = (0, schema_1.object)({
      itemOptionId: ["item_option_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      itemOptionValueId: ["item_option_value_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogStockConversion.js
var require_catalogStockConversion = __commonJS({
  "node_modules/square/dist/cjs/models/catalogStockConversion.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogStockConversionSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogStockConversionSchema = (0, schema_1.object)({
      stockableItemVariationId: ["stockable_item_variation_id", (0, schema_1.string)()],
      stockableQuantity: ["stockable_quantity", (0, schema_1.string)()],
      nonstockableQuantity: ["nonstockable_quantity", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/itemVariationLocationOverrides.js
var require_itemVariationLocationOverrides = __commonJS({
  "node_modules/square/dist/cjs/models/itemVariationLocationOverrides.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.itemVariationLocationOverridesSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.itemVariationLocationOverridesSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      priceMoney: ["price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      pricingType: ["pricing_type", (0, schema_1.optional)((0, schema_1.string)())],
      trackInventory: ["track_inventory", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      inventoryAlertType: ["inventory_alert_type", (0, schema_1.optional)((0, schema_1.string)())],
      inventoryAlertThreshold: [
        "inventory_alert_threshold",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))
      ],
      soldOut: ["sold_out", (0, schema_1.optional)((0, schema_1.boolean)())],
      soldOutValidUntil: ["sold_out_valid_until", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogItemVariation.js
var require_catalogItemVariation = __commonJS({
  "node_modules/square/dist/cjs/models/catalogItemVariation.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogItemVariationSchema = void 0;
    var schema_1 = require_schema2();
    var catalogItemOptionValueForItemVariation_1 = require_catalogItemOptionValueForItemVariation();
    var catalogStockConversion_1 = require_catalogStockConversion();
    var itemVariationLocationOverrides_1 = require_itemVariationLocationOverrides();
    var money_1 = require_money();
    exports.catalogItemVariationSchema = (0, schema_1.object)({
      itemId: ["item_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sku: ["sku", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      upc: ["upc", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      ordinal: ["ordinal", (0, schema_1.optional)((0, schema_1.number)())],
      pricingType: ["pricing_type", (0, schema_1.optional)((0, schema_1.string)())],
      priceMoney: ["price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      locationOverrides: [
        "location_overrides",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return itemVariationLocationOverrides_1.itemVariationLocationOverridesSchema;
        }))))
      ],
      trackInventory: ["track_inventory", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      inventoryAlertType: ["inventory_alert_type", (0, schema_1.optional)((0, schema_1.string)())],
      inventoryAlertThreshold: [
        "inventory_alert_threshold",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))
      ],
      userData: ["user_data", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      serviceDuration: ["service_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      availableForBooking: ["available_for_booking", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      itemOptionValues: [
        "item_option_values",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogItemOptionValueForItemVariation_1.catalogItemOptionValueForItemVariationSchema;
        }))))
      ],
      measurementUnitId: ["measurement_unit_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sellable: ["sellable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      stockable: ["stockable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      imageIds: ["image_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      teamMemberIds: ["team_member_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      stockableConversion: [
        "stockable_conversion",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogStockConversion_1.catalogStockConversionSchema;
        }))
      ],
      itemVariationVendorInfoIds: [
        "item_variation_vendor_info_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/measurementUnitCustom.js
var require_measurementUnitCustom = __commonJS({
  "node_modules/square/dist/cjs/models/measurementUnitCustom.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.measurementUnitCustomSchema = void 0;
    var schema_1 = require_schema2();
    exports.measurementUnitCustomSchema = (0, schema_1.object)({ name: ["name", (0, schema_1.string)()], abbreviation: ["abbreviation", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/measurementUnit.js
var require_measurementUnit = __commonJS({
  "node_modules/square/dist/cjs/models/measurementUnit.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.measurementUnitSchema = void 0;
    var schema_1 = require_schema2();
    var measurementUnitCustom_1 = require_measurementUnitCustom();
    exports.measurementUnitSchema = (0, schema_1.object)({
      customUnit: [
        "custom_unit",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return measurementUnitCustom_1.measurementUnitCustomSchema;
        }))
      ],
      areaUnit: ["area_unit", (0, schema_1.optional)((0, schema_1.string)())],
      lengthUnit: ["length_unit", (0, schema_1.optional)((0, schema_1.string)())],
      volumeUnit: ["volume_unit", (0, schema_1.optional)((0, schema_1.string)())],
      weightUnit: ["weight_unit", (0, schema_1.optional)((0, schema_1.string)())],
      genericUnit: ["generic_unit", (0, schema_1.optional)((0, schema_1.string)())],
      timeUnit: ["time_unit", (0, schema_1.optional)((0, schema_1.string)())],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogMeasurementUnit.js
var require_catalogMeasurementUnit = __commonJS({
  "node_modules/square/dist/cjs/models/catalogMeasurementUnit.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogMeasurementUnitSchema = void 0;
    var schema_1 = require_schema2();
    var measurementUnit_1 = require_measurementUnit();
    exports.catalogMeasurementUnitSchema = (0, schema_1.object)({
      measurementUnit: [
        "measurement_unit",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return measurementUnit_1.measurementUnitSchema;
        }))
      ],
      precision: ["precision", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/modifierLocationOverrides.js
var require_modifierLocationOverrides = __commonJS({
  "node_modules/square/dist/cjs/models/modifierLocationOverrides.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.modifierLocationOverridesSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.modifierLocationOverridesSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      priceMoney: ["price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogModifier.js
var require_catalogModifier = __commonJS({
  "node_modules/square/dist/cjs/models/catalogModifier.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogModifierSchema = void 0;
    var schema_1 = require_schema2();
    var modifierLocationOverrides_1 = require_modifierLocationOverrides();
    var money_1 = require_money();
    exports.catalogModifierSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      priceMoney: ["price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      ordinal: ["ordinal", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      modifierListId: ["modifier_list_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationOverrides: [
        "location_overrides",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return modifierLocationOverrides_1.modifierLocationOverridesSchema;
        }))))
      ],
      imageId: ["image_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogModifierList.js
var require_catalogModifierList = __commonJS({
  "node_modules/square/dist/cjs/models/catalogModifierList.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogModifierListSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    exports.catalogModifierListSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      ordinal: ["ordinal", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      selectionType: ["selection_type", (0, schema_1.optional)((0, schema_1.string)())],
      modifiers: [
        "modifiers",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        }))))
      ],
      imageIds: ["image_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogPricingRule.js
var require_catalogPricingRule = __commonJS({
  "node_modules/square/dist/cjs/models/catalogPricingRule.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogPricingRuleSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.catalogPricingRuleSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      timePeriodIds: ["time_period_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      discountId: ["discount_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      matchProductsId: ["match_products_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      applyProductsId: ["apply_products_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      excludeProductsId: ["exclude_products_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      validFromDate: ["valid_from_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      validFromLocalTime: ["valid_from_local_time", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      validUntilDate: ["valid_until_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      validUntilLocalTime: ["valid_until_local_time", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      excludeStrategy: ["exclude_strategy", (0, schema_1.optional)((0, schema_1.string)())],
      minimumOrderSubtotalMoney: [
        "minimum_order_subtotal_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      customerGroupIdsAny: [
        "customer_group_ids_any",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogProductSet.js
var require_catalogProductSet = __commonJS({
  "node_modules/square/dist/cjs/models/catalogProductSet.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogProductSetSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogProductSetSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      productIdsAny: ["product_ids_any", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      productIdsAll: ["product_ids_all", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      quantityExact: ["quantity_exact", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      quantityMin: ["quantity_min", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      quantityMax: ["quantity_max", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      allProducts: ["all_products", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQuickAmount.js
var require_catalogQuickAmount = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQuickAmount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQuickAmountSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.catalogQuickAmountSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.string)()],
      amount: ["amount", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      score: ["score", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      ordinal: ["ordinal", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQuickAmountsSettings.js
var require_catalogQuickAmountsSettings = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQuickAmountsSettings.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQuickAmountsSettingsSchema = void 0;
    var schema_1 = require_schema2();
    var catalogQuickAmount_1 = require_catalogQuickAmount();
    exports.catalogQuickAmountsSettingsSchema = (0, schema_1.object)({
      option: ["option", (0, schema_1.string)()],
      eligibleForAutoAmounts: [
        "eligible_for_auto_amounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      amounts: [
        "amounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogQuickAmount_1.catalogQuickAmountSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/subscriptionPhase.js
var require_subscriptionPhase = __commonJS({
  "node_modules/square/dist/cjs/models/subscriptionPhase.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.subscriptionPhaseSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.subscriptionPhaseSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      cadence: ["cadence", (0, schema_1.string)()],
      periods: ["periods", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      recurringPriceMoney: [
        "recurring_price_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      ordinal: ["ordinal", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogSubscriptionPlan.js
var require_catalogSubscriptionPlan = __commonJS({
  "node_modules/square/dist/cjs/models/catalogSubscriptionPlan.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogSubscriptionPlanSchema = void 0;
    var schema_1 = require_schema2();
    var subscriptionPhase_1 = require_subscriptionPhase();
    exports.catalogSubscriptionPlanSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.string)()],
      phases: [
        "phases",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return subscriptionPhase_1.subscriptionPhaseSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogTax.js
var require_catalogTax = __commonJS({
  "node_modules/square/dist/cjs/models/catalogTax.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogTaxSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogTaxSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      calculationPhase: ["calculation_phase", (0, schema_1.optional)((0, schema_1.string)())],
      inclusionType: ["inclusion_type", (0, schema_1.optional)((0, schema_1.string)())],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appliesToCustomAmounts: [
        "applies_to_custom_amounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      enabled: ["enabled", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      appliesToProductSetId: [
        "applies_to_product_set_id",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogTimePeriod.js
var require_catalogTimePeriod = __commonJS({
  "node_modules/square/dist/cjs/models/catalogTimePeriod.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogTimePeriodSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogTimePeriodSchema = (0, schema_1.object)({
      event: ["event", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogV1Id.js
var require_catalogV1Id = __commonJS({
  "node_modules/square/dist/cjs/models/catalogV1Id.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogV1IdSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogV1IdSchema = (0, schema_1.object)({
      catalogV1Id: ["catalog_v1_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogObject.js
var require_catalogObject = __commonJS({
  "node_modules/square/dist/cjs/models/catalogObject.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogObjectSchema = void 0;
    var schema_1 = require_schema2();
    var catalogCategory_1 = require_catalogCategory();
    var catalogCustomAttributeDefinition_1 = require_catalogCustomAttributeDefinition();
    var catalogCustomAttributeValue_1 = require_catalogCustomAttributeValue();
    var catalogDiscount_1 = require_catalogDiscount();
    var catalogImage_1 = require_catalogImage();
    var catalogItem_1 = require_catalogItem();
    var catalogItemOption_1 = require_catalogItemOption();
    var catalogItemOptionValue_1 = require_catalogItemOptionValue();
    var catalogItemVariation_1 = require_catalogItemVariation();
    var catalogMeasurementUnit_1 = require_catalogMeasurementUnit();
    var catalogModifier_1 = require_catalogModifier();
    var catalogModifierList_1 = require_catalogModifierList();
    var catalogPricingRule_1 = require_catalogPricingRule();
    var catalogProductSet_1 = require_catalogProductSet();
    var catalogQuickAmountsSettings_1 = require_catalogQuickAmountsSettings();
    var catalogSubscriptionPlan_1 = require_catalogSubscriptionPlan();
    var catalogTax_1 = require_catalogTax();
    var catalogTimePeriod_1 = require_catalogTimePeriod();
    var catalogV1Id_1 = require_catalogV1Id();
    exports.catalogObjectSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.string)()],
      id: ["id", (0, schema_1.string)()],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.optional)((0, schema_1.bigint)())],
      isDeleted: ["is_deleted", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      customAttributeValues: [
        "custom_attribute_values",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return catalogCustomAttributeValue_1.catalogCustomAttributeValueSchema;
        }))))
      ],
      catalogV1Ids: [
        "catalog_v1_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogV1Id_1.catalogV1IdSchema;
        }))))
      ],
      presentAtAllLocations: [
        "present_at_all_locations",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      presentAtLocationIds: [
        "present_at_location_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      absentAtLocationIds: [
        "absent_at_location_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      itemData: ["item_data", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogItem_1.catalogItemSchema;
      }))],
      categoryData: ["category_data", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogCategory_1.catalogCategorySchema;
      }))],
      itemVariationData: [
        "item_variation_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogItemVariation_1.catalogItemVariationSchema;
        }))
      ],
      taxData: ["tax_data", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogTax_1.catalogTaxSchema;
      }))],
      discountData: ["discount_data", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogDiscount_1.catalogDiscountSchema;
      }))],
      modifierListData: [
        "modifier_list_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogModifierList_1.catalogModifierListSchema;
        }))
      ],
      modifierData: ["modifier_data", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogModifier_1.catalogModifierSchema;
      }))],
      timePeriodData: [
        "time_period_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogTimePeriod_1.catalogTimePeriodSchema;
        }))
      ],
      productSetData: [
        "product_set_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogProductSet_1.catalogProductSetSchema;
        }))
      ],
      pricingRuleData: [
        "pricing_rule_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogPricingRule_1.catalogPricingRuleSchema;
        }))
      ],
      imageData: ["image_data", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogImage_1.catalogImageSchema;
      }))],
      measurementUnitData: [
        "measurement_unit_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogMeasurementUnit_1.catalogMeasurementUnitSchema;
        }))
      ],
      subscriptionPlanData: [
        "subscription_plan_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogSubscriptionPlan_1.catalogSubscriptionPlanSchema;
        }))
      ],
      itemOptionData: [
        "item_option_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogItemOption_1.catalogItemOptionSchema;
        }))
      ],
      itemOptionValueData: [
        "item_option_value_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogItemOptionValue_1.catalogItemOptionValueSchema;
        }))
      ],
      customAttributeDefinitionData: [
        "custom_attribute_definition_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogCustomAttributeDefinition_1.catalogCustomAttributeDefinitionSchema;
        }))
      ],
      quickAmountsSettingsData: [
        "quick_amounts_settings_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogQuickAmountsSettings_1.catalogQuickAmountsSettingsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveCatalogObjectsResponse.js
var require_batchRetrieveCatalogObjectsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveCatalogObjectsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveCatalogObjectsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.batchRetrieveCatalogObjectsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      objects: ["objects", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      })))],
      relatedObjects: [
        "related_objects",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogObjectBatch.js
var require_catalogObjectBatch = __commonJS({
  "node_modules/square/dist/cjs/models/catalogObjectBatch.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogObjectBatchSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    exports.catalogObjectBatchSchema = (0, schema_1.object)({
      objects: ["objects", (0, schema_1.array)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/batchUpsertCatalogObjectsRequest.js
var require_batchUpsertCatalogObjectsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/batchUpsertCatalogObjectsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchUpsertCatalogObjectsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObjectBatch_1 = require_catalogObjectBatch();
    exports.batchUpsertCatalogObjectsRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      batches: ["batches", (0, schema_1.array)((0, schema_1.lazy)(function() {
        return catalogObjectBatch_1.catalogObjectBatchSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogIdMapping.js
var require_catalogIdMapping = __commonJS({
  "node_modules/square/dist/cjs/models/catalogIdMapping.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogIdMappingSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogIdMappingSchema = (0, schema_1.object)({
      clientObjectId: ["client_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      objectId: ["object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/batchUpsertCatalogObjectsResponse.js
var require_batchUpsertCatalogObjectsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/batchUpsertCatalogObjectsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchUpsertCatalogObjectsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogIdMapping_1 = require_catalogIdMapping();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.batchUpsertCatalogObjectsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      objects: ["objects", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      })))],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      idMappings: [
        "id_mappings",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogIdMapping_1.catalogIdMappingSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogInfoResponseLimits.js
var require_catalogInfoResponseLimits = __commonJS({
  "node_modules/square/dist/cjs/models/catalogInfoResponseLimits.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogInfoResponseLimitsSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogInfoResponseLimitsSchema = (0, schema_1.object)({
      batchUpsertMaxObjectsPerBatch: [
        "batch_upsert_max_objects_per_batch",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      batchUpsertMaxTotalObjects: [
        "batch_upsert_max_total_objects",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      batchRetrieveMaxObjectIds: [
        "batch_retrieve_max_object_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      searchMaxPageLimit: ["search_max_page_limit", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      batchDeleteMaxObjectIds: [
        "batch_delete_max_object_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      updateItemTaxesMaxItemIds: [
        "update_item_taxes_max_item_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      updateItemTaxesMaxTaxesToEnable: [
        "update_item_taxes_max_taxes_to_enable",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      updateItemTaxesMaxTaxesToDisable: [
        "update_item_taxes_max_taxes_to_disable",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      updateItemModifierListsMaxItemIds: [
        "update_item_modifier_lists_max_item_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      updateItemModifierListsMaxModifierListsToEnable: [
        "update_item_modifier_lists_max_modifier_lists_to_enable",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      updateItemModifierListsMaxModifierListsToDisable: [
        "update_item_modifier_lists_max_modifier_lists_to_disable",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/standardUnitDescription.js
var require_standardUnitDescription = __commonJS({
  "node_modules/square/dist/cjs/models/standardUnitDescription.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.standardUnitDescriptionSchema = void 0;
    var schema_1 = require_schema2();
    var measurementUnit_1 = require_measurementUnit();
    exports.standardUnitDescriptionSchema = (0, schema_1.object)({
      unit: ["unit", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return measurementUnit_1.measurementUnitSchema;
      }))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      abbreviation: ["abbreviation", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/standardUnitDescriptionGroup.js
var require_standardUnitDescriptionGroup = __commonJS({
  "node_modules/square/dist/cjs/models/standardUnitDescriptionGroup.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.standardUnitDescriptionGroupSchema = void 0;
    var schema_1 = require_schema2();
    var standardUnitDescription_1 = require_standardUnitDescription();
    exports.standardUnitDescriptionGroupSchema = (0, schema_1.object)({
      standardUnitDescriptions: [
        "standard_unit_descriptions",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return standardUnitDescription_1.standardUnitDescriptionSchema;
        }))))
      ],
      languageCode: ["language_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogInfoResponse.js
var require_catalogInfoResponse = __commonJS({
  "node_modules/square/dist/cjs/models/catalogInfoResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogInfoResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogInfoResponseLimits_1 = require_catalogInfoResponseLimits();
    var error_1 = require_error();
    var standardUnitDescriptionGroup_1 = require_standardUnitDescriptionGroup();
    exports.catalogInfoResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      limits: ["limits", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogInfoResponseLimits_1.catalogInfoResponseLimitsSchema;
      }))],
      standardUnitDescriptionGroup: [
        "standard_unit_description_group",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return standardUnitDescriptionGroup_1.standardUnitDescriptionGroupSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createCatalogImageRequest.js
var require_createCatalogImageRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createCatalogImageRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCatalogImageRequestSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    exports.createCatalogImageRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      objectId: ["object_id", (0, schema_1.optional)((0, schema_1.string)())],
      image: ["image", (0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      })],
      isPrimary: ["is_primary", (0, schema_1.optional)((0, schema_1.boolean)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createCatalogImageResponse.js
var require_createCatalogImageResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createCatalogImageResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCatalogImageResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.createCatalogImageResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      image: ["image", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteCatalogObjectResponse.js
var require_deleteCatalogObjectResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteCatalogObjectResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteCatalogObjectResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteCatalogObjectResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      deletedObjectIds: ["deleted_object_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      deletedAt: ["deleted_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listCatalogResponse.js
var require_listCatalogResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCatalogResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCatalogResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.listCatalogResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      objects: ["objects", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveCatalogObjectResponse.js
var require_retrieveCatalogObjectResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCatalogObjectResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCatalogObjectResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.retrieveCatalogObjectResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      object: ["object", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      }))],
      relatedObjects: [
        "related_objects",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/range.js
var require_range = __commonJS({
  "node_modules/square/dist/cjs/models/range.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.rangeSchema = void 0;
    var schema_1 = require_schema2();
    exports.rangeSchema = (0, schema_1.object)({
      min: ["min", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      max: ["max", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/customAttributeFilter.js
var require_customAttributeFilter = __commonJS({
  "node_modules/square/dist/cjs/models/customAttributeFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customAttributeFilterSchema = void 0;
    var schema_1 = require_schema2();
    var range_1 = require_range();
    exports.customAttributeFilterSchema = (0, schema_1.object)({
      customAttributeDefinitionId: [
        "custom_attribute_definition_id",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      key: ["key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      stringFilter: ["string_filter", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      numberFilter: ["number_filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return range_1.rangeSchema;
      }))],
      selectionUidsFilter: [
        "selection_uids_filter",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      boolFilter: ["bool_filter", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchCatalogItemsRequest.js
var require_searchCatalogItemsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchCatalogItemsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchCatalogItemsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeFilter_1 = require_customAttributeFilter();
    exports.searchCatalogItemsRequestSchema = (0, schema_1.object)({
      textFilter: ["text_filter", (0, schema_1.optional)((0, schema_1.string)())],
      categoryIds: ["category_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      stockLevels: ["stock_levels", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      enabledLocationIds: ["enabled_location_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      sortOrder: ["sort_order", (0, schema_1.optional)((0, schema_1.string)())],
      productTypes: ["product_types", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      customAttributeFilters: [
        "custom_attribute_filters",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttributeFilter_1.customAttributeFilterSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/searchCatalogItemsResponse.js
var require_searchCatalogItemsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchCatalogItemsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchCatalogItemsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.searchCatalogItemsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      items: ["items", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      matchedVariationIds: ["matched_variation_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryExact.js
var require_catalogQueryExact = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryExact.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryExactSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryExactSchema = (0, schema_1.object)({
      attributeName: ["attribute_name", (0, schema_1.string)()],
      attributeValue: ["attribute_value", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryItemsForItemOptions.js
var require_catalogQueryItemsForItemOptions = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryItemsForItemOptions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryItemsForItemOptionsSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryItemsForItemOptionsSchema = (0, schema_1.object)({ itemOptionIds: ["item_option_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))] });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryItemsForModifierList.js
var require_catalogQueryItemsForModifierList = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryItemsForModifierList.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryItemsForModifierListSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryItemsForModifierListSchema = (0, schema_1.object)({ modifierListIds: ["modifier_list_ids", (0, schema_1.array)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryItemsForTax.js
var require_catalogQueryItemsForTax = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryItemsForTax.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryItemsForTaxSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryItemsForTaxSchema = (0, schema_1.object)({ taxIds: ["tax_ids", (0, schema_1.array)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryItemVariationsForItemOptionValues.js
var require_catalogQueryItemVariationsForItemOptionValues = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryItemVariationsForItemOptionValues.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryItemVariationsForItemOptionValuesSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryItemVariationsForItemOptionValuesSchema = (0, schema_1.object)({
      itemOptionValueIds: [
        "item_option_value_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryPrefix.js
var require_catalogQueryPrefix = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryPrefix.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryPrefixSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryPrefixSchema = (0, schema_1.object)({
      attributeName: ["attribute_name", (0, schema_1.string)()],
      attributePrefix: ["attribute_prefix", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryRange.js
var require_catalogQueryRange = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryRange.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryRangeSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryRangeSchema = (0, schema_1.object)({
      attributeName: ["attribute_name", (0, schema_1.string)()],
      attributeMinValue: ["attribute_min_value", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      attributeMaxValue: ["attribute_max_value", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQuerySet.js
var require_catalogQuerySet = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQuerySet.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQuerySetSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQuerySetSchema = (0, schema_1.object)({
      attributeName: ["attribute_name", (0, schema_1.string)()],
      attributeValues: ["attribute_values", (0, schema_1.array)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQuerySortedAttribute.js
var require_catalogQuerySortedAttribute = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQuerySortedAttribute.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQuerySortedAttributeSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQuerySortedAttributeSchema = (0, schema_1.object)({
      attributeName: ["attribute_name", (0, schema_1.string)()],
      initialAttributeValue: [
        "initial_attribute_value",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      sortOrder: ["sort_order", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQueryText.js
var require_catalogQueryText = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQueryText.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQueryTextSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogQueryTextSchema = (0, schema_1.object)({
      keywords: ["keywords", (0, schema_1.array)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/catalogQuery.js
var require_catalogQuery = __commonJS({
  "node_modules/square/dist/cjs/models/catalogQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogQuerySchema = void 0;
    var schema_1 = require_schema2();
    var catalogQueryExact_1 = require_catalogQueryExact();
    var catalogQueryItemsForItemOptions_1 = require_catalogQueryItemsForItemOptions();
    var catalogQueryItemsForModifierList_1 = require_catalogQueryItemsForModifierList();
    var catalogQueryItemsForTax_1 = require_catalogQueryItemsForTax();
    var catalogQueryItemVariationsForItemOptionValues_1 = require_catalogQueryItemVariationsForItemOptionValues();
    var catalogQueryPrefix_1 = require_catalogQueryPrefix();
    var catalogQueryRange_1 = require_catalogQueryRange();
    var catalogQuerySet_1 = require_catalogQuerySet();
    var catalogQuerySortedAttribute_1 = require_catalogQuerySortedAttribute();
    var catalogQueryText_1 = require_catalogQueryText();
    exports.catalogQuerySchema = (0, schema_1.object)({
      sortedAttributeQuery: [
        "sorted_attribute_query",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogQuerySortedAttribute_1.catalogQuerySortedAttributeSchema;
        }))
      ],
      exactQuery: ["exact_query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogQueryExact_1.catalogQueryExactSchema;
      }))],
      setQuery: ["set_query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogQuerySet_1.catalogQuerySetSchema;
      }))],
      prefixQuery: ["prefix_query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogQueryPrefix_1.catalogQueryPrefixSchema;
      }))],
      rangeQuery: ["range_query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogQueryRange_1.catalogQueryRangeSchema;
      }))],
      textQuery: ["text_query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogQueryText_1.catalogQueryTextSchema;
      }))],
      itemsForTaxQuery: [
        "items_for_tax_query",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogQueryItemsForTax_1.catalogQueryItemsForTaxSchema;
        }))
      ],
      itemsForModifierListQuery: [
        "items_for_modifier_list_query",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogQueryItemsForModifierList_1.catalogQueryItemsForModifierListSchema;
        }))
      ],
      itemsForItemOptionsQuery: [
        "items_for_item_options_query",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogQueryItemsForItemOptions_1.catalogQueryItemsForItemOptionsSchema;
        }))
      ],
      itemVariationsForItemOptionValuesQuery: [
        "item_variations_for_item_option_values_query",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogQueryItemVariationsForItemOptionValues_1.catalogQueryItemVariationsForItemOptionValuesSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/searchCatalogObjectsRequest.js
var require_searchCatalogObjectsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchCatalogObjectsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchCatalogObjectsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var catalogQuery_1 = require_catalogQuery();
    exports.searchCatalogObjectsRequestSchema = (0, schema_1.object)({
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      objectTypes: ["object_types", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      includeDeletedObjects: ["include_deleted_objects", (0, schema_1.optional)((0, schema_1.boolean)())],
      includeRelatedObjects: ["include_related_objects", (0, schema_1.optional)((0, schema_1.boolean)())],
      beginTime: ["begin_time", (0, schema_1.optional)((0, schema_1.string)())],
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogQuery_1.catalogQuerySchema;
      }))],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchCatalogObjectsResponse.js
var require_searchCatalogObjectsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchCatalogObjectsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchCatalogObjectsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.searchCatalogObjectsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      objects: ["objects", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      })))],
      relatedObjects: [
        "related_objects",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        })))
      ],
      latestTime: ["latest_time", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/updateCatalogImageRequest.js
var require_updateCatalogImageRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateCatalogImageRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCatalogImageRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.updateCatalogImageRequestSchema = (0, schema_1.object)({ idempotencyKey: ["idempotency_key", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/updateCatalogImageResponse.js
var require_updateCatalogImageResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateCatalogImageResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCatalogImageResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.updateCatalogImageResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      image: ["image", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateItemModifierListsRequest.js
var require_updateItemModifierListsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateItemModifierListsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateItemModifierListsRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.updateItemModifierListsRequestSchema = (0, schema_1.object)({
      itemIds: ["item_ids", (0, schema_1.array)((0, schema_1.string)())],
      modifierListsToEnable: [
        "modifier_lists_to_enable",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      modifierListsToDisable: [
        "modifier_lists_to_disable",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/updateItemModifierListsResponse.js
var require_updateItemModifierListsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateItemModifierListsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateItemModifierListsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.updateItemModifierListsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/updateItemTaxesRequest.js
var require_updateItemTaxesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateItemTaxesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateItemTaxesRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.updateItemTaxesRequestSchema = (0, schema_1.object)({
      itemIds: ["item_ids", (0, schema_1.array)((0, schema_1.string)())],
      taxesToEnable: ["taxes_to_enable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      taxesToDisable: ["taxes_to_disable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateItemTaxesResponse.js
var require_updateItemTaxesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateItemTaxesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateItemTaxesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.updateItemTaxesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertCatalogObjectRequest.js
var require_upsertCatalogObjectRequest = __commonJS({
  "node_modules/square/dist/cjs/models/upsertCatalogObjectRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertCatalogObjectRequestSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    exports.upsertCatalogObjectRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      object: ["object", (0, schema_1.lazy)(function() {
        return catalogObject_1.catalogObjectSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertCatalogObjectResponse.js
var require_upsertCatalogObjectResponse = __commonJS({
  "node_modules/square/dist/cjs/models/upsertCatalogObjectResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertCatalogObjectResponseSchema = void 0;
    var schema_1 = require_schema2();
    var catalogIdMapping_1 = require_catalogIdMapping();
    var catalogObject_1 = require_catalogObject();
    var error_1 = require_error();
    exports.upsertCatalogObjectResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      catalogObject: [
        "catalog_object",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        }))
      ],
      idMappings: [
        "id_mappings",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogIdMapping_1.catalogIdMappingSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/api/catalogApi.js
var require_catalogApi = __commonJS({
  "node_modules/square/dist/cjs/api/catalogApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CatalogApi = void 0;
    var tslib_1 = require_tslib();
    var batchDeleteCatalogObjectsRequest_1 = require_batchDeleteCatalogObjectsRequest();
    var batchDeleteCatalogObjectsResponse_1 = require_batchDeleteCatalogObjectsResponse();
    var batchRetrieveCatalogObjectsRequest_1 = require_batchRetrieveCatalogObjectsRequest();
    var batchRetrieveCatalogObjectsResponse_1 = require_batchRetrieveCatalogObjectsResponse();
    var batchUpsertCatalogObjectsRequest_1 = require_batchUpsertCatalogObjectsRequest();
    var batchUpsertCatalogObjectsResponse_1 = require_batchUpsertCatalogObjectsResponse();
    var catalogInfoResponse_1 = require_catalogInfoResponse();
    var createCatalogImageRequest_1 = require_createCatalogImageRequest();
    var createCatalogImageResponse_1 = require_createCatalogImageResponse();
    var deleteCatalogObjectResponse_1 = require_deleteCatalogObjectResponse();
    var listCatalogResponse_1 = require_listCatalogResponse();
    var retrieveCatalogObjectResponse_1 = require_retrieveCatalogObjectResponse();
    var searchCatalogItemsRequest_1 = require_searchCatalogItemsRequest();
    var searchCatalogItemsResponse_1 = require_searchCatalogItemsResponse();
    var searchCatalogObjectsRequest_1 = require_searchCatalogObjectsRequest();
    var searchCatalogObjectsResponse_1 = require_searchCatalogObjectsResponse();
    var updateCatalogImageRequest_1 = require_updateCatalogImageRequest();
    var updateCatalogImageResponse_1 = require_updateCatalogImageResponse();
    var updateItemModifierListsRequest_1 = require_updateItemModifierListsRequest();
    var updateItemModifierListsResponse_1 = require_updateItemModifierListsResponse();
    var updateItemTaxesRequest_1 = require_updateItemTaxesRequest();
    var updateItemTaxesResponse_1 = require_updateItemTaxesResponse();
    var upsertCatalogObjectRequest_1 = require_upsertCatalogObjectRequest();
    var upsertCatalogObjectResponse_1 = require_upsertCatalogObjectResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CatalogApi = function(_super) {
      tslib_1.__extends(CatalogApi2, _super);
      function CatalogApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CatalogApi2.prototype.batchDeleteCatalogObjects = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/batch-delete");
            mapped = req.prepareArgs({
              body: [body2, batchDeleteCatalogObjectsRequest_1.batchDeleteCatalogObjectsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(batchDeleteCatalogObjectsResponse_1.batchDeleteCatalogObjectsResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.batchRetrieveCatalogObjects = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/batch-retrieve");
            mapped = req.prepareArgs({
              body: [body2, batchRetrieveCatalogObjectsRequest_1.batchRetrieveCatalogObjectsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(batchRetrieveCatalogObjectsResponse_1.batchRetrieveCatalogObjectsResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.batchUpsertCatalogObjects = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/batch-upsert");
            mapped = req.prepareArgs({
              body: [body2, batchUpsertCatalogObjectsRequest_1.batchUpsertCatalogObjectsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(batchUpsertCatalogObjectsResponse_1.batchUpsertCatalogObjectsResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.createCatalogImage = function(request2, imageFile, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/images");
            mapped = req.prepareArgs({
              request: [request2, (0, schema_1.optional)(createCatalogImageRequest_1.createCatalogImageRequestSchema)]
            });
            req.formData({
              request: JSON.stringify(mapped.request),
              image_file: imageFile
            });
            return [2, req.callAsJson(createCatalogImageResponse_1.createCatalogImageResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.updateCatalogImage = function(imageId, request2, imageFile, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              imageId: [imageId, (0, schema_1.string)()],
              request: [request2, (0, schema_1.optional)(updateCatalogImageRequest_1.updateCatalogImageRequestSchema)]
            });
            req.formData({
              request: JSON.stringify(mapped.request),
              image_file: imageFile
            });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/catalog/images/", ""], ["/v2/catalog/images/", ""])), mapped.imageId);
            return [2, req.callAsJson(updateCatalogImageResponse_1.updateCatalogImageResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.catalogInfo = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/catalog/info");
            return [2, req.callAsJson(catalogInfoResponse_1.catalogInfoResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.listCatalog = function(cursor, types, catalogVersion, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/catalog/list");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              types: [types, (0, schema_1.optional)((0, schema_1.string)())],
              catalogVersion: [catalogVersion, (0, schema_1.optional)((0, schema_1.bigint)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("types", mapped.types);
            req.query("catalog_version", mapped.catalogVersion);
            return [2, req.callAsJson(listCatalogResponse_1.listCatalogResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.upsertCatalogObject = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/object");
            mapped = req.prepareArgs({
              body: [body2, upsertCatalogObjectRequest_1.upsertCatalogObjectRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(upsertCatalogObjectResponse_1.upsertCatalogObjectResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.deleteCatalogObject = function(objectId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ objectId: [objectId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/catalog/object/", ""], ["/v2/catalog/object/", ""])), mapped.objectId);
            return [2, req.callAsJson(deleteCatalogObjectResponse_1.deleteCatalogObjectResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.retrieveCatalogObject = function(objectId, includeRelatedObjects, catalogVersion, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              objectId: [objectId, (0, schema_1.string)()],
              includeRelatedObjects: [includeRelatedObjects, (0, schema_1.optional)((0, schema_1.boolean)())],
              catalogVersion: [catalogVersion, (0, schema_1.optional)((0, schema_1.bigint)())]
            });
            req.query("include_related_objects", mapped.includeRelatedObjects);
            req.query("catalog_version", mapped.catalogVersion);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/catalog/object/", ""], ["/v2/catalog/object/", ""])), mapped.objectId);
            return [2, req.callAsJson(retrieveCatalogObjectResponse_1.retrieveCatalogObjectResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.searchCatalogObjects = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/search");
            mapped = req.prepareArgs({
              body: [body2, searchCatalogObjectsRequest_1.searchCatalogObjectsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchCatalogObjectsResponse_1.searchCatalogObjectsResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.searchCatalogItems = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/search-catalog-items");
            mapped = req.prepareArgs({
              body: [body2, searchCatalogItemsRequest_1.searchCatalogItemsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchCatalogItemsResponse_1.searchCatalogItemsResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.updateItemModifierLists = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/update-item-modifier-lists");
            mapped = req.prepareArgs({
              body: [body2, updateItemModifierListsRequest_1.updateItemModifierListsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(updateItemModifierListsResponse_1.updateItemModifierListsResponseSchema, requestOptions)];
          });
        });
      };
      CatalogApi2.prototype.updateItemTaxes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/catalog/update-item-taxes");
            mapped = req.prepareArgs({
              body: [body2, updateItemTaxesRequest_1.updateItemTaxesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(updateItemTaxesResponse_1.updateItemTaxesResponseSchema, requestOptions)];
          });
        });
      };
      return CatalogApi2;
    }(baseApi_1.BaseApi);
    exports.CatalogApi = CatalogApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
  }
});

// node_modules/square/dist/cjs/models/chargeRequestAdditionalRecipient.js
var require_chargeRequestAdditionalRecipient = __commonJS({
  "node_modules/square/dist/cjs/models/chargeRequestAdditionalRecipient.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.chargeRequestAdditionalRecipientSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.chargeRequestAdditionalRecipientSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.string)()],
      description: ["description", (0, schema_1.string)()],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/fulfillmentRecipient.js
var require_fulfillmentRecipient = __commonJS({
  "node_modules/square/dist/cjs/models/fulfillmentRecipient.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fulfillmentRecipientSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    exports.fulfillmentRecipientSchema = (0, schema_1.object)({
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      displayName: ["display_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/fulfillmentDeliveryDetails.js
var require_fulfillmentDeliveryDetails = __commonJS({
  "node_modules/square/dist/cjs/models/fulfillmentDeliveryDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fulfillmentDeliveryDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var fulfillmentRecipient_1 = require_fulfillmentRecipient();
    exports.fulfillmentDeliveryDetailsSchema = (0, schema_1.object)({
      recipient: ["recipient", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return fulfillmentRecipient_1.fulfillmentRecipientSchema;
      }))],
      scheduleType: ["schedule_type", (0, schema_1.optional)((0, schema_1.string)())],
      placedAt: ["placed_at", (0, schema_1.optional)((0, schema_1.string)())],
      deliverAt: ["deliver_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      prepTimeDuration: ["prep_time_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      deliveryWindowDuration: [
        "delivery_window_duration",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      completedAt: ["completed_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      inProgressAt: ["in_progress_at", (0, schema_1.optional)((0, schema_1.string)())],
      rejectedAt: ["rejected_at", (0, schema_1.optional)((0, schema_1.string)())],
      readyAt: ["ready_at", (0, schema_1.optional)((0, schema_1.string)())],
      deliveredAt: ["delivered_at", (0, schema_1.optional)((0, schema_1.string)())],
      canceledAt: ["canceled_at", (0, schema_1.optional)((0, schema_1.string)())],
      cancelReason: ["cancel_reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      courierPickupAt: ["courier_pickup_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      courierPickupWindowDuration: [
        "courier_pickup_window_duration",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      isNoContactDelivery: [
        "is_no_contact_delivery",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      dropoffNotes: ["dropoff_notes", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      courierProviderName: [
        "courier_provider_name",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      courierSupportPhoneNumber: [
        "courier_support_phone_number",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      squareDeliveryId: ["square_delivery_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      externalDeliveryId: ["external_delivery_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      managedDelivery: ["managed_delivery", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/fulfillmentFulfillmentEntry.js
var require_fulfillmentFulfillmentEntry = __commonJS({
  "node_modules/square/dist/cjs/models/fulfillmentFulfillmentEntry.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fulfillmentFulfillmentEntrySchema = void 0;
    var schema_1 = require_schema2();
    exports.fulfillmentFulfillmentEntrySchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      lineItemUid: ["line_item_uid", (0, schema_1.string)()],
      quantity: ["quantity", (0, schema_1.string)()],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/fulfillmentPickupDetailsCurbsidePickupDetails.js
var require_fulfillmentPickupDetailsCurbsidePickupDetails = __commonJS({
  "node_modules/square/dist/cjs/models/fulfillmentPickupDetailsCurbsidePickupDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fulfillmentPickupDetailsCurbsidePickupDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.fulfillmentPickupDetailsCurbsidePickupDetailsSchema = (0, schema_1.object)({
      curbsideDetails: ["curbside_details", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerArrivedAt: ["buyer_arrived_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/fulfillmentPickupDetails.js
var require_fulfillmentPickupDetails = __commonJS({
  "node_modules/square/dist/cjs/models/fulfillmentPickupDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fulfillmentPickupDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var fulfillmentPickupDetailsCurbsidePickupDetails_1 = require_fulfillmentPickupDetailsCurbsidePickupDetails();
    var fulfillmentRecipient_1 = require_fulfillmentRecipient();
    exports.fulfillmentPickupDetailsSchema = (0, schema_1.object)({
      recipient: ["recipient", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return fulfillmentRecipient_1.fulfillmentRecipientSchema;
      }))],
      expiresAt: ["expires_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      autoCompleteDuration: [
        "auto_complete_duration",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      scheduleType: ["schedule_type", (0, schema_1.optional)((0, schema_1.string)())],
      pickupAt: ["pickup_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      pickupWindowDuration: [
        "pickup_window_duration",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      prepTimeDuration: ["prep_time_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      placedAt: ["placed_at", (0, schema_1.optional)((0, schema_1.string)())],
      acceptedAt: ["accepted_at", (0, schema_1.optional)((0, schema_1.string)())],
      rejectedAt: ["rejected_at", (0, schema_1.optional)((0, schema_1.string)())],
      readyAt: ["ready_at", (0, schema_1.optional)((0, schema_1.string)())],
      expiredAt: ["expired_at", (0, schema_1.optional)((0, schema_1.string)())],
      pickedUpAt: ["picked_up_at", (0, schema_1.optional)((0, schema_1.string)())],
      canceledAt: ["canceled_at", (0, schema_1.optional)((0, schema_1.string)())],
      cancelReason: ["cancel_reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      isCurbsidePickup: ["is_curbside_pickup", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      curbsidePickupDetails: [
        "curbside_pickup_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return fulfillmentPickupDetailsCurbsidePickupDetails_1.fulfillmentPickupDetailsCurbsidePickupDetailsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/fulfillmentShipmentDetails.js
var require_fulfillmentShipmentDetails = __commonJS({
  "node_modules/square/dist/cjs/models/fulfillmentShipmentDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fulfillmentShipmentDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var fulfillmentRecipient_1 = require_fulfillmentRecipient();
    exports.fulfillmentShipmentDetailsSchema = (0, schema_1.object)({
      recipient: ["recipient", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return fulfillmentRecipient_1.fulfillmentRecipientSchema;
      }))],
      carrier: ["carrier", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      shippingNote: ["shipping_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      shippingType: ["shipping_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      trackingNumber: ["tracking_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      trackingUrl: ["tracking_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      placedAt: ["placed_at", (0, schema_1.optional)((0, schema_1.string)())],
      inProgressAt: ["in_progress_at", (0, schema_1.optional)((0, schema_1.string)())],
      packagedAt: ["packaged_at", (0, schema_1.optional)((0, schema_1.string)())],
      expectedShippedAt: ["expected_shipped_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      shippedAt: ["shipped_at", (0, schema_1.optional)((0, schema_1.string)())],
      canceledAt: ["canceled_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      cancelReason: ["cancel_reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      failedAt: ["failed_at", (0, schema_1.optional)((0, schema_1.string)())],
      failureReason: ["failure_reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/fulfillment.js
var require_fulfillment = __commonJS({
  "node_modules/square/dist/cjs/models/fulfillment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.fulfillmentSchema = void 0;
    var schema_1 = require_schema2();
    var fulfillmentDeliveryDetails_1 = require_fulfillmentDeliveryDetails();
    var fulfillmentFulfillmentEntry_1 = require_fulfillmentFulfillmentEntry();
    var fulfillmentPickupDetails_1 = require_fulfillmentPickupDetails();
    var fulfillmentShipmentDetails_1 = require_fulfillmentShipmentDetails();
    exports.fulfillmentSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      lineItemApplication: ["line_item_application", (0, schema_1.optional)((0, schema_1.string)())],
      entries: [
        "entries",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return fulfillmentFulfillmentEntry_1.fulfillmentFulfillmentEntrySchema;
        })))
      ],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
      pickupDetails: [
        "pickup_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return fulfillmentPickupDetails_1.fulfillmentPickupDetailsSchema;
        }))
      ],
      shipmentDetails: [
        "shipment_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return fulfillmentShipmentDetails_1.fulfillmentShipmentDetailsSchema;
        }))
      ],
      deliveryDetails: [
        "delivery_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return fulfillmentDeliveryDetails_1.fulfillmentDeliveryDetailsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemAppliedDiscount.js
var require_orderLineItemAppliedDiscount = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemAppliedDiscount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemAppliedDiscountSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderLineItemAppliedDiscountSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      discountUid: ["discount_uid", (0, schema_1.string)()],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemAppliedServiceCharge.js
var require_orderLineItemAppliedServiceCharge = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemAppliedServiceCharge.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemAppliedServiceChargeSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderLineItemAppliedServiceChargeSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      serviceChargeUid: ["service_charge_uid", (0, schema_1.string)()],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemAppliedTax.js
var require_orderLineItemAppliedTax = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemAppliedTax.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemAppliedTaxSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderLineItemAppliedTaxSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      taxUid: ["tax_uid", (0, schema_1.string)()],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemModifier.js
var require_orderLineItemModifier = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemModifier.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemModifierSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderLineItemModifierSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      basePriceMoney: ["base_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalPriceMoney: ["total_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemPricingBlocklistsBlockedDiscount.js
var require_orderLineItemPricingBlocklistsBlockedDiscount = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemPricingBlocklistsBlockedDiscount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemPricingBlocklistsBlockedDiscountSchema = void 0;
    var schema_1 = require_schema2();
    exports.orderLineItemPricingBlocklistsBlockedDiscountSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      discountUid: ["discount_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      discountCatalogObjectId: [
        "discount_catalog_object_id",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemPricingBlocklistsBlockedTax.js
var require_orderLineItemPricingBlocklistsBlockedTax = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemPricingBlocklistsBlockedTax.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemPricingBlocklistsBlockedTaxSchema = void 0;
    var schema_1 = require_schema2();
    exports.orderLineItemPricingBlocklistsBlockedTaxSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      taxUid: ["tax_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      taxCatalogObjectId: ["tax_catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemPricingBlocklists.js
var require_orderLineItemPricingBlocklists = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemPricingBlocklists.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemPricingBlocklistsSchema = void 0;
    var schema_1 = require_schema2();
    var orderLineItemPricingBlocklistsBlockedDiscount_1 = require_orderLineItemPricingBlocklistsBlockedDiscount();
    var orderLineItemPricingBlocklistsBlockedTax_1 = require_orderLineItemPricingBlocklistsBlockedTax();
    exports.orderLineItemPricingBlocklistsSchema = (0, schema_1.object)({
      blockedDiscounts: [
        "blocked_discounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemPricingBlocklistsBlockedDiscount_1.orderLineItemPricingBlocklistsBlockedDiscountSchema;
        }))))
      ],
      blockedTaxes: [
        "blocked_taxes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemPricingBlocklistsBlockedTax_1.orderLineItemPricingBlocklistsBlockedTaxSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/orderQuantityUnit.js
var require_orderQuantityUnit = __commonJS({
  "node_modules/square/dist/cjs/models/orderQuantityUnit.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderQuantityUnitSchema = void 0;
    var schema_1 = require_schema2();
    var measurementUnit_1 = require_measurementUnit();
    exports.orderQuantityUnitSchema = (0, schema_1.object)({
      measurementUnit: [
        "measurement_unit",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return measurementUnit_1.measurementUnitSchema;
        }))
      ],
      precision: ["precision", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItem.js
var require_orderLineItem = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItem.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    var orderLineItemAppliedDiscount_1 = require_orderLineItemAppliedDiscount();
    var orderLineItemAppliedServiceCharge_1 = require_orderLineItemAppliedServiceCharge();
    var orderLineItemAppliedTax_1 = require_orderLineItemAppliedTax();
    var orderLineItemModifier_1 = require_orderLineItemModifier();
    var orderLineItemPricingBlocklists_1 = require_orderLineItemPricingBlocklists();
    var orderQuantityUnit_1 = require_orderQuantityUnit();
    exports.orderLineItemSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.string)()],
      quantityUnit: [
        "quantity_unit",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderQuantityUnit_1.orderQuantityUnitSchema;
        }))
      ],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      variationName: ["variation_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      itemType: ["item_type", (0, schema_1.optional)((0, schema_1.string)())],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
      modifiers: [
        "modifiers",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemModifier_1.orderLineItemModifierSchema;
        }))))
      ],
      appliedTaxes: [
        "applied_taxes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedTax_1.orderLineItemAppliedTaxSchema;
        }))))
      ],
      appliedDiscounts: [
        "applied_discounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedDiscount_1.orderLineItemAppliedDiscountSchema;
        }))))
      ],
      appliedServiceCharges: [
        "applied_service_charges",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedServiceCharge_1.orderLineItemAppliedServiceChargeSchema;
        }))))
      ],
      basePriceMoney: ["base_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      variationTotalPriceMoney: [
        "variation_total_price_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      grossSalesMoney: ["gross_sales_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalTaxMoney: ["total_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalDiscountMoney: [
        "total_discount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      pricingBlocklists: [
        "pricing_blocklists",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderLineItemPricingBlocklists_1.orderLineItemPricingBlocklistsSchema;
        }))
      ],
      totalServiceChargeMoney: [
        "total_service_charge_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemDiscount.js
var require_orderLineItemDiscount = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemDiscount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemDiscountSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderLineItemDiscountSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
      scope: ["scope", (0, schema_1.optional)((0, schema_1.string)())],
      rewardIds: ["reward_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      pricingRuleId: ["pricing_rule_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/orderLineItemTax.js
var require_orderLineItemTax = __commonJS({
  "node_modules/square/dist/cjs/models/orderLineItemTax.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderLineItemTaxSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderLineItemTaxSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      scope: ["scope", (0, schema_1.optional)((0, schema_1.string)())],
      autoApplied: ["auto_applied", (0, schema_1.optional)((0, schema_1.boolean)())]
    });
  }
});

// node_modules/square/dist/cjs/models/orderMoneyAmounts.js
var require_orderMoneyAmounts = __commonJS({
  "node_modules/square/dist/cjs/models/orderMoneyAmounts.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderMoneyAmountsSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderMoneyAmountsSchema = (0, schema_1.object)({
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      taxMoney: ["tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      discountMoney: ["discount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      tipMoney: ["tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      serviceChargeMoney: [
        "service_charge_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/orderPricingOptions.js
var require_orderPricingOptions = __commonJS({
  "node_modules/square/dist/cjs/models/orderPricingOptions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderPricingOptionsSchema = void 0;
    var schema_1 = require_schema2();
    exports.orderPricingOptionsSchema = (0, schema_1.object)({
      autoApplyDiscounts: ["auto_apply_discounts", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      autoApplyTaxes: ["auto_apply_taxes", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderReturnDiscount.js
var require_orderReturnDiscount = __commonJS({
  "node_modules/square/dist/cjs/models/orderReturnDiscount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderReturnDiscountSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderReturnDiscountSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceDiscountUid: ["source_discount_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      scope: ["scope", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/orderReturnLineItemModifier.js
var require_orderReturnLineItemModifier = __commonJS({
  "node_modules/square/dist/cjs/models/orderReturnLineItemModifier.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderReturnLineItemModifierSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderReturnLineItemModifierSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceModifierUid: ["source_modifier_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      basePriceMoney: ["base_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalPriceMoney: ["total_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      quantity: ["quantity", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderReturnLineItem.js
var require_orderReturnLineItem = __commonJS({
  "node_modules/square/dist/cjs/models/orderReturnLineItem.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderReturnLineItemSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    var orderLineItemAppliedDiscount_1 = require_orderLineItemAppliedDiscount();
    var orderLineItemAppliedServiceCharge_1 = require_orderLineItemAppliedServiceCharge();
    var orderLineItemAppliedTax_1 = require_orderLineItemAppliedTax();
    var orderQuantityUnit_1 = require_orderQuantityUnit();
    var orderReturnLineItemModifier_1 = require_orderReturnLineItemModifier();
    exports.orderReturnLineItemSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceLineItemUid: ["source_line_item_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.string)()],
      quantityUnit: [
        "quantity_unit",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderQuantityUnit_1.orderQuantityUnitSchema;
        }))
      ],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      variationName: ["variation_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      itemType: ["item_type", (0, schema_1.optional)((0, schema_1.string)())],
      returnModifiers: [
        "return_modifiers",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderReturnLineItemModifier_1.orderReturnLineItemModifierSchema;
        }))))
      ],
      appliedTaxes: [
        "applied_taxes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedTax_1.orderLineItemAppliedTaxSchema;
        }))))
      ],
      appliedDiscounts: [
        "applied_discounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedDiscount_1.orderLineItemAppliedDiscountSchema;
        }))))
      ],
      basePriceMoney: ["base_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      variationTotalPriceMoney: [
        "variation_total_price_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      grossReturnMoney: ["gross_return_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalTaxMoney: ["total_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalDiscountMoney: [
        "total_discount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      appliedServiceCharges: [
        "applied_service_charges",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedServiceCharge_1.orderLineItemAppliedServiceChargeSchema;
        }))))
      ],
      totalServiceChargeMoney: [
        "total_service_charge_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/orderReturnServiceCharge.js
var require_orderReturnServiceCharge = __commonJS({
  "node_modules/square/dist/cjs/models/orderReturnServiceCharge.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderReturnServiceChargeSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    var orderLineItemAppliedTax_1 = require_orderLineItemAppliedTax();
    exports.orderReturnServiceChargeSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceServiceChargeUid: [
        "source_service_charge_uid",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalTaxMoney: ["total_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      calculationPhase: ["calculation_phase", (0, schema_1.optional)((0, schema_1.string)())],
      taxable: ["taxable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      appliedTaxes: [
        "applied_taxes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedTax_1.orderLineItemAppliedTaxSchema;
        }))))
      ],
      treatmentType: ["treatment_type", (0, schema_1.optional)((0, schema_1.string)())],
      scope: ["scope", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/orderReturnTax.js
var require_orderReturnTax = __commonJS({
  "node_modules/square/dist/cjs/models/orderReturnTax.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderReturnTaxSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderReturnTaxSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceTaxUid: ["source_tax_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      scope: ["scope", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/orderRoundingAdjustment.js
var require_orderRoundingAdjustment = __commonJS({
  "node_modules/square/dist/cjs/models/orderRoundingAdjustment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderRoundingAdjustmentSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.orderRoundingAdjustmentSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/orderReturn.js
var require_orderReturn = __commonJS({
  "node_modules/square/dist/cjs/models/orderReturn.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderReturnSchema = void 0;
    var schema_1 = require_schema2();
    var orderMoneyAmounts_1 = require_orderMoneyAmounts();
    var orderReturnDiscount_1 = require_orderReturnDiscount();
    var orderReturnLineItem_1 = require_orderReturnLineItem();
    var orderReturnServiceCharge_1 = require_orderReturnServiceCharge();
    var orderReturnTax_1 = require_orderReturnTax();
    var orderRoundingAdjustment_1 = require_orderRoundingAdjustment();
    exports.orderReturnSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceOrderId: ["source_order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      returnLineItems: [
        "return_line_items",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderReturnLineItem_1.orderReturnLineItemSchema;
        }))))
      ],
      returnServiceCharges: [
        "return_service_charges",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderReturnServiceCharge_1.orderReturnServiceChargeSchema;
        })))
      ],
      returnTaxes: [
        "return_taxes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderReturnTax_1.orderReturnTaxSchema;
        }))))
      ],
      returnDiscounts: [
        "return_discounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderReturnDiscount_1.orderReturnDiscountSchema;
        }))))
      ],
      roundingAdjustment: [
        "rounding_adjustment",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderRoundingAdjustment_1.orderRoundingAdjustmentSchema;
        }))
      ],
      returnAmounts: [
        "return_amounts",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderMoneyAmounts_1.orderMoneyAmountsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/orderReward.js
var require_orderReward = __commonJS({
  "node_modules/square/dist/cjs/models/orderReward.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderRewardSchema = void 0;
    var schema_1 = require_schema2();
    exports.orderRewardSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      rewardTierId: ["reward_tier_id", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/orderServiceCharge.js
var require_orderServiceCharge = __commonJS({
  "node_modules/square/dist/cjs/models/orderServiceCharge.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderServiceChargeSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    var orderLineItemAppliedTax_1 = require_orderLineItemAppliedTax();
    exports.orderServiceChargeSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      percentage: ["percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalTaxMoney: ["total_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      calculationPhase: ["calculation_phase", (0, schema_1.optional)((0, schema_1.string)())],
      taxable: ["taxable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      appliedTaxes: [
        "applied_taxes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemAppliedTax_1.orderLineItemAppliedTaxSchema;
        }))))
      ],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      treatmentType: ["treatment_type", (0, schema_1.optional)((0, schema_1.string)())],
      scope: ["scope", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/orderSource.js
var require_orderSource = __commonJS({
  "node_modules/square/dist/cjs/models/orderSource.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderSourceSchema = void 0;
    var schema_1 = require_schema2();
    exports.orderSourceSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/additionalRecipient.js
var require_additionalRecipient = __commonJS({
  "node_modules/square/dist/cjs/models/additionalRecipient.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.additionalRecipientSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.additionalRecipientSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.string)()],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      receivableId: ["receivable_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/refund.js
var require_refund = __commonJS({
  "node_modules/square/dist/cjs/models/refund.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.refundSchema = void 0;
    var schema_1 = require_schema2();
    var additionalRecipient_1 = require_additionalRecipient();
    var money_1 = require_money();
    exports.refundSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      locationId: ["location_id", (0, schema_1.string)()],
      transactionId: ["transaction_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      tenderId: ["tender_id", (0, schema_1.string)()],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      reason: ["reason", (0, schema_1.string)()],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      status: ["status", (0, schema_1.string)()],
      processingFeeMoney: [
        "processing_fee_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      additionalRecipients: [
        "additional_recipients",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return additionalRecipient_1.additionalRecipientSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/tenderCardDetails.js
var require_tenderCardDetails = __commonJS({
  "node_modules/square/dist/cjs/models/tenderCardDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.tenderCardDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    exports.tenderCardDetailsSchema = (0, schema_1.object)({
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      card: ["card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))],
      entryMethod: ["entry_method", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/tenderCashDetails.js
var require_tenderCashDetails = __commonJS({
  "node_modules/square/dist/cjs/models/tenderCashDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.tenderCashDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.tenderCashDetailsSchema = (0, schema_1.object)({
      buyerTenderedMoney: [
        "buyer_tendered_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      changeBackMoney: ["change_back_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/tender.js
var require_tender = __commonJS({
  "node_modules/square/dist/cjs/models/tender.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.tenderSchema = void 0;
    var schema_1 = require_schema2();
    var additionalRecipient_1 = require_additionalRecipient();
    var money_1 = require_money();
    var tenderCardDetails_1 = require_tenderCardDetails();
    var tenderCashDetails_1 = require_tenderCashDetails();
    exports.tenderSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      transactionId: ["transaction_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      tipMoney: ["tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      processingFeeMoney: [
        "processing_fee_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.string)()],
      cardDetails: ["card_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return tenderCardDetails_1.tenderCardDetailsSchema;
      }))],
      cashDetails: ["cash_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return tenderCashDetails_1.tenderCashDetailsSchema;
      }))],
      additionalRecipients: [
        "additional_recipients",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return additionalRecipient_1.additionalRecipientSchema;
        }))))
      ],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/order.js
var require_order = __commonJS({
  "node_modules/square/dist/cjs/models/order.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderSchema = void 0;
    var schema_1 = require_schema2();
    var fulfillment_1 = require_fulfillment();
    var money_1 = require_money();
    var orderLineItem_1 = require_orderLineItem();
    var orderLineItemDiscount_1 = require_orderLineItemDiscount();
    var orderLineItemTax_1 = require_orderLineItemTax();
    var orderMoneyAmounts_1 = require_orderMoneyAmounts();
    var orderPricingOptions_1 = require_orderPricingOptions();
    var orderReturn_1 = require_orderReturn();
    var orderReward_1 = require_orderReward();
    var orderRoundingAdjustment_1 = require_orderRoundingAdjustment();
    var orderServiceCharge_1 = require_orderServiceCharge();
    var orderSource_1 = require_orderSource();
    var refund_1 = require_refund();
    var tender_1 = require_tender();
    exports.orderSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.string)()],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      source: ["source", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return orderSource_1.orderSourceSchema;
      }))],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      lineItems: [
        "line_items",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItem_1.orderLineItemSchema;
        }))))
      ],
      taxes: [
        "taxes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemTax_1.orderLineItemTaxSchema;
        }))))
      ],
      discounts: [
        "discounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderLineItemDiscount_1.orderLineItemDiscountSchema;
        }))))
      ],
      serviceCharges: [
        "service_charges",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderServiceCharge_1.orderServiceChargeSchema;
        }))))
      ],
      fulfillments: [
        "fulfillments",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return fulfillment_1.fulfillmentSchema;
        }))))
      ],
      returns: ["returns", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return orderReturn_1.orderReturnSchema;
      })))],
      returnAmounts: [
        "return_amounts",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderMoneyAmounts_1.orderMoneyAmountsSchema;
        }))
      ],
      netAmounts: ["net_amounts", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return orderMoneyAmounts_1.orderMoneyAmountsSchema;
      }))],
      roundingAdjustment: [
        "rounding_adjustment",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderRoundingAdjustment_1.orderRoundingAdjustmentSchema;
        }))
      ],
      tenders: ["tenders", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return tender_1.tenderSchema;
      })))],
      refunds: ["refunds", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return refund_1.refundSchema;
      })))],
      metadata: ["metadata", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.dict)((0, schema_1.string)())))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      closedAt: ["closed_at", (0, schema_1.optional)((0, schema_1.string)())],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalTaxMoney: ["total_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalDiscountMoney: [
        "total_discount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      totalTipMoney: ["total_tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalServiceChargeMoney: [
        "total_service_charge_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      ticketName: ["ticket_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      pricingOptions: [
        "pricing_options",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return orderPricingOptions_1.orderPricingOptionsSchema;
        }))
      ],
      rewards: ["rewards", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return orderReward_1.orderRewardSchema;
      })))],
      netAmountDueMoney: [
        "net_amount_due_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createOrderRequest.js
var require_createOrderRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createOrderRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createOrderRequestSchema = void 0;
    var schema_1 = require_schema2();
    var order_1 = require_order();
    exports.createOrderRequestSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createCheckoutRequest.js
var require_createCheckoutRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createCheckoutRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCheckoutRequestSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var chargeRequestAdditionalRecipient_1 = require_chargeRequestAdditionalRecipient();
    var createOrderRequest_1 = require_createOrderRequest();
    exports.createCheckoutRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      order: ["order", (0, schema_1.lazy)(function() {
        return createOrderRequest_1.createOrderRequestSchema;
      })],
      askForShippingAddress: ["ask_for_shipping_address", (0, schema_1.optional)((0, schema_1.boolean)())],
      merchantSupportEmail: ["merchant_support_email", (0, schema_1.optional)((0, schema_1.string)())],
      prePopulateBuyerEmail: ["pre_populate_buyer_email", (0, schema_1.optional)((0, schema_1.string)())],
      prePopulateShippingAddress: [
        "pre_populate_shipping_address",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return address_1.addressSchema;
        }))
      ],
      redirectUrl: ["redirect_url", (0, schema_1.optional)((0, schema_1.string)())],
      additionalRecipients: [
        "additional_recipients",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return chargeRequestAdditionalRecipient_1.chargeRequestAdditionalRecipientSchema;
        })))
      ],
      note: ["note", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/checkout.js
var require_checkout = __commonJS({
  "node_modules/square/dist/cjs/models/checkout.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.checkoutSchema = void 0;
    var schema_1 = require_schema2();
    var additionalRecipient_1 = require_additionalRecipient();
    var address_1 = require_address();
    var order_1 = require_order();
    exports.checkoutSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      checkoutPageUrl: ["checkout_page_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      askForShippingAddress: [
        "ask_for_shipping_address",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      merchantSupportEmail: [
        "merchant_support_email",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      prePopulateBuyerEmail: [
        "pre_populate_buyer_email",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      prePopulateShippingAddress: [
        "pre_populate_shipping_address",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return address_1.addressSchema;
        }))
      ],
      redirectUrl: ["redirect_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      additionalRecipients: [
        "additional_recipients",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return additionalRecipient_1.additionalRecipientSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createCheckoutResponse.js
var require_createCheckoutResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createCheckoutResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCheckoutResponseSchema = void 0;
    var schema_1 = require_schema2();
    var checkout_1 = require_checkout();
    var error_1 = require_error();
    exports.createCheckoutResponseSchema = (0, schema_1.object)({
      checkout: ["checkout", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return checkout_1.checkoutSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/acceptedPaymentMethods.js
var require_acceptedPaymentMethods = __commonJS({
  "node_modules/square/dist/cjs/models/acceptedPaymentMethods.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.acceptedPaymentMethodsSchema = void 0;
    var schema_1 = require_schema2();
    exports.acceptedPaymentMethodsSchema = (0, schema_1.object)({
      applePay: ["apple_pay", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      googlePay: ["google_pay", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      cashAppPay: ["cash_app_pay", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      afterpayClearpay: ["afterpay_clearpay", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/customField.js
var require_customField = __commonJS({
  "node_modules/square/dist/cjs/models/customField.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customFieldSchema = void 0;
    var schema_1 = require_schema2();
    exports.customFieldSchema = (0, schema_1.object)({
      title: ["title", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/shippingFee.js
var require_shippingFee = __commonJS({
  "node_modules/square/dist/cjs/models/shippingFee.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.shippingFeeSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.shippingFeeSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      charge: ["charge", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/checkoutOptions.js
var require_checkoutOptions = __commonJS({
  "node_modules/square/dist/cjs/models/checkoutOptions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.checkoutOptionsSchema = void 0;
    var schema_1 = require_schema2();
    var acceptedPaymentMethods_1 = require_acceptedPaymentMethods();
    var customField_1 = require_customField();
    var money_1 = require_money();
    var shippingFee_1 = require_shippingFee();
    exports.checkoutOptionsSchema = (0, schema_1.object)({
      allowTipping: ["allow_tipping", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      customFields: [
        "custom_fields",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customField_1.customFieldSchema;
        }))))
      ],
      subscriptionPlanId: ["subscription_plan_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      redirectUrl: ["redirect_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      merchantSupportEmail: [
        "merchant_support_email",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      askForShippingAddress: [
        "ask_for_shipping_address",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      acceptedPaymentMethods: [
        "accepted_payment_methods",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return acceptedPaymentMethods_1.acceptedPaymentMethodsSchema;
        }))
      ],
      appFeeMoney: ["app_fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      shippingFee: ["shipping_fee", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shippingFee_1.shippingFeeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/prePopulatedData.js
var require_prePopulatedData = __commonJS({
  "node_modules/square/dist/cjs/models/prePopulatedData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.prePopulatedDataSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    exports.prePopulatedDataSchema = (0, schema_1.object)({
      buyerEmail: ["buyer_email", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerPhoneNumber: ["buyer_phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerAddress: ["buyer_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/quickPay.js
var require_quickPay = __commonJS({
  "node_modules/square/dist/cjs/models/quickPay.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.quickPaySchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.quickPaySchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.string)()],
      priceMoney: ["price_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      locationId: ["location_id", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/createPaymentLinkRequest.js
var require_createPaymentLinkRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createPaymentLinkRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createPaymentLinkRequestSchema = void 0;
    var schema_1 = require_schema2();
    var checkoutOptions_1 = require_checkoutOptions();
    var order_1 = require_order();
    var prePopulatedData_1 = require_prePopulatedData();
    var quickPay_1 = require_quickPay();
    exports.createPaymentLinkRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      description: ["description", (0, schema_1.optional)((0, schema_1.string)())],
      quickPay: ["quick_pay", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return quickPay_1.quickPaySchema;
      }))],
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      checkoutOptions: [
        "checkout_options",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return checkoutOptions_1.checkoutOptionsSchema;
        }))
      ],
      prePopulatedData: [
        "pre_populated_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return prePopulatedData_1.prePopulatedDataSchema;
        }))
      ],
      paymentNote: ["payment_note", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentLink.js
var require_paymentLink = __commonJS({
  "node_modules/square/dist/cjs/models/paymentLink.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentLinkSchema = void 0;
    var schema_1 = require_schema2();
    var checkoutOptions_1 = require_checkoutOptions();
    var prePopulatedData_1 = require_prePopulatedData();
    exports.paymentLinkSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.number)()],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.string)())],
      checkoutOptions: [
        "checkout_options",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return checkoutOptions_1.checkoutOptionsSchema;
        }))
      ],
      prePopulatedData: [
        "pre_populated_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return prePopulatedData_1.prePopulatedDataSchema;
        }))
      ],
      url: ["url", (0, schema_1.optional)((0, schema_1.string)())],
      longUrl: ["long_url", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      paymentNote: ["payment_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentLinkRelatedResources.js
var require_paymentLinkRelatedResources = __commonJS({
  "node_modules/square/dist/cjs/models/paymentLinkRelatedResources.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentLinkRelatedResourcesSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObject_1 = require_catalogObject();
    var order_1 = require_order();
    exports.paymentLinkRelatedResourcesSchema = (0, schema_1.object)({
      orders: ["orders", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))))],
      subscriptionPlans: [
        "subscription_plans",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return catalogObject_1.catalogObjectSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createPaymentLinkResponse.js
var require_createPaymentLinkResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createPaymentLinkResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createPaymentLinkResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var paymentLink_1 = require_paymentLink();
    var paymentLinkRelatedResources_1 = require_paymentLinkRelatedResources();
    exports.createPaymentLinkResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      paymentLink: ["payment_link", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return paymentLink_1.paymentLinkSchema;
      }))],
      relatedResources: [
        "related_resources",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentLinkRelatedResources_1.paymentLinkRelatedResourcesSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/deletePaymentLinkResponse.js
var require_deletePaymentLinkResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deletePaymentLinkResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deletePaymentLinkResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deletePaymentLinkResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      cancelledOrderId: ["cancelled_order_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listPaymentLinksResponse.js
var require_listPaymentLinksResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listPaymentLinksResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listPaymentLinksResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var paymentLink_1 = require_paymentLink();
    exports.listPaymentLinksResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      paymentLinks: [
        "payment_links",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return paymentLink_1.paymentLinkSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrievePaymentLinkResponse.js
var require_retrievePaymentLinkResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrievePaymentLinkResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrievePaymentLinkResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var paymentLink_1 = require_paymentLink();
    exports.retrievePaymentLinkResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      paymentLink: ["payment_link", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return paymentLink_1.paymentLinkSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/updatePaymentLinkRequest.js
var require_updatePaymentLinkRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updatePaymentLinkRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updatePaymentLinkRequestSchema = void 0;
    var schema_1 = require_schema2();
    var paymentLink_1 = require_paymentLink();
    exports.updatePaymentLinkRequestSchema = (0, schema_1.object)({ paymentLink: ["payment_link", (0, schema_1.lazy)(function() {
      return paymentLink_1.paymentLinkSchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/updatePaymentLinkResponse.js
var require_updatePaymentLinkResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updatePaymentLinkResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updatePaymentLinkResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var paymentLink_1 = require_paymentLink();
    exports.updatePaymentLinkResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      paymentLink: ["payment_link", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return paymentLink_1.paymentLinkSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/checkoutApi.js
var require_checkoutApi = __commonJS({
  "node_modules/square/dist/cjs/api/checkoutApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CheckoutApi = void 0;
    var tslib_1 = require_tslib();
    var createCheckoutRequest_1 = require_createCheckoutRequest();
    var createCheckoutResponse_1 = require_createCheckoutResponse();
    var createPaymentLinkRequest_1 = require_createPaymentLinkRequest();
    var createPaymentLinkResponse_1 = require_createPaymentLinkResponse();
    var deletePaymentLinkResponse_1 = require_deletePaymentLinkResponse();
    var listPaymentLinksResponse_1 = require_listPaymentLinksResponse();
    var retrievePaymentLinkResponse_1 = require_retrievePaymentLinkResponse();
    var updatePaymentLinkRequest_1 = require_updatePaymentLinkRequest();
    var updatePaymentLinkResponse_1 = require_updatePaymentLinkResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CheckoutApi = function(_super) {
      tslib_1.__extends(CheckoutApi2, _super);
      function CheckoutApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CheckoutApi2.prototype.createCheckout = function(locationId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              body: [body2, createCheckoutRequest_1.createCheckoutRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/locations/", "/checkouts"], ["/v2/locations/", "/checkouts"])), mapped.locationId);
            req.deprecated("CheckoutApi.createCheckout");
            return [2, req.callAsJson(createCheckoutResponse_1.createCheckoutResponseSchema, requestOptions)];
          });
        });
      };
      CheckoutApi2.prototype.listPaymentLinks = function(cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/online-checkout/payment-links");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listPaymentLinksResponse_1.listPaymentLinksResponseSchema, requestOptions)];
          });
        });
      };
      CheckoutApi2.prototype.createPaymentLink = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/online-checkout/payment-links");
            mapped = req.prepareArgs({
              body: [body2, createPaymentLinkRequest_1.createPaymentLinkRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createPaymentLinkResponse_1.createPaymentLinkResponseSchema, requestOptions)];
          });
        });
      };
      CheckoutApi2.prototype.deletePaymentLink = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/online-checkout/payment-links/", ""], ["/v2/online-checkout/payment-links/", ""])), mapped.id);
            return [2, req.callAsJson(deletePaymentLinkResponse_1.deletePaymentLinkResponseSchema, requestOptions)];
          });
        });
      };
      CheckoutApi2.prototype.retrievePaymentLink = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/online-checkout/payment-links/", ""], ["/v2/online-checkout/payment-links/", ""])), mapped.id);
            return [2, req.callAsJson(retrievePaymentLinkResponse_1.retrievePaymentLinkResponseSchema, requestOptions)];
          });
        });
      };
      CheckoutApi2.prototype.updatePaymentLink = function(id, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              id: [id, (0, schema_1.string)()],
              body: [body2, updatePaymentLinkRequest_1.updatePaymentLinkRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/online-checkout/payment-links/", ""], ["/v2/online-checkout/payment-links/", ""])), mapped.id);
            return [2, req.callAsJson(updatePaymentLinkResponse_1.updatePaymentLinkResponseSchema, requestOptions)];
          });
        });
      };
      return CheckoutApi2;
    }(baseApi_1.BaseApi);
    exports.CheckoutApi = CheckoutApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest.js
var require_bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequestSchema = (0, schema_1.object)({
      customerId: ["customer_id", (0, schema_1.string)()],
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesRequest.js
var require_bulkUpsertCustomerCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertCustomerCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest_1 = require_bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest();
    exports.bulkUpsertCustomerCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequest_1.bulkUpsertCustomerCustomAttributesRequestCustomerCustomAttributeUpsertRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse.js
var require_bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponseSchema = (0, schema_1.object)({
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.string)())],
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesResponse.js
var require_bulkUpsertCustomerCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertCustomerCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertCustomerCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse_1 = require_bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse();
    var error_1 = require_error();
    exports.bulkUpsertCustomerCustomAttributesResponseSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponse_1.bulkUpsertCustomerCustomAttributesResponseCustomerCustomAttributeUpsertResponseSchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createCustomerCustomAttributeDefinitionRequest.js
var require_createCustomerCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.createCustomerCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createCustomerCustomAttributeDefinitionResponse.js
var require_createCustomerCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.createCustomerCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteCustomerCustomAttributeDefinitionResponse.js
var require_deleteCustomerCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteCustomerCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteCustomerCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteCustomerCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/deleteCustomerCustomAttributeResponse.js
var require_deleteCustomerCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteCustomerCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteCustomerCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteCustomerCustomAttributeResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listCustomerCustomAttributeDefinitionsResponse.js
var require_listCustomerCustomAttributeDefinitionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCustomerCustomAttributeDefinitionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCustomerCustomAttributeDefinitionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.listCustomerCustomAttributeDefinitionsResponseSchema = (0, schema_1.object)({
      customAttributeDefinitions: [
        "custom_attribute_definitions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listCustomerCustomAttributesResponse.js
var require_listCustomerCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCustomerCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCustomerCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.listCustomerCustomAttributesResponseSchema = (0, schema_1.object)({
      customAttributes: [
        "custom_attributes",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveCustomerCustomAttributeDefinitionResponse.js
var require_retrieveCustomerCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCustomerCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCustomerCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.retrieveCustomerCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveCustomerCustomAttributeResponse.js
var require_retrieveCustomerCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCustomerCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCustomerCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.retrieveCustomerCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateCustomerCustomAttributeDefinitionRequest.js
var require_updateCustomerCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateCustomerCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCustomerCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.updateCustomerCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateCustomerCustomAttributeDefinitionResponse.js
var require_updateCustomerCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateCustomerCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCustomerCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.updateCustomerCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertCustomerCustomAttributeRequest.js
var require_upsertCustomerCustomAttributeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/upsertCustomerCustomAttributeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertCustomerCustomAttributeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.upsertCustomerCustomAttributeRequestSchema = (0, schema_1.object)({
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertCustomerCustomAttributeResponse.js
var require_upsertCustomerCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/upsertCustomerCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertCustomerCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.upsertCustomerCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/customerCustomAttributesApi.js
var require_customerCustomAttributesApi = __commonJS({
  "node_modules/square/dist/cjs/api/customerCustomAttributesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CustomerCustomAttributesApi = void 0;
    var tslib_1 = require_tslib();
    var bulkUpsertCustomerCustomAttributesRequest_1 = require_bulkUpsertCustomerCustomAttributesRequest();
    var bulkUpsertCustomerCustomAttributesResponse_1 = require_bulkUpsertCustomerCustomAttributesResponse();
    var createCustomerCustomAttributeDefinitionRequest_1 = require_createCustomerCustomAttributeDefinitionRequest();
    var createCustomerCustomAttributeDefinitionResponse_1 = require_createCustomerCustomAttributeDefinitionResponse();
    var deleteCustomerCustomAttributeDefinitionResponse_1 = require_deleteCustomerCustomAttributeDefinitionResponse();
    var deleteCustomerCustomAttributeResponse_1 = require_deleteCustomerCustomAttributeResponse();
    var listCustomerCustomAttributeDefinitionsResponse_1 = require_listCustomerCustomAttributeDefinitionsResponse();
    var listCustomerCustomAttributesResponse_1 = require_listCustomerCustomAttributesResponse();
    var retrieveCustomerCustomAttributeDefinitionResponse_1 = require_retrieveCustomerCustomAttributeDefinitionResponse();
    var retrieveCustomerCustomAttributeResponse_1 = require_retrieveCustomerCustomAttributeResponse();
    var updateCustomerCustomAttributeDefinitionRequest_1 = require_updateCustomerCustomAttributeDefinitionRequest();
    var updateCustomerCustomAttributeDefinitionResponse_1 = require_updateCustomerCustomAttributeDefinitionResponse();
    var upsertCustomerCustomAttributeRequest_1 = require_upsertCustomerCustomAttributeRequest();
    var upsertCustomerCustomAttributeResponse_1 = require_upsertCustomerCustomAttributeResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CustomerCustomAttributesApi = function(_super) {
      tslib_1.__extends(CustomerCustomAttributesApi2, _super);
      function CustomerCustomAttributesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CustomerCustomAttributesApi2.prototype.listCustomerCustomAttributeDefinitions = function(limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/customers/custom-attribute-definitions");
            mapped = req.prepareArgs({
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listCustomerCustomAttributeDefinitionsResponse_1.listCustomerCustomAttributeDefinitionsResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.createCustomerCustomAttributeDefinition = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/customers/custom-attribute-definitions");
            mapped = req.prepareArgs({
              body: [body2, createCustomerCustomAttributeDefinitionRequest_1.createCustomerCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createCustomerCustomAttributeDefinitionResponse_1.createCustomerCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.deleteCustomerCustomAttributeDefinition = function(key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ key: [key2, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/customers/custom-attribute-definitions/", ""], ["/v2/customers/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(deleteCustomerCustomAttributeDefinitionResponse_1.deleteCustomerCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.retrieveCustomerCustomAttributeDefinition = function(key2, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/customers/custom-attribute-definitions/", ""], ["/v2/customers/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(retrieveCustomerCustomAttributeDefinitionResponse_1.retrieveCustomerCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.updateCustomerCustomAttributeDefinition = function(key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              body: [body2, updateCustomerCustomAttributeDefinitionRequest_1.updateCustomerCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/customers/custom-attribute-definitions/", ""], ["/v2/customers/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(updateCustomerCustomAttributeDefinitionResponse_1.updateCustomerCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.bulkUpsertCustomerCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/customers/custom-attributes/bulk-upsert");
            mapped = req.prepareArgs({
              body: [body2, bulkUpsertCustomerCustomAttributesRequest_1.bulkUpsertCustomerCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkUpsertCustomerCustomAttributesResponse_1.bulkUpsertCustomerCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.listCustomerCustomAttributes = function(customerId, limit, cursor, withDefinitions, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              withDefinitions: [withDefinitions, (0, schema_1.optional)((0, schema_1.boolean)())]
            });
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("with_definitions", mapped.withDefinitions);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/customers/", "/custom-attributes"], ["/v2/customers/", "/custom-attributes"])), mapped.customerId);
            return [2, req.callAsJson(listCustomerCustomAttributesResponse_1.listCustomerCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.deleteCustomerCustomAttribute = function(customerId, key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/customers/", "/custom-attributes/", ""], ["/v2/customers/", "/custom-attributes/", ""])), mapped.customerId, mapped.key);
            return [2, req.callAsJson(deleteCustomerCustomAttributeResponse_1.deleteCustomerCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.retrieveCustomerCustomAttribute = function(customerId, key2, withDefinition, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              withDefinition: [withDefinition, (0, schema_1.optional)((0, schema_1.boolean)())],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("with_definition", mapped.withDefinition);
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/customers/", "/custom-attributes/", ""], ["/v2/customers/", "/custom-attributes/", ""])), mapped.customerId, mapped.key);
            return [2, req.callAsJson(retrieveCustomerCustomAttributeResponse_1.retrieveCustomerCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      CustomerCustomAttributesApi2.prototype.upsertCustomerCustomAttribute = function(customerId, key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              body: [body2, upsertCustomerCustomAttributeRequest_1.upsertCustomerCustomAttributeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/customers/", "/custom-attributes/", ""], ["/v2/customers/", "/custom-attributes/", ""])), mapped.customerId, mapped.key);
            return [2, req.callAsJson(upsertCustomerCustomAttributeResponse_1.upsertCustomerCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      return CustomerCustomAttributesApi2;
    }(baseApi_1.BaseApi);
    exports.CustomerCustomAttributesApi = CustomerCustomAttributesApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
  }
});

// node_modules/square/dist/cjs/models/customerGroup.js
var require_customerGroup = __commonJS({
  "node_modules/square/dist/cjs/models/customerGroup.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerGroupSchema = void 0;
    var schema_1 = require_schema2();
    exports.customerGroupSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.string)()],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createCustomerGroupRequest.js
var require_createCustomerGroupRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerGroupRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerGroupRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customerGroup_1 = require_customerGroup();
    exports.createCustomerGroupRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      group: ["group", (0, schema_1.lazy)(function() {
        return customerGroup_1.customerGroupSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createCustomerGroupResponse.js
var require_createCustomerGroupResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerGroupResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerGroupResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customerGroup_1 = require_customerGroup();
    var error_1 = require_error();
    exports.createCustomerGroupResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      group: ["group", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerGroup_1.customerGroupSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteCustomerGroupResponse.js
var require_deleteCustomerGroupResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteCustomerGroupResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteCustomerGroupResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteCustomerGroupResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listCustomerGroupsResponse.js
var require_listCustomerGroupsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCustomerGroupsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCustomerGroupsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customerGroup_1 = require_customerGroup();
    var error_1 = require_error();
    exports.listCustomerGroupsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      groups: ["groups", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return customerGroup_1.customerGroupSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveCustomerGroupResponse.js
var require_retrieveCustomerGroupResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCustomerGroupResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCustomerGroupResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customerGroup_1 = require_customerGroup();
    var error_1 = require_error();
    exports.retrieveCustomerGroupResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      group: ["group", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerGroup_1.customerGroupSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateCustomerGroupRequest.js
var require_updateCustomerGroupRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateCustomerGroupRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCustomerGroupRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customerGroup_1 = require_customerGroup();
    exports.updateCustomerGroupRequestSchema = (0, schema_1.object)({ group: ["group", (0, schema_1.lazy)(function() {
      return customerGroup_1.customerGroupSchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/updateCustomerGroupResponse.js
var require_updateCustomerGroupResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateCustomerGroupResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCustomerGroupResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customerGroup_1 = require_customerGroup();
    var error_1 = require_error();
    exports.updateCustomerGroupResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      group: ["group", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerGroup_1.customerGroupSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/customerGroupsApi.js
var require_customerGroupsApi = __commonJS({
  "node_modules/square/dist/cjs/api/customerGroupsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CustomerGroupsApi = void 0;
    var tslib_1 = require_tslib();
    var createCustomerGroupRequest_1 = require_createCustomerGroupRequest();
    var createCustomerGroupResponse_1 = require_createCustomerGroupResponse();
    var deleteCustomerGroupResponse_1 = require_deleteCustomerGroupResponse();
    var listCustomerGroupsResponse_1 = require_listCustomerGroupsResponse();
    var retrieveCustomerGroupResponse_1 = require_retrieveCustomerGroupResponse();
    var updateCustomerGroupRequest_1 = require_updateCustomerGroupRequest();
    var updateCustomerGroupResponse_1 = require_updateCustomerGroupResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CustomerGroupsApi = function(_super) {
      tslib_1.__extends(CustomerGroupsApi2, _super);
      function CustomerGroupsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CustomerGroupsApi2.prototype.listCustomerGroups = function(cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/customers/groups");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listCustomerGroupsResponse_1.listCustomerGroupsResponseSchema, requestOptions)];
          });
        });
      };
      CustomerGroupsApi2.prototype.createCustomerGroup = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/customers/groups");
            mapped = req.prepareArgs({
              body: [body2, createCustomerGroupRequest_1.createCustomerGroupRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createCustomerGroupResponse_1.createCustomerGroupResponseSchema, requestOptions)];
          });
        });
      };
      CustomerGroupsApi2.prototype.deleteCustomerGroup = function(groupId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ groupId: [groupId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/customers/groups/", ""], ["/v2/customers/groups/", ""])), mapped.groupId);
            return [2, req.callAsJson(deleteCustomerGroupResponse_1.deleteCustomerGroupResponseSchema, requestOptions)];
          });
        });
      };
      CustomerGroupsApi2.prototype.retrieveCustomerGroup = function(groupId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ groupId: [groupId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/customers/groups/", ""], ["/v2/customers/groups/", ""])), mapped.groupId);
            return [2, req.callAsJson(retrieveCustomerGroupResponse_1.retrieveCustomerGroupResponseSchema, requestOptions)];
          });
        });
      };
      CustomerGroupsApi2.prototype.updateCustomerGroup = function(groupId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              groupId: [groupId, (0, schema_1.string)()],
              body: [body2, updateCustomerGroupRequest_1.updateCustomerGroupRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/customers/groups/", ""], ["/v2/customers/groups/", ""])), mapped.groupId);
            return [2, req.callAsJson(updateCustomerGroupResponse_1.updateCustomerGroupResponseSchema, requestOptions)];
          });
        });
      };
      return CustomerGroupsApi2;
    }(baseApi_1.BaseApi);
    exports.CustomerGroupsApi = CustomerGroupsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
  }
});

// node_modules/square/dist/cjs/models/addGroupToCustomerResponse.js
var require_addGroupToCustomerResponse = __commonJS({
  "node_modules/square/dist/cjs/models/addGroupToCustomerResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.addGroupToCustomerResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.addGroupToCustomerResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/createCustomerCardRequest.js
var require_createCustomerCardRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerCardRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerCardRequestSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    exports.createCustomerCardRequestSchema = (0, schema_1.object)({
      cardNonce: ["card_nonce", (0, schema_1.string)()],
      billingAddress: ["billing_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      cardholderName: ["cardholder_name", (0, schema_1.optional)((0, schema_1.string)())],
      verificationToken: ["verification_token", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createCustomerCardResponse.js
var require_createCustomerCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    var error_1 = require_error();
    exports.createCustomerCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      card: ["card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerTaxIds.js
var require_customerTaxIds = __commonJS({
  "node_modules/square/dist/cjs/models/customerTaxIds.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerTaxIdsSchema = void 0;
    var schema_1 = require_schema2();
    exports.customerTaxIdsSchema = (0, schema_1.object)({
      euVat: ["eu_vat", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/createCustomerRequest.js
var require_createCustomerRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerRequestSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var customerTaxIds_1 = require_customerTaxIds();
    exports.createCustomerRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      givenName: ["given_name", (0, schema_1.optional)((0, schema_1.string)())],
      familyName: ["family_name", (0, schema_1.optional)((0, schema_1.string)())],
      companyName: ["company_name", (0, schema_1.optional)((0, schema_1.string)())],
      nickname: ["nickname", (0, schema_1.optional)((0, schema_1.string)())],
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.string)())],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.string)())],
      note: ["note", (0, schema_1.optional)((0, schema_1.string)())],
      birthday: ["birthday", (0, schema_1.optional)((0, schema_1.string)())],
      taxIds: ["tax_ids", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTaxIds_1.customerTaxIdsSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerPreferences.js
var require_customerPreferences = __commonJS({
  "node_modules/square/dist/cjs/models/customerPreferences.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerPreferencesSchema = void 0;
    var schema_1 = require_schema2();
    exports.customerPreferencesSchema = (0, schema_1.object)({
      emailUnsubscribed: ["email_unsubscribed", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/customer.js
var require_customer = __commonJS({
  "node_modules/square/dist/cjs/models/customer.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var card_1 = require_card();
    var customerPreferences_1 = require_customerPreferences();
    var customerTaxIds_1 = require_customerTaxIds();
    exports.customerSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      cards: ["cards", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))))],
      givenName: ["given_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      familyName: ["family_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      nickname: ["nickname", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      companyName: ["company_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      birthday: ["birthday", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      preferences: ["preferences", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerPreferences_1.customerPreferencesSchema;
      }))],
      creationSource: ["creation_source", (0, schema_1.optional)((0, schema_1.string)())],
      groupIds: ["group_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      segmentIds: ["segment_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      version: ["version", (0, schema_1.optional)((0, schema_1.bigint)())],
      taxIds: ["tax_ids", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTaxIds_1.customerTaxIdsSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createCustomerResponse.js
var require_createCustomerResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createCustomerResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createCustomerResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customer_1 = require_customer();
    var error_1 = require_error();
    exports.createCustomerResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      customer: ["customer", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customer_1.customerSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteCustomerCardResponse.js
var require_deleteCustomerCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteCustomerCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteCustomerCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteCustomerCardResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/deleteCustomerResponse.js
var require_deleteCustomerResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteCustomerResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteCustomerResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteCustomerResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listCustomersResponse.js
var require_listCustomersResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCustomersResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCustomersResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customer_1 = require_customer();
    var error_1 = require_error();
    exports.listCustomersResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      customers: ["customers", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return customer_1.customerSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/removeGroupFromCustomerResponse.js
var require_removeGroupFromCustomerResponse = __commonJS({
  "node_modules/square/dist/cjs/models/removeGroupFromCustomerResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.removeGroupFromCustomerResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.removeGroupFromCustomerResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/retrieveCustomerResponse.js
var require_retrieveCustomerResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCustomerResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCustomerResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customer_1 = require_customer();
    var error_1 = require_error();
    exports.retrieveCustomerResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      customer: ["customer", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customer_1.customerSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerCreationSourceFilter.js
var require_customerCreationSourceFilter = __commonJS({
  "node_modules/square/dist/cjs/models/customerCreationSourceFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerCreationSourceFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.customerCreationSourceFilterSchema = (0, schema_1.object)({
      values: ["values", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      rule: ["rule", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/customerTextFilter.js
var require_customerTextFilter = __commonJS({
  "node_modules/square/dist/cjs/models/customerTextFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerTextFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.customerTextFilterSchema = (0, schema_1.object)({
      exact: ["exact", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      fuzzy: ["fuzzy", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerAddressFilter.js
var require_customerAddressFilter = __commonJS({
  "node_modules/square/dist/cjs/models/customerAddressFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerAddressFilterSchema = void 0;
    var schema_1 = require_schema2();
    var customerTextFilter_1 = require_customerTextFilter();
    exports.customerAddressFilterSchema = (0, schema_1.object)({
      postalCode: ["postal_code", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTextFilter_1.customerTextFilterSchema;
      }))],
      country: ["country", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/floatNumberRange.js
var require_floatNumberRange = __commonJS({
  "node_modules/square/dist/cjs/models/floatNumberRange.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.floatNumberRangeSchema = void 0;
    var schema_1 = require_schema2();
    exports.floatNumberRangeSchema = (0, schema_1.object)({
      startAt: ["start_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      endAt: ["end_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerCustomAttributeFilterValue.js
var require_customerCustomAttributeFilterValue = __commonJS({
  "node_modules/square/dist/cjs/models/customerCustomAttributeFilterValue.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerCustomAttributeFilterValueSchema = void 0;
    var schema_1 = require_schema2();
    var customerAddressFilter_1 = require_customerAddressFilter();
    var customerTextFilter_1 = require_customerTextFilter();
    var filterValue_1 = require_filterValue();
    var floatNumberRange_1 = require_floatNumberRange();
    var timeRange_1 = require_timeRange();
    exports.customerCustomAttributeFilterValueSchema = (0, schema_1.object)({
      email: ["email", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTextFilter_1.customerTextFilterSchema;
      }))],
      phone: ["phone", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTextFilter_1.customerTextFilterSchema;
      }))],
      text: ["text", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTextFilter_1.customerTextFilterSchema;
      }))],
      selection: ["selection", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return filterValue_1.filterValueSchema;
      }))],
      date: ["date", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      number: ["number", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return floatNumberRange_1.floatNumberRangeSchema;
      }))],
      mBoolean: ["boolean", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerAddressFilter_1.customerAddressFilterSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerCustomAttributeFilter.js
var require_customerCustomAttributeFilter = __commonJS({
  "node_modules/square/dist/cjs/models/customerCustomAttributeFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerCustomAttributeFilterSchema = void 0;
    var schema_1 = require_schema2();
    var customerCustomAttributeFilterValue_1 = require_customerCustomAttributeFilterValue();
    var timeRange_1 = require_timeRange();
    exports.customerCustomAttributeFilterSchema = (0, schema_1.object)({
      key: ["key", (0, schema_1.string)()],
      filter: [
        "filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customerCustomAttributeFilterValue_1.customerCustomAttributeFilterValueSchema;
        }))
      ],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerCustomAttributeFilters.js
var require_customerCustomAttributeFilters = __commonJS({
  "node_modules/square/dist/cjs/models/customerCustomAttributeFilters.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerCustomAttributeFiltersSchema = void 0;
    var schema_1 = require_schema2();
    var customerCustomAttributeFilter_1 = require_customerCustomAttributeFilter();
    exports.customerCustomAttributeFiltersSchema = (0, schema_1.object)({
      filters: [
        "filters",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customerCustomAttributeFilter_1.customerCustomAttributeFilterSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/customerFilter.js
var require_customerFilter = __commonJS({
  "node_modules/square/dist/cjs/models/customerFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerFilterSchema = void 0;
    var schema_1 = require_schema2();
    var customerCreationSourceFilter_1 = require_customerCreationSourceFilter();
    var customerCustomAttributeFilters_1 = require_customerCustomAttributeFilters();
    var customerTextFilter_1 = require_customerTextFilter();
    var filterValue_1 = require_filterValue();
    var timeRange_1 = require_timeRange();
    exports.customerFilterSchema = (0, schema_1.object)({
      creationSource: [
        "creation_source",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customerCreationSourceFilter_1.customerCreationSourceFilterSchema;
        }))
      ],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      emailAddress: [
        "email_address",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customerTextFilter_1.customerTextFilterSchema;
        }))
      ],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTextFilter_1.customerTextFilterSchema;
      }))],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTextFilter_1.customerTextFilterSchema;
      }))],
      groupIds: ["group_ids", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return filterValue_1.filterValueSchema;
      }))],
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customerCustomAttributeFilters_1.customerCustomAttributeFiltersSchema;
        }))
      ],
      segmentIds: ["segment_ids", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return filterValue_1.filterValueSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/customerSort.js
var require_customerSort = __commonJS({
  "node_modules/square/dist/cjs/models/customerSort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerSortSchema = void 0;
    var schema_1 = require_schema2();
    exports.customerSortSchema = (0, schema_1.object)({
      field: ["field", (0, schema_1.optional)((0, schema_1.string)())],
      order: ["order", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/customerQuery.js
var require_customerQuery = __commonJS({
  "node_modules/square/dist/cjs/models/customerQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerQuerySchema = void 0;
    var schema_1 = require_schema2();
    var customerFilter_1 = require_customerFilter();
    var customerSort_1 = require_customerSort();
    exports.customerQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerFilter_1.customerFilterSchema;
      }))],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerSort_1.customerSortSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchCustomersRequest.js
var require_searchCustomersRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchCustomersRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchCustomersRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customerQuery_1 = require_customerQuery();
    exports.searchCustomersRequestSchema = (0, schema_1.object)({
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.bigint)())],
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerQuery_1.customerQuerySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchCustomersResponse.js
var require_searchCustomersResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchCustomersResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchCustomersResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customer_1 = require_customer();
    var error_1 = require_error();
    exports.searchCustomersResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      customers: ["customers", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return customer_1.customerSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/updateCustomerRequest.js
var require_updateCustomerRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateCustomerRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCustomerRequestSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var customerTaxIds_1 = require_customerTaxIds();
    exports.updateCustomerRequestSchema = (0, schema_1.object)({
      givenName: ["given_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      familyName: ["family_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      companyName: ["company_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      nickname: ["nickname", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      birthday: ["birthday", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      version: ["version", (0, schema_1.optional)((0, schema_1.bigint)())],
      taxIds: ["tax_ids", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerTaxIds_1.customerTaxIdsSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateCustomerResponse.js
var require_updateCustomerResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateCustomerResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateCustomerResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customer_1 = require_customer();
    var error_1 = require_error();
    exports.updateCustomerResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      customer: ["customer", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customer_1.customerSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/customersApi.js
var require_customersApi = __commonJS({
  "node_modules/square/dist/cjs/api/customersApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CustomersApi = void 0;
    var tslib_1 = require_tslib();
    var addGroupToCustomerResponse_1 = require_addGroupToCustomerResponse();
    var createCustomerCardRequest_1 = require_createCustomerCardRequest();
    var createCustomerCardResponse_1 = require_createCustomerCardResponse();
    var createCustomerRequest_1 = require_createCustomerRequest();
    var createCustomerResponse_1 = require_createCustomerResponse();
    var deleteCustomerCardResponse_1 = require_deleteCustomerCardResponse();
    var deleteCustomerResponse_1 = require_deleteCustomerResponse();
    var listCustomersResponse_1 = require_listCustomersResponse();
    var removeGroupFromCustomerResponse_1 = require_removeGroupFromCustomerResponse();
    var retrieveCustomerResponse_1 = require_retrieveCustomerResponse();
    var searchCustomersRequest_1 = require_searchCustomersRequest();
    var searchCustomersResponse_1 = require_searchCustomersResponse();
    var updateCustomerRequest_1 = require_updateCustomerRequest();
    var updateCustomerResponse_1 = require_updateCustomerResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CustomersApi = function(_super) {
      tslib_1.__extends(CustomersApi2, _super);
      function CustomersApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CustomersApi2.prototype.listCustomers = function(cursor, limit, sortField, sortOrder, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/customers");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              sortField: [sortField, (0, schema_1.optional)((0, schema_1.string)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            req.query("sort_field", mapped.sortField);
            req.query("sort_order", mapped.sortOrder);
            return [2, req.callAsJson(listCustomersResponse_1.listCustomersResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.createCustomer = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/customers");
            mapped = req.prepareArgs({
              body: [body2, createCustomerRequest_1.createCustomerRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createCustomerResponse_1.createCustomerResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.searchCustomers = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/customers/search");
            mapped = req.prepareArgs({
              body: [body2, searchCustomersRequest_1.searchCustomersRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchCustomersResponse_1.searchCustomersResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.deleteCustomer = function(customerId, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.bigint)())]
            });
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/customers/", ""], ["/v2/customers/", ""])), mapped.customerId);
            return [2, req.callAsJson(deleteCustomerResponse_1.deleteCustomerResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.retrieveCustomer = function(customerId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ customerId: [customerId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/customers/", ""], ["/v2/customers/", ""])), mapped.customerId);
            return [2, req.callAsJson(retrieveCustomerResponse_1.retrieveCustomerResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.updateCustomer = function(customerId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              body: [body2, updateCustomerRequest_1.updateCustomerRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/customers/", ""], ["/v2/customers/", ""])), mapped.customerId);
            return [2, req.callAsJson(updateCustomerResponse_1.updateCustomerResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.createCustomerCard = function(customerId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              body: [body2, createCustomerCardRequest_1.createCustomerCardRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/customers/", "/cards"], ["/v2/customers/", "/cards"])), mapped.customerId);
            req.deprecated("CustomersApi.createCustomerCard");
            return [2, req.callAsJson(createCustomerCardResponse_1.createCustomerCardResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.deleteCustomerCard = function(customerId, cardId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              cardId: [cardId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/customers/", "/cards/", ""], ["/v2/customers/", "/cards/", ""])), mapped.customerId, mapped.cardId);
            req.deprecated("CustomersApi.deleteCustomerCard");
            return [2, req.callAsJson(deleteCustomerCardResponse_1.deleteCustomerCardResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.removeGroupFromCustomer = function(customerId, groupId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              groupId: [groupId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/customers/", "/groups/", ""], ["/v2/customers/", "/groups/", ""])), mapped.customerId, mapped.groupId);
            return [2, req.callAsJson(removeGroupFromCustomerResponse_1.removeGroupFromCustomerResponseSchema, requestOptions)];
          });
        });
      };
      CustomersApi2.prototype.addGroupToCustomer = function(customerId, groupId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              customerId: [customerId, (0, schema_1.string)()],
              groupId: [groupId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/customers/", "/groups/", ""], ["/v2/customers/", "/groups/", ""])), mapped.customerId, mapped.groupId);
            return [2, req.callAsJson(addGroupToCustomerResponse_1.addGroupToCustomerResponseSchema, requestOptions)];
          });
        });
      };
      return CustomersApi2;
    }(baseApi_1.BaseApi);
    exports.CustomersApi = CustomersApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
  }
});

// node_modules/square/dist/cjs/models/customerSegment.js
var require_customerSegment = __commonJS({
  "node_modules/square/dist/cjs/models/customerSegment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.customerSegmentSchema = void 0;
    var schema_1 = require_schema2();
    exports.customerSegmentSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.string)()],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listCustomerSegmentsResponse.js
var require_listCustomerSegmentsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listCustomerSegmentsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listCustomerSegmentsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customerSegment_1 = require_customerSegment();
    var error_1 = require_error();
    exports.listCustomerSegmentsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      segments: ["segments", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return customerSegment_1.customerSegmentSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveCustomerSegmentResponse.js
var require_retrieveCustomerSegmentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveCustomerSegmentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveCustomerSegmentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customerSegment_1 = require_customerSegment();
    var error_1 = require_error();
    exports.retrieveCustomerSegmentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      segment: ["segment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return customerSegment_1.customerSegmentSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/customerSegmentsApi.js
var require_customerSegmentsApi = __commonJS({
  "node_modules/square/dist/cjs/api/customerSegmentsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.CustomerSegmentsApi = void 0;
    var tslib_1 = require_tslib();
    var listCustomerSegmentsResponse_1 = require_listCustomerSegmentsResponse();
    var retrieveCustomerSegmentResponse_1 = require_retrieveCustomerSegmentResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var CustomerSegmentsApi = function(_super) {
      tslib_1.__extends(CustomerSegmentsApi2, _super);
      function CustomerSegmentsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      CustomerSegmentsApi2.prototype.listCustomerSegments = function(cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/customers/segments");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listCustomerSegmentsResponse_1.listCustomerSegmentsResponseSchema, requestOptions)];
          });
        });
      };
      CustomerSegmentsApi2.prototype.retrieveCustomerSegment = function(segmentId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ segmentId: [segmentId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/customers/segments/", ""], ["/v2/customers/segments/", ""])), mapped.segmentId);
            return [2, req.callAsJson(retrieveCustomerSegmentResponse_1.retrieveCustomerSegmentResponseSchema, requestOptions)];
          });
        });
      };
      return CustomerSegmentsApi2;
    }(baseApi_1.BaseApi);
    exports.CustomerSegmentsApi = CustomerSegmentsApi;
    var templateObject_1;
  }
});

// node_modules/square/dist/cjs/models/deviceCode.js
var require_deviceCode = __commonJS({
  "node_modules/square/dist/cjs/models/deviceCode.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deviceCodeSchema = void 0;
    var schema_1 = require_schema2();
    exports.deviceCodeSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      code: ["code", (0, schema_1.optional)((0, schema_1.string)())],
      deviceId: ["device_id", (0, schema_1.optional)((0, schema_1.string)())],
      productType: ["product_type", (0, schema_1.string)()],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      pairBy: ["pair_by", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      statusChangedAt: ["status_changed_at", (0, schema_1.optional)((0, schema_1.string)())],
      pairedAt: ["paired_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createDeviceCodeRequest.js
var require_createDeviceCodeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createDeviceCodeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createDeviceCodeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var deviceCode_1 = require_deviceCode();
    exports.createDeviceCodeRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      deviceCode: ["device_code", (0, schema_1.lazy)(function() {
        return deviceCode_1.deviceCodeSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createDeviceCodeResponse.js
var require_createDeviceCodeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createDeviceCodeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createDeviceCodeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var deviceCode_1 = require_deviceCode();
    var error_1 = require_error();
    exports.createDeviceCodeResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      deviceCode: ["device_code", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return deviceCode_1.deviceCodeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getDeviceCodeResponse.js
var require_getDeviceCodeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getDeviceCodeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getDeviceCodeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var deviceCode_1 = require_deviceCode();
    var error_1 = require_error();
    exports.getDeviceCodeResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      deviceCode: ["device_code", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return deviceCode_1.deviceCodeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listDeviceCodesResponse.js
var require_listDeviceCodesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listDeviceCodesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listDeviceCodesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var deviceCode_1 = require_deviceCode();
    var error_1 = require_error();
    exports.listDeviceCodesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      deviceCodes: [
        "device_codes",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return deviceCode_1.deviceCodeSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/devicesApi.js
var require_devicesApi = __commonJS({
  "node_modules/square/dist/cjs/api/devicesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.DevicesApi = void 0;
    var tslib_1 = require_tslib();
    var createDeviceCodeRequest_1 = require_createDeviceCodeRequest();
    var createDeviceCodeResponse_1 = require_createDeviceCodeResponse();
    var getDeviceCodeResponse_1 = require_getDeviceCodeResponse();
    var listDeviceCodesResponse_1 = require_listDeviceCodesResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var DevicesApi = function(_super) {
      tslib_1.__extends(DevicesApi2, _super);
      function DevicesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      DevicesApi2.prototype.listDeviceCodes = function(cursor, locationId, productType, status, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/devices/codes");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              productType: [productType, (0, schema_1.optional)((0, schema_1.string)())],
              status: [status, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("location_id", mapped.locationId);
            req.query("product_type", mapped.productType);
            req.query("status", mapped.status);
            return [2, req.callAsJson(listDeviceCodesResponse_1.listDeviceCodesResponseSchema, requestOptions)];
          });
        });
      };
      DevicesApi2.prototype.createDeviceCode = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/devices/codes");
            mapped = req.prepareArgs({
              body: [body2, createDeviceCodeRequest_1.createDeviceCodeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createDeviceCodeResponse_1.createDeviceCodeResponseSchema, requestOptions)];
          });
        });
      };
      DevicesApi2.prototype.getDeviceCode = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/devices/codes/", ""], ["/v2/devices/codes/", ""])), mapped.id);
            return [2, req.callAsJson(getDeviceCodeResponse_1.getDeviceCodeResponseSchema, requestOptions)];
          });
        });
      };
      return DevicesApi2;
    }(baseApi_1.BaseApi);
    exports.DevicesApi = DevicesApi;
    var templateObject_1;
  }
});

// node_modules/square/dist/cjs/models/disputedPayment.js
var require_disputedPayment = __commonJS({
  "node_modules/square/dist/cjs/models/disputedPayment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.disputedPaymentSchema = void 0;
    var schema_1 = require_schema2();
    exports.disputedPaymentSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/dispute.js
var require_dispute = __commonJS({
  "node_modules/square/dist/cjs/models/dispute.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.disputeSchema = void 0;
    var schema_1 = require_schema2();
    var disputedPayment_1 = require_disputedPayment();
    var money_1 = require_money();
    exports.disputeSchema = (0, schema_1.object)({
      disputeId: ["dispute_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      reason: ["reason", (0, schema_1.optional)((0, schema_1.string)())],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      dueAt: ["due_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      disputedPayment: [
        "disputed_payment",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return disputedPayment_1.disputedPaymentSchema;
        }))
      ],
      evidenceIds: ["evidence_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      cardBrand: ["card_brand", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      brandDisputeId: ["brand_dispute_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      reportedDate: ["reported_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      reportedAt: ["reported_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/acceptDisputeResponse.js
var require_acceptDisputeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/acceptDisputeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.acceptDisputeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var dispute_1 = require_dispute();
    var error_1 = require_error();
    exports.acceptDisputeResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      dispute: ["dispute", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return dispute_1.disputeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createDisputeEvidenceFileRequest.js
var require_createDisputeEvidenceFileRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createDisputeEvidenceFileRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createDisputeEvidenceFileRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.createDisputeEvidenceFileRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      evidenceType: ["evidence_type", (0, schema_1.optional)((0, schema_1.string)())],
      contentType: ["content_type", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/disputeEvidenceFile.js
var require_disputeEvidenceFile = __commonJS({
  "node_modules/square/dist/cjs/models/disputeEvidenceFile.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.disputeEvidenceFileSchema = void 0;
    var schema_1 = require_schema2();
    exports.disputeEvidenceFileSchema = (0, schema_1.object)({
      filename: ["filename", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      filetype: ["filetype", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/disputeEvidence.js
var require_disputeEvidence = __commonJS({
  "node_modules/square/dist/cjs/models/disputeEvidence.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.disputeEvidenceSchema = void 0;
    var schema_1 = require_schema2();
    var disputeEvidenceFile_1 = require_disputeEvidenceFile();
    exports.disputeEvidenceSchema = (0, schema_1.object)({
      evidenceId: ["evidence_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      disputeId: ["dispute_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      evidenceFile: [
        "evidence_file",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return disputeEvidenceFile_1.disputeEvidenceFileSchema;
        }))
      ],
      evidenceText: ["evidence_text", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      uploadedAt: ["uploaded_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      evidenceType: ["evidence_type", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createDisputeEvidenceFileResponse.js
var require_createDisputeEvidenceFileResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createDisputeEvidenceFileResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createDisputeEvidenceFileResponseSchema = void 0;
    var schema_1 = require_schema2();
    var disputeEvidence_1 = require_disputeEvidence();
    var error_1 = require_error();
    exports.createDisputeEvidenceFileResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      evidence: ["evidence", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return disputeEvidence_1.disputeEvidenceSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createDisputeEvidenceTextRequest.js
var require_createDisputeEvidenceTextRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createDisputeEvidenceTextRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createDisputeEvidenceTextRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.createDisputeEvidenceTextRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      evidenceType: ["evidence_type", (0, schema_1.optional)((0, schema_1.string)())],
      evidenceText: ["evidence_text", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/createDisputeEvidenceTextResponse.js
var require_createDisputeEvidenceTextResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createDisputeEvidenceTextResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createDisputeEvidenceTextResponseSchema = void 0;
    var schema_1 = require_schema2();
    var disputeEvidence_1 = require_disputeEvidence();
    var error_1 = require_error();
    exports.createDisputeEvidenceTextResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      evidence: ["evidence", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return disputeEvidence_1.disputeEvidenceSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteDisputeEvidenceResponse.js
var require_deleteDisputeEvidenceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteDisputeEvidenceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteDisputeEvidenceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteDisputeEvidenceResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listDisputeEvidenceResponse.js
var require_listDisputeEvidenceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listDisputeEvidenceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listDisputeEvidenceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var disputeEvidence_1 = require_disputeEvidence();
    var error_1 = require_error();
    exports.listDisputeEvidenceResponseSchema = (0, schema_1.object)({
      evidence: ["evidence", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return disputeEvidence_1.disputeEvidenceSchema;
      })))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listDisputesResponse.js
var require_listDisputesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listDisputesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listDisputesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var dispute_1 = require_dispute();
    var error_1 = require_error();
    exports.listDisputesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      disputes: ["disputes", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return dispute_1.disputeSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveDisputeEvidenceResponse.js
var require_retrieveDisputeEvidenceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveDisputeEvidenceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveDisputeEvidenceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var disputeEvidence_1 = require_disputeEvidence();
    var error_1 = require_error();
    exports.retrieveDisputeEvidenceResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      evidence: ["evidence", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return disputeEvidence_1.disputeEvidenceSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveDisputeResponse.js
var require_retrieveDisputeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveDisputeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveDisputeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var dispute_1 = require_dispute();
    var error_1 = require_error();
    exports.retrieveDisputeResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      dispute: ["dispute", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return dispute_1.disputeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/submitEvidenceResponse.js
var require_submitEvidenceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/submitEvidenceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.submitEvidenceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var dispute_1 = require_dispute();
    var error_1 = require_error();
    exports.submitEvidenceResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      dispute: ["dispute", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return dispute_1.disputeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/disputesApi.js
var require_disputesApi = __commonJS({
  "node_modules/square/dist/cjs/api/disputesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.DisputesApi = void 0;
    var tslib_1 = require_tslib();
    var acceptDisputeResponse_1 = require_acceptDisputeResponse();
    var createDisputeEvidenceFileRequest_1 = require_createDisputeEvidenceFileRequest();
    var createDisputeEvidenceFileResponse_1 = require_createDisputeEvidenceFileResponse();
    var createDisputeEvidenceTextRequest_1 = require_createDisputeEvidenceTextRequest();
    var createDisputeEvidenceTextResponse_1 = require_createDisputeEvidenceTextResponse();
    var deleteDisputeEvidenceResponse_1 = require_deleteDisputeEvidenceResponse();
    var listDisputeEvidenceResponse_1 = require_listDisputeEvidenceResponse();
    var listDisputesResponse_1 = require_listDisputesResponse();
    var retrieveDisputeEvidenceResponse_1 = require_retrieveDisputeEvidenceResponse();
    var retrieveDisputeResponse_1 = require_retrieveDisputeResponse();
    var submitEvidenceResponse_1 = require_submitEvidenceResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var DisputesApi = function(_super) {
      tslib_1.__extends(DisputesApi2, _super);
      function DisputesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      DisputesApi2.prototype.listDisputes = function(cursor, states, locationId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/disputes");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              states: [states, (0, schema_1.optional)((0, schema_1.string)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("states", mapped.states);
            req.query("location_id", mapped.locationId);
            return [2, req.callAsJson(listDisputesResponse_1.listDisputesResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.retrieveDispute = function(disputeId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ disputeId: [disputeId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/disputes/", ""], ["/v2/disputes/", ""])), mapped.disputeId);
            return [2, req.callAsJson(retrieveDisputeResponse_1.retrieveDisputeResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.acceptDispute = function(disputeId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({ disputeId: [disputeId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/disputes/", "/accept"], ["/v2/disputes/", "/accept"])), mapped.disputeId);
            return [2, req.callAsJson(acceptDisputeResponse_1.acceptDisputeResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.listDisputeEvidence = function(disputeId, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              disputeId: [disputeId, (0, schema_1.string)()],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("cursor", mapped.cursor);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/disputes/", "/evidence"], ["/v2/disputes/", "/evidence"])), mapped.disputeId);
            return [2, req.callAsJson(listDisputeEvidenceResponse_1.listDisputeEvidenceResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.createDisputeEvidenceFile = function(disputeId, request2, imageFile, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              disputeId: [disputeId, (0, schema_1.string)()],
              request: [request2, (0, schema_1.optional)(createDisputeEvidenceFileRequest_1.createDisputeEvidenceFileRequestSchema)]
            });
            req.formData({
              request: JSON.stringify(mapped.request),
              image_file: imageFile
            });
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/disputes/", "/evidence-files"], ["/v2/disputes/", "/evidence-files"])), mapped.disputeId);
            return [2, req.callAsJson(createDisputeEvidenceFileResponse_1.createDisputeEvidenceFileResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.createDisputeEvidenceText = function(disputeId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              disputeId: [disputeId, (0, schema_1.string)()],
              body: [body2, createDisputeEvidenceTextRequest_1.createDisputeEvidenceTextRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/disputes/", "/evidence-text"], ["/v2/disputes/", "/evidence-text"])), mapped.disputeId);
            return [2, req.callAsJson(createDisputeEvidenceTextResponse_1.createDisputeEvidenceTextResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.deleteDisputeEvidence = function(disputeId, evidenceId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              disputeId: [disputeId, (0, schema_1.string)()],
              evidenceId: [evidenceId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/disputes/", "/evidence/", ""], ["/v2/disputes/", "/evidence/", ""])), mapped.disputeId, mapped.evidenceId);
            return [2, req.callAsJson(deleteDisputeEvidenceResponse_1.deleteDisputeEvidenceResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.retrieveDisputeEvidence = function(disputeId, evidenceId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              disputeId: [disputeId, (0, schema_1.string)()],
              evidenceId: [evidenceId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/disputes/", "/evidence/", ""], ["/v2/disputes/", "/evidence/", ""])), mapped.disputeId, mapped.evidenceId);
            return [2, req.callAsJson(retrieveDisputeEvidenceResponse_1.retrieveDisputeEvidenceResponseSchema, requestOptions)];
          });
        });
      };
      DisputesApi2.prototype.submitEvidence = function(disputeId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({ disputeId: [disputeId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject(["/v2/disputes/", "/submit-evidence"], ["/v2/disputes/", "/submit-evidence"])), mapped.disputeId);
            return [2, req.callAsJson(submitEvidenceResponse_1.submitEvidenceResponseSchema, requestOptions)];
          });
        });
      };
      return DisputesApi2;
    }(baseApi_1.BaseApi);
    exports.DisputesApi = DisputesApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
    var templateObject_8;
  }
});

// node_modules/square/dist/cjs/models/employee.js
var require_employee = __commonJS({
  "node_modules/square/dist/cjs/models/employee.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.employeeSchema = void 0;
    var schema_1 = require_schema2();
    exports.employeeSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      firstName: ["first_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      lastName: ["last_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      email: ["email", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      isOwner: ["is_owner", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listEmployeesResponse.js
var require_listEmployeesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listEmployeesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listEmployeesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var employee_1 = require_employee();
    var error_1 = require_error();
    exports.listEmployeesResponseSchema = (0, schema_1.object)({
      employees: ["employees", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return employee_1.employeeSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveEmployeeResponse.js
var require_retrieveEmployeeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveEmployeeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveEmployeeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var employee_1 = require_employee();
    var error_1 = require_error();
    exports.retrieveEmployeeResponseSchema = (0, schema_1.object)({
      employee: ["employee", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return employee_1.employeeSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/employeesApi.js
var require_employeesApi = __commonJS({
  "node_modules/square/dist/cjs/api/employeesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.EmployeesApi = void 0;
    var tslib_1 = require_tslib();
    var listEmployeesResponse_1 = require_listEmployeesResponse();
    var retrieveEmployeeResponse_1 = require_retrieveEmployeeResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var EmployeesApi = function(_super) {
      tslib_1.__extends(EmployeesApi2, _super);
      function EmployeesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      EmployeesApi2.prototype.listEmployees = function(locationId, status, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/employees");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              status: [status, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("location_id", mapped.locationId);
            req.query("status", mapped.status);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.deprecated("EmployeesApi.listEmployees");
            return [2, req.callAsJson(listEmployeesResponse_1.listEmployeesResponseSchema, requestOptions)];
          });
        });
      };
      EmployeesApi2.prototype.retrieveEmployee = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/employees/", ""], ["/v2/employees/", ""])), mapped.id);
            req.deprecated("EmployeesApi.retrieveEmployee");
            return [2, req.callAsJson(retrieveEmployeeResponse_1.retrieveEmployeeResponseSchema, requestOptions)];
          });
        });
      };
      return EmployeesApi2;
    }(baseApi_1.BaseApi);
    exports.EmployeesApi = EmployeesApi;
    var templateObject_1;
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityActivate.js
var require_giftCardActivityActivate = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityActivate.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityActivateSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityActivateSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      lineItemUid: ["line_item_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerPaymentInstrumentIds: [
        "buyer_payment_instrument_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityAdjustDecrement.js
var require_giftCardActivityAdjustDecrement = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityAdjustDecrement.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityAdjustDecrementSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityAdjustDecrementSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      reason: ["reason", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityAdjustIncrement.js
var require_giftCardActivityAdjustIncrement = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityAdjustIncrement.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityAdjustIncrementSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityAdjustIncrementSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      reason: ["reason", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityBlock.js
var require_giftCardActivityBlock = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityBlock.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityBlockSchema = void 0;
    var schema_1 = require_schema2();
    exports.giftCardActivityBlockSchema = (0, schema_1.object)({ reason: ["reason", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityClearBalance.js
var require_giftCardActivityClearBalance = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityClearBalance.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityClearBalanceSchema = void 0;
    var schema_1 = require_schema2();
    exports.giftCardActivityClearBalanceSchema = (0, schema_1.object)({ reason: ["reason", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityDeactivate.js
var require_giftCardActivityDeactivate = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityDeactivate.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityDeactivateSchema = void 0;
    var schema_1 = require_schema2();
    exports.giftCardActivityDeactivateSchema = (0, schema_1.object)({ reason: ["reason", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityImport.js
var require_giftCardActivityImport = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityImport.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityImportSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityImportSchema = (0, schema_1.object)({ amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
      return money_1.moneySchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityImportReversal.js
var require_giftCardActivityImportReversal = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityImportReversal.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityImportReversalSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityImportReversalSchema = (0, schema_1.object)({ amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
      return money_1.moneySchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityLoad.js
var require_giftCardActivityLoad = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityLoad.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityLoadSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityLoadSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      lineItemUid: ["line_item_uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerPaymentInstrumentIds: [
        "buyer_payment_instrument_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityRedeem.js
var require_giftCardActivityRedeem = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityRedeem.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityRedeemSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityRedeemSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityRefund.js
var require_giftCardActivityRefund = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityRefund.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityRefundSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityRefundSchema = (0, schema_1.object)({
      redeemActivityId: ["redeem_activity_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityTransferBalanceFrom.js
var require_giftCardActivityTransferBalanceFrom = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityTransferBalanceFrom.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityTransferBalanceFromSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityTransferBalanceFromSchema = (0, schema_1.object)({
      transferToGiftCardId: ["transfer_to_gift_card_id", (0, schema_1.string)()],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityTransferBalanceTo.js
var require_giftCardActivityTransferBalanceTo = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityTransferBalanceTo.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityTransferBalanceToSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityTransferBalanceToSchema = (0, schema_1.object)({
      transferFromGiftCardId: ["transfer_from_gift_card_id", (0, schema_1.string)()],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityUnblock.js
var require_giftCardActivityUnblock = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityUnblock.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityUnblockSchema = void 0;
    var schema_1 = require_schema2();
    exports.giftCardActivityUnblockSchema = (0, schema_1.object)({ reason: ["reason", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivityUnlinkedActivityRefund.js
var require_giftCardActivityUnlinkedActivityRefund = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivityUnlinkedActivityRefund.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivityUnlinkedActivityRefundSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardActivityUnlinkedActivityRefundSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/giftCardActivity.js
var require_giftCardActivity = __commonJS({
  "node_modules/square/dist/cjs/models/giftCardActivity.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardActivitySchema = void 0;
    var schema_1 = require_schema2();
    var giftCardActivityActivate_1 = require_giftCardActivityActivate();
    var giftCardActivityAdjustDecrement_1 = require_giftCardActivityAdjustDecrement();
    var giftCardActivityAdjustIncrement_1 = require_giftCardActivityAdjustIncrement();
    var giftCardActivityBlock_1 = require_giftCardActivityBlock();
    var giftCardActivityClearBalance_1 = require_giftCardActivityClearBalance();
    var giftCardActivityDeactivate_1 = require_giftCardActivityDeactivate();
    var giftCardActivityImport_1 = require_giftCardActivityImport();
    var giftCardActivityImportReversal_1 = require_giftCardActivityImportReversal();
    var giftCardActivityLoad_1 = require_giftCardActivityLoad();
    var giftCardActivityRedeem_1 = require_giftCardActivityRedeem();
    var giftCardActivityRefund_1 = require_giftCardActivityRefund();
    var giftCardActivityTransferBalanceFrom_1 = require_giftCardActivityTransferBalanceFrom();
    var giftCardActivityTransferBalanceTo_1 = require_giftCardActivityTransferBalanceTo();
    var giftCardActivityUnblock_1 = require_giftCardActivityUnblock();
    var giftCardActivityUnlinkedActivityRefund_1 = require_giftCardActivityUnlinkedActivityRefund();
    var money_1 = require_money();
    exports.giftCardActivitySchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      type: ["type", (0, schema_1.string)()],
      locationId: ["location_id", (0, schema_1.string)()],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      giftCardId: ["gift_card_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      giftCardGan: ["gift_card_gan", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      giftCardBalanceMoney: [
        "gift_card_balance_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      loadActivityDetails: [
        "load_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityLoad_1.giftCardActivityLoadSchema;
        }))
      ],
      activateActivityDetails: [
        "activate_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityActivate_1.giftCardActivityActivateSchema;
        }))
      ],
      redeemActivityDetails: [
        "redeem_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityRedeem_1.giftCardActivityRedeemSchema;
        }))
      ],
      clearBalanceActivityDetails: [
        "clear_balance_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityClearBalance_1.giftCardActivityClearBalanceSchema;
        }))
      ],
      deactivateActivityDetails: [
        "deactivate_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityDeactivate_1.giftCardActivityDeactivateSchema;
        }))
      ],
      adjustIncrementActivityDetails: [
        "adjust_increment_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityAdjustIncrement_1.giftCardActivityAdjustIncrementSchema;
        }))
      ],
      adjustDecrementActivityDetails: [
        "adjust_decrement_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityAdjustDecrement_1.giftCardActivityAdjustDecrementSchema;
        }))
      ],
      refundActivityDetails: [
        "refund_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityRefund_1.giftCardActivityRefundSchema;
        }))
      ],
      unlinkedActivityRefundActivityDetails: [
        "unlinked_activity_refund_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityUnlinkedActivityRefund_1.giftCardActivityUnlinkedActivityRefundSchema;
        }))
      ],
      importActivityDetails: [
        "import_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityImport_1.giftCardActivityImportSchema;
        }))
      ],
      blockActivityDetails: [
        "block_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityBlock_1.giftCardActivityBlockSchema;
        }))
      ],
      unblockActivityDetails: [
        "unblock_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityUnblock_1.giftCardActivityUnblockSchema;
        }))
      ],
      importReversalActivityDetails: [
        "import_reversal_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityImportReversal_1.giftCardActivityImportReversalSchema;
        }))
      ],
      transferBalanceToActivityDetails: [
        "transfer_balance_to_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityTransferBalanceTo_1.giftCardActivityTransferBalanceToSchema;
        }))
      ],
      transferBalanceFromActivityDetails: [
        "transfer_balance_from_activity_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivityTransferBalanceFrom_1.giftCardActivityTransferBalanceFromSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createGiftCardActivityRequest.js
var require_createGiftCardActivityRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createGiftCardActivityRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createGiftCardActivityRequestSchema = void 0;
    var schema_1 = require_schema2();
    var giftCardActivity_1 = require_giftCardActivity();
    exports.createGiftCardActivityRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      giftCardActivity: [
        "gift_card_activity",
        (0, schema_1.lazy)(function() {
          return giftCardActivity_1.giftCardActivitySchema;
        })
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createGiftCardActivityResponse.js
var require_createGiftCardActivityResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createGiftCardActivityResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createGiftCardActivityResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCardActivity_1 = require_giftCardActivity();
    exports.createGiftCardActivityResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCardActivity: [
        "gift_card_activity",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return giftCardActivity_1.giftCardActivitySchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/listGiftCardActivitiesResponse.js
var require_listGiftCardActivitiesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listGiftCardActivitiesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listGiftCardActivitiesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCardActivity_1 = require_giftCardActivity();
    exports.listGiftCardActivitiesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCardActivities: [
        "gift_card_activities",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return giftCardActivity_1.giftCardActivitySchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/giftCardActivitiesApi.js
var require_giftCardActivitiesApi = __commonJS({
  "node_modules/square/dist/cjs/api/giftCardActivitiesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.GiftCardActivitiesApi = void 0;
    var tslib_1 = require_tslib();
    var createGiftCardActivityRequest_1 = require_createGiftCardActivityRequest();
    var createGiftCardActivityResponse_1 = require_createGiftCardActivityResponse();
    var listGiftCardActivitiesResponse_1 = require_listGiftCardActivitiesResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var GiftCardActivitiesApi = function(_super) {
      tslib_1.__extends(GiftCardActivitiesApi2, _super);
      function GiftCardActivitiesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      GiftCardActivitiesApi2.prototype.listGiftCardActivities = function(giftCardId, type, locationId, beginTime, endTime, limit, cursor, sortOrder, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/gift-cards/activities");
            mapped = req.prepareArgs({
              giftCardId: [giftCardId, (0, schema_1.optional)((0, schema_1.string)())],
              type: [type, (0, schema_1.optional)((0, schema_1.string)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("gift_card_id", mapped.giftCardId);
            req.query("type", mapped.type);
            req.query("location_id", mapped.locationId);
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("sort_order", mapped.sortOrder);
            return [2, req.callAsJson(listGiftCardActivitiesResponse_1.listGiftCardActivitiesResponseSchema, requestOptions)];
          });
        });
      };
      GiftCardActivitiesApi2.prototype.createGiftCardActivity = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/gift-cards/activities");
            mapped = req.prepareArgs({
              body: [body2, createGiftCardActivityRequest_1.createGiftCardActivityRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createGiftCardActivityResponse_1.createGiftCardActivityResponseSchema, requestOptions)];
          });
        });
      };
      return GiftCardActivitiesApi2;
    }(baseApi_1.BaseApi);
    exports.GiftCardActivitiesApi = GiftCardActivitiesApi;
  }
});

// node_modules/square/dist/cjs/models/giftCard.js
var require_giftCard = __commonJS({
  "node_modules/square/dist/cjs/models/giftCard.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.giftCardSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.giftCardSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      type: ["type", (0, schema_1.string)()],
      ganSource: ["gan_source", (0, schema_1.optional)((0, schema_1.string)())],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      balanceMoney: ["balance_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      gan: ["gan", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      customerIds: ["customer_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/createGiftCardRequest.js
var require_createGiftCardRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createGiftCardRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createGiftCardRequestSchema = void 0;
    var schema_1 = require_schema2();
    var giftCard_1 = require_giftCard();
    exports.createGiftCardRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      locationId: ["location_id", (0, schema_1.string)()],
      giftCard: ["gift_card", (0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createGiftCardResponse.js
var require_createGiftCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createGiftCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createGiftCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCard_1 = require_giftCard();
    exports.createGiftCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCard: ["gift_card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/linkCustomerToGiftCardRequest.js
var require_linkCustomerToGiftCardRequest = __commonJS({
  "node_modules/square/dist/cjs/models/linkCustomerToGiftCardRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.linkCustomerToGiftCardRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.linkCustomerToGiftCardRequestSchema = (0, schema_1.object)({ customerId: ["customer_id", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/linkCustomerToGiftCardResponse.js
var require_linkCustomerToGiftCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/linkCustomerToGiftCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.linkCustomerToGiftCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCard_1 = require_giftCard();
    exports.linkCustomerToGiftCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCard: ["gift_card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listGiftCardsResponse.js
var require_listGiftCardsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listGiftCardsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listGiftCardsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCard_1 = require_giftCard();
    exports.listGiftCardsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCards: ["gift_cards", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveGiftCardFromGANRequest.js
var require_retrieveGiftCardFromGANRequest = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveGiftCardFromGANRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveGiftCardFromGANRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.retrieveGiftCardFromGANRequestSchema = (0, schema_1.object)({ gan: ["gan", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/retrieveGiftCardFromGANResponse.js
var require_retrieveGiftCardFromGANResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveGiftCardFromGANResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveGiftCardFromGANResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCard_1 = require_giftCard();
    exports.retrieveGiftCardFromGANResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCard: ["gift_card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveGiftCardFromNonceRequest.js
var require_retrieveGiftCardFromNonceRequest = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveGiftCardFromNonceRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveGiftCardFromNonceRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.retrieveGiftCardFromNonceRequestSchema = (0, schema_1.object)({ nonce: ["nonce", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/retrieveGiftCardFromNonceResponse.js
var require_retrieveGiftCardFromNonceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveGiftCardFromNonceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveGiftCardFromNonceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCard_1 = require_giftCard();
    exports.retrieveGiftCardFromNonceResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCard: ["gift_card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveGiftCardResponse.js
var require_retrieveGiftCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveGiftCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveGiftCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCard_1 = require_giftCard();
    exports.retrieveGiftCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCard: ["gift_card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/unlinkCustomerFromGiftCardRequest.js
var require_unlinkCustomerFromGiftCardRequest = __commonJS({
  "node_modules/square/dist/cjs/models/unlinkCustomerFromGiftCardRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.unlinkCustomerFromGiftCardRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.unlinkCustomerFromGiftCardRequestSchema = (0, schema_1.object)({ customerId: ["customer_id", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/unlinkCustomerFromGiftCardResponse.js
var require_unlinkCustomerFromGiftCardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/unlinkCustomerFromGiftCardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.unlinkCustomerFromGiftCardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var giftCard_1 = require_giftCard();
    exports.unlinkCustomerFromGiftCardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      giftCard: ["gift_card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return giftCard_1.giftCardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/giftCardsApi.js
var require_giftCardsApi = __commonJS({
  "node_modules/square/dist/cjs/api/giftCardsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.GiftCardsApi = void 0;
    var tslib_1 = require_tslib();
    var createGiftCardRequest_1 = require_createGiftCardRequest();
    var createGiftCardResponse_1 = require_createGiftCardResponse();
    var linkCustomerToGiftCardRequest_1 = require_linkCustomerToGiftCardRequest();
    var linkCustomerToGiftCardResponse_1 = require_linkCustomerToGiftCardResponse();
    var listGiftCardsResponse_1 = require_listGiftCardsResponse();
    var retrieveGiftCardFromGANRequest_1 = require_retrieveGiftCardFromGANRequest();
    var retrieveGiftCardFromGANResponse_1 = require_retrieveGiftCardFromGANResponse();
    var retrieveGiftCardFromNonceRequest_1 = require_retrieveGiftCardFromNonceRequest();
    var retrieveGiftCardFromNonceResponse_1 = require_retrieveGiftCardFromNonceResponse();
    var retrieveGiftCardResponse_1 = require_retrieveGiftCardResponse();
    var unlinkCustomerFromGiftCardRequest_1 = require_unlinkCustomerFromGiftCardRequest();
    var unlinkCustomerFromGiftCardResponse_1 = require_unlinkCustomerFromGiftCardResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var GiftCardsApi = function(_super) {
      tslib_1.__extends(GiftCardsApi2, _super);
      function GiftCardsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      GiftCardsApi2.prototype.listGiftCards = function(type, state, limit, cursor, customerId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/gift-cards");
            mapped = req.prepareArgs({
              type: [type, (0, schema_1.optional)((0, schema_1.string)())],
              state: [state, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              customerId: [customerId, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("type", mapped.type);
            req.query("state", mapped.state);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("customer_id", mapped.customerId);
            return [2, req.callAsJson(listGiftCardsResponse_1.listGiftCardsResponseSchema, requestOptions)];
          });
        });
      };
      GiftCardsApi2.prototype.createGiftCard = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/gift-cards");
            mapped = req.prepareArgs({
              body: [body2, createGiftCardRequest_1.createGiftCardRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createGiftCardResponse_1.createGiftCardResponseSchema, requestOptions)];
          });
        });
      };
      GiftCardsApi2.prototype.retrieveGiftCardFromGAN = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/gift-cards/from-gan");
            mapped = req.prepareArgs({
              body: [body2, retrieveGiftCardFromGANRequest_1.retrieveGiftCardFromGANRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(retrieveGiftCardFromGANResponse_1.retrieveGiftCardFromGANResponseSchema, requestOptions)];
          });
        });
      };
      GiftCardsApi2.prototype.retrieveGiftCardFromNonce = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/gift-cards/from-nonce");
            mapped = req.prepareArgs({
              body: [body2, retrieveGiftCardFromNonceRequest_1.retrieveGiftCardFromNonceRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(retrieveGiftCardFromNonceResponse_1.retrieveGiftCardFromNonceResponseSchema, requestOptions)];
          });
        });
      };
      GiftCardsApi2.prototype.linkCustomerToGiftCard = function(giftCardId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              giftCardId: [giftCardId, (0, schema_1.string)()],
              body: [body2, linkCustomerToGiftCardRequest_1.linkCustomerToGiftCardRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/gift-cards/", "/link-customer"], ["/v2/gift-cards/", "/link-customer"])), mapped.giftCardId);
            return [2, req.callAsJson(linkCustomerToGiftCardResponse_1.linkCustomerToGiftCardResponseSchema, requestOptions)];
          });
        });
      };
      GiftCardsApi2.prototype.unlinkCustomerFromGiftCard = function(giftCardId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              giftCardId: [giftCardId, (0, schema_1.string)()],
              body: [body2, unlinkCustomerFromGiftCardRequest_1.unlinkCustomerFromGiftCardRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/gift-cards/", "/unlink-customer"], ["/v2/gift-cards/", "/unlink-customer"])), mapped.giftCardId);
            return [2, req.callAsJson(unlinkCustomerFromGiftCardResponse_1.unlinkCustomerFromGiftCardResponseSchema, requestOptions)];
          });
        });
      };
      GiftCardsApi2.prototype.retrieveGiftCard = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/gift-cards/", ""], ["/v2/gift-cards/", ""])), mapped.id);
            return [2, req.callAsJson(retrieveGiftCardResponse_1.retrieveGiftCardResponseSchema, requestOptions)];
          });
        });
      };
      return GiftCardsApi2;
    }(baseApi_1.BaseApi);
    exports.GiftCardsApi = GiftCardsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
  }
});

// node_modules/square/dist/cjs/models/inventoryAdjustmentGroup.js
var require_inventoryAdjustmentGroup = __commonJS({
  "node_modules/square/dist/cjs/models/inventoryAdjustmentGroup.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.inventoryAdjustmentGroupSchema = void 0;
    var schema_1 = require_schema2();
    exports.inventoryAdjustmentGroupSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      rootAdjustmentId: ["root_adjustment_id", (0, schema_1.optional)((0, schema_1.string)())],
      fromState: ["from_state", (0, schema_1.optional)((0, schema_1.string)())],
      toState: ["to_state", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/inventoryAdjustment.js
var require_inventoryAdjustment = __commonJS({
  "node_modules/square/dist/cjs/models/inventoryAdjustment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.inventoryAdjustmentSchema = void 0;
    var schema_1 = require_schema2();
    var inventoryAdjustmentGroup_1 = require_inventoryAdjustmentGroup();
    var money_1 = require_money();
    var sourceApplication_1 = require_sourceApplication();
    exports.inventoryAdjustmentSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      fromState: ["from_state", (0, schema_1.optional)((0, schema_1.string)())],
      toState: ["to_state", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectType: ["catalog_object_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      totalPriceMoney: ["total_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      occurredAt: ["occurred_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      source: ["source", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return sourceApplication_1.sourceApplicationSchema;
      }))],
      employeeId: ["employee_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      transactionId: ["transaction_id", (0, schema_1.optional)((0, schema_1.string)())],
      refundId: ["refund_id", (0, schema_1.optional)((0, schema_1.string)())],
      purchaseOrderId: ["purchase_order_id", (0, schema_1.optional)((0, schema_1.string)())],
      goodsReceiptId: ["goods_receipt_id", (0, schema_1.optional)((0, schema_1.string)())],
      adjustmentGroup: [
        "adjustment_group",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return inventoryAdjustmentGroup_1.inventoryAdjustmentGroupSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/inventoryPhysicalCount.js
var require_inventoryPhysicalCount = __commonJS({
  "node_modules/square/dist/cjs/models/inventoryPhysicalCount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.inventoryPhysicalCountSchema = void 0;
    var schema_1 = require_schema2();
    var sourceApplication_1 = require_sourceApplication();
    exports.inventoryPhysicalCountSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectType: ["catalog_object_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      source: ["source", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return sourceApplication_1.sourceApplicationSchema;
      }))],
      employeeId: ["employee_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      occurredAt: ["occurred_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/inventoryTransfer.js
var require_inventoryTransfer = __commonJS({
  "node_modules/square/dist/cjs/models/inventoryTransfer.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.inventoryTransferSchema = void 0;
    var schema_1 = require_schema2();
    var sourceApplication_1 = require_sourceApplication();
    exports.inventoryTransferSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      fromLocationId: ["from_location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      toLocationId: ["to_location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectType: ["catalog_object_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      occurredAt: ["occurred_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      source: ["source", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return sourceApplication_1.sourceApplicationSchema;
      }))],
      employeeId: ["employee_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/inventoryChange.js
var require_inventoryChange = __commonJS({
  "node_modules/square/dist/cjs/models/inventoryChange.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.inventoryChangeSchema = void 0;
    var schema_1 = require_schema2();
    var catalogMeasurementUnit_1 = require_catalogMeasurementUnit();
    var inventoryAdjustment_1 = require_inventoryAdjustment();
    var inventoryPhysicalCount_1 = require_inventoryPhysicalCount();
    var inventoryTransfer_1 = require_inventoryTransfer();
    exports.inventoryChangeSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      physicalCount: [
        "physical_count",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return inventoryPhysicalCount_1.inventoryPhysicalCountSchema;
        }))
      ],
      adjustment: ["adjustment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return inventoryAdjustment_1.inventoryAdjustmentSchema;
      }))],
      transfer: ["transfer", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return inventoryTransfer_1.inventoryTransferSchema;
      }))],
      measurementUnit: [
        "measurement_unit",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return catalogMeasurementUnit_1.catalogMeasurementUnitSchema;
        }))
      ],
      measurementUnitId: ["measurement_unit_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/batchChangeInventoryRequest.js
var require_batchChangeInventoryRequest = __commonJS({
  "node_modules/square/dist/cjs/models/batchChangeInventoryRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchChangeInventoryRequestSchema = void 0;
    var schema_1 = require_schema2();
    var inventoryChange_1 = require_inventoryChange();
    exports.batchChangeInventoryRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      changes: [
        "changes",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return inventoryChange_1.inventoryChangeSchema;
        }))))
      ],
      ignoreUnchangedCounts: [
        "ignore_unchanged_counts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/inventoryCount.js
var require_inventoryCount = __commonJS({
  "node_modules/square/dist/cjs/models/inventoryCount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.inventoryCountSchema = void 0;
    var schema_1 = require_schema2();
    exports.inventoryCountSchema = (0, schema_1.object)({
      catalogObjectId: ["catalog_object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogObjectType: ["catalog_object_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      calculatedAt: ["calculated_at", (0, schema_1.optional)((0, schema_1.string)())],
      isEstimated: ["is_estimated", (0, schema_1.optional)((0, schema_1.boolean)())]
    });
  }
});

// node_modules/square/dist/cjs/models/batchChangeInventoryResponse.js
var require_batchChangeInventoryResponse = __commonJS({
  "node_modules/square/dist/cjs/models/batchChangeInventoryResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchChangeInventoryResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryChange_1 = require_inventoryChange();
    var inventoryCount_1 = require_inventoryCount();
    exports.batchChangeInventoryResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      counts: ["counts", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return inventoryCount_1.inventoryCountSchema;
      })))],
      changes: ["changes", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return inventoryChange_1.inventoryChangeSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveInventoryChangesRequest.js
var require_batchRetrieveInventoryChangesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveInventoryChangesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveInventoryChangesRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.batchRetrieveInventoryChangesRequestSchema = (0, schema_1.object)({
      catalogObjectIds: [
        "catalog_object_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      types: ["types", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      states: ["states", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      updatedAfter: ["updated_after", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      updatedBefore: ["updated_before", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveInventoryChangesResponse.js
var require_batchRetrieveInventoryChangesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveInventoryChangesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveInventoryChangesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryChange_1 = require_inventoryChange();
    exports.batchRetrieveInventoryChangesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      changes: ["changes", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return inventoryChange_1.inventoryChangeSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveInventoryCountsRequest.js
var require_batchRetrieveInventoryCountsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveInventoryCountsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveInventoryCountsRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.batchRetrieveInventoryCountsRequestSchema = (0, schema_1.object)({
      catalogObjectIds: [
        "catalog_object_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      updatedAfter: ["updated_after", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      states: ["states", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveInventoryCountsResponse.js
var require_batchRetrieveInventoryCountsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveInventoryCountsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveInventoryCountsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryCount_1 = require_inventoryCount();
    exports.batchRetrieveInventoryCountsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      counts: ["counts", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return inventoryCount_1.inventoryCountSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveInventoryAdjustmentResponse.js
var require_retrieveInventoryAdjustmentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveInventoryAdjustmentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveInventoryAdjustmentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryAdjustment_1 = require_inventoryAdjustment();
    exports.retrieveInventoryAdjustmentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      adjustment: ["adjustment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return inventoryAdjustment_1.inventoryAdjustmentSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveInventoryChangesResponse.js
var require_retrieveInventoryChangesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveInventoryChangesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveInventoryChangesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryChange_1 = require_inventoryChange();
    exports.retrieveInventoryChangesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      changes: ["changes", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return inventoryChange_1.inventoryChangeSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveInventoryCountResponse.js
var require_retrieveInventoryCountResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveInventoryCountResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveInventoryCountResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryCount_1 = require_inventoryCount();
    exports.retrieveInventoryCountResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      counts: ["counts", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return inventoryCount_1.inventoryCountSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveInventoryPhysicalCountResponse.js
var require_retrieveInventoryPhysicalCountResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveInventoryPhysicalCountResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveInventoryPhysicalCountResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryPhysicalCount_1 = require_inventoryPhysicalCount();
    exports.retrieveInventoryPhysicalCountResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      count: ["count", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return inventoryPhysicalCount_1.inventoryPhysicalCountSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveInventoryTransferResponse.js
var require_retrieveInventoryTransferResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveInventoryTransferResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveInventoryTransferResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var inventoryTransfer_1 = require_inventoryTransfer();
    exports.retrieveInventoryTransferResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      transfer: ["transfer", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return inventoryTransfer_1.inventoryTransferSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/inventoryApi.js
var require_inventoryApi = __commonJS({
  "node_modules/square/dist/cjs/api/inventoryApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.InventoryApi = void 0;
    var tslib_1 = require_tslib();
    var batchChangeInventoryRequest_1 = require_batchChangeInventoryRequest();
    var batchChangeInventoryResponse_1 = require_batchChangeInventoryResponse();
    var batchRetrieveInventoryChangesRequest_1 = require_batchRetrieveInventoryChangesRequest();
    var batchRetrieveInventoryChangesResponse_1 = require_batchRetrieveInventoryChangesResponse();
    var batchRetrieveInventoryCountsRequest_1 = require_batchRetrieveInventoryCountsRequest();
    var batchRetrieveInventoryCountsResponse_1 = require_batchRetrieveInventoryCountsResponse();
    var retrieveInventoryAdjustmentResponse_1 = require_retrieveInventoryAdjustmentResponse();
    var retrieveInventoryChangesResponse_1 = require_retrieveInventoryChangesResponse();
    var retrieveInventoryCountResponse_1 = require_retrieveInventoryCountResponse();
    var retrieveInventoryPhysicalCountResponse_1 = require_retrieveInventoryPhysicalCountResponse();
    var retrieveInventoryTransferResponse_1 = require_retrieveInventoryTransferResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var InventoryApi = function(_super) {
      tslib_1.__extends(InventoryApi2, _super);
      function InventoryApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      InventoryApi2.prototype.deprecatedRetrieveInventoryAdjustment = function(adjustmentId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ adjustmentId: [adjustmentId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/inventory/adjustment/", ""], ["/v2/inventory/adjustment/", ""])), mapped.adjustmentId);
            req.deprecated("InventoryApi.deprecatedRetrieveInventoryAdjustment");
            return [2, req.callAsJson(retrieveInventoryAdjustmentResponse_1.retrieveInventoryAdjustmentResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.retrieveInventoryAdjustment = function(adjustmentId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ adjustmentId: [adjustmentId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/inventory/adjustments/", ""], ["/v2/inventory/adjustments/", ""])), mapped.adjustmentId);
            return [2, req.callAsJson(retrieveInventoryAdjustmentResponse_1.retrieveInventoryAdjustmentResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.deprecatedBatchChangeInventory = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/inventory/batch-change");
            mapped = req.prepareArgs({
              body: [body2, batchChangeInventoryRequest_1.batchChangeInventoryRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.deprecated("InventoryApi.deprecatedBatchChangeInventory");
            return [2, req.callAsJson(batchChangeInventoryResponse_1.batchChangeInventoryResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.deprecatedBatchRetrieveInventoryChanges = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/inventory/batch-retrieve-changes");
            mapped = req.prepareArgs({
              body: [body2, batchRetrieveInventoryChangesRequest_1.batchRetrieveInventoryChangesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.deprecated("InventoryApi.deprecatedBatchRetrieveInventoryChanges");
            return [2, req.callAsJson(batchRetrieveInventoryChangesResponse_1.batchRetrieveInventoryChangesResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.deprecatedBatchRetrieveInventoryCounts = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/inventory/batch-retrieve-counts");
            mapped = req.prepareArgs({
              body: [body2, batchRetrieveInventoryCountsRequest_1.batchRetrieveInventoryCountsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.deprecated("InventoryApi.deprecatedBatchRetrieveInventoryCounts");
            return [2, req.callAsJson(batchRetrieveInventoryCountsResponse_1.batchRetrieveInventoryCountsResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.batchChangeInventory = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/inventory/changes/batch-create");
            mapped = req.prepareArgs({
              body: [body2, batchChangeInventoryRequest_1.batchChangeInventoryRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(batchChangeInventoryResponse_1.batchChangeInventoryResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.batchRetrieveInventoryChanges = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/inventory/changes/batch-retrieve");
            mapped = req.prepareArgs({
              body: [body2, batchRetrieveInventoryChangesRequest_1.batchRetrieveInventoryChangesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(batchRetrieveInventoryChangesResponse_1.batchRetrieveInventoryChangesResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.batchRetrieveInventoryCounts = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/inventory/counts/batch-retrieve");
            mapped = req.prepareArgs({
              body: [body2, batchRetrieveInventoryCountsRequest_1.batchRetrieveInventoryCountsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(batchRetrieveInventoryCountsResponse_1.batchRetrieveInventoryCountsResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.deprecatedRetrieveInventoryPhysicalCount = function(physicalCountId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              physicalCountId: [physicalCountId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/inventory/physical-count/", ""], ["/v2/inventory/physical-count/", ""])), mapped.physicalCountId);
            req.deprecated("InventoryApi.deprecatedRetrieveInventoryPhysicalCount");
            return [2, req.callAsJson(retrieveInventoryPhysicalCountResponse_1.retrieveInventoryPhysicalCountResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.retrieveInventoryPhysicalCount = function(physicalCountId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              physicalCountId: [physicalCountId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/inventory/physical-counts/", ""], ["/v2/inventory/physical-counts/", ""])), mapped.physicalCountId);
            return [2, req.callAsJson(retrieveInventoryPhysicalCountResponse_1.retrieveInventoryPhysicalCountResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.retrieveInventoryTransfer = function(transferId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ transferId: [transferId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/inventory/transfers/", ""], ["/v2/inventory/transfers/", ""])), mapped.transferId);
            return [2, req.callAsJson(retrieveInventoryTransferResponse_1.retrieveInventoryTransferResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.retrieveInventoryCount = function(catalogObjectId, locationIds, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              catalogObjectId: [catalogObjectId, (0, schema_1.string)()],
              locationIds: [locationIds, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("location_ids", mapped.locationIds);
            req.query("cursor", mapped.cursor);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/inventory/", ""], ["/v2/inventory/", ""])), mapped.catalogObjectId);
            return [2, req.callAsJson(retrieveInventoryCountResponse_1.retrieveInventoryCountResponseSchema, requestOptions)];
          });
        });
      };
      InventoryApi2.prototype.retrieveInventoryChanges = function(catalogObjectId, locationIds, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              catalogObjectId: [catalogObjectId, (0, schema_1.string)()],
              locationIds: [locationIds, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("location_ids", mapped.locationIds);
            req.query("cursor", mapped.cursor);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/inventory/", "/changes"], ["/v2/inventory/", "/changes"])), mapped.catalogObjectId);
            req.deprecated("InventoryApi.retrieveInventoryChanges");
            return [2, req.callAsJson(retrieveInventoryChangesResponse_1.retrieveInventoryChangesResponseSchema, requestOptions)];
          });
        });
      };
      return InventoryApi2;
    }(baseApi_1.BaseApi);
    exports.InventoryApi = InventoryApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
  }
});

// node_modules/square/dist/cjs/models/cancelInvoiceRequest.js
var require_cancelInvoiceRequest = __commonJS({
  "node_modules/square/dist/cjs/models/cancelInvoiceRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelInvoiceRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.cancelInvoiceRequestSchema = (0, schema_1.object)({
      version: ["version", (0, schema_1.number)()]
    });
  }
});

// node_modules/square/dist/cjs/models/invoiceAcceptedPaymentMethods.js
var require_invoiceAcceptedPaymentMethods = __commonJS({
  "node_modules/square/dist/cjs/models/invoiceAcceptedPaymentMethods.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceAcceptedPaymentMethodsSchema = void 0;
    var schema_1 = require_schema2();
    exports.invoiceAcceptedPaymentMethodsSchema = (0, schema_1.object)({
      card: ["card", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      squareGiftCard: ["square_gift_card", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      bankAccount: ["bank_account", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      buyNowPayLater: ["buy_now_pay_later", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/invoiceCustomField.js
var require_invoiceCustomField = __commonJS({
  "node_modules/square/dist/cjs/models/invoiceCustomField.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceCustomFieldSchema = void 0;
    var schema_1 = require_schema2();
    exports.invoiceCustomFieldSchema = (0, schema_1.object)({
      label: ["label", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      value: ["value", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      placement: ["placement", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/invoicePaymentReminder.js
var require_invoicePaymentReminder = __commonJS({
  "node_modules/square/dist/cjs/models/invoicePaymentReminder.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoicePaymentReminderSchema = void 0;
    var schema_1 = require_schema2();
    exports.invoicePaymentReminderSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.string)())],
      relativeScheduledDays: [
        "relative_scheduled_days",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))
      ],
      message: ["message", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      sentAt: ["sent_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/invoicePaymentRequest.js
var require_invoicePaymentRequest = __commonJS({
  "node_modules/square/dist/cjs/models/invoicePaymentRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoicePaymentRequestSchema = void 0;
    var schema_1 = require_schema2();
    var invoicePaymentReminder_1 = require_invoicePaymentReminder();
    var money_1 = require_money();
    exports.invoicePaymentRequestSchema = (0, schema_1.object)({
      uid: ["uid", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      requestMethod: ["request_method", (0, schema_1.optional)((0, schema_1.string)())],
      requestType: ["request_type", (0, schema_1.optional)((0, schema_1.string)())],
      dueDate: ["due_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      fixedAmountRequestedMoney: [
        "fixed_amount_requested_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      percentageRequested: ["percentage_requested", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      tippingEnabled: ["tipping_enabled", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      automaticPaymentSource: ["automatic_payment_source", (0, schema_1.optional)((0, schema_1.string)())],
      cardId: ["card_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      reminders: [
        "reminders",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return invoicePaymentReminder_1.invoicePaymentReminderSchema;
        }))))
      ],
      computedAmountMoney: [
        "computed_amount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      totalCompletedAmountMoney: [
        "total_completed_amount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      roundingAdjustmentIncludedMoney: [
        "rounding_adjustment_included_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/invoiceRecipientTaxIds.js
var require_invoiceRecipientTaxIds = __commonJS({
  "node_modules/square/dist/cjs/models/invoiceRecipientTaxIds.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceRecipientTaxIdsSchema = void 0;
    var schema_1 = require_schema2();
    exports.invoiceRecipientTaxIdsSchema = (0, schema_1.object)({ euVat: ["eu_vat", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/invoiceRecipient.js
var require_invoiceRecipient = __commonJS({
  "node_modules/square/dist/cjs/models/invoiceRecipient.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceRecipientSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var invoiceRecipientTaxIds_1 = require_invoiceRecipientTaxIds();
    exports.invoiceRecipientSchema = (0, schema_1.object)({
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      givenName: ["given_name", (0, schema_1.optional)((0, schema_1.string)())],
      familyName: ["family_name", (0, schema_1.optional)((0, schema_1.string)())],
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.string)())],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.string)())],
      companyName: ["company_name", (0, schema_1.optional)((0, schema_1.string)())],
      taxIds: ["tax_ids", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return invoiceRecipientTaxIds_1.invoiceRecipientTaxIdsSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/invoice.js
var require_invoice = __commonJS({
  "node_modules/square/dist/cjs/models/invoice.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceSchema = void 0;
    var schema_1 = require_schema2();
    var invoiceAcceptedPaymentMethods_1 = require_invoiceAcceptedPaymentMethods();
    var invoiceCustomField_1 = require_invoiceCustomField();
    var invoicePaymentRequest_1 = require_invoicePaymentRequest();
    var invoiceRecipient_1 = require_invoiceRecipient();
    var money_1 = require_money();
    exports.invoiceSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      primaryRecipient: [
        "primary_recipient",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return invoiceRecipient_1.invoiceRecipientSchema;
        }))
      ],
      paymentRequests: [
        "payment_requests",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return invoicePaymentRequest_1.invoicePaymentRequestSchema;
        }))))
      ],
      deliveryMethod: ["delivery_method", (0, schema_1.optional)((0, schema_1.string)())],
      invoiceNumber: ["invoice_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      title: ["title", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      scheduledAt: ["scheduled_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      publicUrl: ["public_url", (0, schema_1.optional)((0, schema_1.string)())],
      nextPaymentAmountMoney: [
        "next_payment_amount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      timezone: ["timezone", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      acceptedPaymentMethods: [
        "accepted_payment_methods",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return invoiceAcceptedPaymentMethods_1.invoiceAcceptedPaymentMethodsSchema;
        }))
      ],
      customFields: [
        "custom_fields",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return invoiceCustomField_1.invoiceCustomFieldSchema;
        }))))
      ],
      subscriptionId: ["subscription_id", (0, schema_1.optional)((0, schema_1.string)())],
      saleOrServiceDate: ["sale_or_service_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      paymentConditions: ["payment_conditions", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      storePaymentMethodEnabled: [
        "store_payment_method_enabled",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelInvoiceResponse.js
var require_cancelInvoiceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelInvoiceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelInvoiceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var invoice_1 = require_invoice();
    exports.cancelInvoiceResponseSchema = (0, schema_1.object)({
      invoice: ["invoice", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createInvoiceRequest.js
var require_createInvoiceRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createInvoiceRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createInvoiceRequestSchema = void 0;
    var schema_1 = require_schema2();
    var invoice_1 = require_invoice();
    exports.createInvoiceRequestSchema = (0, schema_1.object)({
      invoice: ["invoice", (0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createInvoiceResponse.js
var require_createInvoiceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createInvoiceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createInvoiceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var invoice_1 = require_invoice();
    exports.createInvoiceResponseSchema = (0, schema_1.object)({
      invoice: ["invoice", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteInvoiceResponse.js
var require_deleteInvoiceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteInvoiceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteInvoiceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteInvoiceResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/getInvoiceResponse.js
var require_getInvoiceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getInvoiceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getInvoiceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var invoice_1 = require_invoice();
    exports.getInvoiceResponseSchema = (0, schema_1.object)({
      invoice: ["invoice", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listInvoicesResponse.js
var require_listInvoicesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listInvoicesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listInvoicesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var invoice_1 = require_invoice();
    exports.listInvoicesResponseSchema = (0, schema_1.object)({
      invoices: ["invoices", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/publishInvoiceRequest.js
var require_publishInvoiceRequest = __commonJS({
  "node_modules/square/dist/cjs/models/publishInvoiceRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.publishInvoiceRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.publishInvoiceRequestSchema = (0, schema_1.object)({
      version: ["version", (0, schema_1.number)()],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/publishInvoiceResponse.js
var require_publishInvoiceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/publishInvoiceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.publishInvoiceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var invoice_1 = require_invoice();
    exports.publishInvoiceResponseSchema = (0, schema_1.object)({
      invoice: ["invoice", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/invoiceFilter.js
var require_invoiceFilter = __commonJS({
  "node_modules/square/dist/cjs/models/invoiceFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.invoiceFilterSchema = (0, schema_1.object)({
      locationIds: ["location_ids", (0, schema_1.array)((0, schema_1.string)())],
      customerIds: ["customer_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/invoiceSort.js
var require_invoiceSort = __commonJS({
  "node_modules/square/dist/cjs/models/invoiceSort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceSortSchema = void 0;
    var schema_1 = require_schema2();
    exports.invoiceSortSchema = (0, schema_1.object)({
      field: ["field", (0, schema_1.string)()],
      order: ["order", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/invoiceQuery.js
var require_invoiceQuery = __commonJS({
  "node_modules/square/dist/cjs/models/invoiceQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.invoiceQuerySchema = void 0;
    var schema_1 = require_schema2();
    var invoiceFilter_1 = require_invoiceFilter();
    var invoiceSort_1 = require_invoiceSort();
    exports.invoiceQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.lazy)(function() {
        return invoiceFilter_1.invoiceFilterSchema;
      })],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return invoiceSort_1.invoiceSortSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchInvoicesRequest.js
var require_searchInvoicesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchInvoicesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchInvoicesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var invoiceQuery_1 = require_invoiceQuery();
    exports.searchInvoicesRequestSchema = (0, schema_1.object)({
      query: ["query", (0, schema_1.lazy)(function() {
        return invoiceQuery_1.invoiceQuerySchema;
      })],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchInvoicesResponse.js
var require_searchInvoicesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchInvoicesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchInvoicesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var invoice_1 = require_invoice();
    exports.searchInvoicesResponseSchema = (0, schema_1.object)({
      invoices: ["invoices", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateInvoiceRequest.js
var require_updateInvoiceRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateInvoiceRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateInvoiceRequestSchema = void 0;
    var schema_1 = require_schema2();
    var invoice_1 = require_invoice();
    exports.updateInvoiceRequestSchema = (0, schema_1.object)({
      invoice: ["invoice", (0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      fieldsToClear: ["fields_to_clear", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateInvoiceResponse.js
var require_updateInvoiceResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateInvoiceResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateInvoiceResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var invoice_1 = require_invoice();
    exports.updateInvoiceResponseSchema = (0, schema_1.object)({
      invoice: ["invoice", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return invoice_1.invoiceSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/invoicesApi.js
var require_invoicesApi = __commonJS({
  "node_modules/square/dist/cjs/api/invoicesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.InvoicesApi = void 0;
    var tslib_1 = require_tslib();
    var cancelInvoiceRequest_1 = require_cancelInvoiceRequest();
    var cancelInvoiceResponse_1 = require_cancelInvoiceResponse();
    var createInvoiceRequest_1 = require_createInvoiceRequest();
    var createInvoiceResponse_1 = require_createInvoiceResponse();
    var deleteInvoiceResponse_1 = require_deleteInvoiceResponse();
    var getInvoiceResponse_1 = require_getInvoiceResponse();
    var listInvoicesResponse_1 = require_listInvoicesResponse();
    var publishInvoiceRequest_1 = require_publishInvoiceRequest();
    var publishInvoiceResponse_1 = require_publishInvoiceResponse();
    var searchInvoicesRequest_1 = require_searchInvoicesRequest();
    var searchInvoicesResponse_1 = require_searchInvoicesResponse();
    var updateInvoiceRequest_1 = require_updateInvoiceRequest();
    var updateInvoiceResponse_1 = require_updateInvoiceResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var InvoicesApi = function(_super) {
      tslib_1.__extends(InvoicesApi2, _super);
      function InvoicesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      InvoicesApi2.prototype.listInvoices = function(locationId, cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/invoices");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("location_id", mapped.locationId);
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listInvoicesResponse_1.listInvoicesResponseSchema, requestOptions)];
          });
        });
      };
      InvoicesApi2.prototype.createInvoice = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/invoices");
            mapped = req.prepareArgs({
              body: [body2, createInvoiceRequest_1.createInvoiceRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createInvoiceResponse_1.createInvoiceResponseSchema, requestOptions)];
          });
        });
      };
      InvoicesApi2.prototype.searchInvoices = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/invoices/search");
            mapped = req.prepareArgs({
              body: [body2, searchInvoicesRequest_1.searchInvoicesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchInvoicesResponse_1.searchInvoicesResponseSchema, requestOptions)];
          });
        });
      };
      InvoicesApi2.prototype.deleteInvoice = function(invoiceId, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              invoiceId: [invoiceId, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/invoices/", ""], ["/v2/invoices/", ""])), mapped.invoiceId);
            return [2, req.callAsJson(deleteInvoiceResponse_1.deleteInvoiceResponseSchema, requestOptions)];
          });
        });
      };
      InvoicesApi2.prototype.getInvoice = function(invoiceId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ invoiceId: [invoiceId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/invoices/", ""], ["/v2/invoices/", ""])), mapped.invoiceId);
            return [2, req.callAsJson(getInvoiceResponse_1.getInvoiceResponseSchema, requestOptions)];
          });
        });
      };
      InvoicesApi2.prototype.updateInvoice = function(invoiceId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              invoiceId: [invoiceId, (0, schema_1.string)()],
              body: [body2, updateInvoiceRequest_1.updateInvoiceRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/invoices/", ""], ["/v2/invoices/", ""])), mapped.invoiceId);
            return [2, req.callAsJson(updateInvoiceResponse_1.updateInvoiceResponseSchema, requestOptions)];
          });
        });
      };
      InvoicesApi2.prototype.cancelInvoice = function(invoiceId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              invoiceId: [invoiceId, (0, schema_1.string)()],
              body: [body2, cancelInvoiceRequest_1.cancelInvoiceRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/invoices/", "/cancel"], ["/v2/invoices/", "/cancel"])), mapped.invoiceId);
            return [2, req.callAsJson(cancelInvoiceResponse_1.cancelInvoiceResponseSchema, requestOptions)];
          });
        });
      };
      InvoicesApi2.prototype.publishInvoice = function(invoiceId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              invoiceId: [invoiceId, (0, schema_1.string)()],
              body: [body2, publishInvoiceRequest_1.publishInvoiceRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/invoices/", "/publish"], ["/v2/invoices/", "/publish"])), mapped.invoiceId);
            return [2, req.callAsJson(publishInvoiceResponse_1.publishInvoiceResponseSchema, requestOptions)];
          });
        });
      };
      return InvoicesApi2;
    }(baseApi_1.BaseApi);
    exports.InvoicesApi = InvoicesApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
  }
});

// node_modules/square/dist/cjs/models/breakType.js
var require_breakType = __commonJS({
  "node_modules/square/dist/cjs/models/breakType.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.breakTypeSchema = void 0;
    var schema_1 = require_schema2();
    exports.breakTypeSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.string)()],
      breakName: ["break_name", (0, schema_1.string)()],
      expectedDuration: ["expected_duration", (0, schema_1.string)()],
      isPaid: ["is_paid", (0, schema_1.boolean)()],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createBreakTypeRequest.js
var require_createBreakTypeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createBreakTypeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createBreakTypeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var breakType_1 = require_breakType();
    exports.createBreakTypeRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      breakType: ["break_type", (0, schema_1.lazy)(function() {
        return breakType_1.breakTypeSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createBreakTypeResponse.js
var require_createBreakTypeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createBreakTypeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createBreakTypeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var breakType_1 = require_breakType();
    var error_1 = require_error();
    exports.createBreakTypeResponseSchema = (0, schema_1.object)({
      breakType: ["break_type", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return breakType_1.breakTypeSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/break.js
var require_break = __commonJS({
  "node_modules/square/dist/cjs/models/break.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.breakSchema = void 0;
    var schema_1 = require_schema2();
    exports.breakSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      startAt: ["start_at", (0, schema_1.string)()],
      endAt: ["end_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      breakTypeId: ["break_type_id", (0, schema_1.string)()],
      name: ["name", (0, schema_1.string)()],
      expectedDuration: ["expected_duration", (0, schema_1.string)()],
      isPaid: ["is_paid", (0, schema_1.boolean)()]
    });
  }
});

// node_modules/square/dist/cjs/models/shiftWage.js
var require_shiftWage = __commonJS({
  "node_modules/square/dist/cjs/models/shiftWage.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.shiftWageSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.shiftWageSchema = (0, schema_1.object)({
      title: ["title", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      hourlyRate: ["hourly_rate", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/shift.js
var require_shift = __commonJS({
  "node_modules/square/dist/cjs/models/shift.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.shiftSchema = void 0;
    var schema_1 = require_schema2();
    var break_1 = require_break();
    var shiftWage_1 = require_shiftWage();
    exports.shiftSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      employeeId: ["employee_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      timezone: ["timezone", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      startAt: ["start_at", (0, schema_1.string)()],
      endAt: ["end_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      wage: ["wage", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shiftWage_1.shiftWageSchema;
      }))],
      breaks: ["breaks", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return break_1.breakSchema;
      }))))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/createShiftRequest.js
var require_createShiftRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createShiftRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createShiftRequestSchema = void 0;
    var schema_1 = require_schema2();
    var shift_1 = require_shift();
    exports.createShiftRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      shift: ["shift", (0, schema_1.lazy)(function() {
        return shift_1.shiftSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createShiftResponse.js
var require_createShiftResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createShiftResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createShiftResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var shift_1 = require_shift();
    exports.createShiftResponseSchema = (0, schema_1.object)({
      shift: ["shift", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shift_1.shiftSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteBreakTypeResponse.js
var require_deleteBreakTypeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteBreakTypeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteBreakTypeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteBreakTypeResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/deleteShiftResponse.js
var require_deleteShiftResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteShiftResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteShiftResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteShiftResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/getBreakTypeResponse.js
var require_getBreakTypeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getBreakTypeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getBreakTypeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var breakType_1 = require_breakType();
    var error_1 = require_error();
    exports.getBreakTypeResponseSchema = (0, schema_1.object)({
      breakType: ["break_type", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return breakType_1.breakTypeSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/employeeWage.js
var require_employeeWage = __commonJS({
  "node_modules/square/dist/cjs/models/employeeWage.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.employeeWageSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.employeeWageSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      employeeId: ["employee_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      title: ["title", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      hourlyRate: ["hourly_rate", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getEmployeeWageResponse.js
var require_getEmployeeWageResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getEmployeeWageResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getEmployeeWageResponseSchema = void 0;
    var schema_1 = require_schema2();
    var employeeWage_1 = require_employeeWage();
    var error_1 = require_error();
    exports.getEmployeeWageResponseSchema = (0, schema_1.object)({
      employeeWage: ["employee_wage", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return employeeWage_1.employeeWageSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/getShiftResponse.js
var require_getShiftResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getShiftResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getShiftResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var shift_1 = require_shift();
    exports.getShiftResponseSchema = (0, schema_1.object)({
      shift: ["shift", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shift_1.shiftSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/teamMemberWage.js
var require_teamMemberWage = __commonJS({
  "node_modules/square/dist/cjs/models/teamMemberWage.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.teamMemberWageSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.teamMemberWageSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      title: ["title", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      hourlyRate: ["hourly_rate", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getTeamMemberWageResponse.js
var require_getTeamMemberWageResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getTeamMemberWageResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getTeamMemberWageResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMemberWage_1 = require_teamMemberWage();
    exports.getTeamMemberWageResponseSchema = (0, schema_1.object)({
      teamMemberWage: [
        "team_member_wage",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return teamMemberWage_1.teamMemberWageSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listBreakTypesResponse.js
var require_listBreakTypesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listBreakTypesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listBreakTypesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var breakType_1 = require_breakType();
    var error_1 = require_error();
    exports.listBreakTypesResponseSchema = (0, schema_1.object)({
      breakTypes: ["break_types", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return breakType_1.breakTypeSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listEmployeeWagesResponse.js
var require_listEmployeeWagesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listEmployeeWagesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listEmployeeWagesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var employeeWage_1 = require_employeeWage();
    var error_1 = require_error();
    exports.listEmployeeWagesResponseSchema = (0, schema_1.object)({
      employeeWages: [
        "employee_wages",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return employeeWage_1.employeeWageSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listTeamMemberWagesResponse.js
var require_listTeamMemberWagesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listTeamMemberWagesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listTeamMemberWagesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMemberWage_1 = require_teamMemberWage();
    exports.listTeamMemberWagesResponseSchema = (0, schema_1.object)({
      teamMemberWages: [
        "team_member_wages",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return teamMemberWage_1.teamMemberWageSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/workweekConfig.js
var require_workweekConfig = __commonJS({
  "node_modules/square/dist/cjs/models/workweekConfig.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.workweekConfigSchema = void 0;
    var schema_1 = require_schema2();
    exports.workweekConfigSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      startOfWeek: ["start_of_week", (0, schema_1.string)()],
      startOfDayLocalTime: ["start_of_day_local_time", (0, schema_1.string)()],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listWorkweekConfigsResponse.js
var require_listWorkweekConfigsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listWorkweekConfigsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listWorkweekConfigsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var workweekConfig_1 = require_workweekConfig();
    exports.listWorkweekConfigsResponseSchema = (0, schema_1.object)({
      workweekConfigs: [
        "workweek_configs",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return workweekConfig_1.workweekConfigSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/dateRange.js
var require_dateRange = __commonJS({
  "node_modules/square/dist/cjs/models/dateRange.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.dateRangeSchema = void 0;
    var schema_1 = require_schema2();
    exports.dateRangeSchema = (0, schema_1.object)({
      startDate: ["start_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      endDate: ["end_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/shiftWorkday.js
var require_shiftWorkday = __commonJS({
  "node_modules/square/dist/cjs/models/shiftWorkday.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.shiftWorkdaySchema = void 0;
    var schema_1 = require_schema2();
    var dateRange_1 = require_dateRange();
    exports.shiftWorkdaySchema = (0, schema_1.object)({
      dateRange: ["date_range", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return dateRange_1.dateRangeSchema;
      }))],
      matchShiftsBy: ["match_shifts_by", (0, schema_1.optional)((0, schema_1.string)())],
      defaultTimezone: ["default_timezone", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/shiftFilter.js
var require_shiftFilter = __commonJS({
  "node_modules/square/dist/cjs/models/shiftFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.shiftFilterSchema = void 0;
    var schema_1 = require_schema2();
    var shiftWorkday_1 = require_shiftWorkday();
    var timeRange_1 = require_timeRange();
    exports.shiftFilterSchema = (0, schema_1.object)({
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      employeeIds: ["employee_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      start: ["start", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      end: ["end", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      workday: ["workday", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shiftWorkday_1.shiftWorkdaySchema;
      }))],
      teamMemberIds: ["team_member_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/shiftSort.js
var require_shiftSort = __commonJS({
  "node_modules/square/dist/cjs/models/shiftSort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.shiftSortSchema = void 0;
    var schema_1 = require_schema2();
    exports.shiftSortSchema = (0, schema_1.object)({
      field: ["field", (0, schema_1.optional)((0, schema_1.string)())],
      order: ["order", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/shiftQuery.js
var require_shiftQuery = __commonJS({
  "node_modules/square/dist/cjs/models/shiftQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.shiftQuerySchema = void 0;
    var schema_1 = require_schema2();
    var shiftFilter_1 = require_shiftFilter();
    var shiftSort_1 = require_shiftSort();
    exports.shiftQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shiftFilter_1.shiftFilterSchema;
      }))],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shiftSort_1.shiftSortSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchShiftsRequest.js
var require_searchShiftsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchShiftsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchShiftsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var shiftQuery_1 = require_shiftQuery();
    exports.searchShiftsRequestSchema = (0, schema_1.object)({
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shiftQuery_1.shiftQuerySchema;
      }))],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchShiftsResponse.js
var require_searchShiftsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchShiftsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchShiftsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var shift_1 = require_shift();
    exports.searchShiftsResponseSchema = (0, schema_1.object)({
      shifts: ["shifts", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return shift_1.shiftSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateBreakTypeRequest.js
var require_updateBreakTypeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateBreakTypeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateBreakTypeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var breakType_1 = require_breakType();
    exports.updateBreakTypeRequestSchema = (0, schema_1.object)({ breakType: ["break_type", (0, schema_1.lazy)(function() {
      return breakType_1.breakTypeSchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/updateBreakTypeResponse.js
var require_updateBreakTypeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateBreakTypeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateBreakTypeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var breakType_1 = require_breakType();
    var error_1 = require_error();
    exports.updateBreakTypeResponseSchema = (0, schema_1.object)({
      breakType: ["break_type", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return breakType_1.breakTypeSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateShiftRequest.js
var require_updateShiftRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateShiftRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateShiftRequestSchema = void 0;
    var schema_1 = require_schema2();
    var shift_1 = require_shift();
    exports.updateShiftRequestSchema = (0, schema_1.object)({
      shift: ["shift", (0, schema_1.lazy)(function() {
        return shift_1.shiftSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/updateShiftResponse.js
var require_updateShiftResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateShiftResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateShiftResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var shift_1 = require_shift();
    exports.updateShiftResponseSchema = (0, schema_1.object)({
      shift: ["shift", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return shift_1.shiftSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateWorkweekConfigRequest.js
var require_updateWorkweekConfigRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateWorkweekConfigRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWorkweekConfigRequestSchema = void 0;
    var schema_1 = require_schema2();
    var workweekConfig_1 = require_workweekConfig();
    exports.updateWorkweekConfigRequestSchema = (0, schema_1.object)({ workweekConfig: ["workweek_config", (0, schema_1.lazy)(function() {
      return workweekConfig_1.workweekConfigSchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/updateWorkweekConfigResponse.js
var require_updateWorkweekConfigResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateWorkweekConfigResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWorkweekConfigResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var workweekConfig_1 = require_workweekConfig();
    exports.updateWorkweekConfigResponseSchema = (0, schema_1.object)({
      workweekConfig: [
        "workweek_config",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return workweekConfig_1.workweekConfigSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/laborApi.js
var require_laborApi = __commonJS({
  "node_modules/square/dist/cjs/api/laborApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.LaborApi = void 0;
    var tslib_1 = require_tslib();
    var createBreakTypeRequest_1 = require_createBreakTypeRequest();
    var createBreakTypeResponse_1 = require_createBreakTypeResponse();
    var createShiftRequest_1 = require_createShiftRequest();
    var createShiftResponse_1 = require_createShiftResponse();
    var deleteBreakTypeResponse_1 = require_deleteBreakTypeResponse();
    var deleteShiftResponse_1 = require_deleteShiftResponse();
    var getBreakTypeResponse_1 = require_getBreakTypeResponse();
    var getEmployeeWageResponse_1 = require_getEmployeeWageResponse();
    var getShiftResponse_1 = require_getShiftResponse();
    var getTeamMemberWageResponse_1 = require_getTeamMemberWageResponse();
    var listBreakTypesResponse_1 = require_listBreakTypesResponse();
    var listEmployeeWagesResponse_1 = require_listEmployeeWagesResponse();
    var listTeamMemberWagesResponse_1 = require_listTeamMemberWagesResponse();
    var listWorkweekConfigsResponse_1 = require_listWorkweekConfigsResponse();
    var searchShiftsRequest_1 = require_searchShiftsRequest();
    var searchShiftsResponse_1 = require_searchShiftsResponse();
    var updateBreakTypeRequest_1 = require_updateBreakTypeRequest();
    var updateBreakTypeResponse_1 = require_updateBreakTypeResponse();
    var updateShiftRequest_1 = require_updateShiftRequest();
    var updateShiftResponse_1 = require_updateShiftResponse();
    var updateWorkweekConfigRequest_1 = require_updateWorkweekConfigRequest();
    var updateWorkweekConfigResponse_1 = require_updateWorkweekConfigResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var LaborApi = function(_super) {
      tslib_1.__extends(LaborApi2, _super);
      function LaborApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      LaborApi2.prototype.listBreakTypes = function(locationId, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/labor/break-types");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("location_id", mapped.locationId);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listBreakTypesResponse_1.listBreakTypesResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.createBreakType = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/labor/break-types");
            mapped = req.prepareArgs({
              body: [body2, createBreakTypeRequest_1.createBreakTypeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createBreakTypeResponse_1.createBreakTypeResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.deleteBreakType = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/labor/break-types/", ""], ["/v2/labor/break-types/", ""])), mapped.id);
            return [2, req.callAsJson(deleteBreakTypeResponse_1.deleteBreakTypeResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.getBreakType = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/labor/break-types/", ""], ["/v2/labor/break-types/", ""])), mapped.id);
            return [2, req.callAsJson(getBreakTypeResponse_1.getBreakTypeResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.updateBreakType = function(id, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              id: [id, (0, schema_1.string)()],
              body: [body2, updateBreakTypeRequest_1.updateBreakTypeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/labor/break-types/", ""], ["/v2/labor/break-types/", ""])), mapped.id);
            return [2, req.callAsJson(updateBreakTypeResponse_1.updateBreakTypeResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.listEmployeeWages = function(employeeId, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/labor/employee-wages");
            mapped = req.prepareArgs({
              employeeId: [employeeId, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("employee_id", mapped.employeeId);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.deprecated("LaborApi.listEmployeeWages");
            return [2, req.callAsJson(listEmployeeWagesResponse_1.listEmployeeWagesResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.getEmployeeWage = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/labor/employee-wages/", ""], ["/v2/labor/employee-wages/", ""])), mapped.id);
            req.deprecated("LaborApi.getEmployeeWage");
            return [2, req.callAsJson(getEmployeeWageResponse_1.getEmployeeWageResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.createShift = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/labor/shifts");
            mapped = req.prepareArgs({ body: [body2, createShiftRequest_1.createShiftRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createShiftResponse_1.createShiftResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.searchShifts = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/labor/shifts/search");
            mapped = req.prepareArgs({ body: [body2, searchShiftsRequest_1.searchShiftsRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchShiftsResponse_1.searchShiftsResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.deleteShift = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/labor/shifts/", ""], ["/v2/labor/shifts/", ""])), mapped.id);
            return [2, req.callAsJson(deleteShiftResponse_1.deleteShiftResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.getShift = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/labor/shifts/", ""], ["/v2/labor/shifts/", ""])), mapped.id);
            return [2, req.callAsJson(getShiftResponse_1.getShiftResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.updateShift = function(id, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              id: [id, (0, schema_1.string)()],
              body: [body2, updateShiftRequest_1.updateShiftRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/labor/shifts/", ""], ["/v2/labor/shifts/", ""])), mapped.id);
            return [2, req.callAsJson(updateShiftResponse_1.updateShiftResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.listTeamMemberWages = function(teamMemberId, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/labor/team-member-wages");
            mapped = req.prepareArgs({
              teamMemberId: [teamMemberId, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("team_member_id", mapped.teamMemberId);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listTeamMemberWagesResponse_1.listTeamMemberWagesResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.getTeamMemberWage = function(id, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ id: [id, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject(["/v2/labor/team-member-wages/", ""], ["/v2/labor/team-member-wages/", ""])), mapped.id);
            return [2, req.callAsJson(getTeamMemberWageResponse_1.getTeamMemberWageResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.listWorkweekConfigs = function(limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/labor/workweek-configs");
            mapped = req.prepareArgs({
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listWorkweekConfigsResponse_1.listWorkweekConfigsResponseSchema, requestOptions)];
          });
        });
      };
      LaborApi2.prototype.updateWorkweekConfig = function(id, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              id: [id, (0, schema_1.string)()],
              body: [body2, updateWorkweekConfigRequest_1.updateWorkweekConfigRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject(["/v2/labor/workweek-configs/", ""], ["/v2/labor/workweek-configs/", ""])), mapped.id);
            return [2, req.callAsJson(updateWorkweekConfigResponse_1.updateWorkweekConfigResponseSchema, requestOptions)];
          });
        });
      };
      return LaborApi2;
    }(baseApi_1.BaseApi);
    exports.LaborApi = LaborApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
    var templateObject_8;
    var templateObject_9;
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest.js
var require_bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequestSchema = (0, schema_1.object)({ key: ["key", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesRequest.js
var require_bulkDeleteLocationCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteLocationCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest_1 = require_bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest();
    exports.bulkDeleteLocationCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequest_1.bulkDeleteLocationCustomAttributesRequestLocationCustomAttributeDeleteRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse.js
var require_bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponseSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesResponse.js
var require_bulkDeleteLocationCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteLocationCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteLocationCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse_1 = require_bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse();
    var error_1 = require_error();
    exports.bulkDeleteLocationCustomAttributesResponseSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponse_1.bulkDeleteLocationCustomAttributesResponseLocationCustomAttributeDeleteResponseSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest.js
var require_bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequestSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.string)()],
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesRequest.js
var require_bulkUpsertLocationCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertLocationCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest_1 = require_bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest();
    exports.bulkUpsertLocationCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequest_1.bulkUpsertLocationCustomAttributesRequestLocationCustomAttributeUpsertRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse.js
var require_bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponseSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesResponse.js
var require_bulkUpsertLocationCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertLocationCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertLocationCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse_1 = require_bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse();
    var error_1 = require_error();
    exports.bulkUpsertLocationCustomAttributesResponseSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponse_1.bulkUpsertLocationCustomAttributesResponseLocationCustomAttributeUpsertResponseSchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createLocationCustomAttributeDefinitionRequest.js
var require_createLocationCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createLocationCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLocationCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.createLocationCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createLocationCustomAttributeDefinitionResponse.js
var require_createLocationCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createLocationCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLocationCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.createLocationCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteLocationCustomAttributeDefinitionResponse.js
var require_deleteLocationCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteLocationCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteLocationCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteLocationCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/deleteLocationCustomAttributeResponse.js
var require_deleteLocationCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteLocationCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteLocationCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteLocationCustomAttributeResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listLocationCustomAttributeDefinitionsResponse.js
var require_listLocationCustomAttributeDefinitionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listLocationCustomAttributeDefinitionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listLocationCustomAttributeDefinitionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.listLocationCustomAttributeDefinitionsResponseSchema = (0, schema_1.object)({
      customAttributeDefinitions: [
        "custom_attribute_definitions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listLocationCustomAttributesResponse.js
var require_listLocationCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listLocationCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listLocationCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.listLocationCustomAttributesResponseSchema = (0, schema_1.object)({
      customAttributes: [
        "custom_attributes",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveLocationCustomAttributeDefinitionResponse.js
var require_retrieveLocationCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveLocationCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveLocationCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.retrieveLocationCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveLocationCustomAttributeResponse.js
var require_retrieveLocationCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveLocationCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveLocationCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.retrieveLocationCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateLocationCustomAttributeDefinitionRequest.js
var require_updateLocationCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateLocationCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateLocationCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.updateLocationCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateLocationCustomAttributeDefinitionResponse.js
var require_updateLocationCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateLocationCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateLocationCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.updateLocationCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertLocationCustomAttributeRequest.js
var require_upsertLocationCustomAttributeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/upsertLocationCustomAttributeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertLocationCustomAttributeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.upsertLocationCustomAttributeRequestSchema = (0, schema_1.object)({
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertLocationCustomAttributeResponse.js
var require_upsertLocationCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/upsertLocationCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertLocationCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.upsertLocationCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/locationCustomAttributesApi.js
var require_locationCustomAttributesApi = __commonJS({
  "node_modules/square/dist/cjs/api/locationCustomAttributesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.LocationCustomAttributesApi = void 0;
    var tslib_1 = require_tslib();
    var bulkDeleteLocationCustomAttributesRequest_1 = require_bulkDeleteLocationCustomAttributesRequest();
    var bulkDeleteLocationCustomAttributesResponse_1 = require_bulkDeleteLocationCustomAttributesResponse();
    var bulkUpsertLocationCustomAttributesRequest_1 = require_bulkUpsertLocationCustomAttributesRequest();
    var bulkUpsertLocationCustomAttributesResponse_1 = require_bulkUpsertLocationCustomAttributesResponse();
    var createLocationCustomAttributeDefinitionRequest_1 = require_createLocationCustomAttributeDefinitionRequest();
    var createLocationCustomAttributeDefinitionResponse_1 = require_createLocationCustomAttributeDefinitionResponse();
    var deleteLocationCustomAttributeDefinitionResponse_1 = require_deleteLocationCustomAttributeDefinitionResponse();
    var deleteLocationCustomAttributeResponse_1 = require_deleteLocationCustomAttributeResponse();
    var listLocationCustomAttributeDefinitionsResponse_1 = require_listLocationCustomAttributeDefinitionsResponse();
    var listLocationCustomAttributesResponse_1 = require_listLocationCustomAttributesResponse();
    var retrieveLocationCustomAttributeDefinitionResponse_1 = require_retrieveLocationCustomAttributeDefinitionResponse();
    var retrieveLocationCustomAttributeResponse_1 = require_retrieveLocationCustomAttributeResponse();
    var updateLocationCustomAttributeDefinitionRequest_1 = require_updateLocationCustomAttributeDefinitionRequest();
    var updateLocationCustomAttributeDefinitionResponse_1 = require_updateLocationCustomAttributeDefinitionResponse();
    var upsertLocationCustomAttributeRequest_1 = require_upsertLocationCustomAttributeRequest();
    var upsertLocationCustomAttributeResponse_1 = require_upsertLocationCustomAttributeResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var LocationCustomAttributesApi = function(_super) {
      tslib_1.__extends(LocationCustomAttributesApi2, _super);
      function LocationCustomAttributesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      LocationCustomAttributesApi2.prototype.listLocationCustomAttributeDefinitions = function(visibilityFilter, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/locations/custom-attribute-definitions");
            mapped = req.prepareArgs({
              visibilityFilter: [visibilityFilter, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("visibility_filter", mapped.visibilityFilter);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listLocationCustomAttributeDefinitionsResponse_1.listLocationCustomAttributeDefinitionsResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.createLocationCustomAttributeDefinition = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/locations/custom-attribute-definitions");
            mapped = req.prepareArgs({
              body: [body2, createLocationCustomAttributeDefinitionRequest_1.createLocationCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createLocationCustomAttributeDefinitionResponse_1.createLocationCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.deleteLocationCustomAttributeDefinition = function(key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ key: [key2, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/locations/custom-attribute-definitions/", ""], ["/v2/locations/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(deleteLocationCustomAttributeDefinitionResponse_1.deleteLocationCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.retrieveLocationCustomAttributeDefinition = function(key2, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/locations/custom-attribute-definitions/", ""], ["/v2/locations/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(retrieveLocationCustomAttributeDefinitionResponse_1.retrieveLocationCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.updateLocationCustomAttributeDefinition = function(key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              body: [body2, updateLocationCustomAttributeDefinitionRequest_1.updateLocationCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/locations/custom-attribute-definitions/", ""], ["/v2/locations/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(updateLocationCustomAttributeDefinitionResponse_1.updateLocationCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.bulkDeleteLocationCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/locations/custom-attributes/bulk-delete");
            mapped = req.prepareArgs({
              body: [body2, bulkDeleteLocationCustomAttributesRequest_1.bulkDeleteLocationCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkDeleteLocationCustomAttributesResponse_1.bulkDeleteLocationCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.bulkUpsertLocationCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/locations/custom-attributes/bulk-upsert");
            mapped = req.prepareArgs({
              body: [body2, bulkUpsertLocationCustomAttributesRequest_1.bulkUpsertLocationCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkUpsertLocationCustomAttributesResponse_1.bulkUpsertLocationCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.listLocationCustomAttributes = function(locationId, visibilityFilter, limit, cursor, withDefinitions, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              visibilityFilter: [visibilityFilter, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              withDefinitions: [withDefinitions, (0, schema_1.optional)((0, schema_1.boolean)())]
            });
            req.query("visibility_filter", mapped.visibilityFilter);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("with_definitions", mapped.withDefinitions);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/locations/", "/custom-attributes"], ["/v2/locations/", "/custom-attributes"])), mapped.locationId);
            return [2, req.callAsJson(listLocationCustomAttributesResponse_1.listLocationCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.deleteLocationCustomAttribute = function(locationId, key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/locations/", "/custom-attributes/", ""], ["/v2/locations/", "/custom-attributes/", ""])), mapped.locationId, mapped.key);
            return [2, req.callAsJson(deleteLocationCustomAttributeResponse_1.deleteLocationCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.retrieveLocationCustomAttribute = function(locationId, key2, withDefinition, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              withDefinition: [withDefinition, (0, schema_1.optional)((0, schema_1.boolean)())],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("with_definition", mapped.withDefinition);
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/locations/", "/custom-attributes/", ""], ["/v2/locations/", "/custom-attributes/", ""])), mapped.locationId, mapped.key);
            return [2, req.callAsJson(retrieveLocationCustomAttributeResponse_1.retrieveLocationCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      LocationCustomAttributesApi2.prototype.upsertLocationCustomAttribute = function(locationId, key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              body: [body2, upsertLocationCustomAttributeRequest_1.upsertLocationCustomAttributeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/locations/", "/custom-attributes/", ""], ["/v2/locations/", "/custom-attributes/", ""])), mapped.locationId, mapped.key);
            return [2, req.callAsJson(upsertLocationCustomAttributeResponse_1.upsertLocationCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      return LocationCustomAttributesApi2;
    }(baseApi_1.BaseApi);
    exports.LocationCustomAttributesApi = LocationCustomAttributesApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
  }
});

// node_modules/square/dist/cjs/models/businessHoursPeriod.js
var require_businessHoursPeriod = __commonJS({
  "node_modules/square/dist/cjs/models/businessHoursPeriod.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.businessHoursPeriodSchema = void 0;
    var schema_1 = require_schema2();
    exports.businessHoursPeriodSchema = (0, schema_1.object)({
      dayOfWeek: ["day_of_week", (0, schema_1.optional)((0, schema_1.string)())],
      startLocalTime: ["start_local_time", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      endLocalTime: ["end_local_time", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/businessHours.js
var require_businessHours = __commonJS({
  "node_modules/square/dist/cjs/models/businessHours.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.businessHoursSchema = void 0;
    var schema_1 = require_schema2();
    var businessHoursPeriod_1 = require_businessHoursPeriod();
    exports.businessHoursSchema = (0, schema_1.object)({
      periods: [
        "periods",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return businessHoursPeriod_1.businessHoursPeriodSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/coordinates.js
var require_coordinates = __commonJS({
  "node_modules/square/dist/cjs/models/coordinates.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.coordinatesSchema = void 0;
    var schema_1 = require_schema2();
    exports.coordinatesSchema = (0, schema_1.object)({
      latitude: ["latitude", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      longitude: ["longitude", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/taxIds.js
var require_taxIds = __commonJS({
  "node_modules/square/dist/cjs/models/taxIds.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.taxIdsSchema = void 0;
    var schema_1 = require_schema2();
    exports.taxIdsSchema = (0, schema_1.object)({
      euVat: ["eu_vat", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      frSiret: ["fr_siret", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      frNaf: ["fr_naf", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      esNif: ["es_nif", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/location.js
var require_location = __commonJS({
  "node_modules/square/dist/cjs/models/location.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.locationSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var businessHours_1 = require_businessHours();
    var coordinates_1 = require_coordinates();
    var taxIds_1 = require_taxIds();
    exports.locationSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      timezone: ["timezone", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      capabilities: ["capabilities", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.string)())],
      country: ["country", (0, schema_1.optional)((0, schema_1.string)())],
      languageCode: ["language_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      currency: ["currency", (0, schema_1.optional)((0, schema_1.string)())],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      businessName: ["business_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      websiteUrl: ["website_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      businessHours: ["business_hours", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return businessHours_1.businessHoursSchema;
      }))],
      businessEmail: ["business_email", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      description: ["description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      twitterUsername: ["twitter_username", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      instagramUsername: ["instagram_username", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      facebookUrl: ["facebook_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      coordinates: ["coordinates", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return coordinates_1.coordinatesSchema;
      }))],
      logoUrl: ["logo_url", (0, schema_1.optional)((0, schema_1.string)())],
      posBackgroundUrl: ["pos_background_url", (0, schema_1.optional)((0, schema_1.string)())],
      mcc: ["mcc", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      fullFormatLogoUrl: ["full_format_logo_url", (0, schema_1.optional)((0, schema_1.string)())],
      taxIds: ["tax_ids", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return taxIds_1.taxIdsSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createLocationRequest.js
var require_createLocationRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createLocationRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLocationRequestSchema = void 0;
    var schema_1 = require_schema2();
    var location_1 = require_location();
    exports.createLocationRequestSchema = (0, schema_1.object)({ location: ["location", (0, schema_1.optional)((0, schema_1.lazy)(function() {
      return location_1.locationSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/createLocationResponse.js
var require_createLocationResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createLocationResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLocationResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var location_1 = require_location();
    exports.createLocationResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      location: ["location", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return location_1.locationSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listLocationsResponse.js
var require_listLocationsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listLocationsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listLocationsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var location_1 = require_location();
    exports.listLocationsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      locations: ["locations", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return location_1.locationSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveLocationResponse.js
var require_retrieveLocationResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveLocationResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveLocationResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var location_1 = require_location();
    exports.retrieveLocationResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      location: ["location", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return location_1.locationSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateLocationRequest.js
var require_updateLocationRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateLocationRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateLocationRequestSchema = void 0;
    var schema_1 = require_schema2();
    var location_1 = require_location();
    exports.updateLocationRequestSchema = (0, schema_1.object)({ location: ["location", (0, schema_1.optional)((0, schema_1.lazy)(function() {
      return location_1.locationSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/updateLocationResponse.js
var require_updateLocationResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateLocationResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateLocationResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var location_1 = require_location();
    exports.updateLocationResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      location: ["location", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return location_1.locationSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/locationsApi.js
var require_locationsApi = __commonJS({
  "node_modules/square/dist/cjs/api/locationsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.LocationsApi = void 0;
    var tslib_1 = require_tslib();
    var createLocationRequest_1 = require_createLocationRequest();
    var createLocationResponse_1 = require_createLocationResponse();
    var listLocationsResponse_1 = require_listLocationsResponse();
    var retrieveLocationResponse_1 = require_retrieveLocationResponse();
    var updateLocationRequest_1 = require_updateLocationRequest();
    var updateLocationResponse_1 = require_updateLocationResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var LocationsApi = function(_super) {
      tslib_1.__extends(LocationsApi2, _super);
      function LocationsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      LocationsApi2.prototype.listLocations = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/locations");
            return [2, req.callAsJson(listLocationsResponse_1.listLocationsResponseSchema, requestOptions)];
          });
        });
      };
      LocationsApi2.prototype.createLocation = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/locations");
            mapped = req.prepareArgs({
              body: [body2, createLocationRequest_1.createLocationRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createLocationResponse_1.createLocationResponseSchema, requestOptions)];
          });
        });
      };
      LocationsApi2.prototype.retrieveLocation = function(locationId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ locationId: [locationId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/locations/", ""], ["/v2/locations/", ""])), mapped.locationId);
            return [2, req.callAsJson(retrieveLocationResponse_1.retrieveLocationResponseSchema, requestOptions)];
          });
        });
      };
      LocationsApi2.prototype.updateLocation = function(locationId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              body: [body2, updateLocationRequest_1.updateLocationRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/locations/", ""], ["/v2/locations/", ""])), mapped.locationId);
            return [2, req.callAsJson(updateLocationResponse_1.updateLocationResponseSchema, requestOptions)];
          });
        });
      };
      return LocationsApi2;
    }(baseApi_1.BaseApi);
    exports.LocationsApi = LocationsApi;
    var templateObject_1;
    var templateObject_2;
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventAccumulatePoints.js
var require_loyaltyEventAccumulatePoints = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventAccumulatePoints.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventAccumulatePointsSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventAccumulatePointsSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.optional)((0, schema_1.string)())],
      points: ["points", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/accumulateLoyaltyPointsRequest.js
var require_accumulateLoyaltyPointsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/accumulateLoyaltyPointsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.accumulateLoyaltyPointsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyEventAccumulatePoints_1 = require_loyaltyEventAccumulatePoints();
    exports.accumulateLoyaltyPointsRequestSchema = (0, schema_1.object)({
      accumulatePoints: [
        "accumulate_points",
        (0, schema_1.lazy)(function() {
          return loyaltyEventAccumulatePoints_1.loyaltyEventAccumulatePointsSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      locationId: ["location_id", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventAccumulatePromotionPoints.js
var require_loyaltyEventAccumulatePromotionPoints = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventAccumulatePromotionPoints.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventAccumulatePromotionPointsSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventAccumulatePromotionPointsSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.optional)((0, schema_1.string)())],
      loyaltyPromotionId: ["loyalty_promotion_id", (0, schema_1.optional)((0, schema_1.string)())],
      points: ["points", (0, schema_1.number)()],
      orderId: ["order_id", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventAdjustPoints.js
var require_loyaltyEventAdjustPoints = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventAdjustPoints.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventAdjustPointsSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventAdjustPointsSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.optional)((0, schema_1.string)())],
      points: ["points", (0, schema_1.number)()],
      reason: ["reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventCreateReward.js
var require_loyaltyEventCreateReward = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventCreateReward.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventCreateRewardSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventCreateRewardSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.string)()],
      rewardId: ["reward_id", (0, schema_1.optional)((0, schema_1.string)())],
      points: ["points", (0, schema_1.number)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventDeleteReward.js
var require_loyaltyEventDeleteReward = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventDeleteReward.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventDeleteRewardSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventDeleteRewardSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.string)()],
      rewardId: ["reward_id", (0, schema_1.optional)((0, schema_1.string)())],
      points: ["points", (0, schema_1.number)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventExpirePoints.js
var require_loyaltyEventExpirePoints = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventExpirePoints.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventExpirePointsSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventExpirePointsSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.string)()],
      points: ["points", (0, schema_1.number)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventOther.js
var require_loyaltyEventOther = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventOther.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventOtherSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventOtherSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.string)()],
      points: ["points", (0, schema_1.number)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventRedeemReward.js
var require_loyaltyEventRedeemReward = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventRedeemReward.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventRedeemRewardSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventRedeemRewardSchema = (0, schema_1.object)({
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.string)()],
      rewardId: ["reward_id", (0, schema_1.optional)((0, schema_1.string)())],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEvent.js
var require_loyaltyEvent = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEvent.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyEventAccumulatePoints_1 = require_loyaltyEventAccumulatePoints();
    var loyaltyEventAccumulatePromotionPoints_1 = require_loyaltyEventAccumulatePromotionPoints();
    var loyaltyEventAdjustPoints_1 = require_loyaltyEventAdjustPoints();
    var loyaltyEventCreateReward_1 = require_loyaltyEventCreateReward();
    var loyaltyEventDeleteReward_1 = require_loyaltyEventDeleteReward();
    var loyaltyEventExpirePoints_1 = require_loyaltyEventExpirePoints();
    var loyaltyEventOther_1 = require_loyaltyEventOther();
    var loyaltyEventRedeemReward_1 = require_loyaltyEventRedeemReward();
    exports.loyaltyEventSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      type: ["type", (0, schema_1.string)()],
      createdAt: ["created_at", (0, schema_1.string)()],
      accumulatePoints: [
        "accumulate_points",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventAccumulatePoints_1.loyaltyEventAccumulatePointsSchema;
        }))
      ],
      createReward: [
        "create_reward",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventCreateReward_1.loyaltyEventCreateRewardSchema;
        }))
      ],
      redeemReward: [
        "redeem_reward",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventRedeemReward_1.loyaltyEventRedeemRewardSchema;
        }))
      ],
      deleteReward: [
        "delete_reward",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventDeleteReward_1.loyaltyEventDeleteRewardSchema;
        }))
      ],
      adjustPoints: [
        "adjust_points",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventAdjustPoints_1.loyaltyEventAdjustPointsSchema;
        }))
      ],
      loyaltyAccountId: ["loyalty_account_id", (0, schema_1.string)()],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      source: ["source", (0, schema_1.string)()],
      expirePoints: [
        "expire_points",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventExpirePoints_1.loyaltyEventExpirePointsSchema;
        }))
      ],
      otherEvent: ["other_event", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyEventOther_1.loyaltyEventOtherSchema;
      }))],
      accumulatePromotionPoints: [
        "accumulate_promotion_points",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventAccumulatePromotionPoints_1.loyaltyEventAccumulatePromotionPointsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/accumulateLoyaltyPointsResponse.js
var require_accumulateLoyaltyPointsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/accumulateLoyaltyPointsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.accumulateLoyaltyPointsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyEvent_1 = require_loyaltyEvent();
    exports.accumulateLoyaltyPointsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      event: ["event", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyEvent_1.loyaltyEventSchema;
      }))],
      events: ["events", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return loyaltyEvent_1.loyaltyEventSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/adjustLoyaltyPointsRequest.js
var require_adjustLoyaltyPointsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/adjustLoyaltyPointsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.adjustLoyaltyPointsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyEventAdjustPoints_1 = require_loyaltyEventAdjustPoints();
    exports.adjustLoyaltyPointsRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      adjustPoints: ["adjust_points", (0, schema_1.lazy)(function() {
        return loyaltyEventAdjustPoints_1.loyaltyEventAdjustPointsSchema;
      })],
      allowNegativeBalance: [
        "allow_negative_balance",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/adjustLoyaltyPointsResponse.js
var require_adjustLoyaltyPointsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/adjustLoyaltyPointsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.adjustLoyaltyPointsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyEvent_1 = require_loyaltyEvent();
    exports.adjustLoyaltyPointsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      event: ["event", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyEvent_1.loyaltyEventSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/calculateLoyaltyPointsRequest.js
var require_calculateLoyaltyPointsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/calculateLoyaltyPointsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.calculateLoyaltyPointsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.calculateLoyaltyPointsRequestSchema = (0, schema_1.object)({
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      transactionAmountMoney: [
        "transaction_amount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      loyaltyAccountId: ["loyalty_account_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/calculateLoyaltyPointsResponse.js
var require_calculateLoyaltyPointsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/calculateLoyaltyPointsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.calculateLoyaltyPointsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.calculateLoyaltyPointsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      points: ["points", (0, schema_1.optional)((0, schema_1.number)())],
      promotionPoints: ["promotion_points", (0, schema_1.optional)((0, schema_1.number)())]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyPromotionAvailableTimeData.js
var require_loyaltyPromotionAvailableTimeData = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyPromotionAvailableTimeData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyPromotionAvailableTimeDataSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyPromotionAvailableTimeDataSchema = (0, schema_1.object)({
      startDate: ["start_date", (0, schema_1.optional)((0, schema_1.string)())],
      endDate: ["end_date", (0, schema_1.optional)((0, schema_1.string)())],
      timePeriods: ["time_periods", (0, schema_1.array)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyPromotionIncentivePointsAdditionData.js
var require_loyaltyPromotionIncentivePointsAdditionData = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyPromotionIncentivePointsAdditionData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyPromotionIncentivePointsAdditionDataSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyPromotionIncentivePointsAdditionDataSchema = (0, schema_1.object)({ pointsAddition: ["points_addition", (0, schema_1.number)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyPromotionIncentivePointsMultiplierData.js
var require_loyaltyPromotionIncentivePointsMultiplierData = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyPromotionIncentivePointsMultiplierData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyPromotionIncentivePointsMultiplierDataSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyPromotionIncentivePointsMultiplierDataSchema = (0, schema_1.object)({ pointsMultiplier: ["points_multiplier", (0, schema_1.number)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyPromotionIncentive.js
var require_loyaltyPromotionIncentive = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyPromotionIncentive.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyPromotionIncentiveSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyPromotionIncentivePointsAdditionData_1 = require_loyaltyPromotionIncentivePointsAdditionData();
    var loyaltyPromotionIncentivePointsMultiplierData_1 = require_loyaltyPromotionIncentivePointsMultiplierData();
    exports.loyaltyPromotionIncentiveSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.string)()],
      pointsMultiplierData: [
        "points_multiplier_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyPromotionIncentivePointsMultiplierData_1.loyaltyPromotionIncentivePointsMultiplierDataSchema;
        }))
      ],
      pointsAdditionData: [
        "points_addition_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyPromotionIncentivePointsAdditionData_1.loyaltyPromotionIncentivePointsAdditionDataSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyPromotionTriggerLimit.js
var require_loyaltyPromotionTriggerLimit = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyPromotionTriggerLimit.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyPromotionTriggerLimitSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyPromotionTriggerLimitSchema = (0, schema_1.object)({ times: ["times", (0, schema_1.number)()], interval: ["interval", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyPromotion.js
var require_loyaltyPromotion = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyPromotion.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyPromotionSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyPromotionAvailableTimeData_1 = require_loyaltyPromotionAvailableTimeData();
    var loyaltyPromotionIncentive_1 = require_loyaltyPromotionIncentive();
    var loyaltyPromotionTriggerLimit_1 = require_loyaltyPromotionTriggerLimit();
    var money_1 = require_money();
    exports.loyaltyPromotionSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.string)()],
      incentive: ["incentive", (0, schema_1.lazy)(function() {
        return loyaltyPromotionIncentive_1.loyaltyPromotionIncentiveSchema;
      })],
      availableTime: [
        "available_time",
        (0, schema_1.lazy)(function() {
          return loyaltyPromotionAvailableTimeData_1.loyaltyPromotionAvailableTimeDataSchema;
        })
      ],
      triggerLimit: [
        "trigger_limit",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyPromotionTriggerLimit_1.loyaltyPromotionTriggerLimitSchema;
        }))
      ],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      canceledAt: ["canceled_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      loyaltyProgramId: ["loyalty_program_id", (0, schema_1.optional)((0, schema_1.string)())],
      minimumSpendAmountMoney: [
        "minimum_spend_amount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      qualifyingItemVariationIds: [
        "qualifying_item_variation_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      qualifyingCategoryIds: [
        "qualifying_category_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelLoyaltyPromotionResponse.js
var require_cancelLoyaltyPromotionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelLoyaltyPromotionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelLoyaltyPromotionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyPromotion_1 = require_loyaltyPromotion();
    exports.cancelLoyaltyPromotionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      loyaltyPromotion: [
        "loyalty_promotion",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyPromotion_1.loyaltyPromotionSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyAccountExpiringPointDeadline.js
var require_loyaltyAccountExpiringPointDeadline = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyAccountExpiringPointDeadline.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyAccountExpiringPointDeadlineSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyAccountExpiringPointDeadlineSchema = (0, schema_1.object)({ points: ["points", (0, schema_1.number)()], expiresAt: ["expires_at", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyAccountMapping.js
var require_loyaltyAccountMapping = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyAccountMapping.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyAccountMappingSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyAccountMappingSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyAccount.js
var require_loyaltyAccount = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyAccount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyAccountSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyAccountExpiringPointDeadline_1 = require_loyaltyAccountExpiringPointDeadline();
    var loyaltyAccountMapping_1 = require_loyaltyAccountMapping();
    exports.loyaltyAccountSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      programId: ["program_id", (0, schema_1.string)()],
      balance: ["balance", (0, schema_1.optional)((0, schema_1.number)())],
      lifetimePoints: ["lifetime_points", (0, schema_1.optional)((0, schema_1.number)())],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      enrolledAt: ["enrolled_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      mapping: ["mapping", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyAccountMapping_1.loyaltyAccountMappingSchema;
      }))],
      expiringPointDeadlines: [
        "expiring_point_deadlines",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return loyaltyAccountExpiringPointDeadline_1.loyaltyAccountExpiringPointDeadlineSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createLoyaltyAccountRequest.js
var require_createLoyaltyAccountRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createLoyaltyAccountRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLoyaltyAccountRequestSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyAccount_1 = require_loyaltyAccount();
    exports.createLoyaltyAccountRequestSchema = (0, schema_1.object)({
      loyaltyAccount: ["loyalty_account", (0, schema_1.lazy)(function() {
        return loyaltyAccount_1.loyaltyAccountSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/createLoyaltyAccountResponse.js
var require_createLoyaltyAccountResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createLoyaltyAccountResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLoyaltyAccountResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyAccount_1 = require_loyaltyAccount();
    exports.createLoyaltyAccountResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      loyaltyAccount: [
        "loyalty_account",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyAccount_1.loyaltyAccountSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createLoyaltyPromotionRequest.js
var require_createLoyaltyPromotionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createLoyaltyPromotionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLoyaltyPromotionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyPromotion_1 = require_loyaltyPromotion();
    exports.createLoyaltyPromotionRequestSchema = (0, schema_1.object)({
      loyaltyPromotion: ["loyalty_promotion", (0, schema_1.lazy)(function() {
        return loyaltyPromotion_1.loyaltyPromotionSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/createLoyaltyPromotionResponse.js
var require_createLoyaltyPromotionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createLoyaltyPromotionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLoyaltyPromotionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyPromotion_1 = require_loyaltyPromotion();
    exports.createLoyaltyPromotionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      loyaltyPromotion: [
        "loyalty_promotion",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyPromotion_1.loyaltyPromotionSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyReward.js
var require_loyaltyReward = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyReward.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyRewardSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyRewardSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      loyaltyAccountId: ["loyalty_account_id", (0, schema_1.string)()],
      rewardTierId: ["reward_tier_id", (0, schema_1.string)()],
      points: ["points", (0, schema_1.optional)((0, schema_1.number)())],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      redeemedAt: ["redeemed_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createLoyaltyRewardRequest.js
var require_createLoyaltyRewardRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createLoyaltyRewardRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLoyaltyRewardRequestSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyReward_1 = require_loyaltyReward();
    exports.createLoyaltyRewardRequestSchema = (0, schema_1.object)({
      reward: ["reward", (0, schema_1.lazy)(function() {
        return loyaltyReward_1.loyaltyRewardSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/createLoyaltyRewardResponse.js
var require_createLoyaltyRewardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createLoyaltyRewardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createLoyaltyRewardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyReward_1 = require_loyaltyReward();
    exports.createLoyaltyRewardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      reward: ["reward", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyReward_1.loyaltyRewardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteLoyaltyRewardResponse.js
var require_deleteLoyaltyRewardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteLoyaltyRewardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteLoyaltyRewardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteLoyaltyRewardResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleCategoryData.js
var require_loyaltyProgramAccrualRuleCategoryData = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleCategoryData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramAccrualRuleCategoryDataSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyProgramAccrualRuleCategoryDataSchema = (0, schema_1.object)({ categoryId: ["category_id", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleItemVariationData.js
var require_loyaltyProgramAccrualRuleItemVariationData = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleItemVariationData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramAccrualRuleItemVariationDataSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyProgramAccrualRuleItemVariationDataSchema = (0, schema_1.object)({ itemVariationId: ["item_variation_id", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleSpendData.js
var require_loyaltyProgramAccrualRuleSpendData = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleSpendData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramAccrualRuleSpendDataSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.loyaltyProgramAccrualRuleSpendDataSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      excludedCategoryIds: [
        "excluded_category_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      excludedItemVariationIds: [
        "excluded_item_variation_ids",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      taxMode: ["tax_mode", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleVisitData.js
var require_loyaltyProgramAccrualRuleVisitData = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramAccrualRuleVisitData.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramAccrualRuleVisitDataSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.loyaltyProgramAccrualRuleVisitDataSchema = (0, schema_1.object)({
      minimumAmountMoney: [
        "minimum_amount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      taxMode: ["tax_mode", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramAccrualRule.js
var require_loyaltyProgramAccrualRule = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramAccrualRule.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramAccrualRuleSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyProgramAccrualRuleCategoryData_1 = require_loyaltyProgramAccrualRuleCategoryData();
    var loyaltyProgramAccrualRuleItemVariationData_1 = require_loyaltyProgramAccrualRuleItemVariationData();
    var loyaltyProgramAccrualRuleSpendData_1 = require_loyaltyProgramAccrualRuleSpendData();
    var loyaltyProgramAccrualRuleVisitData_1 = require_loyaltyProgramAccrualRuleVisitData();
    exports.loyaltyProgramAccrualRuleSchema = (0, schema_1.object)({
      accrualType: ["accrual_type", (0, schema_1.string)()],
      points: ["points", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      visitData: [
        "visit_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyProgramAccrualRuleVisitData_1.loyaltyProgramAccrualRuleVisitDataSchema;
        }))
      ],
      spendData: [
        "spend_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyProgramAccrualRuleSpendData_1.loyaltyProgramAccrualRuleSpendDataSchema;
        }))
      ],
      itemVariationData: [
        "item_variation_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyProgramAccrualRuleItemVariationData_1.loyaltyProgramAccrualRuleItemVariationDataSchema;
        }))
      ],
      categoryData: [
        "category_data",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyProgramAccrualRuleCategoryData_1.loyaltyProgramAccrualRuleCategoryDataSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramExpirationPolicy.js
var require_loyaltyProgramExpirationPolicy = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramExpirationPolicy.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramExpirationPolicySchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyProgramExpirationPolicySchema = (0, schema_1.object)({ expirationDuration: ["expiration_duration", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/catalogObjectReference.js
var require_catalogObjectReference = __commonJS({
  "node_modules/square/dist/cjs/models/catalogObjectReference.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.catalogObjectReferenceSchema = void 0;
    var schema_1 = require_schema2();
    exports.catalogObjectReferenceSchema = (0, schema_1.object)({
      objectId: ["object_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      catalogVersion: ["catalog_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramRewardDefinition.js
var require_loyaltyProgramRewardDefinition = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramRewardDefinition.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramRewardDefinitionSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.loyaltyProgramRewardDefinitionSchema = (0, schema_1.object)({
      scope: ["scope", (0, schema_1.string)()],
      discountType: ["discount_type", (0, schema_1.string)()],
      percentageDiscount: ["percentage_discount", (0, schema_1.optional)((0, schema_1.string)())],
      catalogObjectIds: ["catalog_object_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      fixedDiscountMoney: [
        "fixed_discount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      maxDiscountMoney: ["max_discount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramRewardTier.js
var require_loyaltyProgramRewardTier = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramRewardTier.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramRewardTierSchema = void 0;
    var schema_1 = require_schema2();
    var catalogObjectReference_1 = require_catalogObjectReference();
    var loyaltyProgramRewardDefinition_1 = require_loyaltyProgramRewardDefinition();
    exports.loyaltyProgramRewardTierSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      points: ["points", (0, schema_1.number)()],
      name: ["name", (0, schema_1.optional)((0, schema_1.string)())],
      definition: [
        "definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyProgramRewardDefinition_1.loyaltyProgramRewardDefinitionSchema;
        }))
      ],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      pricingRuleReference: [
        "pricing_rule_reference",
        (0, schema_1.lazy)(function() {
          return catalogObjectReference_1.catalogObjectReferenceSchema;
        })
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgramTerminology.js
var require_loyaltyProgramTerminology = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgramTerminology.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramTerminologySchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyProgramTerminologySchema = (0, schema_1.object)({ one: ["one", (0, schema_1.string)()], other: ["other", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyProgram.js
var require_loyaltyProgram = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyProgram.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyProgramSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyProgramAccrualRule_1 = require_loyaltyProgramAccrualRule();
    var loyaltyProgramExpirationPolicy_1 = require_loyaltyProgramExpirationPolicy();
    var loyaltyProgramRewardTier_1 = require_loyaltyProgramRewardTier();
    var loyaltyProgramTerminology_1 = require_loyaltyProgramTerminology();
    exports.loyaltyProgramSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      rewardTiers: [
        "reward_tiers",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return loyaltyProgramRewardTier_1.loyaltyProgramRewardTierSchema;
        }))))
      ],
      expirationPolicy: [
        "expiration_policy",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyProgramExpirationPolicy_1.loyaltyProgramExpirationPolicySchema;
        }))
      ],
      terminology: [
        "terminology",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyProgramTerminology_1.loyaltyProgramTerminologySchema;
        }))
      ],
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      accrualRules: [
        "accrual_rules",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return loyaltyProgramAccrualRule_1.loyaltyProgramAccrualRuleSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/listLoyaltyProgramsResponse.js
var require_listLoyaltyProgramsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listLoyaltyProgramsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listLoyaltyProgramsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyProgram_1 = require_loyaltyProgram();
    exports.listLoyaltyProgramsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      programs: ["programs", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return loyaltyProgram_1.loyaltyProgramSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listLoyaltyPromotionsResponse.js
var require_listLoyaltyPromotionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listLoyaltyPromotionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listLoyaltyPromotionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyPromotion_1 = require_loyaltyPromotion();
    exports.listLoyaltyPromotionsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      loyaltyPromotions: [
        "loyalty_promotions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return loyaltyPromotion_1.loyaltyPromotionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/redeemLoyaltyRewardRequest.js
var require_redeemLoyaltyRewardRequest = __commonJS({
  "node_modules/square/dist/cjs/models/redeemLoyaltyRewardRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.redeemLoyaltyRewardRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.redeemLoyaltyRewardRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      locationId: ["location_id", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/redeemLoyaltyRewardResponse.js
var require_redeemLoyaltyRewardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/redeemLoyaltyRewardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.redeemLoyaltyRewardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyEvent_1 = require_loyaltyEvent();
    exports.redeemLoyaltyRewardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      event: ["event", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyEvent_1.loyaltyEventSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveLoyaltyAccountResponse.js
var require_retrieveLoyaltyAccountResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveLoyaltyAccountResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveLoyaltyAccountResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyAccount_1 = require_loyaltyAccount();
    exports.retrieveLoyaltyAccountResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      loyaltyAccount: [
        "loyalty_account",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyAccount_1.loyaltyAccountSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveLoyaltyProgramResponse.js
var require_retrieveLoyaltyProgramResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveLoyaltyProgramResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveLoyaltyProgramResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyProgram_1 = require_loyaltyProgram();
    exports.retrieveLoyaltyProgramResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      program: ["program", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyProgram_1.loyaltyProgramSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveLoyaltyPromotionResponse.js
var require_retrieveLoyaltyPromotionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveLoyaltyPromotionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveLoyaltyPromotionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyPromotion_1 = require_loyaltyPromotion();
    exports.retrieveLoyaltyPromotionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      loyaltyPromotion: [
        "loyalty_promotion",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyPromotion_1.loyaltyPromotionSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveLoyaltyRewardResponse.js
var require_retrieveLoyaltyRewardResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveLoyaltyRewardResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveLoyaltyRewardResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyReward_1 = require_loyaltyReward();
    exports.retrieveLoyaltyRewardResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      reward: ["reward", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyReward_1.loyaltyRewardSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyAccountsRequestLoyaltyAccountQuery.js
var require_searchLoyaltyAccountsRequestLoyaltyAccountQuery = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyAccountsRequestLoyaltyAccountQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyAccountsRequestLoyaltyAccountQuerySchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyAccountMapping_1 = require_loyaltyAccountMapping();
    exports.searchLoyaltyAccountsRequestLoyaltyAccountQuerySchema = (0, schema_1.object)({
      mappings: [
        "mappings",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return loyaltyAccountMapping_1.loyaltyAccountMappingSchema;
        }))))
      ],
      customerIds: ["customer_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyAccountsRequest.js
var require_searchLoyaltyAccountsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyAccountsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyAccountsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var searchLoyaltyAccountsRequestLoyaltyAccountQuery_1 = require_searchLoyaltyAccountsRequestLoyaltyAccountQuery();
    exports.searchLoyaltyAccountsRequestSchema = (0, schema_1.object)({
      query: [
        "query",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return searchLoyaltyAccountsRequestLoyaltyAccountQuery_1.searchLoyaltyAccountsRequestLoyaltyAccountQuerySchema;
        }))
      ],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyAccountsResponse.js
var require_searchLoyaltyAccountsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyAccountsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyAccountsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyAccount_1 = require_loyaltyAccount();
    exports.searchLoyaltyAccountsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      loyaltyAccounts: [
        "loyalty_accounts",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return loyaltyAccount_1.loyaltyAccountSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventDateTimeFilter.js
var require_loyaltyEventDateTimeFilter = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventDateTimeFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventDateTimeFilterSchema = void 0;
    var schema_1 = require_schema2();
    var timeRange_1 = require_timeRange();
    exports.loyaltyEventDateTimeFilterSchema = (0, schema_1.object)({ createdAt: ["created_at", (0, schema_1.lazy)(function() {
      return timeRange_1.timeRangeSchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventLocationFilter.js
var require_loyaltyEventLocationFilter = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventLocationFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventLocationFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventLocationFilterSchema = (0, schema_1.object)({ locationIds: ["location_ids", (0, schema_1.array)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventLoyaltyAccountFilter.js
var require_loyaltyEventLoyaltyAccountFilter = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventLoyaltyAccountFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventLoyaltyAccountFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventLoyaltyAccountFilterSchema = (0, schema_1.object)({ loyaltyAccountId: ["loyalty_account_id", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventOrderFilter.js
var require_loyaltyEventOrderFilter = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventOrderFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventOrderFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventOrderFilterSchema = (0, schema_1.object)({ orderId: ["order_id", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventTypeFilter.js
var require_loyaltyEventTypeFilter = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventTypeFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventTypeFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.loyaltyEventTypeFilterSchema = (0, schema_1.object)({ types: ["types", (0, schema_1.array)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventFilter.js
var require_loyaltyEventFilter = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventFilterSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyEventDateTimeFilter_1 = require_loyaltyEventDateTimeFilter();
    var loyaltyEventLocationFilter_1 = require_loyaltyEventLocationFilter();
    var loyaltyEventLoyaltyAccountFilter_1 = require_loyaltyEventLoyaltyAccountFilter();
    var loyaltyEventOrderFilter_1 = require_loyaltyEventOrderFilter();
    var loyaltyEventTypeFilter_1 = require_loyaltyEventTypeFilter();
    exports.loyaltyEventFilterSchema = (0, schema_1.object)({
      loyaltyAccountFilter: [
        "loyalty_account_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventLoyaltyAccountFilter_1.loyaltyEventLoyaltyAccountFilterSchema;
        }))
      ],
      typeFilter: [
        "type_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventTypeFilter_1.loyaltyEventTypeFilterSchema;
        }))
      ],
      dateTimeFilter: [
        "date_time_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventDateTimeFilter_1.loyaltyEventDateTimeFilterSchema;
        }))
      ],
      locationFilter: [
        "location_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventLocationFilter_1.loyaltyEventLocationFilterSchema;
        }))
      ],
      orderFilter: [
        "order_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return loyaltyEventOrderFilter_1.loyaltyEventOrderFilterSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/loyaltyEventQuery.js
var require_loyaltyEventQuery = __commonJS({
  "node_modules/square/dist/cjs/models/loyaltyEventQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.loyaltyEventQuerySchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyEventFilter_1 = require_loyaltyEventFilter();
    exports.loyaltyEventQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyEventFilter_1.loyaltyEventFilterSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyEventsRequest.js
var require_searchLoyaltyEventsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyEventsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyEventsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var loyaltyEventQuery_1 = require_loyaltyEventQuery();
    exports.searchLoyaltyEventsRequestSchema = (0, schema_1.object)({
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return loyaltyEventQuery_1.loyaltyEventQuerySchema;
      }))],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyEventsResponse.js
var require_searchLoyaltyEventsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyEventsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyEventsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyEvent_1 = require_loyaltyEvent();
    exports.searchLoyaltyEventsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      events: ["events", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return loyaltyEvent_1.loyaltyEventSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyRewardsRequestLoyaltyRewardQuery.js
var require_searchLoyaltyRewardsRequestLoyaltyRewardQuery = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyRewardsRequestLoyaltyRewardQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyRewardsRequestLoyaltyRewardQuerySchema = void 0;
    var schema_1 = require_schema2();
    exports.searchLoyaltyRewardsRequestLoyaltyRewardQuerySchema = (0, schema_1.object)({
      loyaltyAccountId: ["loyalty_account_id", (0, schema_1.string)()],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyRewardsRequest.js
var require_searchLoyaltyRewardsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyRewardsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyRewardsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var searchLoyaltyRewardsRequestLoyaltyRewardQuery_1 = require_searchLoyaltyRewardsRequestLoyaltyRewardQuery();
    exports.searchLoyaltyRewardsRequestSchema = (0, schema_1.object)({
      query: [
        "query",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return searchLoyaltyRewardsRequestLoyaltyRewardQuery_1.searchLoyaltyRewardsRequestLoyaltyRewardQuerySchema;
        }))
      ],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchLoyaltyRewardsResponse.js
var require_searchLoyaltyRewardsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchLoyaltyRewardsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchLoyaltyRewardsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var loyaltyReward_1 = require_loyaltyReward();
    exports.searchLoyaltyRewardsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      rewards: ["rewards", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return loyaltyReward_1.loyaltyRewardSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/loyaltyApi.js
var require_loyaltyApi = __commonJS({
  "node_modules/square/dist/cjs/api/loyaltyApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.LoyaltyApi = void 0;
    var tslib_1 = require_tslib();
    var accumulateLoyaltyPointsRequest_1 = require_accumulateLoyaltyPointsRequest();
    var accumulateLoyaltyPointsResponse_1 = require_accumulateLoyaltyPointsResponse();
    var adjustLoyaltyPointsRequest_1 = require_adjustLoyaltyPointsRequest();
    var adjustLoyaltyPointsResponse_1 = require_adjustLoyaltyPointsResponse();
    var calculateLoyaltyPointsRequest_1 = require_calculateLoyaltyPointsRequest();
    var calculateLoyaltyPointsResponse_1 = require_calculateLoyaltyPointsResponse();
    var cancelLoyaltyPromotionResponse_1 = require_cancelLoyaltyPromotionResponse();
    var createLoyaltyAccountRequest_1 = require_createLoyaltyAccountRequest();
    var createLoyaltyAccountResponse_1 = require_createLoyaltyAccountResponse();
    var createLoyaltyPromotionRequest_1 = require_createLoyaltyPromotionRequest();
    var createLoyaltyPromotionResponse_1 = require_createLoyaltyPromotionResponse();
    var createLoyaltyRewardRequest_1 = require_createLoyaltyRewardRequest();
    var createLoyaltyRewardResponse_1 = require_createLoyaltyRewardResponse();
    var deleteLoyaltyRewardResponse_1 = require_deleteLoyaltyRewardResponse();
    var listLoyaltyProgramsResponse_1 = require_listLoyaltyProgramsResponse();
    var listLoyaltyPromotionsResponse_1 = require_listLoyaltyPromotionsResponse();
    var redeemLoyaltyRewardRequest_1 = require_redeemLoyaltyRewardRequest();
    var redeemLoyaltyRewardResponse_1 = require_redeemLoyaltyRewardResponse();
    var retrieveLoyaltyAccountResponse_1 = require_retrieveLoyaltyAccountResponse();
    var retrieveLoyaltyProgramResponse_1 = require_retrieveLoyaltyProgramResponse();
    var retrieveLoyaltyPromotionResponse_1 = require_retrieveLoyaltyPromotionResponse();
    var retrieveLoyaltyRewardResponse_1 = require_retrieveLoyaltyRewardResponse();
    var searchLoyaltyAccountsRequest_1 = require_searchLoyaltyAccountsRequest();
    var searchLoyaltyAccountsResponse_1 = require_searchLoyaltyAccountsResponse();
    var searchLoyaltyEventsRequest_1 = require_searchLoyaltyEventsRequest();
    var searchLoyaltyEventsResponse_1 = require_searchLoyaltyEventsResponse();
    var searchLoyaltyRewardsRequest_1 = require_searchLoyaltyRewardsRequest();
    var searchLoyaltyRewardsResponse_1 = require_searchLoyaltyRewardsResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var LoyaltyApi = function(_super) {
      tslib_1.__extends(LoyaltyApi2, _super);
      function LoyaltyApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      LoyaltyApi2.prototype.createLoyaltyAccount = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/loyalty/accounts");
            mapped = req.prepareArgs({
              body: [body2, createLoyaltyAccountRequest_1.createLoyaltyAccountRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createLoyaltyAccountResponse_1.createLoyaltyAccountResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.searchLoyaltyAccounts = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/loyalty/accounts/search");
            mapped = req.prepareArgs({
              body: [body2, searchLoyaltyAccountsRequest_1.searchLoyaltyAccountsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchLoyaltyAccountsResponse_1.searchLoyaltyAccountsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.retrieveLoyaltyAccount = function(accountId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ accountId: [accountId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/loyalty/accounts/", ""], ["/v2/loyalty/accounts/", ""])), mapped.accountId);
            return [2, req.callAsJson(retrieveLoyaltyAccountResponse_1.retrieveLoyaltyAccountResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.accumulateLoyaltyPoints = function(accountId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              accountId: [accountId, (0, schema_1.string)()],
              body: [body2, accumulateLoyaltyPointsRequest_1.accumulateLoyaltyPointsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/loyalty/accounts/", "/accumulate"], ["/v2/loyalty/accounts/", "/accumulate"])), mapped.accountId);
            return [2, req.callAsJson(accumulateLoyaltyPointsResponse_1.accumulateLoyaltyPointsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.adjustLoyaltyPoints = function(accountId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              accountId: [accountId, (0, schema_1.string)()],
              body: [body2, adjustLoyaltyPointsRequest_1.adjustLoyaltyPointsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/loyalty/accounts/", "/adjust"], ["/v2/loyalty/accounts/", "/adjust"])), mapped.accountId);
            return [2, req.callAsJson(adjustLoyaltyPointsResponse_1.adjustLoyaltyPointsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.searchLoyaltyEvents = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/loyalty/events/search");
            mapped = req.prepareArgs({
              body: [body2, searchLoyaltyEventsRequest_1.searchLoyaltyEventsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchLoyaltyEventsResponse_1.searchLoyaltyEventsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.listLoyaltyPrograms = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/loyalty/programs");
            req.deprecated("LoyaltyApi.listLoyaltyPrograms");
            return [2, req.callAsJson(listLoyaltyProgramsResponse_1.listLoyaltyProgramsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.retrieveLoyaltyProgram = function(programId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ programId: [programId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/loyalty/programs/", ""], ["/v2/loyalty/programs/", ""])), mapped.programId);
            return [2, req.callAsJson(retrieveLoyaltyProgramResponse_1.retrieveLoyaltyProgramResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.calculateLoyaltyPoints = function(programId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              programId: [programId, (0, schema_1.string)()],
              body: [body2, calculateLoyaltyPointsRequest_1.calculateLoyaltyPointsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/loyalty/programs/", "/calculate"], ["/v2/loyalty/programs/", "/calculate"])), mapped.programId);
            return [2, req.callAsJson(calculateLoyaltyPointsResponse_1.calculateLoyaltyPointsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.listLoyaltyPromotions = function(programId, status, cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              programId: [programId, (0, schema_1.string)()],
              status: [status, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("status", mapped.status);
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/loyalty/programs/", "/promotions"], ["/v2/loyalty/programs/", "/promotions"])), mapped.programId);
            return [2, req.callAsJson(listLoyaltyPromotionsResponse_1.listLoyaltyPromotionsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.createLoyaltyPromotion = function(programId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              programId: [programId, (0, schema_1.string)()],
              body: [body2, createLoyaltyPromotionRequest_1.createLoyaltyPromotionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/loyalty/programs/", "/promotions"], ["/v2/loyalty/programs/", "/promotions"])), mapped.programId);
            return [2, req.callAsJson(createLoyaltyPromotionResponse_1.createLoyaltyPromotionResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.retrieveLoyaltyPromotion = function(promotionId, programId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              promotionId: [promotionId, (0, schema_1.string)()],
              programId: [programId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject(["/v2/loyalty/programs/", "/promotions/", ""], ["/v2/loyalty/programs/", "/promotions/", ""])), mapped.promotionId, mapped.programId);
            return [2, req.callAsJson(retrieveLoyaltyPromotionResponse_1.retrieveLoyaltyPromotionResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.cancelLoyaltyPromotion = function(promotionId, programId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              promotionId: [promotionId, (0, schema_1.string)()],
              programId: [programId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject(["/v2/loyalty/programs/", "/promotions/", "/cancel"], ["/v2/loyalty/programs/", "/promotions/", "/cancel"])), mapped.promotionId, mapped.programId);
            return [2, req.callAsJson(cancelLoyaltyPromotionResponse_1.cancelLoyaltyPromotionResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.createLoyaltyReward = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/loyalty/rewards");
            mapped = req.prepareArgs({
              body: [body2, createLoyaltyRewardRequest_1.createLoyaltyRewardRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createLoyaltyRewardResponse_1.createLoyaltyRewardResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.searchLoyaltyRewards = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/loyalty/rewards/search");
            mapped = req.prepareArgs({
              body: [body2, searchLoyaltyRewardsRequest_1.searchLoyaltyRewardsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchLoyaltyRewardsResponse_1.searchLoyaltyRewardsResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.deleteLoyaltyReward = function(rewardId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ rewardId: [rewardId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_10 || (templateObject_10 = tslib_1.__makeTemplateObject(["/v2/loyalty/rewards/", ""], ["/v2/loyalty/rewards/", ""])), mapped.rewardId);
            return [2, req.callAsJson(deleteLoyaltyRewardResponse_1.deleteLoyaltyRewardResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.retrieveLoyaltyReward = function(rewardId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ rewardId: [rewardId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_11 || (templateObject_11 = tslib_1.__makeTemplateObject(["/v2/loyalty/rewards/", ""], ["/v2/loyalty/rewards/", ""])), mapped.rewardId);
            return [2, req.callAsJson(retrieveLoyaltyRewardResponse_1.retrieveLoyaltyRewardResponseSchema, requestOptions)];
          });
        });
      };
      LoyaltyApi2.prototype.redeemLoyaltyReward = function(rewardId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              rewardId: [rewardId, (0, schema_1.string)()],
              body: [body2, redeemLoyaltyRewardRequest_1.redeemLoyaltyRewardRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_12 || (templateObject_12 = tslib_1.__makeTemplateObject(["/v2/loyalty/rewards/", "/redeem"], ["/v2/loyalty/rewards/", "/redeem"])), mapped.rewardId);
            return [2, req.callAsJson(redeemLoyaltyRewardResponse_1.redeemLoyaltyRewardResponseSchema, requestOptions)];
          });
        });
      };
      return LoyaltyApi2;
    }(baseApi_1.BaseApi);
    exports.LoyaltyApi = LoyaltyApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
    var templateObject_8;
    var templateObject_9;
    var templateObject_10;
    var templateObject_11;
    var templateObject_12;
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest.js
var require_bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequestSchema = (0, schema_1.object)({ key: ["key", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesRequest.js
var require_bulkDeleteMerchantCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteMerchantCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest_1 = require_bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest();
    exports.bulkDeleteMerchantCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequest_1.bulkDeleteMerchantCustomAttributesRequestMerchantCustomAttributeDeleteRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse.js
var require_bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesResponse.js
var require_bulkDeleteMerchantCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteMerchantCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteMerchantCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse_1 = require_bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse();
    var error_1 = require_error();
    exports.bulkDeleteMerchantCustomAttributesResponseSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponse_1.bulkDeleteMerchantCustomAttributesResponseMerchantCustomAttributeDeleteResponseSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest.js
var require_bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequestSchema = (0, schema_1.object)({
      merchantId: ["merchant_id", (0, schema_1.string)()],
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesRequest.js
var require_bulkUpsertMerchantCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertMerchantCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest_1 = require_bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest();
    exports.bulkUpsertMerchantCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequest_1.bulkUpsertMerchantCustomAttributesRequestMerchantCustomAttributeUpsertRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse.js
var require_bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponseSchema = (0, schema_1.object)({
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.string)())],
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesResponse.js
var require_bulkUpsertMerchantCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertMerchantCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertMerchantCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse_1 = require_bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse();
    var error_1 = require_error();
    exports.bulkUpsertMerchantCustomAttributesResponseSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponse_1.bulkUpsertMerchantCustomAttributesResponseMerchantCustomAttributeUpsertResponseSchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createMerchantCustomAttributeDefinitionRequest.js
var require_createMerchantCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createMerchantCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createMerchantCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.createMerchantCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createMerchantCustomAttributeDefinitionResponse.js
var require_createMerchantCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createMerchantCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createMerchantCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.createMerchantCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteMerchantCustomAttributeDefinitionResponse.js
var require_deleteMerchantCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteMerchantCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteMerchantCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteMerchantCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/deleteMerchantCustomAttributeResponse.js
var require_deleteMerchantCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteMerchantCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteMerchantCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteMerchantCustomAttributeResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listMerchantCustomAttributeDefinitionsResponse.js
var require_listMerchantCustomAttributeDefinitionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listMerchantCustomAttributeDefinitionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listMerchantCustomAttributeDefinitionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.listMerchantCustomAttributeDefinitionsResponseSchema = (0, schema_1.object)({
      customAttributeDefinitions: [
        "custom_attribute_definitions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listMerchantCustomAttributesResponse.js
var require_listMerchantCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listMerchantCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listMerchantCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.listMerchantCustomAttributesResponseSchema = (0, schema_1.object)({
      customAttributes: [
        "custom_attributes",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveMerchantCustomAttributeDefinitionResponse.js
var require_retrieveMerchantCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveMerchantCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveMerchantCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.retrieveMerchantCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveMerchantCustomAttributeResponse.js
var require_retrieveMerchantCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveMerchantCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveMerchantCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.retrieveMerchantCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateMerchantCustomAttributeDefinitionRequest.js
var require_updateMerchantCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateMerchantCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateMerchantCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.updateMerchantCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateMerchantCustomAttributeDefinitionResponse.js
var require_updateMerchantCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateMerchantCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateMerchantCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.updateMerchantCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertMerchantCustomAttributeRequest.js
var require_upsertMerchantCustomAttributeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/upsertMerchantCustomAttributeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertMerchantCustomAttributeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.upsertMerchantCustomAttributeRequestSchema = (0, schema_1.object)({
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertMerchantCustomAttributeResponse.js
var require_upsertMerchantCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/upsertMerchantCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertMerchantCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.upsertMerchantCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/merchantCustomAttributesApi.js
var require_merchantCustomAttributesApi = __commonJS({
  "node_modules/square/dist/cjs/api/merchantCustomAttributesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.MerchantCustomAttributesApi = void 0;
    var tslib_1 = require_tslib();
    var bulkDeleteMerchantCustomAttributesRequest_1 = require_bulkDeleteMerchantCustomAttributesRequest();
    var bulkDeleteMerchantCustomAttributesResponse_1 = require_bulkDeleteMerchantCustomAttributesResponse();
    var bulkUpsertMerchantCustomAttributesRequest_1 = require_bulkUpsertMerchantCustomAttributesRequest();
    var bulkUpsertMerchantCustomAttributesResponse_1 = require_bulkUpsertMerchantCustomAttributesResponse();
    var createMerchantCustomAttributeDefinitionRequest_1 = require_createMerchantCustomAttributeDefinitionRequest();
    var createMerchantCustomAttributeDefinitionResponse_1 = require_createMerchantCustomAttributeDefinitionResponse();
    var deleteMerchantCustomAttributeDefinitionResponse_1 = require_deleteMerchantCustomAttributeDefinitionResponse();
    var deleteMerchantCustomAttributeResponse_1 = require_deleteMerchantCustomAttributeResponse();
    var listMerchantCustomAttributeDefinitionsResponse_1 = require_listMerchantCustomAttributeDefinitionsResponse();
    var listMerchantCustomAttributesResponse_1 = require_listMerchantCustomAttributesResponse();
    var retrieveMerchantCustomAttributeDefinitionResponse_1 = require_retrieveMerchantCustomAttributeDefinitionResponse();
    var retrieveMerchantCustomAttributeResponse_1 = require_retrieveMerchantCustomAttributeResponse();
    var updateMerchantCustomAttributeDefinitionRequest_1 = require_updateMerchantCustomAttributeDefinitionRequest();
    var updateMerchantCustomAttributeDefinitionResponse_1 = require_updateMerchantCustomAttributeDefinitionResponse();
    var upsertMerchantCustomAttributeRequest_1 = require_upsertMerchantCustomAttributeRequest();
    var upsertMerchantCustomAttributeResponse_1 = require_upsertMerchantCustomAttributeResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var MerchantCustomAttributesApi = function(_super) {
      tslib_1.__extends(MerchantCustomAttributesApi2, _super);
      function MerchantCustomAttributesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      MerchantCustomAttributesApi2.prototype.listMerchantCustomAttributeDefinitions = function(visibilityFilter, limit, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/merchants/custom-attribute-definitions");
            mapped = req.prepareArgs({
              visibilityFilter: [visibilityFilter, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("visibility_filter", mapped.visibilityFilter);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listMerchantCustomAttributeDefinitionsResponse_1.listMerchantCustomAttributeDefinitionsResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.createMerchantCustomAttributeDefinition = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/merchants/custom-attribute-definitions");
            mapped = req.prepareArgs({
              body: [body2, createMerchantCustomAttributeDefinitionRequest_1.createMerchantCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createMerchantCustomAttributeDefinitionResponse_1.createMerchantCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.deleteMerchantCustomAttributeDefinition = function(key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ key: [key2, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/merchants/custom-attribute-definitions/", ""], ["/v2/merchants/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(deleteMerchantCustomAttributeDefinitionResponse_1.deleteMerchantCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.retrieveMerchantCustomAttributeDefinition = function(key2, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/merchants/custom-attribute-definitions/", ""], ["/v2/merchants/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(retrieveMerchantCustomAttributeDefinitionResponse_1.retrieveMerchantCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.updateMerchantCustomAttributeDefinition = function(key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              body: [body2, updateMerchantCustomAttributeDefinitionRequest_1.updateMerchantCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/merchants/custom-attribute-definitions/", ""], ["/v2/merchants/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(updateMerchantCustomAttributeDefinitionResponse_1.updateMerchantCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.bulkDeleteMerchantCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/merchants/custom-attributes/bulk-delete");
            mapped = req.prepareArgs({
              body: [body2, bulkDeleteMerchantCustomAttributesRequest_1.bulkDeleteMerchantCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkDeleteMerchantCustomAttributesResponse_1.bulkDeleteMerchantCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.bulkUpsertMerchantCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/merchants/custom-attributes/bulk-upsert");
            mapped = req.prepareArgs({
              body: [body2, bulkUpsertMerchantCustomAttributesRequest_1.bulkUpsertMerchantCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkUpsertMerchantCustomAttributesResponse_1.bulkUpsertMerchantCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.listMerchantCustomAttributes = function(merchantId, visibilityFilter, limit, cursor, withDefinitions, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              merchantId: [merchantId, (0, schema_1.string)()],
              visibilityFilter: [visibilityFilter, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              withDefinitions: [withDefinitions, (0, schema_1.optional)((0, schema_1.boolean)())]
            });
            req.query("visibility_filter", mapped.visibilityFilter);
            req.query("limit", mapped.limit);
            req.query("cursor", mapped.cursor);
            req.query("with_definitions", mapped.withDefinitions);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/merchants/", "/custom-attributes"], ["/v2/merchants/", "/custom-attributes"])), mapped.merchantId);
            return [2, req.callAsJson(listMerchantCustomAttributesResponse_1.listMerchantCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.deleteMerchantCustomAttribute = function(merchantId, key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              merchantId: [merchantId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/merchants/", "/custom-attributes/", ""], ["/v2/merchants/", "/custom-attributes/", ""])), mapped.merchantId, mapped.key);
            return [2, req.callAsJson(deleteMerchantCustomAttributeResponse_1.deleteMerchantCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.retrieveMerchantCustomAttribute = function(merchantId, key2, withDefinition, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              merchantId: [merchantId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              withDefinition: [withDefinition, (0, schema_1.optional)((0, schema_1.boolean)())],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("with_definition", mapped.withDefinition);
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/merchants/", "/custom-attributes/", ""], ["/v2/merchants/", "/custom-attributes/", ""])), mapped.merchantId, mapped.key);
            return [2, req.callAsJson(retrieveMerchantCustomAttributeResponse_1.retrieveMerchantCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      MerchantCustomAttributesApi2.prototype.upsertMerchantCustomAttribute = function(merchantId, key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              merchantId: [merchantId, (0, schema_1.string)()],
              key: [key2, (0, schema_1.string)()],
              body: [body2, upsertMerchantCustomAttributeRequest_1.upsertMerchantCustomAttributeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/merchants/", "/custom-attributes/", ""], ["/v2/merchants/", "/custom-attributes/", ""])), mapped.merchantId, mapped.key);
            return [2, req.callAsJson(upsertMerchantCustomAttributeResponse_1.upsertMerchantCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      return MerchantCustomAttributesApi2;
    }(baseApi_1.BaseApi);
    exports.MerchantCustomAttributesApi = MerchantCustomAttributesApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
  }
});

// node_modules/square/dist/cjs/models/merchant.js
var require_merchant = __commonJS({
  "node_modules/square/dist/cjs/models/merchant.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.merchantSchema = void 0;
    var schema_1 = require_schema2();
    exports.merchantSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      businessName: ["business_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      country: ["country", (0, schema_1.string)()],
      languageCode: ["language_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      currency: ["currency", (0, schema_1.optional)((0, schema_1.string)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      mainLocationId: ["main_location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listMerchantsResponse.js
var require_listMerchantsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listMerchantsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listMerchantsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var merchant_1 = require_merchant();
    exports.listMerchantsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      merchant: ["merchant", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return merchant_1.merchantSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.number)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveMerchantResponse.js
var require_retrieveMerchantResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveMerchantResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveMerchantResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var merchant_1 = require_merchant();
    exports.retrieveMerchantResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      merchant: ["merchant", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return merchant_1.merchantSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/merchantsApi.js
var require_merchantsApi = __commonJS({
  "node_modules/square/dist/cjs/api/merchantsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.MerchantsApi = void 0;
    var tslib_1 = require_tslib();
    var listMerchantsResponse_1 = require_listMerchantsResponse();
    var retrieveMerchantResponse_1 = require_retrieveMerchantResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var MerchantsApi = function(_super) {
      tslib_1.__extends(MerchantsApi2, _super);
      function MerchantsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      MerchantsApi2.prototype.listMerchants = function(cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/merchants");
            mapped = req.prepareArgs({ cursor: [cursor, (0, schema_1.optional)((0, schema_1.number)())] });
            req.query("cursor", mapped.cursor);
            return [2, req.callAsJson(listMerchantsResponse_1.listMerchantsResponseSchema, requestOptions)];
          });
        });
      };
      MerchantsApi2.prototype.retrieveMerchant = function(merchantId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ merchantId: [merchantId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/merchants/", ""], ["/v2/merchants/", ""])), mapped.merchantId);
            return [2, req.callAsJson(retrieveMerchantResponse_1.retrieveMerchantResponseSchema, requestOptions)];
          });
        });
      };
      return MerchantsApi2;
    }(baseApi_1.BaseApi);
    exports.MerchantsApi = MerchantsApi;
    var templateObject_1;
  }
});

// node_modules/square/dist/cjs/models/createMobileAuthorizationCodeRequest.js
var require_createMobileAuthorizationCodeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createMobileAuthorizationCodeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createMobileAuthorizationCodeRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.createMobileAuthorizationCodeRequestSchema = (0, schema_1.object)({ locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/createMobileAuthorizationCodeResponse.js
var require_createMobileAuthorizationCodeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createMobileAuthorizationCodeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createMobileAuthorizationCodeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.createMobileAuthorizationCodeResponseSchema = (0, schema_1.object)({
      authorizationCode: ["authorization_code", (0, schema_1.optional)((0, schema_1.string)())],
      expiresAt: ["expires_at", (0, schema_1.optional)((0, schema_1.string)())],
      error: ["error", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/mobileAuthorizationApi.js
var require_mobileAuthorizationApi = __commonJS({
  "node_modules/square/dist/cjs/api/mobileAuthorizationApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.MobileAuthorizationApi = void 0;
    var tslib_1 = require_tslib();
    var createMobileAuthorizationCodeRequest_1 = require_createMobileAuthorizationCodeRequest();
    var createMobileAuthorizationCodeResponse_1 = require_createMobileAuthorizationCodeResponse();
    var baseApi_1 = require_baseApi();
    var MobileAuthorizationApi = function(_super) {
      tslib_1.__extends(MobileAuthorizationApi2, _super);
      function MobileAuthorizationApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      MobileAuthorizationApi2.prototype.createMobileAuthorizationCode = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/mobile/authorization-code");
            mapped = req.prepareArgs({
              body: [body2, createMobileAuthorizationCodeRequest_1.createMobileAuthorizationCodeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createMobileAuthorizationCodeResponse_1.createMobileAuthorizationCodeResponseSchema, requestOptions)];
          });
        });
      };
      return MobileAuthorizationApi2;
    }(baseApi_1.BaseApi);
    exports.MobileAuthorizationApi = MobileAuthorizationApi;
  }
});

// node_modules/square/dist/cjs/models/obtainTokenRequest.js
var require_obtainTokenRequest = __commonJS({
  "node_modules/square/dist/cjs/models/obtainTokenRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.obtainTokenRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.obtainTokenRequestSchema = (0, schema_1.object)({
      clientId: ["client_id", (0, schema_1.string)()],
      clientSecret: ["client_secret", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      code: ["code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      redirectUri: ["redirect_uri", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      grantType: ["grant_type", (0, schema_1.string)()],
      refreshToken: ["refresh_token", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      migrationToken: ["migration_token", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      scopes: ["scopes", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      shortLived: ["short_lived", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      codeVerifier: ["code_verifier", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/obtainTokenResponse.js
var require_obtainTokenResponse = __commonJS({
  "node_modules/square/dist/cjs/models/obtainTokenResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.obtainTokenResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.obtainTokenResponseSchema = (0, schema_1.object)({
      accessToken: ["access_token", (0, schema_1.optional)((0, schema_1.string)())],
      tokenType: ["token_type", (0, schema_1.optional)((0, schema_1.string)())],
      expiresAt: ["expires_at", (0, schema_1.optional)((0, schema_1.string)())],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.string)())],
      subscriptionId: ["subscription_id", (0, schema_1.optional)((0, schema_1.string)())],
      planId: ["plan_id", (0, schema_1.optional)((0, schema_1.string)())],
      idToken: ["id_token", (0, schema_1.optional)((0, schema_1.string)())],
      refreshToken: ["refresh_token", (0, schema_1.optional)((0, schema_1.string)())],
      shortLived: ["short_lived", (0, schema_1.optional)((0, schema_1.boolean)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refreshTokenExpiresAt: ["refresh_token_expires_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/renewTokenRequest.js
var require_renewTokenRequest = __commonJS({
  "node_modules/square/dist/cjs/models/renewTokenRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.renewTokenRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.renewTokenRequestSchema = (0, schema_1.object)({
      accessToken: ["access_token", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/renewTokenResponse.js
var require_renewTokenResponse = __commonJS({
  "node_modules/square/dist/cjs/models/renewTokenResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.renewTokenResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.renewTokenResponseSchema = (0, schema_1.object)({
      accessToken: ["access_token", (0, schema_1.optional)((0, schema_1.string)())],
      tokenType: ["token_type", (0, schema_1.optional)((0, schema_1.string)())],
      expiresAt: ["expires_at", (0, schema_1.optional)((0, schema_1.string)())],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.string)())],
      subscriptionId: ["subscription_id", (0, schema_1.optional)((0, schema_1.string)())],
      planId: ["plan_id", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveTokenStatusResponse.js
var require_retrieveTokenStatusResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveTokenStatusResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveTokenStatusResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.retrieveTokenStatusResponseSchema = (0, schema_1.object)({
      scopes: ["scopes", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      expiresAt: ["expires_at", (0, schema_1.optional)((0, schema_1.string)())],
      clientId: ["client_id", (0, schema_1.optional)((0, schema_1.string)())],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/revokeTokenRequest.js
var require_revokeTokenRequest = __commonJS({
  "node_modules/square/dist/cjs/models/revokeTokenRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.revokeTokenRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.revokeTokenRequestSchema = (0, schema_1.object)({
      clientId: ["client_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      accessToken: ["access_token", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      revokeOnlyAccessToken: [
        "revoke_only_access_token",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/revokeTokenResponse.js
var require_revokeTokenResponse = __commonJS({
  "node_modules/square/dist/cjs/models/revokeTokenResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.revokeTokenResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.revokeTokenResponseSchema = (0, schema_1.object)({
      success: ["success", (0, schema_1.optional)((0, schema_1.boolean)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/oAuthApi.js
var require_oAuthApi = __commonJS({
  "node_modules/square/dist/cjs/api/oAuthApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.OAuthApi = void 0;
    var tslib_1 = require_tslib();
    var obtainTokenRequest_1 = require_obtainTokenRequest();
    var obtainTokenResponse_1 = require_obtainTokenResponse();
    var renewTokenRequest_1 = require_renewTokenRequest();
    var renewTokenResponse_1 = require_renewTokenResponse();
    var retrieveTokenStatusResponse_1 = require_retrieveTokenStatusResponse();
    var revokeTokenRequest_1 = require_revokeTokenRequest();
    var revokeTokenResponse_1 = require_revokeTokenResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var OAuthApi = function(_super) {
      tslib_1.__extends(OAuthApi2, _super);
      function OAuthApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      OAuthApi2.prototype.renewToken = function(clientId, body2, authorization, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              clientId: [clientId, (0, schema_1.string)()],
              body: [body2, renewTokenRequest_1.renewTokenRequestSchema],
              authorization: [authorization, (0, schema_1.string)()]
            });
            req.header("Content-Type", "application/json");
            req.header("Authorization", mapped.authorization);
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/oauth2/clients/", "/access-token/renew"], ["/oauth2/clients/", "/access-token/renew"])), mapped.clientId);
            req.deprecated("OAuthApi.renewToken");
            req.authenticate(false);
            return [2, req.callAsJson(renewTokenResponse_1.renewTokenResponseSchema, requestOptions)];
          });
        });
      };
      OAuthApi2.prototype.revokeToken = function(body2, authorization, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/oauth2/revoke");
            mapped = req.prepareArgs({
              body: [body2, revokeTokenRequest_1.revokeTokenRequestSchema],
              authorization: [authorization, (0, schema_1.string)()]
            });
            req.header("Content-Type", "application/json");
            req.header("Authorization", mapped.authorization);
            req.json(mapped.body);
            req.authenticate(false);
            return [2, req.callAsJson(revokeTokenResponse_1.revokeTokenResponseSchema, requestOptions)];
          });
        });
      };
      OAuthApi2.prototype.obtainToken = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/oauth2/token");
            mapped = req.prepareArgs({ body: [body2, obtainTokenRequest_1.obtainTokenRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.authenticate(false);
            return [2, req.callAsJson(obtainTokenResponse_1.obtainTokenResponseSchema, requestOptions)];
          });
        });
      };
      OAuthApi2.prototype.retrieveTokenStatus = function(authorization, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/oauth2/token/status");
            mapped = req.prepareArgs({
              authorization: [authorization, (0, schema_1.string)()]
            });
            req.header("Authorization", mapped.authorization);
            req.authenticate(false);
            return [2, req.callAsJson(retrieveTokenStatusResponse_1.retrieveTokenStatusResponseSchema, requestOptions)];
          });
        });
      };
      return OAuthApi2;
    }(baseApi_1.BaseApi);
    exports.OAuthApi = OAuthApi;
    var templateObject_1;
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute.js
var require_bulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteOrderCustomAttributesRequestDeleteCustomAttributeSchema = void 0;
    var schema_1 = require_schema2();
    exports.bulkDeleteOrderCustomAttributesRequestDeleteCustomAttributeSchema = (0, schema_1.object)({ key: ["key", (0, schema_1.optional)((0, schema_1.string)())], orderId: ["order_id", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteOrderCustomAttributesRequest.js
var require_bulkDeleteOrderCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteOrderCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteOrderCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute_1 = require_bulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute();
    exports.bulkDeleteOrderCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkDeleteOrderCustomAttributesRequestDeleteCustomAttribute_1.bulkDeleteOrderCustomAttributesRequestDeleteCustomAttributeSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteOrderCustomAttributeResponse.js
var require_deleteOrderCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteOrderCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteOrderCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteOrderCustomAttributeResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/bulkDeleteOrderCustomAttributesResponse.js
var require_bulkDeleteOrderCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkDeleteOrderCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkDeleteOrderCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var deleteOrderCustomAttributeResponse_1 = require_deleteOrderCustomAttributeResponse();
    var error_1 = require_error();
    exports.bulkDeleteOrderCustomAttributesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return deleteOrderCustomAttributeResponse_1.deleteOrderCustomAttributeResponseSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute.js
var require_bulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertOrderCustomAttributesRequestUpsertCustomAttributeSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.bulkUpsertOrderCustomAttributesRequestUpsertCustomAttributeSchema = (0, schema_1.object)({
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      orderId: ["order_id", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertOrderCustomAttributesRequest.js
var require_bulkUpsertOrderCustomAttributesRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertOrderCustomAttributesRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertOrderCustomAttributesRequestSchema = void 0;
    var schema_1 = require_schema2();
    var bulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute_1 = require_bulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute();
    exports.bulkUpsertOrderCustomAttributesRequestSchema = (0, schema_1.object)({
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return bulkUpsertOrderCustomAttributesRequestUpsertCustomAttribute_1.bulkUpsertOrderCustomAttributesRequestUpsertCustomAttributeSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertOrderCustomAttributeResponse.js
var require_upsertOrderCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/upsertOrderCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertOrderCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.upsertOrderCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpsertOrderCustomAttributesResponse.js
var require_bulkUpsertOrderCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpsertOrderCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpsertOrderCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var upsertOrderCustomAttributeResponse_1 = require_upsertOrderCustomAttributeResponse();
    exports.bulkUpsertOrderCustomAttributesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      values: [
        "values",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return upsertOrderCustomAttributeResponse_1.upsertOrderCustomAttributeResponseSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createOrderCustomAttributeDefinitionRequest.js
var require_createOrderCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createOrderCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createOrderCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.createOrderCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createOrderCustomAttributeDefinitionResponse.js
var require_createOrderCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createOrderCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createOrderCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.createOrderCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteOrderCustomAttributeDefinitionResponse.js
var require_deleteOrderCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteOrderCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteOrderCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteOrderCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/listOrderCustomAttributeDefinitionsResponse.js
var require_listOrderCustomAttributeDefinitionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listOrderCustomAttributeDefinitionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listOrderCustomAttributeDefinitionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.listOrderCustomAttributeDefinitionsResponseSchema = (0, schema_1.object)({
      customAttributeDefinitions: [
        "custom_attribute_definitions",
        (0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listOrderCustomAttributesResponse.js
var require_listOrderCustomAttributesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listOrderCustomAttributesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listOrderCustomAttributesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.listOrderCustomAttributesResponseSchema = (0, schema_1.object)({
      customAttributes: [
        "custom_attributes",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveOrderCustomAttributeDefinitionResponse.js
var require_retrieveOrderCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveOrderCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveOrderCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.retrieveOrderCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveOrderCustomAttributeResponse.js
var require_retrieveOrderCustomAttributeResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveOrderCustomAttributeResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveOrderCustomAttributeResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    var error_1 = require_error();
    exports.retrieveOrderCustomAttributeResponseSchema = (0, schema_1.object)({
      customAttribute: [
        "custom_attribute",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttribute_1.customAttributeSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateOrderCustomAttributeDefinitionRequest.js
var require_updateOrderCustomAttributeDefinitionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateOrderCustomAttributeDefinitionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateOrderCustomAttributeDefinitionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    exports.updateOrderCustomAttributeDefinitionRequestSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        })
      ],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateOrderCustomAttributeDefinitionResponse.js
var require_updateOrderCustomAttributeDefinitionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateOrderCustomAttributeDefinitionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateOrderCustomAttributeDefinitionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var customAttributeDefinition_1 = require_customAttributeDefinition();
    var error_1 = require_error();
    exports.updateOrderCustomAttributeDefinitionResponseSchema = (0, schema_1.object)({
      customAttributeDefinition: [
        "custom_attribute_definition",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return customAttributeDefinition_1.customAttributeDefinitionSchema;
        }))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertOrderCustomAttributeRequest.js
var require_upsertOrderCustomAttributeRequest = __commonJS({
  "node_modules/square/dist/cjs/models/upsertOrderCustomAttributeRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertOrderCustomAttributeRequestSchema = void 0;
    var schema_1 = require_schema2();
    var customAttribute_1 = require_customAttribute();
    exports.upsertOrderCustomAttributeRequestSchema = (0, schema_1.object)({
      customAttribute: ["custom_attribute", (0, schema_1.lazy)(function() {
        return customAttribute_1.customAttributeSchema;
      })],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/api/orderCustomAttributesApi.js
var require_orderCustomAttributesApi = __commonJS({
  "node_modules/square/dist/cjs/api/orderCustomAttributesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.OrderCustomAttributesApi = void 0;
    var tslib_1 = require_tslib();
    var bulkDeleteOrderCustomAttributesRequest_1 = require_bulkDeleteOrderCustomAttributesRequest();
    var bulkDeleteOrderCustomAttributesResponse_1 = require_bulkDeleteOrderCustomAttributesResponse();
    var bulkUpsertOrderCustomAttributesRequest_1 = require_bulkUpsertOrderCustomAttributesRequest();
    var bulkUpsertOrderCustomAttributesResponse_1 = require_bulkUpsertOrderCustomAttributesResponse();
    var createOrderCustomAttributeDefinitionRequest_1 = require_createOrderCustomAttributeDefinitionRequest();
    var createOrderCustomAttributeDefinitionResponse_1 = require_createOrderCustomAttributeDefinitionResponse();
    var deleteOrderCustomAttributeDefinitionResponse_1 = require_deleteOrderCustomAttributeDefinitionResponse();
    var deleteOrderCustomAttributeResponse_1 = require_deleteOrderCustomAttributeResponse();
    var listOrderCustomAttributeDefinitionsResponse_1 = require_listOrderCustomAttributeDefinitionsResponse();
    var listOrderCustomAttributesResponse_1 = require_listOrderCustomAttributesResponse();
    var retrieveOrderCustomAttributeDefinitionResponse_1 = require_retrieveOrderCustomAttributeDefinitionResponse();
    var retrieveOrderCustomAttributeResponse_1 = require_retrieveOrderCustomAttributeResponse();
    var updateOrderCustomAttributeDefinitionRequest_1 = require_updateOrderCustomAttributeDefinitionRequest();
    var updateOrderCustomAttributeDefinitionResponse_1 = require_updateOrderCustomAttributeDefinitionResponse();
    var upsertOrderCustomAttributeRequest_1 = require_upsertOrderCustomAttributeRequest();
    var upsertOrderCustomAttributeResponse_1 = require_upsertOrderCustomAttributeResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var OrderCustomAttributesApi = function(_super) {
      tslib_1.__extends(OrderCustomAttributesApi2, _super);
      function OrderCustomAttributesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      OrderCustomAttributesApi2.prototype.listOrderCustomAttributeDefinitions = function(visibilityFilter, cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/orders/custom-attribute-definitions");
            mapped = req.prepareArgs({
              visibilityFilter: [visibilityFilter, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("visibility_filter", mapped.visibilityFilter);
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listOrderCustomAttributeDefinitionsResponse_1.listOrderCustomAttributeDefinitionsResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.createOrderCustomAttributeDefinition = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders/custom-attribute-definitions");
            mapped = req.prepareArgs({
              body: [body2, createOrderCustomAttributeDefinitionRequest_1.createOrderCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createOrderCustomAttributeDefinitionResponse_1.createOrderCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.deleteOrderCustomAttributeDefinition = function(key2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ key: [key2, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/orders/custom-attribute-definitions/", ""], ["/v2/orders/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(deleteOrderCustomAttributeDefinitionResponse_1.deleteOrderCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.retrieveOrderCustomAttributeDefinition = function(key2, version, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("version", mapped.version);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/orders/custom-attribute-definitions/", ""], ["/v2/orders/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(retrieveOrderCustomAttributeDefinitionResponse_1.retrieveOrderCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.updateOrderCustomAttributeDefinition = function(key2, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              key: [key2, (0, schema_1.string)()],
              body: [body2, updateOrderCustomAttributeDefinitionRequest_1.updateOrderCustomAttributeDefinitionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/orders/custom-attribute-definitions/", ""], ["/v2/orders/custom-attribute-definitions/", ""])), mapped.key);
            return [2, req.callAsJson(updateOrderCustomAttributeDefinitionResponse_1.updateOrderCustomAttributeDefinitionResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.bulkDeleteOrderCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders/custom-attributes/bulk-delete");
            mapped = req.prepareArgs({
              body: [body2, bulkDeleteOrderCustomAttributesRequest_1.bulkDeleteOrderCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkDeleteOrderCustomAttributesResponse_1.bulkDeleteOrderCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.bulkUpsertOrderCustomAttributes = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders/custom-attributes/bulk-upsert");
            mapped = req.prepareArgs({
              body: [body2, bulkUpsertOrderCustomAttributesRequest_1.bulkUpsertOrderCustomAttributesRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkUpsertOrderCustomAttributesResponse_1.bulkUpsertOrderCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.listOrderCustomAttributes = function(orderId, visibilityFilter, cursor, limit, withDefinitions, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              orderId: [orderId, (0, schema_1.string)()],
              visibilityFilter: [visibilityFilter, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              withDefinitions: [withDefinitions, (0, schema_1.optional)((0, schema_1.boolean)())]
            });
            req.query("visibility_filter", mapped.visibilityFilter);
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            req.query("with_definitions", mapped.withDefinitions);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/orders/", "/custom-attributes"], ["/v2/orders/", "/custom-attributes"])), mapped.orderId);
            return [2, req.callAsJson(listOrderCustomAttributesResponse_1.listOrderCustomAttributesResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.deleteOrderCustomAttribute = function(orderId, customAttributeKey, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              orderId: [orderId, (0, schema_1.string)()],
              customAttributeKey: [customAttributeKey, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/orders/", "/custom-attributes/", ""], ["/v2/orders/", "/custom-attributes/", ""])), mapped.orderId, mapped.customAttributeKey);
            return [2, req.callAsJson(deleteOrderCustomAttributeResponse_1.deleteOrderCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.retrieveOrderCustomAttribute = function(orderId, customAttributeKey, version, withDefinition, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              orderId: [orderId, (0, schema_1.string)()],
              customAttributeKey: [customAttributeKey, (0, schema_1.string)()],
              version: [version, (0, schema_1.optional)((0, schema_1.number)())],
              withDefinition: [withDefinition, (0, schema_1.optional)((0, schema_1.boolean)())]
            });
            req.query("version", mapped.version);
            req.query("with_definition", mapped.withDefinition);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/orders/", "/custom-attributes/", ""], ["/v2/orders/", "/custom-attributes/", ""])), mapped.orderId, mapped.customAttributeKey);
            return [2, req.callAsJson(retrieveOrderCustomAttributeResponse_1.retrieveOrderCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      OrderCustomAttributesApi2.prototype.upsertOrderCustomAttribute = function(orderId, customAttributeKey, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              orderId: [orderId, (0, schema_1.string)()],
              customAttributeKey: [customAttributeKey, (0, schema_1.string)()],
              body: [body2, upsertOrderCustomAttributeRequest_1.upsertOrderCustomAttributeRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/orders/", "/custom-attributes/", ""], ["/v2/orders/", "/custom-attributes/", ""])), mapped.orderId, mapped.customAttributeKey);
            return [2, req.callAsJson(upsertOrderCustomAttributeResponse_1.upsertOrderCustomAttributeResponseSchema, requestOptions)];
          });
        });
      };
      return OrderCustomAttributesApi2;
    }(baseApi_1.BaseApi);
    exports.OrderCustomAttributesApi = OrderCustomAttributesApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveOrdersRequest.js
var require_batchRetrieveOrdersRequest = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveOrdersRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveOrdersRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.batchRetrieveOrdersRequestSchema = (0, schema_1.object)({
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      orderIds: ["order_ids", (0, schema_1.array)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/batchRetrieveOrdersResponse.js
var require_batchRetrieveOrdersResponse = __commonJS({
  "node_modules/square/dist/cjs/models/batchRetrieveOrdersResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.batchRetrieveOrdersResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    exports.batchRetrieveOrdersResponseSchema = (0, schema_1.object)({
      orders: ["orders", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      })))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/calculateOrderRequest.js
var require_calculateOrderRequest = __commonJS({
  "node_modules/square/dist/cjs/models/calculateOrderRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.calculateOrderRequestSchema = void 0;
    var schema_1 = require_schema2();
    var order_1 = require_order();
    var orderReward_1 = require_orderReward();
    exports.calculateOrderRequestSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      })],
      proposedRewards: [
        "proposed_rewards",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderReward_1.orderRewardSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/calculateOrderResponse.js
var require_calculateOrderResponse = __commonJS({
  "node_modules/square/dist/cjs/models/calculateOrderResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.calculateOrderResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    exports.calculateOrderResponseSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/cloneOrderRequest.js
var require_cloneOrderRequest = __commonJS({
  "node_modules/square/dist/cjs/models/cloneOrderRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cloneOrderRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.cloneOrderRequestSchema = (0, schema_1.object)({
      orderId: ["order_id", (0, schema_1.string)()],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/cloneOrderResponse.js
var require_cloneOrderResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cloneOrderResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cloneOrderResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    exports.cloneOrderResponseSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createOrderResponse.js
var require_createOrderResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createOrderResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createOrderResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    exports.createOrderResponseSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/payOrderRequest.js
var require_payOrderRequest = __commonJS({
  "node_modules/square/dist/cjs/models/payOrderRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.payOrderRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.payOrderRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      orderVersion: ["order_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      paymentIds: ["payment_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/payOrderResponse.js
var require_payOrderResponse = __commonJS({
  "node_modules/square/dist/cjs/models/payOrderResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.payOrderResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    exports.payOrderResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveOrderResponse.js
var require_retrieveOrderResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveOrderResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveOrderResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    exports.retrieveOrderResponseSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersCustomerFilter.js
var require_searchOrdersCustomerFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersCustomerFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersCustomerFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchOrdersCustomerFilterSchema = (0, schema_1.object)({ customerIds: ["customer_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))] });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersDateTimeFilter.js
var require_searchOrdersDateTimeFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersDateTimeFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersDateTimeFilterSchema = void 0;
    var schema_1 = require_schema2();
    var timeRange_1 = require_timeRange();
    exports.searchOrdersDateTimeFilterSchema = (0, schema_1.object)({
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      closedAt: ["closed_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersFulfillmentFilter.js
var require_searchOrdersFulfillmentFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersFulfillmentFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersFulfillmentFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchOrdersFulfillmentFilterSchema = (0, schema_1.object)({
      fulfillmentTypes: [
        "fulfillment_types",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ],
      fulfillmentStates: [
        "fulfillment_states",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersSourceFilter.js
var require_searchOrdersSourceFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersSourceFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersSourceFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchOrdersSourceFilterSchema = (0, schema_1.object)({ sourceNames: ["source_names", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))] });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersStateFilter.js
var require_searchOrdersStateFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersStateFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersStateFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchOrdersStateFilterSchema = (0, schema_1.object)({ states: ["states", (0, schema_1.array)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersFilter.js
var require_searchOrdersFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersFilterSchema = void 0;
    var schema_1 = require_schema2();
    var searchOrdersCustomerFilter_1 = require_searchOrdersCustomerFilter();
    var searchOrdersDateTimeFilter_1 = require_searchOrdersDateTimeFilter();
    var searchOrdersFulfillmentFilter_1 = require_searchOrdersFulfillmentFilter();
    var searchOrdersSourceFilter_1 = require_searchOrdersSourceFilter();
    var searchOrdersStateFilter_1 = require_searchOrdersStateFilter();
    exports.searchOrdersFilterSchema = (0, schema_1.object)({
      stateFilter: [
        "state_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return searchOrdersStateFilter_1.searchOrdersStateFilterSchema;
        }))
      ],
      dateTimeFilter: [
        "date_time_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return searchOrdersDateTimeFilter_1.searchOrdersDateTimeFilterSchema;
        }))
      ],
      fulfillmentFilter: [
        "fulfillment_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return searchOrdersFulfillmentFilter_1.searchOrdersFulfillmentFilterSchema;
        }))
      ],
      sourceFilter: [
        "source_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return searchOrdersSourceFilter_1.searchOrdersSourceFilterSchema;
        }))
      ],
      customerFilter: [
        "customer_filter",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return searchOrdersCustomerFilter_1.searchOrdersCustomerFilterSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersSort.js
var require_searchOrdersSort = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersSort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersSortSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchOrdersSortSchema = (0, schema_1.object)({
      sortField: ["sort_field", (0, schema_1.string)()],
      sortOrder: ["sort_order", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersQuery.js
var require_searchOrdersQuery = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersQuerySchema = void 0;
    var schema_1 = require_schema2();
    var searchOrdersFilter_1 = require_searchOrdersFilter();
    var searchOrdersSort_1 = require_searchOrdersSort();
    exports.searchOrdersQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return searchOrdersFilter_1.searchOrdersFilterSchema;
      }))],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return searchOrdersSort_1.searchOrdersSortSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersRequest.js
var require_searchOrdersRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersRequestSchema = void 0;
    var schema_1 = require_schema2();
    var searchOrdersQuery_1 = require_searchOrdersQuery();
    exports.searchOrdersRequestSchema = (0, schema_1.object)({
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return searchOrdersQuery_1.searchOrdersQuerySchema;
      }))],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      returnEntries: ["return_entries", (0, schema_1.optional)((0, schema_1.boolean)())]
    });
  }
});

// node_modules/square/dist/cjs/models/orderEntry.js
var require_orderEntry = __commonJS({
  "node_modules/square/dist/cjs/models/orderEntry.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.orderEntrySchema = void 0;
    var schema_1 = require_schema2();
    exports.orderEntrySchema = (0, schema_1.object)({
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchOrdersResponse.js
var require_searchOrdersResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchOrdersResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchOrdersResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    var orderEntry_1 = require_orderEntry();
    exports.searchOrdersResponseSchema = (0, schema_1.object)({
      orderEntries: [
        "order_entries",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return orderEntry_1.orderEntrySchema;
        })))
      ],
      orders: ["orders", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateOrderRequest.js
var require_updateOrderRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateOrderRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateOrderRequestSchema = void 0;
    var schema_1 = require_schema2();
    var order_1 = require_order();
    exports.updateOrderRequestSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      fieldsToClear: ["fields_to_clear", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateOrderResponse.js
var require_updateOrderResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateOrderResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateOrderResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var order_1 = require_order();
    exports.updateOrderResponseSchema = (0, schema_1.object)({
      order: ["order", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return order_1.orderSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/ordersApi.js
var require_ordersApi = __commonJS({
  "node_modules/square/dist/cjs/api/ordersApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.OrdersApi = void 0;
    var tslib_1 = require_tslib();
    var batchRetrieveOrdersRequest_1 = require_batchRetrieveOrdersRequest();
    var batchRetrieveOrdersResponse_1 = require_batchRetrieveOrdersResponse();
    var calculateOrderRequest_1 = require_calculateOrderRequest();
    var calculateOrderResponse_1 = require_calculateOrderResponse();
    var cloneOrderRequest_1 = require_cloneOrderRequest();
    var cloneOrderResponse_1 = require_cloneOrderResponse();
    var createOrderRequest_1 = require_createOrderRequest();
    var createOrderResponse_1 = require_createOrderResponse();
    var payOrderRequest_1 = require_payOrderRequest();
    var payOrderResponse_1 = require_payOrderResponse();
    var retrieveOrderResponse_1 = require_retrieveOrderResponse();
    var searchOrdersRequest_1 = require_searchOrdersRequest();
    var searchOrdersResponse_1 = require_searchOrdersResponse();
    var updateOrderRequest_1 = require_updateOrderRequest();
    var updateOrderResponse_1 = require_updateOrderResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var OrdersApi = function(_super) {
      tslib_1.__extends(OrdersApi2, _super);
      function OrdersApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      OrdersApi2.prototype.createOrder = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders");
            mapped = req.prepareArgs({ body: [body2, createOrderRequest_1.createOrderRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createOrderResponse_1.createOrderResponseSchema, requestOptions)];
          });
        });
      };
      OrdersApi2.prototype.batchRetrieveOrders = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders/batch-retrieve");
            mapped = req.prepareArgs({
              body: [body2, batchRetrieveOrdersRequest_1.batchRetrieveOrdersRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(batchRetrieveOrdersResponse_1.batchRetrieveOrdersResponseSchema, requestOptions)];
          });
        });
      };
      OrdersApi2.prototype.calculateOrder = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders/calculate");
            mapped = req.prepareArgs({
              body: [body2, calculateOrderRequest_1.calculateOrderRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(calculateOrderResponse_1.calculateOrderResponseSchema, requestOptions)];
          });
        });
      };
      OrdersApi2.prototype.cloneOrder = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders/clone");
            mapped = req.prepareArgs({ body: [body2, cloneOrderRequest_1.cloneOrderRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(cloneOrderResponse_1.cloneOrderResponseSchema, requestOptions)];
          });
        });
      };
      OrdersApi2.prototype.searchOrders = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/orders/search");
            mapped = req.prepareArgs({ body: [body2, searchOrdersRequest_1.searchOrdersRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchOrdersResponse_1.searchOrdersResponseSchema, requestOptions)];
          });
        });
      };
      OrdersApi2.prototype.retrieveOrder = function(orderId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ orderId: [orderId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/orders/", ""], ["/v2/orders/", ""])), mapped.orderId);
            return [2, req.callAsJson(retrieveOrderResponse_1.retrieveOrderResponseSchema, requestOptions)];
          });
        });
      };
      OrdersApi2.prototype.updateOrder = function(orderId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              orderId: [orderId, (0, schema_1.string)()],
              body: [body2, updateOrderRequest_1.updateOrderRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/orders/", ""], ["/v2/orders/", ""])), mapped.orderId);
            return [2, req.callAsJson(updateOrderResponse_1.updateOrderResponseSchema, requestOptions)];
          });
        });
      };
      OrdersApi2.prototype.payOrder = function(orderId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              orderId: [orderId, (0, schema_1.string)()],
              body: [body2, payOrderRequest_1.payOrderRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/orders/", "/pay"], ["/v2/orders/", "/pay"])), mapped.orderId);
            return [2, req.callAsJson(payOrderResponse_1.payOrderResponseSchema, requestOptions)];
          });
        });
      };
      return OrdersApi2;
    }(baseApi_1.BaseApi);
    exports.OrdersApi = OrdersApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
  }
});

// node_modules/square/dist/cjs/models/cancelPaymentByIdempotencyKeyRequest.js
var require_cancelPaymentByIdempotencyKeyRequest = __commonJS({
  "node_modules/square/dist/cjs/models/cancelPaymentByIdempotencyKeyRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelPaymentByIdempotencyKeyRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.cancelPaymentByIdempotencyKeyRequestSchema = (0, schema_1.object)({ idempotencyKey: ["idempotency_key", (0, schema_1.string)()] });
  }
});

// node_modules/square/dist/cjs/models/cancelPaymentByIdempotencyKeyResponse.js
var require_cancelPaymentByIdempotencyKeyResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelPaymentByIdempotencyKeyResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelPaymentByIdempotencyKeyResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.cancelPaymentByIdempotencyKeyResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/applicationDetails.js
var require_applicationDetails = __commonJS({
  "node_modules/square/dist/cjs/models/applicationDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.applicationDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.applicationDetailsSchema = (0, schema_1.object)({
      squareProduct: ["square_product", (0, schema_1.optional)((0, schema_1.string)())],
      applicationId: ["application_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/aCHDetails.js
var require_aCHDetails = __commonJS({
  "node_modules/square/dist/cjs/models/aCHDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.aCHDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.aCHDetailsSchema = (0, schema_1.object)({
      routingNumber: ["routing_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      accountNumberSuffix: ["account_number_suffix", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      accountType: ["account_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/bankAccountPaymentDetails.js
var require_bankAccountPaymentDetails = __commonJS({
  "node_modules/square/dist/cjs/models/bankAccountPaymentDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bankAccountPaymentDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var aCHDetails_1 = require_aCHDetails();
    var error_1 = require_error();
    exports.bankAccountPaymentDetailsSchema = (0, schema_1.object)({
      bankName: ["bank_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      transferType: ["transfer_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      accountOwnershipType: [
        "account_ownership_type",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      fingerprint: ["fingerprint", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      country: ["country", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      statementDescription: [
        "statement_description",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      achDetails: ["ach_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return aCHDetails_1.aCHDetailsSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      }))))]
    });
  }
});

// node_modules/square/dist/cjs/models/afterpayDetails.js
var require_afterpayDetails = __commonJS({
  "node_modules/square/dist/cjs/models/afterpayDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.afterpayDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.afterpayDetailsSchema = (0, schema_1.object)({
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/clearpayDetails.js
var require_clearpayDetails = __commonJS({
  "node_modules/square/dist/cjs/models/clearpayDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.clearpayDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.clearpayDetailsSchema = (0, schema_1.object)({
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/buyNowPayLaterDetails.js
var require_buyNowPayLaterDetails = __commonJS({
  "node_modules/square/dist/cjs/models/buyNowPayLaterDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.buyNowPayLaterDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var afterpayDetails_1 = require_afterpayDetails();
    var clearpayDetails_1 = require_clearpayDetails();
    exports.buyNowPayLaterDetailsSchema = (0, schema_1.object)({
      brand: ["brand", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      afterpayDetails: [
        "afterpay_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return afterpayDetails_1.afterpayDetailsSchema;
        }))
      ],
      clearpayDetails: [
        "clearpay_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return clearpayDetails_1.clearpayDetailsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/cardPaymentTimeline.js
var require_cardPaymentTimeline = __commonJS({
  "node_modules/square/dist/cjs/models/cardPaymentTimeline.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cardPaymentTimelineSchema = void 0;
    var schema_1 = require_schema2();
    exports.cardPaymentTimelineSchema = (0, schema_1.object)({
      authorizedAt: ["authorized_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      capturedAt: ["captured_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      voidedAt: ["voided_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/deviceDetails.js
var require_deviceDetails = __commonJS({
  "node_modules/square/dist/cjs/models/deviceDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deviceDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.deviceDetailsSchema = (0, schema_1.object)({
      deviceId: ["device_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      deviceInstallationId: [
        "device_installation_id",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      deviceName: ["device_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/cardPaymentDetails.js
var require_cardPaymentDetails = __commonJS({
  "node_modules/square/dist/cjs/models/cardPaymentDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cardPaymentDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    var cardPaymentTimeline_1 = require_cardPaymentTimeline();
    var deviceDetails_1 = require_deviceDetails();
    var error_1 = require_error();
    exports.cardPaymentDetailsSchema = (0, schema_1.object)({
      status: ["status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      card: ["card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))],
      entryMethod: ["entry_method", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      cvvStatus: ["cvv_status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      avsStatus: ["avs_status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      authResultCode: ["auth_result_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      applicationIdentifier: [
        "application_identifier",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      applicationName: ["application_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      applicationCryptogram: [
        "application_cryptogram",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      verificationMethod: ["verification_method", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      verificationResults: ["verification_results", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      statementDescription: ["statement_description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      deviceDetails: ["device_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return deviceDetails_1.deviceDetailsSchema;
      }))],
      cardPaymentTimeline: [
        "card_payment_timeline",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return cardPaymentTimeline_1.cardPaymentTimelineSchema;
        }))
      ],
      refundRequiresCardPresence: [
        "refund_requires_card_presence",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      }))))]
    });
  }
});

// node_modules/square/dist/cjs/models/cashPaymentDetails.js
var require_cashPaymentDetails = __commonJS({
  "node_modules/square/dist/cjs/models/cashPaymentDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cashPaymentDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.cashPaymentDetailsSchema = (0, schema_1.object)({
      buyerSuppliedMoney: ["buyer_supplied_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      changeBackMoney: ["change_back_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/cashAppDetails.js
var require_cashAppDetails = __commonJS({
  "node_modules/square/dist/cjs/models/cashAppDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cashAppDetailsSchema = void 0;
    var schema_1 = require_schema2();
    exports.cashAppDetailsSchema = (0, schema_1.object)({
      buyerFullName: ["buyer_full_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerCountryCode: ["buyer_country_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerCashtag: ["buyer_cashtag", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/digitalWalletDetails.js
var require_digitalWalletDetails = __commonJS({
  "node_modules/square/dist/cjs/models/digitalWalletDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.digitalWalletDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var cashAppDetails_1 = require_cashAppDetails();
    exports.digitalWalletDetailsSchema = (0, schema_1.object)({
      status: ["status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      brand: ["brand", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      cashAppDetails: [
        "cash_app_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return cashAppDetails_1.cashAppDetailsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/externalPaymentDetails.js
var require_externalPaymentDetails = __commonJS({
  "node_modules/square/dist/cjs/models/externalPaymentDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.externalPaymentDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.externalPaymentDetailsSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.string)()],
      source: ["source", (0, schema_1.string)()],
      sourceId: ["source_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sourceFeeMoney: ["source_fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/processingFee.js
var require_processingFee = __commonJS({
  "node_modules/square/dist/cjs/models/processingFee.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.processingFeeSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.processingFeeSchema = (0, schema_1.object)({
      effectiveAt: ["effective_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/riskEvaluation.js
var require_riskEvaluation = __commonJS({
  "node_modules/square/dist/cjs/models/riskEvaluation.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.riskEvaluationSchema = void 0;
    var schema_1 = require_schema2();
    exports.riskEvaluationSchema = (0, schema_1.object)({
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      riskLevel: ["risk_level", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/payment.js
var require_payment = __commonJS({
  "node_modules/square/dist/cjs/models/payment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var applicationDetails_1 = require_applicationDetails();
    var bankAccountPaymentDetails_1 = require_bankAccountPaymentDetails();
    var buyNowPayLaterDetails_1 = require_buyNowPayLaterDetails();
    var cardPaymentDetails_1 = require_cardPaymentDetails();
    var cashPaymentDetails_1 = require_cashPaymentDetails();
    var deviceDetails_1 = require_deviceDetails();
    var digitalWalletDetails_1 = require_digitalWalletDetails();
    var externalPaymentDetails_1 = require_externalPaymentDetails();
    var money_1 = require_money();
    var processingFee_1 = require_processingFee();
    var riskEvaluation_1 = require_riskEvaluation();
    exports.paymentSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      tipMoney: ["tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      appFeeMoney: ["app_fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      approvedMoney: ["approved_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      processingFee: [
        "processing_fee",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return processingFee_1.processingFeeSchema;
        })))
      ],
      refundedMoney: ["refunded_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      delayDuration: ["delay_duration", (0, schema_1.optional)((0, schema_1.string)())],
      delayAction: ["delay_action", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      delayedUntil: ["delayed_until", (0, schema_1.optional)((0, schema_1.string)())],
      sourceType: ["source_type", (0, schema_1.optional)((0, schema_1.string)())],
      cardDetails: ["card_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return cardPaymentDetails_1.cardPaymentDetailsSchema;
      }))],
      cashDetails: ["cash_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return cashPaymentDetails_1.cashPaymentDetailsSchema;
      }))],
      bankAccountDetails: [
        "bank_account_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return bankAccountPaymentDetails_1.bankAccountPaymentDetailsSchema;
        }))
      ],
      externalDetails: [
        "external_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return externalPaymentDetails_1.externalPaymentDetailsSchema;
        }))
      ],
      walletDetails: [
        "wallet_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return digitalWalletDetails_1.digitalWalletDetailsSchema;
        }))
      ],
      buyNowPayLaterDetails: [
        "buy_now_pay_later_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return buyNowPayLaterDetails_1.buyNowPayLaterDetailsSchema;
        }))
      ],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.string)())],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.string)())],
      employeeId: ["employee_id", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.string)())],
      refundIds: ["refund_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      riskEvaluation: [
        "risk_evaluation",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return riskEvaluation_1.riskEvaluationSchema;
        }))
      ],
      buyerEmailAddress: ["buyer_email_address", (0, schema_1.optional)((0, schema_1.string)())],
      billingAddress: ["billing_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      shippingAddress: ["shipping_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      note: ["note", (0, schema_1.optional)((0, schema_1.string)())],
      statementDescriptionIdentifier: [
        "statement_description_identifier",
        (0, schema_1.optional)((0, schema_1.string)())
      ],
      capabilities: ["capabilities", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      receiptNumber: ["receipt_number", (0, schema_1.optional)((0, schema_1.string)())],
      receiptUrl: ["receipt_url", (0, schema_1.optional)((0, schema_1.string)())],
      deviceDetails: ["device_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return deviceDetails_1.deviceDetailsSchema;
      }))],
      applicationDetails: [
        "application_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return applicationDetails_1.applicationDetailsSchema;
        }))
      ],
      versionToken: ["version_token", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelPaymentResponse.js
var require_cancelPaymentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelPaymentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelPaymentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payment_1 = require_payment();
    exports.cancelPaymentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      payment: ["payment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return payment_1.paymentSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/completePaymentRequest.js
var require_completePaymentRequest = __commonJS({
  "node_modules/square/dist/cjs/models/completePaymentRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.completePaymentRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.completePaymentRequestSchema = (0, schema_1.object)({ versionToken: ["version_token", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/completePaymentResponse.js
var require_completePaymentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/completePaymentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.completePaymentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payment_1 = require_payment();
    exports.completePaymentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      payment: ["payment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return payment_1.paymentSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createPaymentRequest.js
var require_createPaymentRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createPaymentRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createPaymentRequestSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var cashPaymentDetails_1 = require_cashPaymentDetails();
    var externalPaymentDetails_1 = require_externalPaymentDetails();
    var money_1 = require_money();
    exports.createPaymentRequestSchema = (0, schema_1.object)({
      sourceId: ["source_id", (0, schema_1.string)()],
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      tipMoney: ["tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      appFeeMoney: ["app_fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      delayDuration: ["delay_duration", (0, schema_1.optional)((0, schema_1.string)())],
      delayAction: ["delay_action", (0, schema_1.optional)((0, schema_1.string)())],
      autocomplete: ["autocomplete", (0, schema_1.optional)((0, schema_1.boolean)())],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.string)())],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.string)())],
      verificationToken: ["verification_token", (0, schema_1.optional)((0, schema_1.string)())],
      acceptPartialAuthorization: [
        "accept_partial_authorization",
        (0, schema_1.optional)((0, schema_1.boolean)())
      ],
      buyerEmailAddress: ["buyer_email_address", (0, schema_1.optional)((0, schema_1.string)())],
      billingAddress: ["billing_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      shippingAddress: ["shipping_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      note: ["note", (0, schema_1.optional)((0, schema_1.string)())],
      statementDescriptionIdentifier: [
        "statement_description_identifier",
        (0, schema_1.optional)((0, schema_1.string)())
      ],
      cashDetails: ["cash_details", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return cashPaymentDetails_1.cashPaymentDetailsSchema;
      }))],
      externalDetails: [
        "external_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return externalPaymentDetails_1.externalPaymentDetailsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createPaymentResponse.js
var require_createPaymentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createPaymentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createPaymentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payment_1 = require_payment();
    exports.createPaymentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      payment: ["payment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return payment_1.paymentSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getPaymentResponse.js
var require_getPaymentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getPaymentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getPaymentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payment_1 = require_payment();
    exports.getPaymentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      payment: ["payment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return payment_1.paymentSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listPaymentsResponse.js
var require_listPaymentsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listPaymentsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listPaymentsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payment_1 = require_payment();
    exports.listPaymentsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      payments: ["payments", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return payment_1.paymentSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/updatePaymentRequest.js
var require_updatePaymentRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updatePaymentRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updatePaymentRequestSchema = void 0;
    var schema_1 = require_schema2();
    var payment_1 = require_payment();
    exports.updatePaymentRequestSchema = (0, schema_1.object)({
      payment: ["payment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return payment_1.paymentSchema;
      }))],
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/updatePaymentResponse.js
var require_updatePaymentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updatePaymentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updatePaymentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payment_1 = require_payment();
    exports.updatePaymentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      payment: ["payment", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return payment_1.paymentSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/paymentsApi.js
var require_paymentsApi = __commonJS({
  "node_modules/square/dist/cjs/api/paymentsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.PaymentsApi = void 0;
    var tslib_1 = require_tslib();
    var cancelPaymentByIdempotencyKeyRequest_1 = require_cancelPaymentByIdempotencyKeyRequest();
    var cancelPaymentByIdempotencyKeyResponse_1 = require_cancelPaymentByIdempotencyKeyResponse();
    var cancelPaymentResponse_1 = require_cancelPaymentResponse();
    var completePaymentRequest_1 = require_completePaymentRequest();
    var completePaymentResponse_1 = require_completePaymentResponse();
    var createPaymentRequest_1 = require_createPaymentRequest();
    var createPaymentResponse_1 = require_createPaymentResponse();
    var getPaymentResponse_1 = require_getPaymentResponse();
    var listPaymentsResponse_1 = require_listPaymentsResponse();
    var updatePaymentRequest_1 = require_updatePaymentRequest();
    var updatePaymentResponse_1 = require_updatePaymentResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var PaymentsApi = function(_super) {
      tslib_1.__extends(PaymentsApi2, _super);
      function PaymentsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      PaymentsApi2.prototype.listPayments = function(beginTime, endTime, sortOrder, cursor, locationId, total, last4, cardBrand, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/payments");
            mapped = req.prepareArgs({
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              total: [total, (0, schema_1.optional)((0, schema_1.bigint)())],
              last4: [last4, (0, schema_1.optional)((0, schema_1.string)())],
              cardBrand: [cardBrand, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("sort_order", mapped.sortOrder);
            req.query("cursor", mapped.cursor);
            req.query("location_id", mapped.locationId);
            req.query("total", mapped.total);
            req.query("last_4", mapped.last4);
            req.query("card_brand", mapped.cardBrand);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listPaymentsResponse_1.listPaymentsResponseSchema, requestOptions)];
          });
        });
      };
      PaymentsApi2.prototype.createPayment = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/payments");
            mapped = req.prepareArgs({
              body: [body2, createPaymentRequest_1.createPaymentRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createPaymentResponse_1.createPaymentResponseSchema, requestOptions)];
          });
        });
      };
      PaymentsApi2.prototype.cancelPaymentByIdempotencyKey = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/payments/cancel");
            mapped = req.prepareArgs({
              body: [body2, cancelPaymentByIdempotencyKeyRequest_1.cancelPaymentByIdempotencyKeyRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(cancelPaymentByIdempotencyKeyResponse_1.cancelPaymentByIdempotencyKeyResponseSchema, requestOptions)];
          });
        });
      };
      PaymentsApi2.prototype.getPayment = function(paymentId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ paymentId: [paymentId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/payments/", ""], ["/v2/payments/", ""])), mapped.paymentId);
            return [2, req.callAsJson(getPaymentResponse_1.getPaymentResponseSchema, requestOptions)];
          });
        });
      };
      PaymentsApi2.prototype.updatePayment = function(paymentId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              paymentId: [paymentId, (0, schema_1.string)()],
              body: [body2, updatePaymentRequest_1.updatePaymentRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/payments/", ""], ["/v2/payments/", ""])), mapped.paymentId);
            return [2, req.callAsJson(updatePaymentResponse_1.updatePaymentResponseSchema, requestOptions)];
          });
        });
      };
      PaymentsApi2.prototype.cancelPayment = function(paymentId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({ paymentId: [paymentId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/payments/", "/cancel"], ["/v2/payments/", "/cancel"])), mapped.paymentId);
            return [2, req.callAsJson(cancelPaymentResponse_1.cancelPaymentResponseSchema, requestOptions)];
          });
        });
      };
      PaymentsApi2.prototype.completePayment = function(paymentId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              paymentId: [paymentId, (0, schema_1.string)()],
              body: [body2, completePaymentRequest_1.completePaymentRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/payments/", "/complete"], ["/v2/payments/", "/complete"])), mapped.paymentId);
            return [2, req.callAsJson(completePaymentResponse_1.completePaymentResponseSchema, requestOptions)];
          });
        });
      };
      return PaymentsApi2;
    }(baseApi_1.BaseApi);
    exports.PaymentsApi = PaymentsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
  }
});

// node_modules/square/dist/cjs/models/destination.js
var require_destination = __commonJS({
  "node_modules/square/dist/cjs/models/destination.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.destinationSchema = void 0;
    var schema_1 = require_schema2();
    exports.destinationSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/payoutFee.js
var require_payoutFee = __commonJS({
  "node_modules/square/dist/cjs/models/payoutFee.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.payoutFeeSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.payoutFeeSchema = (0, schema_1.object)({
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      effectiveAt: ["effective_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/payout.js
var require_payout = __commonJS({
  "node_modules/square/dist/cjs/models/payout.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.payoutSchema = void 0;
    var schema_1 = require_schema2();
    var destination_1 = require_destination();
    var money_1 = require_money();
    var payoutFee_1 = require_payoutFee();
    exports.payoutSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.string)()],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      destination: ["destination", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return destination_1.destinationSchema;
      }))],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      payoutFee: [
        "payout_fee",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return payoutFee_1.payoutFeeSchema;
        }))))
      ],
      arrivalDate: ["arrival_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/getPayoutResponse.js
var require_getPayoutResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getPayoutResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getPayoutResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payout_1 = require_payout();
    exports.getPayoutResponseSchema = (0, schema_1.object)({
      payout: ["payout", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return payout_1.payoutSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityAppFeeRefundDetail.js
var require_paymentBalanceActivityAppFeeRefundDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityAppFeeRefundDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityAppFeeRefundDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityAppFeeRefundDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      refundId: ["refund_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityAppFeeRevenueDetail.js
var require_paymentBalanceActivityAppFeeRevenueDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityAppFeeRevenueDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityAppFeeRevenueDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityAppFeeRevenueDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityAutomaticSavingsDetail.js
var require_paymentBalanceActivityAutomaticSavingsDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityAutomaticSavingsDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityAutomaticSavingsDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityAutomaticSavingsDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      payoutId: ["payout_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityAutomaticSavingsReversedDetail.js
var require_paymentBalanceActivityAutomaticSavingsReversedDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityAutomaticSavingsReversedDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityAutomaticSavingsReversedDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityAutomaticSavingsReversedDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      payoutId: ["payout_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityChargeDetail.js
var require_paymentBalanceActivityChargeDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityChargeDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityChargeDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityChargeDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityDepositFeeDetail.js
var require_paymentBalanceActivityDepositFeeDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityDepositFeeDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityDepositFeeDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityDepositFeeDetailSchema = (0, schema_1.object)({ payoutId: ["payout_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityDisputeDetail.js
var require_paymentBalanceActivityDisputeDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityDisputeDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityDisputeDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityDisputeDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      disputeId: ["dispute_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityFeeDetail.js
var require_paymentBalanceActivityFeeDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityFeeDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityFeeDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityFeeDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityFreeProcessingDetail.js
var require_paymentBalanceActivityFreeProcessingDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityFreeProcessingDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityFreeProcessingDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityFreeProcessingDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityHoldAdjustmentDetail.js
var require_paymentBalanceActivityHoldAdjustmentDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityHoldAdjustmentDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityHoldAdjustmentDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityHoldAdjustmentDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityOpenDisputeDetail.js
var require_paymentBalanceActivityOpenDisputeDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityOpenDisputeDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityOpenDisputeDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityOpenDisputeDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      disputeId: ["dispute_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityOtherAdjustmentDetail.js
var require_paymentBalanceActivityOtherAdjustmentDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityOtherAdjustmentDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityOtherAdjustmentDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityOtherAdjustmentDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityOtherDetail.js
var require_paymentBalanceActivityOtherDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityOtherDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityOtherDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityOtherDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityRefundDetail.js
var require_paymentBalanceActivityRefundDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityRefundDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityRefundDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityRefundDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      refundId: ["refund_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityReleaseAdjustmentDetail.js
var require_paymentBalanceActivityReleaseAdjustmentDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityReleaseAdjustmentDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityReleaseAdjustmentDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityReleaseAdjustmentDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityReserveHoldDetail.js
var require_paymentBalanceActivityReserveHoldDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityReserveHoldDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityReserveHoldDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityReserveHoldDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityReserveReleaseDetail.js
var require_paymentBalanceActivityReserveReleaseDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityReserveReleaseDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityReserveReleaseDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityReserveReleaseDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivitySquareCapitalPaymentDetail.js
var require_paymentBalanceActivitySquareCapitalPaymentDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivitySquareCapitalPaymentDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivitySquareCapitalPaymentDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivitySquareCapitalPaymentDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivitySquareCapitalReversedPaymentDetail.js
var require_paymentBalanceActivitySquareCapitalReversedPaymentDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivitySquareCapitalReversedPaymentDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivitySquareCapitalReversedPaymentDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivitySquareCapitalReversedPaymentDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityTaxOnFeeDetail.js
var require_paymentBalanceActivityTaxOnFeeDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityTaxOnFeeDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityTaxOnFeeDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityTaxOnFeeDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      taxRateDescription: ["tax_rate_description", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityThirdPartyFeeDetail.js
var require_paymentBalanceActivityThirdPartyFeeDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityThirdPartyFeeDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityThirdPartyFeeDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityThirdPartyFeeDetailSchema = (0, schema_1.object)({ paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/paymentBalanceActivityThirdPartyFeeRefundDetail.js
var require_paymentBalanceActivityThirdPartyFeeRefundDetail = __commonJS({
  "node_modules/square/dist/cjs/models/paymentBalanceActivityThirdPartyFeeRefundDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentBalanceActivityThirdPartyFeeRefundDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentBalanceActivityThirdPartyFeeRefundDetailSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      refundId: ["refund_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/payoutEntry.js
var require_payoutEntry = __commonJS({
  "node_modules/square/dist/cjs/models/payoutEntry.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.payoutEntrySchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    var paymentBalanceActivityAppFeeRefundDetail_1 = require_paymentBalanceActivityAppFeeRefundDetail();
    var paymentBalanceActivityAppFeeRevenueDetail_1 = require_paymentBalanceActivityAppFeeRevenueDetail();
    var paymentBalanceActivityAutomaticSavingsDetail_1 = require_paymentBalanceActivityAutomaticSavingsDetail();
    var paymentBalanceActivityAutomaticSavingsReversedDetail_1 = require_paymentBalanceActivityAutomaticSavingsReversedDetail();
    var paymentBalanceActivityChargeDetail_1 = require_paymentBalanceActivityChargeDetail();
    var paymentBalanceActivityDepositFeeDetail_1 = require_paymentBalanceActivityDepositFeeDetail();
    var paymentBalanceActivityDisputeDetail_1 = require_paymentBalanceActivityDisputeDetail();
    var paymentBalanceActivityFeeDetail_1 = require_paymentBalanceActivityFeeDetail();
    var paymentBalanceActivityFreeProcessingDetail_1 = require_paymentBalanceActivityFreeProcessingDetail();
    var paymentBalanceActivityHoldAdjustmentDetail_1 = require_paymentBalanceActivityHoldAdjustmentDetail();
    var paymentBalanceActivityOpenDisputeDetail_1 = require_paymentBalanceActivityOpenDisputeDetail();
    var paymentBalanceActivityOtherAdjustmentDetail_1 = require_paymentBalanceActivityOtherAdjustmentDetail();
    var paymentBalanceActivityOtherDetail_1 = require_paymentBalanceActivityOtherDetail();
    var paymentBalanceActivityRefundDetail_1 = require_paymentBalanceActivityRefundDetail();
    var paymentBalanceActivityReleaseAdjustmentDetail_1 = require_paymentBalanceActivityReleaseAdjustmentDetail();
    var paymentBalanceActivityReserveHoldDetail_1 = require_paymentBalanceActivityReserveHoldDetail();
    var paymentBalanceActivityReserveReleaseDetail_1 = require_paymentBalanceActivityReserveReleaseDetail();
    var paymentBalanceActivitySquareCapitalPaymentDetail_1 = require_paymentBalanceActivitySquareCapitalPaymentDetail();
    var paymentBalanceActivitySquareCapitalReversedPaymentDetail_1 = require_paymentBalanceActivitySquareCapitalReversedPaymentDetail();
    var paymentBalanceActivityTaxOnFeeDetail_1 = require_paymentBalanceActivityTaxOnFeeDetail();
    var paymentBalanceActivityThirdPartyFeeDetail_1 = require_paymentBalanceActivityThirdPartyFeeDetail();
    var paymentBalanceActivityThirdPartyFeeRefundDetail_1 = require_paymentBalanceActivityThirdPartyFeeRefundDetail();
    exports.payoutEntrySchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      payoutId: ["payout_id", (0, schema_1.string)()],
      effectiveAt: ["effective_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      grossAmountMoney: ["gross_amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      feeAmountMoney: ["fee_amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      netAmountMoney: ["net_amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      typeAppFeeRevenueDetails: [
        "type_app_fee_revenue_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityAppFeeRevenueDetail_1.paymentBalanceActivityAppFeeRevenueDetailSchema;
        }))
      ],
      typeAppFeeRefundDetails: [
        "type_app_fee_refund_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityAppFeeRefundDetail_1.paymentBalanceActivityAppFeeRefundDetailSchema;
        }))
      ],
      typeAutomaticSavingsDetails: [
        "type_automatic_savings_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityAutomaticSavingsDetail_1.paymentBalanceActivityAutomaticSavingsDetailSchema;
        }))
      ],
      typeAutomaticSavingsReversedDetails: [
        "type_automatic_savings_reversed_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityAutomaticSavingsReversedDetail_1.paymentBalanceActivityAutomaticSavingsReversedDetailSchema;
        }))
      ],
      typeChargeDetails: [
        "type_charge_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityChargeDetail_1.paymentBalanceActivityChargeDetailSchema;
        }))
      ],
      typeDepositFeeDetails: [
        "type_deposit_fee_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityDepositFeeDetail_1.paymentBalanceActivityDepositFeeDetailSchema;
        }))
      ],
      typeDisputeDetails: [
        "type_dispute_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityDisputeDetail_1.paymentBalanceActivityDisputeDetailSchema;
        }))
      ],
      typeFeeDetails: [
        "type_fee_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityFeeDetail_1.paymentBalanceActivityFeeDetailSchema;
        }))
      ],
      typeFreeProcessingDetails: [
        "type_free_processing_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityFreeProcessingDetail_1.paymentBalanceActivityFreeProcessingDetailSchema;
        }))
      ],
      typeHoldAdjustmentDetails: [
        "type_hold_adjustment_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityHoldAdjustmentDetail_1.paymentBalanceActivityHoldAdjustmentDetailSchema;
        }))
      ],
      typeOpenDisputeDetails: [
        "type_open_dispute_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityOpenDisputeDetail_1.paymentBalanceActivityOpenDisputeDetailSchema;
        }))
      ],
      typeOtherDetails: [
        "type_other_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityOtherDetail_1.paymentBalanceActivityOtherDetailSchema;
        }))
      ],
      typeOtherAdjustmentDetails: [
        "type_other_adjustment_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityOtherAdjustmentDetail_1.paymentBalanceActivityOtherAdjustmentDetailSchema;
        }))
      ],
      typeRefundDetails: [
        "type_refund_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityRefundDetail_1.paymentBalanceActivityRefundDetailSchema;
        }))
      ],
      typeReleaseAdjustmentDetails: [
        "type_release_adjustment_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityReleaseAdjustmentDetail_1.paymentBalanceActivityReleaseAdjustmentDetailSchema;
        }))
      ],
      typeReserveHoldDetails: [
        "type_reserve_hold_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityReserveHoldDetail_1.paymentBalanceActivityReserveHoldDetailSchema;
        }))
      ],
      typeReserveReleaseDetails: [
        "type_reserve_release_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityReserveReleaseDetail_1.paymentBalanceActivityReserveReleaseDetailSchema;
        }))
      ],
      typeSquareCapitalPaymentDetails: [
        "type_square_capital_payment_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivitySquareCapitalPaymentDetail_1.paymentBalanceActivitySquareCapitalPaymentDetailSchema;
        }))
      ],
      typeSquareCapitalReversedPaymentDetails: [
        "type_square_capital_reversed_payment_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivitySquareCapitalReversedPaymentDetail_1.paymentBalanceActivitySquareCapitalReversedPaymentDetailSchema;
        }))
      ],
      typeTaxOnFeeDetails: [
        "type_tax_on_fee_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityTaxOnFeeDetail_1.paymentBalanceActivityTaxOnFeeDetailSchema;
        }))
      ],
      typeThirdPartyFeeDetails: [
        "type_third_party_fee_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityThirdPartyFeeDetail_1.paymentBalanceActivityThirdPartyFeeDetailSchema;
        }))
      ],
      typeThirdPartyFeeRefundDetails: [
        "type_third_party_fee_refund_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentBalanceActivityThirdPartyFeeRefundDetail_1.paymentBalanceActivityThirdPartyFeeRefundDetailSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/listPayoutEntriesResponse.js
var require_listPayoutEntriesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listPayoutEntriesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listPayoutEntriesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payoutEntry_1 = require_payoutEntry();
    exports.listPayoutEntriesResponseSchema = (0, schema_1.object)({
      payoutEntries: [
        "payout_entries",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return payoutEntry_1.payoutEntrySchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/listPayoutsResponse.js
var require_listPayoutsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listPayoutsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listPayoutsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var payout_1 = require_payout();
    exports.listPayoutsResponseSchema = (0, schema_1.object)({
      payouts: ["payouts", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return payout_1.payoutSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/payoutsApi.js
var require_payoutsApi = __commonJS({
  "node_modules/square/dist/cjs/api/payoutsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.PayoutsApi = void 0;
    var tslib_1 = require_tslib();
    var getPayoutResponse_1 = require_getPayoutResponse();
    var listPayoutEntriesResponse_1 = require_listPayoutEntriesResponse();
    var listPayoutsResponse_1 = require_listPayoutsResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var PayoutsApi = function(_super) {
      tslib_1.__extends(PayoutsApi2, _super);
      function PayoutsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      PayoutsApi2.prototype.listPayouts = function(locationId, status, beginTime, endTime, sortOrder, cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/payouts");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              status: [status, (0, schema_1.optional)((0, schema_1.string)())],
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("location_id", mapped.locationId);
            req.query("status", mapped.status);
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("sort_order", mapped.sortOrder);
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listPayoutsResponse_1.listPayoutsResponseSchema, requestOptions)];
          });
        });
      };
      PayoutsApi2.prototype.getPayout = function(payoutId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ payoutId: [payoutId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/payouts/", ""], ["/v2/payouts/", ""])), mapped.payoutId);
            return [2, req.callAsJson(getPayoutResponse_1.getPayoutResponseSchema, requestOptions)];
          });
        });
      };
      PayoutsApi2.prototype.listPayoutEntries = function(payoutId, sortOrder, cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              payoutId: [payoutId, (0, schema_1.string)()],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("sort_order", mapped.sortOrder);
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/payouts/", "/payout-entries"], ["/v2/payouts/", "/payout-entries"])), mapped.payoutId);
            return [2, req.callAsJson(listPayoutEntriesResponse_1.listPayoutEntriesResponseSchema, requestOptions)];
          });
        });
      };
      return PayoutsApi2;
    }(baseApi_1.BaseApi);
    exports.PayoutsApi = PayoutsApi;
    var templateObject_1;
    var templateObject_2;
  }
});

// node_modules/square/dist/cjs/models/destinationDetailsCardRefundDetails.js
var require_destinationDetailsCardRefundDetails = __commonJS({
  "node_modules/square/dist/cjs/models/destinationDetailsCardRefundDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.destinationDetailsCardRefundDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var card_1 = require_card();
    exports.destinationDetailsCardRefundDetailsSchema = (0, schema_1.object)({
      card: ["card", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return card_1.cardSchema;
      }))],
      entryMethod: ["entry_method", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/destinationDetails.js
var require_destinationDetails = __commonJS({
  "node_modules/square/dist/cjs/models/destinationDetails.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.destinationDetailsSchema = void 0;
    var schema_1 = require_schema2();
    var destinationDetailsCardRefundDetails_1 = require_destinationDetailsCardRefundDetails();
    exports.destinationDetailsSchema = (0, schema_1.object)({
      cardDetails: [
        "card_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return destinationDetailsCardRefundDetails_1.destinationDetailsCardRefundDetailsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentRefund.js
var require_paymentRefund = __commonJS({
  "node_modules/square/dist/cjs/models/paymentRefund.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentRefundSchema = void 0;
    var schema_1 = require_schema2();
    var destinationDetails_1 = require_destinationDetails();
    var money_1 = require_money();
    var processingFee_1 = require_processingFee();
    exports.paymentRefundSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      status: ["status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      unlinked: ["unlinked", (0, schema_1.optional)((0, schema_1.boolean)())],
      destinationType: ["destination_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      destinationDetails: [
        "destination_details",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return destinationDetails_1.destinationDetailsSchema;
        }))
      ],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      appFeeMoney: ["app_fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      processingFee: [
        "processing_fee",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return processingFee_1.processingFeeSchema;
        }))))
      ],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      reason: ["reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/getPaymentRefundResponse.js
var require_getPaymentRefundResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getPaymentRefundResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getPaymentRefundResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var paymentRefund_1 = require_paymentRefund();
    exports.getPaymentRefundResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refund: ["refund", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return paymentRefund_1.paymentRefundSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listPaymentRefundsResponse.js
var require_listPaymentRefundsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listPaymentRefundsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listPaymentRefundsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var paymentRefund_1 = require_paymentRefund();
    exports.listPaymentRefundsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refunds: ["refunds", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return paymentRefund_1.paymentRefundSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/refundPaymentRequest.js
var require_refundPaymentRequest = __commonJS({
  "node_modules/square/dist/cjs/models/refundPaymentRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.refundPaymentRequestSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.refundPaymentRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      appFeeMoney: ["app_fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      destinationId: ["destination_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      unlinked: ["unlinked", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      reason: ["reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      paymentVersionToken: ["payment_version_token", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/refundPaymentResponse.js
var require_refundPaymentResponse = __commonJS({
  "node_modules/square/dist/cjs/models/refundPaymentResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.refundPaymentResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var paymentRefund_1 = require_paymentRefund();
    exports.refundPaymentResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refund: ["refund", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return paymentRefund_1.paymentRefundSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/refundsApi.js
var require_refundsApi = __commonJS({
  "node_modules/square/dist/cjs/api/refundsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.RefundsApi = void 0;
    var tslib_1 = require_tslib();
    var getPaymentRefundResponse_1 = require_getPaymentRefundResponse();
    var listPaymentRefundsResponse_1 = require_listPaymentRefundsResponse();
    var refundPaymentRequest_1 = require_refundPaymentRequest();
    var refundPaymentResponse_1 = require_refundPaymentResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var RefundsApi = function(_super) {
      tslib_1.__extends(RefundsApi2, _super);
      function RefundsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      RefundsApi2.prototype.listPaymentRefunds = function(beginTime, endTime, sortOrder, cursor, locationId, status, sourceType, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/refunds");
            mapped = req.prepareArgs({
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              locationId: [locationId, (0, schema_1.optional)((0, schema_1.string)())],
              status: [status, (0, schema_1.optional)((0, schema_1.string)())],
              sourceType: [sourceType, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("sort_order", mapped.sortOrder);
            req.query("cursor", mapped.cursor);
            req.query("location_id", mapped.locationId);
            req.query("status", mapped.status);
            req.query("source_type", mapped.sourceType);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listPaymentRefundsResponse_1.listPaymentRefundsResponseSchema, requestOptions)];
          });
        });
      };
      RefundsApi2.prototype.refundPayment = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/refunds");
            mapped = req.prepareArgs({
              body: [body2, refundPaymentRequest_1.refundPaymentRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(refundPaymentResponse_1.refundPaymentResponseSchema, requestOptions)];
          });
        });
      };
      RefundsApi2.prototype.getPaymentRefund = function(refundId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ refundId: [refundId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/refunds/", ""], ["/v2/refunds/", ""])), mapped.refundId);
            return [2, req.callAsJson(getPaymentRefundResponse_1.getPaymentRefundResponseSchema, requestOptions)];
          });
        });
      };
      return RefundsApi2;
    }(baseApi_1.BaseApi);
    exports.RefundsApi = RefundsApi;
    var templateObject_1;
  }
});

// node_modules/square/dist/cjs/models/site.js
var require_site = __commonJS({
  "node_modules/square/dist/cjs/models/site.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.siteSchema = void 0;
    var schema_1 = require_schema2();
    exports.siteSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      siteTitle: ["site_title", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      domain: ["domain", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      isPublished: ["is_published", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listSitesResponse.js
var require_listSitesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listSitesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listSitesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var site_1 = require_site();
    exports.listSitesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      sites: ["sites", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return site_1.siteSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/sitesApi.js
var require_sitesApi = __commonJS({
  "node_modules/square/dist/cjs/api/sitesApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.SitesApi = void 0;
    var tslib_1 = require_tslib();
    var listSitesResponse_1 = require_listSitesResponse();
    var baseApi_1 = require_baseApi();
    var SitesApi = function(_super) {
      tslib_1.__extends(SitesApi2, _super);
      function SitesApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      SitesApi2.prototype.listSites = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/sites");
            return [2, req.callAsJson(listSitesResponse_1.listSitesResponseSchema, requestOptions)];
          });
        });
      };
      return SitesApi2;
    }(baseApi_1.BaseApi);
    exports.SitesApi = SitesApi;
  }
});

// node_modules/square/dist/cjs/models/deleteSnippetResponse.js
var require_deleteSnippetResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteSnippetResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteSnippetResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteSnippetResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/snippet.js
var require_snippet = __commonJS({
  "node_modules/square/dist/cjs/models/snippet.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.snippetSchema = void 0;
    var schema_1 = require_schema2();
    exports.snippetSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      siteId: ["site_id", (0, schema_1.optional)((0, schema_1.string)())],
      content: ["content", (0, schema_1.string)()],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveSnippetResponse.js
var require_retrieveSnippetResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveSnippetResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveSnippetResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var snippet_1 = require_snippet();
    exports.retrieveSnippetResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      snippet: ["snippet", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return snippet_1.snippetSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertSnippetRequest.js
var require_upsertSnippetRequest = __commonJS({
  "node_modules/square/dist/cjs/models/upsertSnippetRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertSnippetRequestSchema = void 0;
    var schema_1 = require_schema2();
    var snippet_1 = require_snippet();
    exports.upsertSnippetRequestSchema = (0, schema_1.object)({
      snippet: ["snippet", (0, schema_1.lazy)(function() {
        return snippet_1.snippetSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/upsertSnippetResponse.js
var require_upsertSnippetResponse = __commonJS({
  "node_modules/square/dist/cjs/models/upsertSnippetResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.upsertSnippetResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var snippet_1 = require_snippet();
    exports.upsertSnippetResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      snippet: ["snippet", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return snippet_1.snippetSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/snippetsApi.js
var require_snippetsApi = __commonJS({
  "node_modules/square/dist/cjs/api/snippetsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.SnippetsApi = void 0;
    var tslib_1 = require_tslib();
    var deleteSnippetResponse_1 = require_deleteSnippetResponse();
    var retrieveSnippetResponse_1 = require_retrieveSnippetResponse();
    var upsertSnippetRequest_1 = require_upsertSnippetRequest();
    var upsertSnippetResponse_1 = require_upsertSnippetResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var SnippetsApi = function(_super) {
      tslib_1.__extends(SnippetsApi2, _super);
      function SnippetsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      SnippetsApi2.prototype.deleteSnippet = function(siteId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({ siteId: [siteId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/sites/", "/snippet"], ["/v2/sites/", "/snippet"])), mapped.siteId);
            return [2, req.callAsJson(deleteSnippetResponse_1.deleteSnippetResponseSchema, requestOptions)];
          });
        });
      };
      SnippetsApi2.prototype.retrieveSnippet = function(siteId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ siteId: [siteId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/sites/", "/snippet"], ["/v2/sites/", "/snippet"])), mapped.siteId);
            return [2, req.callAsJson(retrieveSnippetResponse_1.retrieveSnippetResponseSchema, requestOptions)];
          });
        });
      };
      SnippetsApi2.prototype.upsertSnippet = function(siteId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              siteId: [siteId, (0, schema_1.string)()],
              body: [body2, upsertSnippetRequest_1.upsertSnippetRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/sites/", "/snippet"], ["/v2/sites/", "/snippet"])), mapped.siteId);
            return [2, req.callAsJson(upsertSnippetResponse_1.upsertSnippetResponseSchema, requestOptions)];
          });
        });
      };
      return SnippetsApi2;
    }(baseApi_1.BaseApi);
    exports.SnippetsApi = SnippetsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
  }
});

// node_modules/square/dist/cjs/models/subscriptionAction.js
var require_subscriptionAction = __commonJS({
  "node_modules/square/dist/cjs/models/subscriptionAction.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.subscriptionActionSchema = void 0;
    var schema_1 = require_schema2();
    exports.subscriptionActionSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      effectiveDate: ["effective_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      newPlanId: ["new_plan_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/subscriptionSource.js
var require_subscriptionSource = __commonJS({
  "node_modules/square/dist/cjs/models/subscriptionSource.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.subscriptionSourceSchema = void 0;
    var schema_1 = require_schema2();
    exports.subscriptionSourceSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/subscription.js
var require_subscription = __commonJS({
  "node_modules/square/dist/cjs/models/subscription.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.subscriptionSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    var subscriptionAction_1 = require_subscriptionAction();
    var subscriptionSource_1 = require_subscriptionSource();
    exports.subscriptionSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      planId: ["plan_id", (0, schema_1.optional)((0, schema_1.string)())],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.string)())],
      startDate: ["start_date", (0, schema_1.optional)((0, schema_1.string)())],
      canceledDate: ["canceled_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      chargedThroughDate: ["charged_through_date", (0, schema_1.optional)((0, schema_1.string)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      taxPercentage: ["tax_percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      invoiceIds: ["invoice_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      priceOverrideMoney: [
        "price_override_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      version: ["version", (0, schema_1.optional)((0, schema_1.bigint)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      cardId: ["card_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      timezone: ["timezone", (0, schema_1.optional)((0, schema_1.string)())],
      source: ["source", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscriptionSource_1.subscriptionSourceSchema;
      }))],
      actions: [
        "actions",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return subscriptionAction_1.subscriptionActionSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelSubscriptionResponse.js
var require_cancelSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    var subscriptionAction_1 = require_subscriptionAction();
    exports.cancelSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))],
      actions: ["actions", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return subscriptionAction_1.subscriptionActionSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/createSubscriptionRequest.js
var require_createSubscriptionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createSubscriptionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createSubscriptionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    var subscriptionSource_1 = require_subscriptionSource();
    exports.createSubscriptionRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.string)()],
      planId: ["plan_id", (0, schema_1.string)()],
      customerId: ["customer_id", (0, schema_1.string)()],
      startDate: ["start_date", (0, schema_1.optional)((0, schema_1.string)())],
      canceledDate: ["canceled_date", (0, schema_1.optional)((0, schema_1.string)())],
      taxPercentage: ["tax_percentage", (0, schema_1.optional)((0, schema_1.string)())],
      priceOverrideMoney: [
        "price_override_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return money_1.moneySchema;
        }))
      ],
      cardId: ["card_id", (0, schema_1.optional)((0, schema_1.string)())],
      timezone: ["timezone", (0, schema_1.optional)((0, schema_1.string)())],
      source: ["source", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscriptionSource_1.subscriptionSourceSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createSubscriptionResponse.js
var require_createSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    exports.createSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteSubscriptionActionResponse.js
var require_deleteSubscriptionActionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteSubscriptionActionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteSubscriptionActionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    exports.deleteSubscriptionActionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/subscriptionEventInfo.js
var require_subscriptionEventInfo = __commonJS({
  "node_modules/square/dist/cjs/models/subscriptionEventInfo.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.subscriptionEventInfoSchema = void 0;
    var schema_1 = require_schema2();
    exports.subscriptionEventInfoSchema = (0, schema_1.object)({
      detail: ["detail", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      code: ["code", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/subscriptionEvent.js
var require_subscriptionEvent = __commonJS({
  "node_modules/square/dist/cjs/models/subscriptionEvent.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.subscriptionEventSchema = void 0;
    var schema_1 = require_schema2();
    var subscriptionEventInfo_1 = require_subscriptionEventInfo();
    exports.subscriptionEventSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.string)()],
      subscriptionEventType: ["subscription_event_type", (0, schema_1.string)()],
      effectiveDate: ["effective_date", (0, schema_1.string)()],
      planId: ["plan_id", (0, schema_1.string)()],
      info: ["info", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscriptionEventInfo_1.subscriptionEventInfoSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/listSubscriptionEventsResponse.js
var require_listSubscriptionEventsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listSubscriptionEventsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listSubscriptionEventsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscriptionEvent_1 = require_subscriptionEvent();
    exports.listSubscriptionEventsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscriptionEvents: [
        "subscription_events",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return subscriptionEvent_1.subscriptionEventSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/pauseSubscriptionRequest.js
var require_pauseSubscriptionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/pauseSubscriptionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.pauseSubscriptionRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.pauseSubscriptionRequestSchema = (0, schema_1.object)({
      pauseEffectiveDate: ["pause_effective_date", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      pauseCycleDuration: ["pause_cycle_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.bigint)()))],
      resumeEffectiveDate: [
        "resume_effective_date",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      resumeChangeTiming: ["resume_change_timing", (0, schema_1.optional)((0, schema_1.string)())],
      pauseReason: ["pause_reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/pauseSubscriptionResponse.js
var require_pauseSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/pauseSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.pauseSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    var subscriptionAction_1 = require_subscriptionAction();
    exports.pauseSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))],
      actions: ["actions", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return subscriptionAction_1.subscriptionActionSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/resumeSubscriptionRequest.js
var require_resumeSubscriptionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/resumeSubscriptionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.resumeSubscriptionRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.resumeSubscriptionRequestSchema = (0, schema_1.object)({
      resumeEffectiveDate: [
        "resume_effective_date",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      resumeChangeTiming: ["resume_change_timing", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/resumeSubscriptionResponse.js
var require_resumeSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/resumeSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.resumeSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    var subscriptionAction_1 = require_subscriptionAction();
    exports.resumeSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))],
      actions: ["actions", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return subscriptionAction_1.subscriptionActionSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveSubscriptionResponse.js
var require_retrieveSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    exports.retrieveSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchSubscriptionsFilter.js
var require_searchSubscriptionsFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchSubscriptionsFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchSubscriptionsFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchSubscriptionsFilterSchema = (0, schema_1.object)({
      customerIds: ["customer_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      sourceNames: ["source_names", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchSubscriptionsQuery.js
var require_searchSubscriptionsQuery = __commonJS({
  "node_modules/square/dist/cjs/models/searchSubscriptionsQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchSubscriptionsQuerySchema = void 0;
    var schema_1 = require_schema2();
    var searchSubscriptionsFilter_1 = require_searchSubscriptionsFilter();
    exports.searchSubscriptionsQuerySchema = (0, schema_1.object)({ filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
      return searchSubscriptionsFilter_1.searchSubscriptionsFilterSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/searchSubscriptionsRequest.js
var require_searchSubscriptionsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchSubscriptionsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchSubscriptionsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var searchSubscriptionsQuery_1 = require_searchSubscriptionsQuery();
    exports.searchSubscriptionsRequestSchema = (0, schema_1.object)({
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return searchSubscriptionsQuery_1.searchSubscriptionsQuerySchema;
      }))],
      include: ["include", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchSubscriptionsResponse.js
var require_searchSubscriptionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchSubscriptionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchSubscriptionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    exports.searchSubscriptionsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscriptions: [
        "subscriptions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return subscription_1.subscriptionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/swapPlanRequest.js
var require_swapPlanRequest = __commonJS({
  "node_modules/square/dist/cjs/models/swapPlanRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.swapPlanRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.swapPlanRequestSchema = (0, schema_1.object)({
      newPlanId: ["new_plan_id", (0, schema_1.string)()]
    });
  }
});

// node_modules/square/dist/cjs/models/swapPlanResponse.js
var require_swapPlanResponse = __commonJS({
  "node_modules/square/dist/cjs/models/swapPlanResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.swapPlanResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    var subscriptionAction_1 = require_subscriptionAction();
    exports.swapPlanResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))],
      actions: ["actions", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return subscriptionAction_1.subscriptionActionSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateSubscriptionRequest.js
var require_updateSubscriptionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateSubscriptionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateSubscriptionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var subscription_1 = require_subscription();
    exports.updateSubscriptionRequestSchema = (0, schema_1.object)({ subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
      return subscription_1.subscriptionSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/updateSubscriptionResponse.js
var require_updateSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscription_1 = require_subscription();
    exports.updateSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: ["subscription", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return subscription_1.subscriptionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/api/subscriptionsApi.js
var require_subscriptionsApi = __commonJS({
  "node_modules/square/dist/cjs/api/subscriptionsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.SubscriptionsApi = void 0;
    var tslib_1 = require_tslib();
    var cancelSubscriptionResponse_1 = require_cancelSubscriptionResponse();
    var createSubscriptionRequest_1 = require_createSubscriptionRequest();
    var createSubscriptionResponse_1 = require_createSubscriptionResponse();
    var deleteSubscriptionActionResponse_1 = require_deleteSubscriptionActionResponse();
    var listSubscriptionEventsResponse_1 = require_listSubscriptionEventsResponse();
    var pauseSubscriptionRequest_1 = require_pauseSubscriptionRequest();
    var pauseSubscriptionResponse_1 = require_pauseSubscriptionResponse();
    var resumeSubscriptionRequest_1 = require_resumeSubscriptionRequest();
    var resumeSubscriptionResponse_1 = require_resumeSubscriptionResponse();
    var retrieveSubscriptionResponse_1 = require_retrieveSubscriptionResponse();
    var searchSubscriptionsRequest_1 = require_searchSubscriptionsRequest();
    var searchSubscriptionsResponse_1 = require_searchSubscriptionsResponse();
    var swapPlanRequest_1 = require_swapPlanRequest();
    var swapPlanResponse_1 = require_swapPlanResponse();
    var updateSubscriptionRequest_1 = require_updateSubscriptionRequest();
    var updateSubscriptionResponse_1 = require_updateSubscriptionResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var SubscriptionsApi = function(_super) {
      tslib_1.__extends(SubscriptionsApi2, _super);
      function SubscriptionsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      SubscriptionsApi2.prototype.createSubscription = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/subscriptions");
            mapped = req.prepareArgs({
              body: [body2, createSubscriptionRequest_1.createSubscriptionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createSubscriptionResponse_1.createSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.searchSubscriptions = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/subscriptions/search");
            mapped = req.prepareArgs({
              body: [body2, searchSubscriptionsRequest_1.searchSubscriptionsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchSubscriptionsResponse_1.searchSubscriptionsResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.retrieveSubscription = function(subscriptionId, include, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              include: [include, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("include", mapped.include);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", ""], ["/v2/subscriptions/", ""])), mapped.subscriptionId);
            return [2, req.callAsJson(retrieveSubscriptionResponse_1.retrieveSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.updateSubscription = function(subscriptionId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              body: [body2, updateSubscriptionRequest_1.updateSubscriptionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", ""], ["/v2/subscriptions/", ""])), mapped.subscriptionId);
            return [2, req.callAsJson(updateSubscriptionResponse_1.updateSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.deleteSubscriptionAction = function(subscriptionId, actionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              actionId: [actionId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", "/actions/", ""], ["/v2/subscriptions/", "/actions/", ""])), mapped.subscriptionId, mapped.actionId);
            return [2, req.callAsJson(deleteSubscriptionActionResponse_1.deleteSubscriptionActionResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.cancelSubscription = function(subscriptionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", "/cancel"], ["/v2/subscriptions/", "/cancel"])), mapped.subscriptionId);
            return [2, req.callAsJson(cancelSubscriptionResponse_1.cancelSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.listSubscriptionEvents = function(subscriptionId, cursor, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("limit", mapped.limit);
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", "/events"], ["/v2/subscriptions/", "/events"])), mapped.subscriptionId);
            return [2, req.callAsJson(listSubscriptionEventsResponse_1.listSubscriptionEventsResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.pauseSubscription = function(subscriptionId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              body: [body2, pauseSubscriptionRequest_1.pauseSubscriptionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", "/pause"], ["/v2/subscriptions/", "/pause"])), mapped.subscriptionId);
            return [2, req.callAsJson(pauseSubscriptionResponse_1.pauseSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.resumeSubscription = function(subscriptionId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              body: [body2, resumeSubscriptionRequest_1.resumeSubscriptionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", "/resume"], ["/v2/subscriptions/", "/resume"])), mapped.subscriptionId);
            return [2, req.callAsJson(resumeSubscriptionResponse_1.resumeSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      SubscriptionsApi2.prototype.swapPlan = function(subscriptionId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              body: [body2, swapPlanRequest_1.swapPlanRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject(["/v2/subscriptions/", "/swap-plan"], ["/v2/subscriptions/", "/swap-plan"])), mapped.subscriptionId);
            return [2, req.callAsJson(swapPlanResponse_1.swapPlanResponseSchema, requestOptions)];
          });
        });
      };
      return SubscriptionsApi2;
    }(baseApi_1.BaseApi);
    exports.SubscriptionsApi = SubscriptionsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
    var templateObject_8;
  }
});

// node_modules/square/dist/cjs/models/teamMemberAssignedLocations.js
var require_teamMemberAssignedLocations = __commonJS({
  "node_modules/square/dist/cjs/models/teamMemberAssignedLocations.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.teamMemberAssignedLocationsSchema = void 0;
    var schema_1 = require_schema2();
    exports.teamMemberAssignedLocationsSchema = (0, schema_1.object)({
      assignmentType: ["assignment_type", (0, schema_1.optional)((0, schema_1.string)())],
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/teamMember.js
var require_teamMember = __commonJS({
  "node_modules/square/dist/cjs/models/teamMember.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.teamMemberSchema = void 0;
    var schema_1 = require_schema2();
    var teamMemberAssignedLocations_1 = require_teamMemberAssignedLocations();
    exports.teamMemberSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      isOwner: ["is_owner", (0, schema_1.optional)((0, schema_1.boolean)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      givenName: ["given_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      familyName: ["family_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      assignedLocations: [
        "assigned_locations",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return teamMemberAssignedLocations_1.teamMemberAssignedLocationsSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createTeamMemberRequest.js
var require_createTeamMemberRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createTeamMemberRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTeamMemberRequestSchema = void 0;
    var schema_1 = require_schema2();
    var teamMember_1 = require_teamMember();
    exports.createTeamMemberRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      teamMember: ["team_member", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return teamMember_1.teamMemberSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkCreateTeamMembersRequest.js
var require_bulkCreateTeamMembersRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkCreateTeamMembersRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkCreateTeamMembersRequestSchema = void 0;
    var schema_1 = require_schema2();
    var createTeamMemberRequest_1 = require_createTeamMemberRequest();
    exports.bulkCreateTeamMembersRequestSchema = (0, schema_1.object)({
      teamMembers: [
        "team_members",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return createTeamMemberRequest_1.createTeamMemberRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createTeamMemberResponse.js
var require_createTeamMemberResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createTeamMemberResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTeamMemberResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMember_1 = require_teamMember();
    exports.createTeamMemberResponseSchema = (0, schema_1.object)({
      teamMember: ["team_member", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return teamMember_1.teamMemberSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkCreateTeamMembersResponse.js
var require_bulkCreateTeamMembersResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkCreateTeamMembersResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkCreateTeamMembersResponseSchema = void 0;
    var schema_1 = require_schema2();
    var createTeamMemberResponse_1 = require_createTeamMemberResponse();
    var error_1 = require_error();
    exports.bulkCreateTeamMembersResponseSchema = (0, schema_1.object)({
      teamMembers: [
        "team_members",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return createTeamMemberResponse_1.createTeamMemberResponseSchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateTeamMemberRequest.js
var require_updateTeamMemberRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateTeamMemberRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateTeamMemberRequestSchema = void 0;
    var schema_1 = require_schema2();
    var teamMember_1 = require_teamMember();
    exports.updateTeamMemberRequestSchema = (0, schema_1.object)({ teamMember: ["team_member", (0, schema_1.optional)((0, schema_1.lazy)(function() {
      return teamMember_1.teamMemberSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/bulkUpdateTeamMembersRequest.js
var require_bulkUpdateTeamMembersRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpdateTeamMembersRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpdateTeamMembersRequestSchema = void 0;
    var schema_1 = require_schema2();
    var updateTeamMemberRequest_1 = require_updateTeamMemberRequest();
    exports.bulkUpdateTeamMembersRequestSchema = (0, schema_1.object)({
      teamMembers: [
        "team_members",
        (0, schema_1.dict)((0, schema_1.lazy)(function() {
          return updateTeamMemberRequest_1.updateTeamMemberRequestSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/updateTeamMemberResponse.js
var require_updateTeamMemberResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateTeamMemberResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateTeamMemberResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMember_1 = require_teamMember();
    exports.updateTeamMemberResponseSchema = (0, schema_1.object)({
      teamMember: ["team_member", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return teamMember_1.teamMemberSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpdateTeamMembersResponse.js
var require_bulkUpdateTeamMembersResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpdateTeamMembersResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpdateTeamMembersResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var updateTeamMemberResponse_1 = require_updateTeamMemberResponse();
    exports.bulkUpdateTeamMembersResponseSchema = (0, schema_1.object)({
      teamMembers: [
        "team_members",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return updateTeamMemberResponse_1.updateTeamMemberResponseSchema;
        })))
      ],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveTeamMemberResponse.js
var require_retrieveTeamMemberResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveTeamMemberResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveTeamMemberResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMember_1 = require_teamMember();
    exports.retrieveTeamMemberResponseSchema = (0, schema_1.object)({
      teamMember: ["team_member", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return teamMember_1.teamMemberSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/jobAssignment.js
var require_jobAssignment = __commonJS({
  "node_modules/square/dist/cjs/models/jobAssignment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.jobAssignmentSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.jobAssignmentSchema = (0, schema_1.object)({
      jobTitle: ["job_title", (0, schema_1.string)()],
      payType: ["pay_type", (0, schema_1.string)()],
      hourlyRate: ["hourly_rate", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      annualRate: ["annual_rate", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      weeklyHours: ["weekly_hours", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/wageSetting.js
var require_wageSetting = __commonJS({
  "node_modules/square/dist/cjs/models/wageSetting.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.wageSettingSchema = void 0;
    var schema_1 = require_schema2();
    var jobAssignment_1 = require_jobAssignment();
    exports.wageSettingSchema = (0, schema_1.object)({
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      jobAssignments: [
        "job_assignments",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return jobAssignment_1.jobAssignmentSchema;
        }))))
      ],
      isOvertimeExempt: ["is_overtime_exempt", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveWageSettingResponse.js
var require_retrieveWageSettingResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveWageSettingResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveWageSettingResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var wageSetting_1 = require_wageSetting();
    exports.retrieveWageSettingResponseSchema = (0, schema_1.object)({
      wageSetting: ["wage_setting", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return wageSetting_1.wageSettingSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTeamMembersFilter.js
var require_searchTeamMembersFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchTeamMembersFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTeamMembersFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchTeamMembersFilterSchema = (0, schema_1.object)({
      locationIds: ["location_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      isOwner: ["is_owner", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTeamMembersQuery.js
var require_searchTeamMembersQuery = __commonJS({
  "node_modules/square/dist/cjs/models/searchTeamMembersQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTeamMembersQuerySchema = void 0;
    var schema_1 = require_schema2();
    var searchTeamMembersFilter_1 = require_searchTeamMembersFilter();
    exports.searchTeamMembersQuerySchema = (0, schema_1.object)({ filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
      return searchTeamMembersFilter_1.searchTeamMembersFilterSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/searchTeamMembersRequest.js
var require_searchTeamMembersRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchTeamMembersRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTeamMembersRequestSchema = void 0;
    var schema_1 = require_schema2();
    var searchTeamMembersQuery_1 = require_searchTeamMembersQuery();
    exports.searchTeamMembersRequestSchema = (0, schema_1.object)({
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return searchTeamMembersQuery_1.searchTeamMembersQuerySchema;
      }))],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTeamMembersResponse.js
var require_searchTeamMembersResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchTeamMembersResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTeamMembersResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var teamMember_1 = require_teamMember();
    exports.searchTeamMembersResponseSchema = (0, schema_1.object)({
      teamMembers: [
        "team_members",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return teamMember_1.teamMemberSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/models/updateWageSettingRequest.js
var require_updateWageSettingRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateWageSettingRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWageSettingRequestSchema = void 0;
    var schema_1 = require_schema2();
    var wageSetting_1 = require_wageSetting();
    exports.updateWageSettingRequestSchema = (0, schema_1.object)({ wageSetting: ["wage_setting", (0, schema_1.lazy)(function() {
      return wageSetting_1.wageSettingSchema;
    })] });
  }
});

// node_modules/square/dist/cjs/models/updateWageSettingResponse.js
var require_updateWageSettingResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateWageSettingResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWageSettingResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var wageSetting_1 = require_wageSetting();
    exports.updateWageSettingResponseSchema = (0, schema_1.object)({
      wageSetting: ["wage_setting", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return wageSetting_1.wageSettingSchema;
      }))],
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))]
    });
  }
});

// node_modules/square/dist/cjs/api/teamApi.js
var require_teamApi = __commonJS({
  "node_modules/square/dist/cjs/api/teamApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.TeamApi = void 0;
    var tslib_1 = require_tslib();
    var bulkCreateTeamMembersRequest_1 = require_bulkCreateTeamMembersRequest();
    var bulkCreateTeamMembersResponse_1 = require_bulkCreateTeamMembersResponse();
    var bulkUpdateTeamMembersRequest_1 = require_bulkUpdateTeamMembersRequest();
    var bulkUpdateTeamMembersResponse_1 = require_bulkUpdateTeamMembersResponse();
    var createTeamMemberRequest_1 = require_createTeamMemberRequest();
    var createTeamMemberResponse_1 = require_createTeamMemberResponse();
    var retrieveTeamMemberResponse_1 = require_retrieveTeamMemberResponse();
    var retrieveWageSettingResponse_1 = require_retrieveWageSettingResponse();
    var searchTeamMembersRequest_1 = require_searchTeamMembersRequest();
    var searchTeamMembersResponse_1 = require_searchTeamMembersResponse();
    var updateTeamMemberRequest_1 = require_updateTeamMemberRequest();
    var updateTeamMemberResponse_1 = require_updateTeamMemberResponse();
    var updateWageSettingRequest_1 = require_updateWageSettingRequest();
    var updateWageSettingResponse_1 = require_updateWageSettingResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var TeamApi = function(_super) {
      tslib_1.__extends(TeamApi2, _super);
      function TeamApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      TeamApi2.prototype.createTeamMember = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/team-members");
            mapped = req.prepareArgs({
              body: [body2, createTeamMemberRequest_1.createTeamMemberRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createTeamMemberResponse_1.createTeamMemberResponseSchema, requestOptions)];
          });
        });
      };
      TeamApi2.prototype.bulkCreateTeamMembers = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/team-members/bulk-create");
            mapped = req.prepareArgs({
              body: [body2, bulkCreateTeamMembersRequest_1.bulkCreateTeamMembersRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkCreateTeamMembersResponse_1.bulkCreateTeamMembersResponseSchema, requestOptions)];
          });
        });
      };
      TeamApi2.prototype.bulkUpdateTeamMembers = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/team-members/bulk-update");
            mapped = req.prepareArgs({
              body: [body2, bulkUpdateTeamMembersRequest_1.bulkUpdateTeamMembersRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkUpdateTeamMembersResponse_1.bulkUpdateTeamMembersResponseSchema, requestOptions)];
          });
        });
      };
      TeamApi2.prototype.searchTeamMembers = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/team-members/search");
            mapped = req.prepareArgs({
              body: [body2, searchTeamMembersRequest_1.searchTeamMembersRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchTeamMembersResponse_1.searchTeamMembersResponseSchema, requestOptions)];
          });
        });
      };
      TeamApi2.prototype.retrieveTeamMember = function(teamMemberId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ teamMemberId: [teamMemberId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/team-members/", ""], ["/v2/team-members/", ""])), mapped.teamMemberId);
            return [2, req.callAsJson(retrieveTeamMemberResponse_1.retrieveTeamMemberResponseSchema, requestOptions)];
          });
        });
      };
      TeamApi2.prototype.updateTeamMember = function(teamMemberId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              teamMemberId: [teamMemberId, (0, schema_1.string)()],
              body: [body2, updateTeamMemberRequest_1.updateTeamMemberRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/team-members/", ""], ["/v2/team-members/", ""])), mapped.teamMemberId);
            return [2, req.callAsJson(updateTeamMemberResponse_1.updateTeamMemberResponseSchema, requestOptions)];
          });
        });
      };
      TeamApi2.prototype.retrieveWageSetting = function(teamMemberId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ teamMemberId: [teamMemberId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/team-members/", "/wage-setting"], ["/v2/team-members/", "/wage-setting"])), mapped.teamMemberId);
            return [2, req.callAsJson(retrieveWageSettingResponse_1.retrieveWageSettingResponseSchema, requestOptions)];
          });
        });
      };
      TeamApi2.prototype.updateWageSetting = function(teamMemberId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              teamMemberId: [teamMemberId, (0, schema_1.string)()],
              body: [body2, updateWageSettingRequest_1.updateWageSettingRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/team-members/", "/wage-setting"], ["/v2/team-members/", "/wage-setting"])), mapped.teamMemberId);
            return [2, req.callAsJson(updateWageSettingResponse_1.updateWageSettingResponseSchema, requestOptions)];
          });
        });
      };
      return TeamApi2;
    }(baseApi_1.BaseApi);
    exports.TeamApi = TeamApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
  }
});

// node_modules/square/dist/cjs/models/deviceMetadata.js
var require_deviceMetadata = __commonJS({
  "node_modules/square/dist/cjs/models/deviceMetadata.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deviceMetadataSchema = void 0;
    var schema_1 = require_schema2();
    exports.deviceMetadataSchema = (0, schema_1.object)({
      batteryPercentage: ["battery_percentage", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      chargingState: ["charging_state", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      networkConnectionType: [
        "network_connection_type",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      paymentRegion: ["payment_region", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      serialNumber: ["serial_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      osVersion: ["os_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appVersion: ["app_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      wifiNetworkName: ["wifi_network_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      wifiNetworkStrength: ["wifi_network_strength", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      ipAddress: ["ip_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/receiptOptions.js
var require_receiptOptions = __commonJS({
  "node_modules/square/dist/cjs/models/receiptOptions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.receiptOptionsSchema = void 0;
    var schema_1 = require_schema2();
    exports.receiptOptionsSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.string)()],
      printOnly: ["print_only", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      isDuplicate: ["is_duplicate", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/saveCardOptions.js
var require_saveCardOptions = __commonJS({
  "node_modules/square/dist/cjs/models/saveCardOptions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.saveCardOptionsSchema = void 0;
    var schema_1 = require_schema2();
    exports.saveCardOptionsSchema = (0, schema_1.object)({
      customerId: ["customer_id", (0, schema_1.string)()],
      cardId: ["card_id", (0, schema_1.optional)((0, schema_1.string)())],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalAction.js
var require_terminalAction = __commonJS({
  "node_modules/square/dist/cjs/models/terminalAction.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalActionSchema = void 0;
    var schema_1 = require_schema2();
    var deviceMetadata_1 = require_deviceMetadata();
    var receiptOptions_1 = require_receiptOptions();
    var saveCardOptions_1 = require_saveCardOptions();
    exports.terminalActionSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      deviceId: ["device_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      deadlineDuration: ["deadline_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      cancelReason: ["cancel_reason", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      appId: ["app_id", (0, schema_1.optional)((0, schema_1.string)())],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      saveCardOptions: [
        "save_card_options",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return saveCardOptions_1.saveCardOptionsSchema;
        }))
      ],
      receiptOptions: [
        "receipt_options",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return receiptOptions_1.receiptOptionsSchema;
        }))
      ],
      deviceMetadata: [
        "device_metadata",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return deviceMetadata_1.deviceMetadataSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelTerminalActionResponse.js
var require_cancelTerminalActionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelTerminalActionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelTerminalActionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalAction_1 = require_terminalAction();
    exports.cancelTerminalActionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      action: ["action", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalAction_1.terminalActionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/tipSettings.js
var require_tipSettings = __commonJS({
  "node_modules/square/dist/cjs/models/tipSettings.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.tipSettingsSchema = void 0;
    var schema_1 = require_schema2();
    exports.tipSettingsSchema = (0, schema_1.object)({
      allowTipping: ["allow_tipping", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      separateTipScreen: ["separate_tip_screen", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      customTipField: ["custom_tip_field", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      tipPercentages: ["tip_percentages", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.number)())))],
      smartTipping: ["smart_tipping", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/deviceCheckoutOptions.js
var require_deviceCheckoutOptions = __commonJS({
  "node_modules/square/dist/cjs/models/deviceCheckoutOptions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deviceCheckoutOptionsSchema = void 0;
    var schema_1 = require_schema2();
    var tipSettings_1 = require_tipSettings();
    exports.deviceCheckoutOptionsSchema = (0, schema_1.object)({
      deviceId: ["device_id", (0, schema_1.string)()],
      skipReceiptScreen: ["skip_receipt_screen", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      collectSignature: ["collect_signature", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      tipSettings: ["tip_settings", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return tipSettings_1.tipSettingsSchema;
      }))],
      showItemizedCart: ["show_itemized_cart", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/paymentOptions.js
var require_paymentOptions = __commonJS({
  "node_modules/square/dist/cjs/models/paymentOptions.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.paymentOptionsSchema = void 0;
    var schema_1 = require_schema2();
    exports.paymentOptionsSchema = (0, schema_1.object)({
      autocomplete: ["autocomplete", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      delayDuration: ["delay_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      acceptPartialAuthorization: [
        "accept_partial_authorization",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))
      ],
      delayAction: ["delay_action", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalCheckout.js
var require_terminalCheckout = __commonJS({
  "node_modules/square/dist/cjs/models/terminalCheckout.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalCheckoutSchema = void 0;
    var schema_1 = require_schema2();
    var deviceCheckoutOptions_1 = require_deviceCheckoutOptions();
    var money_1 = require_money();
    var paymentOptions_1 = require_paymentOptions();
    exports.terminalCheckoutSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      paymentOptions: [
        "payment_options",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return paymentOptions_1.paymentOptionsSchema;
        }))
      ],
      deviceOptions: ["device_options", (0, schema_1.lazy)(function() {
        return deviceCheckoutOptions_1.deviceCheckoutOptionsSchema;
      })],
      deadlineDuration: ["deadline_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      cancelReason: ["cancel_reason", (0, schema_1.optional)((0, schema_1.string)())],
      paymentIds: ["payment_ids", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      appId: ["app_id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())],
      paymentType: ["payment_type", (0, schema_1.optional)((0, schema_1.string)())],
      teamMemberId: ["team_member_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      customerId: ["customer_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appFeeMoney: ["app_fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))],
      statementDescriptionIdentifier: [
        "statement_description_identifier",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      tipMoney: ["tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelTerminalCheckoutResponse.js
var require_cancelTerminalCheckoutResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelTerminalCheckoutResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelTerminalCheckoutResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalCheckout_1 = require_terminalCheckout();
    exports.cancelTerminalCheckoutResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      checkout: ["checkout", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalCheckout_1.terminalCheckoutSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalRefund.js
var require_terminalRefund = __commonJS({
  "node_modules/square/dist/cjs/models/terminalRefund.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalRefundSchema = void 0;
    var schema_1 = require_schema2();
    var money_1 = require_money();
    exports.terminalRefundSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      refundId: ["refund_id", (0, schema_1.optional)((0, schema_1.string)())],
      paymentId: ["payment_id", (0, schema_1.string)()],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.string)())],
      amountMoney: ["amount_money", (0, schema_1.lazy)(function() {
        return money_1.moneySchema;
      })],
      reason: ["reason", (0, schema_1.string)()],
      deviceId: ["device_id", (0, schema_1.string)()],
      deadlineDuration: ["deadline_duration", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      cancelReason: ["cancel_reason", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      appId: ["app_id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/cancelTerminalRefundResponse.js
var require_cancelTerminalRefundResponse = __commonJS({
  "node_modules/square/dist/cjs/models/cancelTerminalRefundResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.cancelTerminalRefundResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalRefund_1 = require_terminalRefund();
    exports.cancelTerminalRefundResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refund: ["refund", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalRefund_1.terminalRefundSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createTerminalActionRequest.js
var require_createTerminalActionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createTerminalActionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTerminalActionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var terminalAction_1 = require_terminalAction();
    exports.createTerminalActionRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      action: ["action", (0, schema_1.lazy)(function() {
        return terminalAction_1.terminalActionSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createTerminalActionResponse.js
var require_createTerminalActionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createTerminalActionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTerminalActionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalAction_1 = require_terminalAction();
    exports.createTerminalActionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      action: ["action", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalAction_1.terminalActionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createTerminalCheckoutRequest.js
var require_createTerminalCheckoutRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createTerminalCheckoutRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTerminalCheckoutRequestSchema = void 0;
    var schema_1 = require_schema2();
    var terminalCheckout_1 = require_terminalCheckout();
    exports.createTerminalCheckoutRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      checkout: ["checkout", (0, schema_1.lazy)(function() {
        return terminalCheckout_1.terminalCheckoutSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createTerminalCheckoutResponse.js
var require_createTerminalCheckoutResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createTerminalCheckoutResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTerminalCheckoutResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalCheckout_1 = require_terminalCheckout();
    exports.createTerminalCheckoutResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      checkout: ["checkout", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalCheckout_1.terminalCheckoutSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createTerminalRefundRequest.js
var require_createTerminalRefundRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createTerminalRefundRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTerminalRefundRequestSchema = void 0;
    var schema_1 = require_schema2();
    var terminalRefund_1 = require_terminalRefund();
    exports.createTerminalRefundRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      refund: ["refund", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalRefund_1.terminalRefundSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/createTerminalRefundResponse.js
var require_createTerminalRefundResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createTerminalRefundResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createTerminalRefundResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalRefund_1 = require_terminalRefund();
    exports.createTerminalRefundResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refund: ["refund", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalRefund_1.terminalRefundSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getTerminalActionResponse.js
var require_getTerminalActionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getTerminalActionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getTerminalActionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalAction_1 = require_terminalAction();
    exports.getTerminalActionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      action: ["action", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalAction_1.terminalActionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getTerminalCheckoutResponse.js
var require_getTerminalCheckoutResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getTerminalCheckoutResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getTerminalCheckoutResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalCheckout_1 = require_terminalCheckout();
    exports.getTerminalCheckoutResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      checkout: ["checkout", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalCheckout_1.terminalCheckoutSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/getTerminalRefundResponse.js
var require_getTerminalRefundResponse = __commonJS({
  "node_modules/square/dist/cjs/models/getTerminalRefundResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.getTerminalRefundResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalRefund_1 = require_terminalRefund();
    exports.getTerminalRefundResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refund: ["refund", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalRefund_1.terminalRefundSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalActionQueryFilter.js
var require_terminalActionQueryFilter = __commonJS({
  "node_modules/square/dist/cjs/models/terminalActionQueryFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalActionQueryFilterSchema = void 0;
    var schema_1 = require_schema2();
    var timeRange_1 = require_timeRange();
    exports.terminalActionQueryFilterSchema = (0, schema_1.object)({
      deviceId: ["device_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      status: ["status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalActionQuerySort.js
var require_terminalActionQuerySort = __commonJS({
  "node_modules/square/dist/cjs/models/terminalActionQuerySort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalActionQuerySortSchema = void 0;
    var schema_1 = require_schema2();
    exports.terminalActionQuerySortSchema = (0, schema_1.object)({ sortOrder: ["sort_order", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/terminalActionQuery.js
var require_terminalActionQuery = __commonJS({
  "node_modules/square/dist/cjs/models/terminalActionQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalActionQuerySchema = void 0;
    var schema_1 = require_schema2();
    var terminalActionQueryFilter_1 = require_terminalActionQueryFilter();
    var terminalActionQuerySort_1 = require_terminalActionQuerySort();
    exports.terminalActionQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalActionQueryFilter_1.terminalActionQueryFilterSchema;
      }))],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalActionQuerySort_1.terminalActionQuerySortSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTerminalActionsRequest.js
var require_searchTerminalActionsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchTerminalActionsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTerminalActionsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var terminalActionQuery_1 = require_terminalActionQuery();
    exports.searchTerminalActionsRequestSchema = (0, schema_1.object)({
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalActionQuery_1.terminalActionQuerySchema;
      }))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTerminalActionsResponse.js
var require_searchTerminalActionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchTerminalActionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTerminalActionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalAction_1 = require_terminalAction();
    exports.searchTerminalActionsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      action: ["action", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return terminalAction_1.terminalActionSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalCheckoutQueryFilter.js
var require_terminalCheckoutQueryFilter = __commonJS({
  "node_modules/square/dist/cjs/models/terminalCheckoutQueryFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalCheckoutQueryFilterSchema = void 0;
    var schema_1 = require_schema2();
    var timeRange_1 = require_timeRange();
    exports.terminalCheckoutQueryFilterSchema = (0, schema_1.object)({
      deviceId: ["device_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      status: ["status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalCheckoutQuerySort.js
var require_terminalCheckoutQuerySort = __commonJS({
  "node_modules/square/dist/cjs/models/terminalCheckoutQuerySort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalCheckoutQuerySortSchema = void 0;
    var schema_1 = require_schema2();
    exports.terminalCheckoutQuerySortSchema = (0, schema_1.object)({ sortOrder: ["sort_order", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/terminalCheckoutQuery.js
var require_terminalCheckoutQuery = __commonJS({
  "node_modules/square/dist/cjs/models/terminalCheckoutQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalCheckoutQuerySchema = void 0;
    var schema_1 = require_schema2();
    var terminalCheckoutQueryFilter_1 = require_terminalCheckoutQueryFilter();
    var terminalCheckoutQuerySort_1 = require_terminalCheckoutQuerySort();
    exports.terminalCheckoutQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalCheckoutQueryFilter_1.terminalCheckoutQueryFilterSchema;
      }))],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalCheckoutQuerySort_1.terminalCheckoutQuerySortSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTerminalCheckoutsRequest.js
var require_searchTerminalCheckoutsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchTerminalCheckoutsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTerminalCheckoutsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var terminalCheckoutQuery_1 = require_terminalCheckoutQuery();
    exports.searchTerminalCheckoutsRequestSchema = (0, schema_1.object)({
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalCheckoutQuery_1.terminalCheckoutQuerySchema;
      }))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTerminalCheckoutsResponse.js
var require_searchTerminalCheckoutsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchTerminalCheckoutsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTerminalCheckoutsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalCheckout_1 = require_terminalCheckout();
    exports.searchTerminalCheckoutsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      checkouts: [
        "checkouts",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return terminalCheckout_1.terminalCheckoutSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalRefundQueryFilter.js
var require_terminalRefundQueryFilter = __commonJS({
  "node_modules/square/dist/cjs/models/terminalRefundQueryFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalRefundQueryFilterSchema = void 0;
    var schema_1 = require_schema2();
    var timeRange_1 = require_timeRange();
    exports.terminalRefundQueryFilterSchema = (0, schema_1.object)({
      deviceId: ["device_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return timeRange_1.timeRangeSchema;
      }))],
      status: ["status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/terminalRefundQuerySort.js
var require_terminalRefundQuerySort = __commonJS({
  "node_modules/square/dist/cjs/models/terminalRefundQuerySort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalRefundQuerySortSchema = void 0;
    var schema_1 = require_schema2();
    exports.terminalRefundQuerySortSchema = (0, schema_1.object)({ sortOrder: ["sort_order", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/terminalRefundQuery.js
var require_terminalRefundQuery = __commonJS({
  "node_modules/square/dist/cjs/models/terminalRefundQuery.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.terminalRefundQuerySchema = void 0;
    var schema_1 = require_schema2();
    var terminalRefundQueryFilter_1 = require_terminalRefundQueryFilter();
    var terminalRefundQuerySort_1 = require_terminalRefundQuerySort();
    exports.terminalRefundQuerySchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalRefundQueryFilter_1.terminalRefundQueryFilterSchema;
      }))],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalRefundQuerySort_1.terminalRefundQuerySortSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTerminalRefundsRequest.js
var require_searchTerminalRefundsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchTerminalRefundsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTerminalRefundsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var terminalRefundQuery_1 = require_terminalRefundQuery();
    exports.searchTerminalRefundsRequestSchema = (0, schema_1.object)({
      query: ["query", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return terminalRefundQuery_1.terminalRefundQuerySchema;
      }))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())],
      limit: ["limit", (0, schema_1.optional)((0, schema_1.number)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchTerminalRefundsResponse.js
var require_searchTerminalRefundsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchTerminalRefundsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchTerminalRefundsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var terminalRefund_1 = require_terminalRefund();
    exports.searchTerminalRefundsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      refunds: ["refunds", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return terminalRefund_1.terminalRefundSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/terminalApi.js
var require_terminalApi = __commonJS({
  "node_modules/square/dist/cjs/api/terminalApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.TerminalApi = void 0;
    var tslib_1 = require_tslib();
    var cancelTerminalActionResponse_1 = require_cancelTerminalActionResponse();
    var cancelTerminalCheckoutResponse_1 = require_cancelTerminalCheckoutResponse();
    var cancelTerminalRefundResponse_1 = require_cancelTerminalRefundResponse();
    var createTerminalActionRequest_1 = require_createTerminalActionRequest();
    var createTerminalActionResponse_1 = require_createTerminalActionResponse();
    var createTerminalCheckoutRequest_1 = require_createTerminalCheckoutRequest();
    var createTerminalCheckoutResponse_1 = require_createTerminalCheckoutResponse();
    var createTerminalRefundRequest_1 = require_createTerminalRefundRequest();
    var createTerminalRefundResponse_1 = require_createTerminalRefundResponse();
    var getTerminalActionResponse_1 = require_getTerminalActionResponse();
    var getTerminalCheckoutResponse_1 = require_getTerminalCheckoutResponse();
    var getTerminalRefundResponse_1 = require_getTerminalRefundResponse();
    var searchTerminalActionsRequest_1 = require_searchTerminalActionsRequest();
    var searchTerminalActionsResponse_1 = require_searchTerminalActionsResponse();
    var searchTerminalCheckoutsRequest_1 = require_searchTerminalCheckoutsRequest();
    var searchTerminalCheckoutsResponse_1 = require_searchTerminalCheckoutsResponse();
    var searchTerminalRefundsRequest_1 = require_searchTerminalRefundsRequest();
    var searchTerminalRefundsResponse_1 = require_searchTerminalRefundsResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var TerminalApi = function(_super) {
      tslib_1.__extends(TerminalApi2, _super);
      function TerminalApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      TerminalApi2.prototype.createTerminalAction = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/terminals/actions");
            mapped = req.prepareArgs({
              body: [body2, createTerminalActionRequest_1.createTerminalActionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createTerminalActionResponse_1.createTerminalActionResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.searchTerminalActions = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/terminals/actions/search");
            mapped = req.prepareArgs({
              body: [body2, searchTerminalActionsRequest_1.searchTerminalActionsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchTerminalActionsResponse_1.searchTerminalActionsResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.getTerminalAction = function(actionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ actionId: [actionId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/terminals/actions/", ""], ["/v2/terminals/actions/", ""])), mapped.actionId);
            return [2, req.callAsJson(getTerminalActionResponse_1.getTerminalActionResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.cancelTerminalAction = function(actionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({ actionId: [actionId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/terminals/actions/", "/cancel"], ["/v2/terminals/actions/", "/cancel"])), mapped.actionId);
            return [2, req.callAsJson(cancelTerminalActionResponse_1.cancelTerminalActionResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.createTerminalCheckout = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/terminals/checkouts");
            mapped = req.prepareArgs({
              body: [body2, createTerminalCheckoutRequest_1.createTerminalCheckoutRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createTerminalCheckoutResponse_1.createTerminalCheckoutResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.searchTerminalCheckouts = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/terminals/checkouts/search");
            mapped = req.prepareArgs({
              body: [body2, searchTerminalCheckoutsRequest_1.searchTerminalCheckoutsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchTerminalCheckoutsResponse_1.searchTerminalCheckoutsResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.getTerminalCheckout = function(checkoutId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ checkoutId: [checkoutId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/terminals/checkouts/", ""], ["/v2/terminals/checkouts/", ""])), mapped.checkoutId);
            return [2, req.callAsJson(getTerminalCheckoutResponse_1.getTerminalCheckoutResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.cancelTerminalCheckout = function(checkoutId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({ checkoutId: [checkoutId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/terminals/checkouts/", "/cancel"], ["/v2/terminals/checkouts/", "/cancel"])), mapped.checkoutId);
            return [2, req.callAsJson(cancelTerminalCheckoutResponse_1.cancelTerminalCheckoutResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.createTerminalRefund = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/terminals/refunds");
            mapped = req.prepareArgs({
              body: [body2, createTerminalRefundRequest_1.createTerminalRefundRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createTerminalRefundResponse_1.createTerminalRefundResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.searchTerminalRefunds = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/terminals/refunds/search");
            mapped = req.prepareArgs({
              body: [body2, searchTerminalRefundsRequest_1.searchTerminalRefundsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchTerminalRefundsResponse_1.searchTerminalRefundsResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.getTerminalRefund = function(terminalRefundId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              terminalRefundId: [terminalRefundId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/terminals/refunds/", ""], ["/v2/terminals/refunds/", ""])), mapped.terminalRefundId);
            return [2, req.callAsJson(getTerminalRefundResponse_1.getTerminalRefundResponseSchema, requestOptions)];
          });
        });
      };
      TerminalApi2.prototype.cancelTerminalRefund = function(terminalRefundId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              terminalRefundId: [terminalRefundId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v2/terminals/refunds/", "/cancel"], ["/v2/terminals/refunds/", "/cancel"])), mapped.terminalRefundId);
            return [2, req.callAsJson(cancelTerminalRefundResponse_1.cancelTerminalRefundResponseSchema, requestOptions)];
          });
        });
      };
      return TerminalApi2;
    }(baseApi_1.BaseApi);
    exports.TerminalApi = TerminalApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
  }
});

// node_modules/square/dist/cjs/models/captureTransactionResponse.js
var require_captureTransactionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/captureTransactionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.captureTransactionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.captureTransactionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/transaction.js
var require_transaction = __commonJS({
  "node_modules/square/dist/cjs/models/transaction.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.transactionSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var refund_1 = require_refund();
    var tender_1 = require_tender();
    exports.transactionSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      locationId: ["location_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      tenders: ["tenders", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return tender_1.tenderSchema;
      }))))],
      refunds: ["refunds", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return refund_1.refundSchema;
      }))))],
      referenceId: ["reference_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      product: ["product", (0, schema_1.optional)((0, schema_1.string)())],
      clientId: ["client_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      shippingAddress: ["shipping_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      orderId: ["order_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/listTransactionsResponse.js
var require_listTransactionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listTransactionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listTransactionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var transaction_1 = require_transaction();
    exports.listTransactionsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      transactions: [
        "transactions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return transaction_1.transactionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveTransactionResponse.js
var require_retrieveTransactionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveTransactionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveTransactionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var transaction_1 = require_transaction();
    exports.retrieveTransactionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      transaction: ["transaction", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return transaction_1.transactionSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/voidTransactionResponse.js
var require_voidTransactionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/voidTransactionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.voidTransactionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.voidTransactionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/api/transactionsApi.js
var require_transactionsApi = __commonJS({
  "node_modules/square/dist/cjs/api/transactionsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.TransactionsApi = void 0;
    var tslib_1 = require_tslib();
    var captureTransactionResponse_1 = require_captureTransactionResponse();
    var listTransactionsResponse_1 = require_listTransactionsResponse();
    var retrieveTransactionResponse_1 = require_retrieveTransactionResponse();
    var voidTransactionResponse_1 = require_voidTransactionResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var TransactionsApi = function(_super) {
      tslib_1.__extends(TransactionsApi2, _super);
      function TransactionsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      TransactionsApi2.prototype.listTransactions = function(locationId, beginTime, endTime, sortOrder, cursor, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())],
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("sort_order", mapped.sortOrder);
            req.query("cursor", mapped.cursor);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/locations/", "/transactions"], ["/v2/locations/", "/transactions"])), mapped.locationId);
            req.deprecated("TransactionsApi.listTransactions");
            return [2, req.callAsJson(listTransactionsResponse_1.listTransactionsResponseSchema, requestOptions)];
          });
        });
      };
      TransactionsApi2.prototype.retrieveTransaction = function(locationId, transactionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              transactionId: [transactionId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/locations/", "/transactions/", ""], ["/v2/locations/", "/transactions/", ""])), mapped.locationId, mapped.transactionId);
            req.deprecated("TransactionsApi.retrieveTransaction");
            return [2, req.callAsJson(retrieveTransactionResponse_1.retrieveTransactionResponseSchema, requestOptions)];
          });
        });
      };
      TransactionsApi2.prototype.captureTransaction = function(locationId, transactionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              transactionId: [transactionId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/locations/", "/transactions/", "/capture"], ["/v2/locations/", "/transactions/", "/capture"])), mapped.locationId, mapped.transactionId);
            req.deprecated("TransactionsApi.captureTransaction");
            return [2, req.callAsJson(captureTransactionResponse_1.captureTransactionResponseSchema, requestOptions)];
          });
        });
      };
      TransactionsApi2.prototype.voidTransaction = function(locationId, transactionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              transactionId: [transactionId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/locations/", "/transactions/", "/void"], ["/v2/locations/", "/transactions/", "/void"])), mapped.locationId, mapped.transactionId);
            req.deprecated("TransactionsApi.voidTransaction");
            return [2, req.callAsJson(voidTransactionResponse_1.voidTransactionResponseSchema, requestOptions)];
          });
        });
      };
      return TransactionsApi2;
    }(baseApi_1.BaseApi);
    exports.TransactionsApi = TransactionsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
  }
});

// node_modules/square/dist/cjs/models/v1Money.js
var require_v1Money = __commonJS({
  "node_modules/square/dist/cjs/models/v1Money.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1MoneySchema = void 0;
    var schema_1 = require_schema2();
    exports.v1MoneySchema = (0, schema_1.object)({
      amount: ["amount", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      currencyCode: ["currency_code", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/v1CreateRefundRequest.js
var require_v1CreateRefundRequest = __commonJS({
  "node_modules/square/dist/cjs/models/v1CreateRefundRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1CreateRefundRequestSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    exports.v1CreateRefundRequestSchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.string)()],
      type: ["type", (0, schema_1.string)()],
      reason: ["reason", (0, schema_1.string)()],
      refundedMoney: ["refunded_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      requestIdempotenceKey: [
        "request_idempotence_key",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/v1OrderHistoryEntry.js
var require_v1OrderHistoryEntry = __commonJS({
  "node_modules/square/dist/cjs/models/v1OrderHistoryEntry.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1OrderHistoryEntrySchema = void 0;
    var schema_1 = require_schema2();
    exports.v1OrderHistoryEntrySchema = (0, schema_1.object)({
      action: ["action", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/v1Tender.js
var require_v1Tender = __commonJS({
  "node_modules/square/dist/cjs/models/v1Tender.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1TenderSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    exports.v1TenderSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      employeeId: ["employee_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      receiptUrl: ["receipt_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      cardBrand: ["card_brand", (0, schema_1.optional)((0, schema_1.string)())],
      panSuffix: ["pan_suffix", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      entryMethod: ["entry_method", (0, schema_1.optional)((0, schema_1.string)())],
      paymentNote: ["payment_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      tenderedMoney: ["tendered_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      tenderedAt: ["tendered_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      settledAt: ["settled_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      changeBackMoney: ["change_back_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      refundedMoney: ["refunded_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      isExchange: ["is_exchange", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1Order.js
var require_v1Order = __commonJS({
  "node_modules/square/dist/cjs/models/v1Order.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1OrderSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var error_1 = require_error();
    var v1Money_1 = require_v1Money();
    var v1OrderHistoryEntry_1 = require_v1OrderHistoryEntry();
    var v1Tender_1 = require_v1Tender();
    exports.v1OrderSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      }))))],
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      buyerEmail: ["buyer_email", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      recipientName: ["recipient_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      recipientPhoneNumber: [
        "recipient_phone_number",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      state: ["state", (0, schema_1.optional)((0, schema_1.string)())],
      shippingAddress: ["shipping_address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      subtotalMoney: ["subtotal_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      totalShippingMoney: [
        "total_shipping_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      totalTaxMoney: ["total_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      totalPriceMoney: ["total_price_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      totalDiscountMoney: [
        "total_discount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      expiresAt: ["expires_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      buyerNote: ["buyer_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      completedNote: ["completed_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      refundedNote: ["refunded_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      canceledNote: ["canceled_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      tender: ["tender", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Tender_1.v1TenderSchema;
      }))],
      orderHistory: [
        "order_history",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1OrderHistoryEntry_1.v1OrderHistoryEntrySchema;
        }))))
      ],
      promoCode: ["promo_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      btcReceiveAddress: ["btc_receive_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      btcPriceSatoshi: ["btc_price_satoshi", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/device.js
var require_device = __commonJS({
  "node_modules/square/dist/cjs/models/device.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deviceSchema = void 0;
    var schema_1 = require_schema2();
    exports.deviceSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1PaymentDiscount.js
var require_v1PaymentDiscount = __commonJS({
  "node_modules/square/dist/cjs/models/v1PaymentDiscount.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1PaymentDiscountSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    exports.v1PaymentDiscountSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      discountId: ["discount_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1PaymentItemDetail.js
var require_v1PaymentItemDetail = __commonJS({
  "node_modules/square/dist/cjs/models/v1PaymentItemDetail.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1PaymentItemDetailSchema = void 0;
    var schema_1 = require_schema2();
    exports.v1PaymentItemDetailSchema = (0, schema_1.object)({
      categoryName: ["category_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      sku: ["sku", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      itemId: ["item_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      itemVariationId: ["item_variation_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1PaymentModifier.js
var require_v1PaymentModifier = __commonJS({
  "node_modules/square/dist/cjs/models/v1PaymentModifier.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1PaymentModifierSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    exports.v1PaymentModifierSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      modifierOptionId: ["modifier_option_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1PaymentTax.js
var require_v1PaymentTax = __commonJS({
  "node_modules/square/dist/cjs/models/v1PaymentTax.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1PaymentTaxSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var v1Money_1 = require_v1Money();
    exports.v1PaymentTaxSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      }))))],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      rate: ["rate", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      inclusionType: ["inclusion_type", (0, schema_1.optional)((0, schema_1.string)())],
      feeId: ["fee_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1PaymentItemization.js
var require_v1PaymentItemization = __commonJS({
  "node_modules/square/dist/cjs/models/v1PaymentItemization.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1PaymentItemizationSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    var v1PaymentDiscount_1 = require_v1PaymentDiscount();
    var v1PaymentItemDetail_1 = require_v1PaymentItemDetail();
    var v1PaymentModifier_1 = require_v1PaymentModifier();
    var v1PaymentTax_1 = require_v1PaymentTax();
    exports.v1PaymentItemizationSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      quantity: ["quantity", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      itemizationType: ["itemization_type", (0, schema_1.optional)((0, schema_1.string)())],
      itemDetail: ["item_detail", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1PaymentItemDetail_1.v1PaymentItemDetailSchema;
      }))],
      notes: ["notes", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      itemVariationName: ["item_variation_name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      singleQuantityMoney: [
        "single_quantity_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      grossSalesMoney: ["gross_sales_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      discountMoney: ["discount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      netSalesMoney: ["net_sales_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      taxes: ["taxes", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return v1PaymentTax_1.v1PaymentTaxSchema;
      }))))],
      discounts: [
        "discounts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentDiscount_1.v1PaymentDiscountSchema;
        }))))
      ],
      modifiers: [
        "modifiers",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentModifier_1.v1PaymentModifierSchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/v1PaymentSurcharge.js
var require_v1PaymentSurcharge = __commonJS({
  "node_modules/square/dist/cjs/models/v1PaymentSurcharge.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1PaymentSurchargeSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    var v1PaymentTax_1 = require_v1PaymentTax();
    exports.v1PaymentSurchargeSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      appliedMoney: ["applied_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      rate: ["rate", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      taxable: ["taxable", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      taxes: ["taxes", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return v1PaymentTax_1.v1PaymentTaxSchema;
      }))))],
      surchargeId: ["surcharge_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1Refund.js
var require_v1Refund = __commonJS({
  "node_modules/square/dist/cjs/models/v1Refund.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1RefundSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    var v1PaymentSurcharge_1 = require_v1PaymentSurcharge();
    var v1PaymentTax_1 = require_v1PaymentTax();
    exports.v1RefundSchema = (0, schema_1.object)({
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      reason: ["reason", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      refundedMoney: ["refunded_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      refundedProcessingFeeMoney: [
        "refunded_processing_fee_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      refundedTaxMoney: ["refunded_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      refundedAdditiveTaxMoney: [
        "refunded_additive_tax_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      refundedAdditiveTax: [
        "refunded_additive_tax",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentTax_1.v1PaymentTaxSchema;
        }))))
      ],
      refundedInclusiveTaxMoney: [
        "refunded_inclusive_tax_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      refundedInclusiveTax: [
        "refunded_inclusive_tax",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentTax_1.v1PaymentTaxSchema;
        }))))
      ],
      refundedTipMoney: ["refunded_tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      refundedDiscountMoney: [
        "refunded_discount_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      refundedSurchargeMoney: [
        "refunded_surcharge_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      refundedSurcharges: [
        "refunded_surcharges",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentSurcharge_1.v1PaymentSurchargeSchema;
        }))))
      ],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      processedAt: ["processed_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      isExchange: ["is_exchange", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1Payment.js
var require_v1Payment = __commonJS({
  "node_modules/square/dist/cjs/models/v1Payment.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1PaymentSchema = void 0;
    var schema_1 = require_schema2();
    var device_1 = require_device();
    var v1Money_1 = require_v1Money();
    var v1PaymentItemization_1 = require_v1PaymentItemization();
    var v1PaymentSurcharge_1 = require_v1PaymentSurcharge();
    var v1PaymentTax_1 = require_v1PaymentTax();
    var v1Refund_1 = require_v1Refund();
    var v1Tender_1 = require_v1Tender();
    exports.v1PaymentSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      merchantId: ["merchant_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      creatorId: ["creator_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      device: ["device", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return device_1.deviceSchema;
      }))],
      paymentUrl: ["payment_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      receiptUrl: ["receipt_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      inclusiveTaxMoney: [
        "inclusive_tax_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      additiveTaxMoney: ["additive_tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      taxMoney: ["tax_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      tipMoney: ["tip_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      discountMoney: ["discount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      totalCollectedMoney: [
        "total_collected_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      processingFeeMoney: [
        "processing_fee_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      netTotalMoney: ["net_total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      refundedMoney: ["refunded_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      swedishRoundingMoney: [
        "swedish_rounding_money",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return v1Money_1.v1MoneySchema;
        }))
      ],
      grossSalesMoney: ["gross_sales_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      netSalesMoney: ["net_sales_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      inclusiveTax: [
        "inclusive_tax",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentTax_1.v1PaymentTaxSchema;
        }))))
      ],
      additiveTax: [
        "additive_tax",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentTax_1.v1PaymentTaxSchema;
        }))))
      ],
      tender: ["tender", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return v1Tender_1.v1TenderSchema;
      }))))],
      refunds: ["refunds", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return v1Refund_1.v1RefundSchema;
      }))))],
      itemizations: [
        "itemizations",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentItemization_1.v1PaymentItemizationSchema;
        }))))
      ],
      surchargeMoney: ["surcharge_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      surcharges: [
        "surcharges",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1PaymentSurcharge_1.v1PaymentSurchargeSchema;
        }))))
      ],
      isPartial: ["is_partial", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1SettlementEntry.js
var require_v1SettlementEntry = __commonJS({
  "node_modules/square/dist/cjs/models/v1SettlementEntry.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1SettlementEntrySchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    exports.v1SettlementEntrySchema = (0, schema_1.object)({
      paymentId: ["payment_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      type: ["type", (0, schema_1.optional)((0, schema_1.string)())],
      amountMoney: ["amount_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      feeMoney: ["fee_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/v1Settlement.js
var require_v1Settlement = __commonJS({
  "node_modules/square/dist/cjs/models/v1Settlement.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1SettlementSchema = void 0;
    var schema_1 = require_schema2();
    var v1Money_1 = require_v1Money();
    var v1SettlementEntry_1 = require_v1SettlementEntry();
    exports.v1SettlementSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())],
      totalMoney: ["total_money", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return v1Money_1.v1MoneySchema;
      }))],
      initiatedAt: ["initiated_at", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      bankAccountId: ["bank_account_id", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      entries: [
        "entries",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return v1SettlementEntry_1.v1SettlementEntrySchema;
        }))))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/v1UpdateOrderRequest.js
var require_v1UpdateOrderRequest = __commonJS({
  "node_modules/square/dist/cjs/models/v1UpdateOrderRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.v1UpdateOrderRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.v1UpdateOrderRequestSchema = (0, schema_1.object)({
      action: ["action", (0, schema_1.string)()],
      shippedTrackingNumber: [
        "shipped_tracking_number",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))
      ],
      completedNote: ["completed_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      refundedNote: ["refunded_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      canceledNote: ["canceled_note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))]
    });
  }
});

// node_modules/square/dist/cjs/api/v1TransactionsApi.js
var require_v1TransactionsApi = __commonJS({
  "node_modules/square/dist/cjs/api/v1TransactionsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.V1TransactionsApi = void 0;
    var tslib_1 = require_tslib();
    var v1CreateRefundRequest_1 = require_v1CreateRefundRequest();
    var v1Order_1 = require_v1Order();
    var v1Payment_1 = require_v1Payment();
    var v1Refund_1 = require_v1Refund();
    var v1Settlement_1 = require_v1Settlement();
    var v1UpdateOrderRequest_1 = require_v1UpdateOrderRequest();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var V1TransactionsApi = function(_super) {
      tslib_1.__extends(V1TransactionsApi2, _super);
      function V1TransactionsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      V1TransactionsApi2.prototype.v1ListOrders = function(locationId, order, limit, batchToken, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              order: [order, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              batchToken: [batchToken, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("order", mapped.order);
            req.query("limit", mapped.limit);
            req.query("batch_token", mapped.batchToken);
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v1/", "/orders"], ["/v1/", "/orders"])), mapped.locationId);
            req.deprecated("V1TransactionsApi.v1ListOrders");
            return [2, req.callAsJson((0, schema_1.array)(v1Order_1.v1OrderSchema), requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1RetrieveOrder = function(locationId, orderId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              orderId: [orderId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v1/", "/orders/", ""], ["/v1/", "/orders/", ""])), mapped.locationId, mapped.orderId);
            req.deprecated("V1TransactionsApi.v1RetrieveOrder");
            return [2, req.callAsJson(v1Order_1.v1OrderSchema, requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1UpdateOrder = function(locationId, orderId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              orderId: [orderId, (0, schema_1.string)()],
              body: [body2, v1UpdateOrderRequest_1.v1UpdateOrderRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v1/", "/orders/", ""], ["/v1/", "/orders/", ""])), mapped.locationId, mapped.orderId);
            req.deprecated("V1TransactionsApi.v1UpdateOrder");
            return [2, req.callAsJson(v1Order_1.v1OrderSchema, requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1ListPayments = function(locationId, order, beginTime, endTime, limit, batchToken, includePartial, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              order: [order, (0, schema_1.optional)((0, schema_1.string)())],
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              batchToken: [batchToken, (0, schema_1.optional)((0, schema_1.string)())],
              includePartial: [includePartial, (0, schema_1.optional)((0, schema_1.boolean)())]
            });
            req.query("order", mapped.order);
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("limit", mapped.limit);
            req.query("batch_token", mapped.batchToken);
            req.query("include_partial", mapped.includePartial);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v1/", "/payments"], ["/v1/", "/payments"])), mapped.locationId);
            req.deprecated("V1TransactionsApi.v1ListPayments");
            return [2, req.callAsJson((0, schema_1.array)(v1Payment_1.v1PaymentSchema), requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1RetrievePayment = function(locationId, paymentId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              paymentId: [paymentId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v1/", "/payments/", ""], ["/v1/", "/payments/", ""])), mapped.locationId, mapped.paymentId);
            req.deprecated("V1TransactionsApi.v1RetrievePayment");
            return [2, req.callAsJson(v1Payment_1.v1PaymentSchema, requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1ListRefunds = function(locationId, order, beginTime, endTime, limit, batchToken, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              order: [order, (0, schema_1.optional)((0, schema_1.string)())],
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              batchToken: [batchToken, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("order", mapped.order);
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("limit", mapped.limit);
            req.query("batch_token", mapped.batchToken);
            req.appendTemplatePath(templateObject_6 || (templateObject_6 = tslib_1.__makeTemplateObject(["/v1/", "/refunds"], ["/v1/", "/refunds"])), mapped.locationId);
            req.deprecated("V1TransactionsApi.v1ListRefunds");
            return [2, req.callAsJson((0, schema_1.array)(v1Refund_1.v1RefundSchema), requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1CreateRefund = function(locationId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              body: [body2, v1CreateRefundRequest_1.v1CreateRefundRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_7 || (templateObject_7 = tslib_1.__makeTemplateObject(["/v1/", "/refunds"], ["/v1/", "/refunds"])), mapped.locationId);
            req.deprecated("V1TransactionsApi.v1CreateRefund");
            return [2, req.callAsJson(v1Refund_1.v1RefundSchema, requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1ListSettlements = function(locationId, order, beginTime, endTime, limit, status, batchToken, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              order: [order, (0, schema_1.optional)((0, schema_1.string)())],
              beginTime: [beginTime, (0, schema_1.optional)((0, schema_1.string)())],
              endTime: [endTime, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())],
              status: [status, (0, schema_1.optional)((0, schema_1.string)())],
              batchToken: [batchToken, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("order", mapped.order);
            req.query("begin_time", mapped.beginTime);
            req.query("end_time", mapped.endTime);
            req.query("limit", mapped.limit);
            req.query("status", mapped.status);
            req.query("batch_token", mapped.batchToken);
            req.appendTemplatePath(templateObject_8 || (templateObject_8 = tslib_1.__makeTemplateObject(["/v1/", "/settlements"], ["/v1/", "/settlements"])), mapped.locationId);
            req.deprecated("V1TransactionsApi.v1ListSettlements");
            return [2, req.callAsJson((0, schema_1.array)(v1Settlement_1.v1SettlementSchema), requestOptions)];
          });
        });
      };
      V1TransactionsApi2.prototype.v1RetrieveSettlement = function(locationId, settlementId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              locationId: [locationId, (0, schema_1.string)()],
              settlementId: [settlementId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_9 || (templateObject_9 = tslib_1.__makeTemplateObject(["/v1/", "/settlements/", ""], ["/v1/", "/settlements/", ""])), mapped.locationId, mapped.settlementId);
            req.deprecated("V1TransactionsApi.v1RetrieveSettlement");
            return [2, req.callAsJson(v1Settlement_1.v1SettlementSchema, requestOptions)];
          });
        });
      };
      return V1TransactionsApi2;
    }(baseApi_1.BaseApi);
    exports.V1TransactionsApi = V1TransactionsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
    var templateObject_6;
    var templateObject_7;
    var templateObject_8;
    var templateObject_9;
  }
});

// node_modules/square/dist/cjs/models/vendorContact.js
var require_vendorContact = __commonJS({
  "node_modules/square/dist/cjs/models/vendorContact.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.vendorContactSchema = void 0;
    var schema_1 = require_schema2();
    exports.vendorContactSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      emailAddress: ["email_address", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      phoneNumber: ["phone_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      removed: ["removed", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      ordinal: ["ordinal", (0, schema_1.number)()]
    });
  }
});

// node_modules/square/dist/cjs/models/vendor.js
var require_vendor = __commonJS({
  "node_modules/square/dist/cjs/models/vendor.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.vendorSchema = void 0;
    var schema_1 = require_schema2();
    var address_1 = require_address();
    var vendorContact_1 = require_vendorContact();
    exports.vendorSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      address: ["address", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return address_1.addressSchema;
      }))],
      contacts: [
        "contacts",
        (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return vendorContact_1.vendorContactSchema;
        }))))
      ],
      accountNumber: ["account_number", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      note: ["note", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      version: ["version", (0, schema_1.optional)((0, schema_1.number)())],
      status: ["status", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkCreateVendorsRequest.js
var require_bulkCreateVendorsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkCreateVendorsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkCreateVendorsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var vendor_1 = require_vendor();
    exports.bulkCreateVendorsRequestSchema = (0, schema_1.object)({ vendors: ["vendors", (0, schema_1.dict)((0, schema_1.lazy)(function() {
      return vendor_1.vendorSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/createVendorResponse.js
var require_createVendorResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createVendorResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createVendorResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var vendor_1 = require_vendor();
    exports.createVendorResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      vendor: ["vendor", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return vendor_1.vendorSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkCreateVendorsResponse.js
var require_bulkCreateVendorsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkCreateVendorsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkCreateVendorsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var createVendorResponse_1 = require_createVendorResponse();
    var error_1 = require_error();
    exports.bulkCreateVendorsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      responses: [
        "responses",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return createVendorResponse_1.createVendorResponseSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkRetrieveVendorsRequest.js
var require_bulkRetrieveVendorsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkRetrieveVendorsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkRetrieveVendorsRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.bulkRetrieveVendorsRequestSchema = (0, schema_1.object)({ vendorIds: ["vendor_ids", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))] });
  }
});

// node_modules/square/dist/cjs/models/retrieveVendorResponse.js
var require_retrieveVendorResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveVendorResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveVendorResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var vendor_1 = require_vendor();
    exports.retrieveVendorResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      vendor: ["vendor", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return vendor_1.vendorSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkRetrieveVendorsResponse.js
var require_bulkRetrieveVendorsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkRetrieveVendorsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkRetrieveVendorsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var retrieveVendorResponse_1 = require_retrieveVendorResponse();
    exports.bulkRetrieveVendorsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      responses: [
        "responses",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return retrieveVendorResponse_1.retrieveVendorResponseSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/updateVendorRequest.js
var require_updateVendorRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateVendorRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateVendorRequestSchema = void 0;
    var schema_1 = require_schema2();
    var vendor_1 = require_vendor();
    exports.updateVendorRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      vendor: ["vendor", (0, schema_1.lazy)(function() {
        return vendor_1.vendorSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpdateVendorsRequest.js
var require_bulkUpdateVendorsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpdateVendorsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpdateVendorsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var updateVendorRequest_1 = require_updateVendorRequest();
    exports.bulkUpdateVendorsRequestSchema = (0, schema_1.object)({ vendors: ["vendors", (0, schema_1.dict)((0, schema_1.lazy)(function() {
      return updateVendorRequest_1.updateVendorRequestSchema;
    }))] });
  }
});

// node_modules/square/dist/cjs/models/updateVendorResponse.js
var require_updateVendorResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateVendorResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateVendorResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var vendor_1 = require_vendor();
    exports.updateVendorResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      vendor: ["vendor", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return vendor_1.vendorSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/bulkUpdateVendorsResponse.js
var require_bulkUpdateVendorsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/bulkUpdateVendorsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.bulkUpdateVendorsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var updateVendorResponse_1 = require_updateVendorResponse();
    exports.bulkUpdateVendorsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      responses: [
        "responses",
        (0, schema_1.optional)((0, schema_1.dict)((0, schema_1.lazy)(function() {
          return updateVendorResponse_1.updateVendorResponseSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/createVendorRequest.js
var require_createVendorRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createVendorRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createVendorRequestSchema = void 0;
    var schema_1 = require_schema2();
    var vendor_1 = require_vendor();
    exports.createVendorRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.string)()],
      vendor: ["vendor", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return vendor_1.vendorSchema;
      }))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchVendorsRequestFilter.js
var require_searchVendorsRequestFilter = __commonJS({
  "node_modules/square/dist/cjs/models/searchVendorsRequestFilter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchVendorsRequestFilterSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchVendorsRequestFilterSchema = (0, schema_1.object)({
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      status: ["status", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))]
    });
  }
});

// node_modules/square/dist/cjs/models/searchVendorsRequestSort.js
var require_searchVendorsRequestSort = __commonJS({
  "node_modules/square/dist/cjs/models/searchVendorsRequestSort.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchVendorsRequestSortSchema = void 0;
    var schema_1 = require_schema2();
    exports.searchVendorsRequestSortSchema = (0, schema_1.object)({ field: ["field", (0, schema_1.optional)((0, schema_1.string)())], order: ["order", (0, schema_1.optional)((0, schema_1.string)())] });
  }
});

// node_modules/square/dist/cjs/models/searchVendorsRequest.js
var require_searchVendorsRequest = __commonJS({
  "node_modules/square/dist/cjs/models/searchVendorsRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchVendorsRequestSchema = void 0;
    var schema_1 = require_schema2();
    var searchVendorsRequestFilter_1 = require_searchVendorsRequestFilter();
    var searchVendorsRequestSort_1 = require_searchVendorsRequestSort();
    exports.searchVendorsRequestSchema = (0, schema_1.object)({
      filter: ["filter", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return searchVendorsRequestFilter_1.searchVendorsRequestFilterSchema;
      }))],
      sort: ["sort", (0, schema_1.optional)((0, schema_1.lazy)(function() {
        return searchVendorsRequestSort_1.searchVendorsRequestSortSchema;
      }))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/searchVendorsResponse.js
var require_searchVendorsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/searchVendorsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.searchVendorsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var vendor_1 = require_vendor();
    exports.searchVendorsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      vendors: ["vendors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return vendor_1.vendorSchema;
      })))],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/vendorsApi.js
var require_vendorsApi = __commonJS({
  "node_modules/square/dist/cjs/api/vendorsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.VendorsApi = void 0;
    var tslib_1 = require_tslib();
    var bulkCreateVendorsRequest_1 = require_bulkCreateVendorsRequest();
    var bulkCreateVendorsResponse_1 = require_bulkCreateVendorsResponse();
    var bulkRetrieveVendorsRequest_1 = require_bulkRetrieveVendorsRequest();
    var bulkRetrieveVendorsResponse_1 = require_bulkRetrieveVendorsResponse();
    var bulkUpdateVendorsRequest_1 = require_bulkUpdateVendorsRequest();
    var bulkUpdateVendorsResponse_1 = require_bulkUpdateVendorsResponse();
    var createVendorRequest_1 = require_createVendorRequest();
    var createVendorResponse_1 = require_createVendorResponse();
    var retrieveVendorResponse_1 = require_retrieveVendorResponse();
    var searchVendorsRequest_1 = require_searchVendorsRequest();
    var searchVendorsResponse_1 = require_searchVendorsResponse();
    var updateVendorRequest_1 = require_updateVendorRequest();
    var updateVendorResponse_1 = require_updateVendorResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var VendorsApi = function(_super) {
      tslib_1.__extends(VendorsApi2, _super);
      function VendorsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      VendorsApi2.prototype.bulkCreateVendors = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/vendors/bulk-create");
            mapped = req.prepareArgs({
              body: [body2, bulkCreateVendorsRequest_1.bulkCreateVendorsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkCreateVendorsResponse_1.bulkCreateVendorsResponseSchema, requestOptions)];
          });
        });
      };
      VendorsApi2.prototype.bulkRetrieveVendors = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/vendors/bulk-retrieve");
            mapped = req.prepareArgs({
              body: [body2, bulkRetrieveVendorsRequest_1.bulkRetrieveVendorsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkRetrieveVendorsResponse_1.bulkRetrieveVendorsResponseSchema, requestOptions)];
          });
        });
      };
      VendorsApi2.prototype.bulkUpdateVendors = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT", "/v2/vendors/bulk-update");
            mapped = req.prepareArgs({
              body: [body2, bulkUpdateVendorsRequest_1.bulkUpdateVendorsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(bulkUpdateVendorsResponse_1.bulkUpdateVendorsResponseSchema, requestOptions)];
          });
        });
      };
      VendorsApi2.prototype.createVendor = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/vendors/create");
            mapped = req.prepareArgs({ body: [body2, createVendorRequest_1.createVendorRequestSchema] });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createVendorResponse_1.createVendorResponseSchema, requestOptions)];
          });
        });
      };
      VendorsApi2.prototype.searchVendors = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/vendors/search");
            mapped = req.prepareArgs({
              body: [body2, searchVendorsRequest_1.searchVendorsRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(searchVendorsResponse_1.searchVendorsResponseSchema, requestOptions)];
          });
        });
      };
      VendorsApi2.prototype.retrieveVendor = function(vendorId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({ vendorId: [vendorId, (0, schema_1.string)()] });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/vendors/", ""], ["/v2/vendors/", ""])), mapped.vendorId);
            return [2, req.callAsJson(retrieveVendorResponse_1.retrieveVendorResponseSchema, requestOptions)];
          });
        });
      };
      VendorsApi2.prototype.updateVendor = function(body2, vendorId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              body: [body2, updateVendorRequest_1.updateVendorRequestSchema],
              vendorId: [vendorId, (0, schema_1.string)()]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/vendors/", ""], ["/v2/vendors/", ""])), mapped.vendorId);
            return [2, req.callAsJson(updateVendorResponse_1.updateVendorResponseSchema, requestOptions)];
          });
        });
      };
      return VendorsApi2;
    }(baseApi_1.BaseApi);
    exports.VendorsApi = VendorsApi;
    var templateObject_1;
    var templateObject_2;
  }
});

// node_modules/square/dist/cjs/models/webhookSubscription.js
var require_webhookSubscription = __commonJS({
  "node_modules/square/dist/cjs/models/webhookSubscription.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.webhookSubscriptionSchema = void 0;
    var schema_1 = require_schema2();
    exports.webhookSubscriptionSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      name: ["name", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      enabled: ["enabled", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.boolean)()))],
      eventTypes: ["event_types", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.array)((0, schema_1.string)())))],
      notificationUrl: ["notification_url", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      apiVersion: ["api_version", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      signatureKey: ["signature_key", (0, schema_1.optional)((0, schema_1.string)())],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/createWebhookSubscriptionRequest.js
var require_createWebhookSubscriptionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/createWebhookSubscriptionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createWebhookSubscriptionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var webhookSubscription_1 = require_webhookSubscription();
    exports.createWebhookSubscriptionRequestSchema = (0, schema_1.object)({
      idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.string)())],
      subscription: ["subscription", (0, schema_1.lazy)(function() {
        return webhookSubscription_1.webhookSubscriptionSchema;
      })]
    });
  }
});

// node_modules/square/dist/cjs/models/createWebhookSubscriptionResponse.js
var require_createWebhookSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/createWebhookSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.createWebhookSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var webhookSubscription_1 = require_webhookSubscription();
    exports.createWebhookSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: [
        "subscription",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return webhookSubscription_1.webhookSubscriptionSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/deleteWebhookSubscriptionResponse.js
var require_deleteWebhookSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/deleteWebhookSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.deleteWebhookSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.deleteWebhookSubscriptionResponseSchema = (0, schema_1.object)({ errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
      return error_1.errorSchema;
    })))] });
  }
});

// node_modules/square/dist/cjs/models/eventTypeMetadata.js
var require_eventTypeMetadata = __commonJS({
  "node_modules/square/dist/cjs/models/eventTypeMetadata.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.eventTypeMetadataSchema = void 0;
    var schema_1 = require_schema2();
    exports.eventTypeMetadataSchema = (0, schema_1.object)({
      eventType: ["event_type", (0, schema_1.optional)((0, schema_1.string)())],
      apiVersionIntroduced: ["api_version_introduced", (0, schema_1.optional)((0, schema_1.string)())],
      releaseStatus: ["release_status", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/listWebhookEventTypesResponse.js
var require_listWebhookEventTypesResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listWebhookEventTypesResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listWebhookEventTypesResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var eventTypeMetadata_1 = require_eventTypeMetadata();
    exports.listWebhookEventTypesResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      eventTypes: ["event_types", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.string)()))],
      metadata: [
        "metadata",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return eventTypeMetadata_1.eventTypeMetadataSchema;
        })))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/listWebhookSubscriptionsResponse.js
var require_listWebhookSubscriptionsResponse = __commonJS({
  "node_modules/square/dist/cjs/models/listWebhookSubscriptionsResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.listWebhookSubscriptionsResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var webhookSubscription_1 = require_webhookSubscription();
    exports.listWebhookSubscriptionsResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscriptions: [
        "subscriptions",
        (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
          return webhookSubscription_1.webhookSubscriptionSchema;
        })))
      ],
      cursor: ["cursor", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/retrieveWebhookSubscriptionResponse.js
var require_retrieveWebhookSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/retrieveWebhookSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.retrieveWebhookSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var webhookSubscription_1 = require_webhookSubscription();
    exports.retrieveWebhookSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: [
        "subscription",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return webhookSubscription_1.webhookSubscriptionSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/testWebhookSubscriptionRequest.js
var require_testWebhookSubscriptionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/testWebhookSubscriptionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.testWebhookSubscriptionRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.testWebhookSubscriptionRequestSchema = (0, schema_1.object)({ eventType: ["event_type", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/subscriptionTestResult.js
var require_subscriptionTestResult = __commonJS({
  "node_modules/square/dist/cjs/models/subscriptionTestResult.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.subscriptionTestResultSchema = void 0;
    var schema_1 = require_schema2();
    exports.subscriptionTestResultSchema = (0, schema_1.object)({
      id: ["id", (0, schema_1.optional)((0, schema_1.string)())],
      statusCode: ["status_code", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.number)()))],
      payload: ["payload", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))],
      createdAt: ["created_at", (0, schema_1.optional)((0, schema_1.string)())],
      updatedAt: ["updated_at", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/models/testWebhookSubscriptionResponse.js
var require_testWebhookSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/testWebhookSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.testWebhookSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var subscriptionTestResult_1 = require_subscriptionTestResult();
    exports.testWebhookSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscriptionTestResult: [
        "subscription_test_result",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return subscriptionTestResult_1.subscriptionTestResultSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/updateWebhookSubscriptionRequest.js
var require_updateWebhookSubscriptionRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateWebhookSubscriptionRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWebhookSubscriptionRequestSchema = void 0;
    var schema_1 = require_schema2();
    var webhookSubscription_1 = require_webhookSubscription();
    exports.updateWebhookSubscriptionRequestSchema = (0, schema_1.object)({
      subscription: [
        "subscription",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return webhookSubscription_1.webhookSubscriptionSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/updateWebhookSubscriptionResponse.js
var require_updateWebhookSubscriptionResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateWebhookSubscriptionResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWebhookSubscriptionResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    var webhookSubscription_1 = require_webhookSubscription();
    exports.updateWebhookSubscriptionResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      subscription: [
        "subscription",
        (0, schema_1.optional)((0, schema_1.lazy)(function() {
          return webhookSubscription_1.webhookSubscriptionSchema;
        }))
      ]
    });
  }
});

// node_modules/square/dist/cjs/models/updateWebhookSubscriptionSignatureKeyRequest.js
var require_updateWebhookSubscriptionSignatureKeyRequest = __commonJS({
  "node_modules/square/dist/cjs/models/updateWebhookSubscriptionSignatureKeyRequest.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWebhookSubscriptionSignatureKeyRequestSchema = void 0;
    var schema_1 = require_schema2();
    exports.updateWebhookSubscriptionSignatureKeyRequestSchema = (0, schema_1.object)({ idempotencyKey: ["idempotency_key", (0, schema_1.optional)((0, schema_1.nullable)((0, schema_1.string)()))] });
  }
});

// node_modules/square/dist/cjs/models/updateWebhookSubscriptionSignatureKeyResponse.js
var require_updateWebhookSubscriptionSignatureKeyResponse = __commonJS({
  "node_modules/square/dist/cjs/models/updateWebhookSubscriptionSignatureKeyResponse.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.updateWebhookSubscriptionSignatureKeyResponseSchema = void 0;
    var schema_1 = require_schema2();
    var error_1 = require_error();
    exports.updateWebhookSubscriptionSignatureKeyResponseSchema = (0, schema_1.object)({
      errors: ["errors", (0, schema_1.optional)((0, schema_1.array)((0, schema_1.lazy)(function() {
        return error_1.errorSchema;
      })))],
      signatureKey: ["signature_key", (0, schema_1.optional)((0, schema_1.string)())]
    });
  }
});

// node_modules/square/dist/cjs/api/webhookSubscriptionsApi.js
var require_webhookSubscriptionsApi = __commonJS({
  "node_modules/square/dist/cjs/api/webhookSubscriptionsApi.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.WebhookSubscriptionsApi = void 0;
    var tslib_1 = require_tslib();
    var createWebhookSubscriptionRequest_1 = require_createWebhookSubscriptionRequest();
    var createWebhookSubscriptionResponse_1 = require_createWebhookSubscriptionResponse();
    var deleteWebhookSubscriptionResponse_1 = require_deleteWebhookSubscriptionResponse();
    var listWebhookEventTypesResponse_1 = require_listWebhookEventTypesResponse();
    var listWebhookSubscriptionsResponse_1 = require_listWebhookSubscriptionsResponse();
    var retrieveWebhookSubscriptionResponse_1 = require_retrieveWebhookSubscriptionResponse();
    var testWebhookSubscriptionRequest_1 = require_testWebhookSubscriptionRequest();
    var testWebhookSubscriptionResponse_1 = require_testWebhookSubscriptionResponse();
    var updateWebhookSubscriptionRequest_1 = require_updateWebhookSubscriptionRequest();
    var updateWebhookSubscriptionResponse_1 = require_updateWebhookSubscriptionResponse();
    var updateWebhookSubscriptionSignatureKeyRequest_1 = require_updateWebhookSubscriptionSignatureKeyRequest();
    var updateWebhookSubscriptionSignatureKeyResponse_1 = require_updateWebhookSubscriptionSignatureKeyResponse();
    var schema_1 = require_schema2();
    var baseApi_1 = require_baseApi();
    var WebhookSubscriptionsApi = function(_super) {
      tslib_1.__extends(WebhookSubscriptionsApi2, _super);
      function WebhookSubscriptionsApi2() {
        return _super !== null && _super.apply(this, arguments) || this;
      }
      WebhookSubscriptionsApi2.prototype.listWebhookEventTypes = function(apiVersion, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/webhooks/event-types");
            mapped = req.prepareArgs({
              apiVersion: [apiVersion, (0, schema_1.optional)((0, schema_1.string)())]
            });
            req.query("api_version", mapped.apiVersion);
            return [2, req.callAsJson(listWebhookEventTypesResponse_1.listWebhookEventTypesResponseSchema, requestOptions)];
          });
        });
      };
      WebhookSubscriptionsApi2.prototype.listWebhookSubscriptions = function(cursor, includeDisabled, sortOrder, limit, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET", "/v2/webhooks/subscriptions");
            mapped = req.prepareArgs({
              cursor: [cursor, (0, schema_1.optional)((0, schema_1.string)())],
              includeDisabled: [includeDisabled, (0, schema_1.optional)((0, schema_1.boolean)())],
              sortOrder: [sortOrder, (0, schema_1.optional)((0, schema_1.string)())],
              limit: [limit, (0, schema_1.optional)((0, schema_1.number)())]
            });
            req.query("cursor", mapped.cursor);
            req.query("include_disabled", mapped.includeDisabled);
            req.query("sort_order", mapped.sortOrder);
            req.query("limit", mapped.limit);
            return [2, req.callAsJson(listWebhookSubscriptionsResponse_1.listWebhookSubscriptionsResponseSchema, requestOptions)];
          });
        });
      };
      WebhookSubscriptionsApi2.prototype.createWebhookSubscription = function(body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST", "/v2/webhooks/subscriptions");
            mapped = req.prepareArgs({
              body: [body2, createWebhookSubscriptionRequest_1.createWebhookSubscriptionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            return [2, req.callAsJson(createWebhookSubscriptionResponse_1.createWebhookSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      WebhookSubscriptionsApi2.prototype.deleteWebhookSubscription = function(subscriptionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("DELETE");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["/v2/webhooks/subscriptions/", ""], ["/v2/webhooks/subscriptions/", ""])), mapped.subscriptionId);
            return [2, req.callAsJson(deleteWebhookSubscriptionResponse_1.deleteWebhookSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      WebhookSubscriptionsApi2.prototype.retrieveWebhookSubscription = function(subscriptionId, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("GET");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()]
            });
            req.appendTemplatePath(templateObject_2 || (templateObject_2 = tslib_1.__makeTemplateObject(["/v2/webhooks/subscriptions/", ""], ["/v2/webhooks/subscriptions/", ""])), mapped.subscriptionId);
            return [2, req.callAsJson(retrieveWebhookSubscriptionResponse_1.retrieveWebhookSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      WebhookSubscriptionsApi2.prototype.updateWebhookSubscription = function(subscriptionId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("PUT");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              body: [body2, updateWebhookSubscriptionRequest_1.updateWebhookSubscriptionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_3 || (templateObject_3 = tslib_1.__makeTemplateObject(["/v2/webhooks/subscriptions/", ""], ["/v2/webhooks/subscriptions/", ""])), mapped.subscriptionId);
            return [2, req.callAsJson(updateWebhookSubscriptionResponse_1.updateWebhookSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      WebhookSubscriptionsApi2.prototype.updateWebhookSubscriptionSignatureKey = function(subscriptionId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              body: [body2, updateWebhookSubscriptionSignatureKeyRequest_1.updateWebhookSubscriptionSignatureKeyRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_4 || (templateObject_4 = tslib_1.__makeTemplateObject(["/v2/webhooks/subscriptions/", "/signature-key"], ["/v2/webhooks/subscriptions/", "/signature-key"])), mapped.subscriptionId);
            return [2, req.callAsJson(updateWebhookSubscriptionSignatureKeyResponse_1.updateWebhookSubscriptionSignatureKeyResponseSchema, requestOptions)];
          });
        });
      };
      WebhookSubscriptionsApi2.prototype.testWebhookSubscription = function(subscriptionId, body2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var req, mapped;
          return tslib_1.__generator(this, function(_a) {
            req = this.createRequest("POST");
            mapped = req.prepareArgs({
              subscriptionId: [subscriptionId, (0, schema_1.string)()],
              body: [body2, testWebhookSubscriptionRequest_1.testWebhookSubscriptionRequestSchema]
            });
            req.header("Content-Type", "application/json");
            req.json(mapped.body);
            req.appendTemplatePath(templateObject_5 || (templateObject_5 = tslib_1.__makeTemplateObject(["/v2/webhooks/subscriptions/", "/test"], ["/v2/webhooks/subscriptions/", "/test"])), mapped.subscriptionId);
            return [2, req.callAsJson(testWebhookSubscriptionResponse_1.testWebhookSubscriptionResponseSchema, requestOptions)];
          });
        });
      };
      return WebhookSubscriptionsApi2;
    }(baseApi_1.BaseApi);
    exports.WebhookSubscriptionsApi = WebhookSubscriptionsApi;
    var templateObject_1;
    var templateObject_2;
    var templateObject_3;
    var templateObject_4;
    var templateObject_5;
  }
});

// node_modules/@apimatic/core-interfaces/lib/apiResponse.js
var require_apiResponse = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/apiResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@apimatic/core-interfaces/lib/authentication.js
var require_authentication = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/authentication.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@apimatic/core-interfaces/lib/httpContext.js
var require_httpContext = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/httpContext.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@apimatic/core-interfaces/lib/httpInterceptor.js
var require_httpInterceptor = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/httpInterceptor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.passThroughInterceptor = void 0;
    function passThroughInterceptor(request2, requestOptions, next) {
      return next(request2, requestOptions);
    }
    exports.passThroughInterceptor = passThroughInterceptor;
  }
});

// node_modules/@apimatic/core-interfaces/lib/httpRequest.js
var require_httpRequest = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/httpRequest.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@apimatic/core-interfaces/lib/httpResponse.js
var require_httpResponse = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/httpResponse.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@apimatic/core-interfaces/lib/retryConfiguration.js
var require_retryConfiguration = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/retryConfiguration.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
  }
});

// node_modules/@apimatic/core-interfaces/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/@apimatic/core-interfaces/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_apiResponse(), exports);
    tslib_1.__exportStar(require_authentication(), exports);
    tslib_1.__exportStar(require_httpContext(), exports);
    tslib_1.__exportStar(require_httpInterceptor(), exports);
    tslib_1.__exportStar(require_httpRequest(), exports);
    tslib_1.__exportStar(require_httpResponse(), exports);
    tslib_1.__exportStar(require_retryConfiguration(), exports);
  }
});

// node_modules/@apimatic/authentication-adapters/lib/basicAuthenticationAdapter.js
var require_basicAuthenticationAdapter = __commonJS({
  "node_modules/@apimatic/authentication-adapters/lib/basicAuthenticationAdapter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.basicAuthenticationProvider = void 0;
    var core_interfaces_1 = require_lib2();
    var basicAuthenticationProvider = function(_a) {
      var basicAuthUserName = _a.basicAuthUserName, basicAuthPassword = _a.basicAuthPassword;
      return function(requiresAuth) {
        if (!requiresAuth) {
          return core_interfaces_1.passThroughInterceptor;
        }
        return function(request2, options2, next) {
          request2.auth = {
            username: basicAuthUserName,
            password: basicAuthPassword
          };
          return next(request2, options2);
        };
      };
    };
    exports.basicAuthenticationProvider = basicAuthenticationProvider;
  }
});

// node_modules/@apimatic/http-headers/lib/httpHeaders.js
var require_httpHeaders = __commonJS({
  "node_modules/@apimatic/http-headers/lib/httpHeaders.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.XML_CONTENT_TYPE = exports.TEXT_CONTENT_TYPE = exports.JSON_CONTENT_TYPE = exports.FORM_URLENCODED_CONTENT_TYPE = exports.AUTHORIZATION_HEADER = exports.CONTENT_LENGTH_HEADER = exports.ACCEPT_HEADER = exports.CONTENT_TYPE_HEADER = exports.isValidHeaderName = exports.assertHeaders = exports.mergeHeaders = exports.lookupCaseInsensitive = exports.getHeader = exports.setHeaderIfNotSet = exports.setHeader = void 0;
    var tslib_1 = require_tslib();
    function setHeader(headers2, name, value) {
      var realHeaderName = lookupCaseInsensitive(headers2, name);
      setHeaderInternal(headers2, realHeaderName, name, value);
    }
    exports.setHeader = setHeader;
    function setHeaderInternal(headers2, realHeaderName, name, value) {
      if (realHeaderName) {
        delete headers2[realHeaderName];
      }
      if (value) {
        headers2[name] = value;
      }
    }
    function setHeaderIfNotSet(headers2, name, value) {
      var realHeaderName = lookupCaseInsensitive(headers2, name);
      if (!realHeaderName) {
        setHeaderInternal(headers2, realHeaderName, name, value);
      }
    }
    exports.setHeaderIfNotSet = setHeaderIfNotSet;
    function getHeader(headers2, name) {
      var prop = lookupCaseInsensitive(headers2, name);
      if (prop) {
        return headers2[prop];
      }
      return null;
    }
    exports.getHeader = getHeader;
    function lookupCaseInsensitive(obj, prop) {
      prop = prop.toLowerCase();
      for (var p in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, p) && prop === p.toLowerCase()) {
          return p;
        }
      }
      return null;
    }
    exports.lookupCaseInsensitive = lookupCaseInsensitive;
    function mergeHeaders(headers2, headersToMerge) {
      var e_1, _a, e_2, _b;
      var headerKeys = {};
      try {
        for (var _c = tslib_1.__values(Object.getOwnPropertyNames(headers2)), _d = _c.next(); !_d.done; _d = _c.next()) {
          var headerName = _d.value;
          headerKeys[headerName.toLowerCase()] = headerName;
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return))
            _a.call(_c);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      try {
        for (var _e = tslib_1.__values(Object.getOwnPropertyNames(headersToMerge)), _f = _e.next(); !_f.done; _f = _e.next()) {
          var headerName = _f.value;
          var lowerCasedName = headerName.toLowerCase();
          if (headerKeys[lowerCasedName]) {
            delete headers2[headerKeys[lowerCasedName]];
          }
          headerKeys[lowerCasedName] = headerName;
          headers2[headerName] = headersToMerge[headerName];
        }
      } catch (e_2_1) {
        e_2 = { error: e_2_1 };
      } finally {
        try {
          if (_f && !_f.done && (_b = _e.return))
            _b.call(_e);
        } finally {
          if (e_2)
            throw e_2.error;
        }
      }
    }
    exports.mergeHeaders = mergeHeaders;
    function assertHeaders(headers2) {
      var e_3, _a;
      if (headers2 === null || typeof headers2 !== "object") {
        throw new TypeError("Headers must be an object.");
      }
      try {
        for (var _b = tslib_1.__values(Object.getOwnPropertyNames(headers2)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var headerName = _c.value;
          if (!isValidHeaderName(headerName)) {
            throw new Error('"' + headerName + '" is not a valid header name.');
          }
          var headerValue = headers2[headerName];
          if (typeof headerValue !== "string") {
            throw new TypeError("Header value must be string but " + typeof headerValue + " provided.");
          }
        }
      } catch (e_3_1) {
        e_3 = { error: e_3_1 };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return))
            _a.call(_b);
        } finally {
          if (e_3)
            throw e_3.error;
        }
      }
    }
    exports.assertHeaders = assertHeaders;
    function isValidHeaderName(headerName) {
      return /^[\w!#$%&'*+.^`|~-]+$/.test(headerName);
    }
    exports.isValidHeaderName = isValidHeaderName;
    exports.CONTENT_TYPE_HEADER = "content-type";
    exports.ACCEPT_HEADER = "accept";
    exports.CONTENT_LENGTH_HEADER = "content-length";
    exports.AUTHORIZATION_HEADER = "authorization";
    exports.FORM_URLENCODED_CONTENT_TYPE = "application/x-www-form-urlencoded";
    exports.JSON_CONTENT_TYPE = "application/json";
    exports.TEXT_CONTENT_TYPE = "text/plain; charset=utf-8";
    exports.XML_CONTENT_TYPE = "application/xml";
  }
});

// node_modules/@apimatic/http-headers/lib/index.js
var require_lib3 = __commonJS({
  "node_modules/@apimatic/http-headers/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_httpHeaders(), exports);
  }
});

// node_modules/@apimatic/authentication-adapters/lib/customHeaderAuthenticationAdapter.js
var require_customHeaderAuthenticationAdapter = __commonJS({
  "node_modules/@apimatic/authentication-adapters/lib/customHeaderAuthenticationAdapter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.customHeaderAuthenticationProvider = void 0;
    var core_interfaces_1 = require_lib2();
    var http_headers_1 = require_lib3();
    var customHeaderAuthenticationProvider = function(customHeaderParams) {
      return function(requiresAuth) {
        if (!requiresAuth) {
          return core_interfaces_1.passThroughInterceptor;
        }
        return function(request2, options2, next) {
          var _a;
          request2.headers = (_a = request2.headers) !== null && _a !== void 0 ? _a : {};
          http_headers_1.mergeHeaders(request2.headers, customHeaderParams);
          return next(request2, options2);
        };
      };
    };
    exports.customHeaderAuthenticationProvider = customHeaderAuthenticationProvider;
  }
});

// node_modules/@apimatic/authentication-adapters/lib/customQueryAuthenticationAdapter.js
var require_customQueryAuthenticationAdapter = __commonJS({
  "node_modules/@apimatic/authentication-adapters/lib/customQueryAuthenticationAdapter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.customQueryAuthenticationProvider = void 0;
    var tslib_1 = require_tslib();
    var core_interfaces_1 = require_lib2();
    var customQueryAuthenticationProvider = function(customQueryParams) {
      return function(requiresAuth) {
        if (!requiresAuth) {
          return core_interfaces_1.passThroughInterceptor;
        }
        return function(request2, options2, next) {
          request2.url += (request2.url.indexOf("?") === -1 ? "?" : "&") + encodeQueryParams(customQueryParams);
          return next(request2, options2);
        };
      };
    };
    exports.customQueryAuthenticationProvider = customQueryAuthenticationProvider;
    function encodeQueryParams(queryParams) {
      var e_1, _a;
      var queryString = [];
      try {
        for (var _b = tslib_1.__values(Object.keys(queryParams)), _c = _b.next(); !_c.done; _c = _b.next()) {
          var key2 = _c.value;
          queryString.push(encodeURIComponent(key2) + "=" + encodeURIComponent(queryParams[key2]));
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b.return))
            _a.call(_b);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      return queryString.join("&");
    }
  }
});

// node_modules/@apimatic/authentication-adapters/lib/accessTokenAdapter.js
var require_accessTokenAdapter = __commonJS({
  "node_modules/@apimatic/authentication-adapters/lib/accessTokenAdapter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.accessTokenAuthenticationProvider = void 0;
    var core_interfaces_1 = require_lib2();
    var http_headers_1 = require_lib3();
    var accessTokenAuthenticationProvider = function(_a) {
      var accessToken = _a.accessToken;
      return function(requiresAuth) {
        if (!requiresAuth) {
          return core_interfaces_1.passThroughInterceptor;
        }
        return function(request2, options2, next) {
          var _a2;
          request2.headers = (_a2 = request2.headers) !== null && _a2 !== void 0 ? _a2 : {};
          http_headers_1.setHeader(request2.headers, http_headers_1.AUTHORIZATION_HEADER, "Bearer " + accessToken);
          return next(request2, options2);
        };
      };
    };
    exports.accessTokenAuthenticationProvider = accessTokenAuthenticationProvider;
  }
});

// node_modules/@apimatic/authentication-adapters/lib/noAuthenticationAdapter.js
var require_noAuthenticationAdapter = __commonJS({
  "node_modules/@apimatic/authentication-adapters/lib/noAuthenticationAdapter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.noneAuthenticationProvider = void 0;
    var core_interfaces_1 = require_lib2();
    var noneAuthenticationProvider = function() {
      return core_interfaces_1.passThroughInterceptor;
    };
    exports.noneAuthenticationProvider = noneAuthenticationProvider;
  }
});

// node_modules/@apimatic/authentication-adapters/lib/index.js
var require_lib4 = __commonJS({
  "node_modules/@apimatic/authentication-adapters/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_basicAuthenticationAdapter(), exports);
    tslib_1.__exportStar(require_customHeaderAuthenticationAdapter(), exports);
    tslib_1.__exportStar(require_customQueryAuthenticationAdapter(), exports);
    tslib_1.__exportStar(require_accessTokenAdapter(), exports);
    tslib_1.__exportStar(require_noAuthenticationAdapter(), exports);
  }
});

// node_modules/square/dist/cjs/authentication.js
var require_authentication2 = __commonJS({
  "node_modules/square/dist/cjs/authentication.js"(exports) {
    "use strict";
    exports.__esModule = true;
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib4(), exports);
  }
});

// node_modules/square/dist/cjs/configuration.js
var require_configuration = __commonJS({
  "node_modules/square/dist/cjs/configuration.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Environment = void 0;
    var Environment2;
    (function(Environment3) {
      Environment3["Production"] = "production";
      Environment3["Sandbox"] = "sandbox";
      Environment3["Custom"] = "custom";
    })(Environment2 = exports.Environment || (exports.Environment = {}));
  }
});

// node_modules/square/dist/cjs/defaultConfiguration.js
var require_defaultConfiguration = __commonJS({
  "node_modules/square/dist/cjs/defaultConfiguration.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.DEFAULT_RETRY_CONFIG = exports.DEFAULT_CONFIGURATION = void 0;
    var configuration_1 = require_configuration();
    exports.DEFAULT_CONFIGURATION = {
      timeout: 6e4,
      squareVersion: "2023-05-17",
      additionalHeaders: {},
      userAgentDetail: "",
      environment: configuration_1.Environment.Production,
      customUrl: "https://connect.squareup.com",
      accessToken: ""
    };
    exports.DEFAULT_RETRY_CONFIG = {
      maxNumberOfRetries: 0,
      retryOnTimeout: true,
      retryInterval: 1,
      maximumRetryWaitTime: 0,
      backoffFactor: 2,
      httpStatusCodesToRetry: [408, 413, 429, 500, 502, 503, 504, 521, 522, 524],
      httpMethodsToRetry: ["GET", "PUT"]
    };
  }
});

// node_modules/@apimatic/json-bigint/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/@apimatic/json-bigint/lib/stringify.js"(exports, module2) {
    var JSON2 = module2.exports;
    (function() {
      "use strict";
      function f(n) {
        return n < 10 ? "0" + n : n;
      }
      var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
        "\b": "\\b",
        "	": "\\t",
        "\n": "\\n",
        "\f": "\\f",
        "\r": "\\r",
        '"': '\\"',
        "\\": "\\\\"
      }, rep;
      function quote(string) {
        escapable.lastIndex = 0;
        return escapable.test(string) ? '"' + string.replace(escapable, function(a) {
          var c = meta[a];
          return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
        }) + '"' : '"' + string + '"';
      }
      function str(key2, holder) {
        var i, k, v, length, mind = gap, partial, value = holder[key2];
        if (value && typeof value === "object" && typeof value.toJSON === "function") {
          value = value.toJSON(key2);
        }
        if (typeof rep === "function") {
          value = rep.call(holder, key2, value);
        }
        switch (typeof value) {
          case "string":
            return quote(value);
          case "number":
            return isFinite(value) ? String(value) : "null";
          case "boolean":
          case "null":
          case "bigint":
            return String(value);
          case "object":
            if (!value) {
              return "null";
            }
            gap += indent;
            partial = [];
            if (Object.prototype.toString.apply(value) === "[object Array]") {
              length = value.length;
              for (i = 0; i < length; i += 1) {
                partial[i] = str(i, value) || "null";
              }
              v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
              gap = mind;
              return v;
            }
            if (rep && typeof rep === "object") {
              length = rep.length;
              for (i = 0; i < length; i += 1) {
                if (typeof rep[i] === "string") {
                  k = rep[i];
                  v = str(k, value);
                  if (v) {
                    partial.push(quote(k) + (gap ? ": " : ":") + v);
                  }
                }
              }
            } else {
              Object.keys(value).forEach(function(k2) {
                var v2 = str(k2, value);
                if (v2) {
                  partial.push(quote(k2) + (gap ? ": " : ":") + v2);
                }
              });
            }
            v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
            gap = mind;
            return v;
        }
      }
      if (typeof JSON2.stringify !== "function") {
        JSON2.stringify = function(value, replacer, space) {
          var i;
          gap = "";
          indent = "";
          if (typeof space === "number") {
            for (i = 0; i < space; i += 1) {
              indent += " ";
            }
          } else if (typeof space === "string") {
            indent = space;
          }
          rep = replacer;
          if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) {
            throw new Error("JSON.stringify");
          }
          return str("", { "": value });
        };
      }
    })();
  }
});

// node_modules/@apimatic/json-bigint/lib/parse.js
var require_parse = __commonJS({
  "node_modules/@apimatic/json-bigint/lib/parse.js"(exports, module2) {
    var suspectProtoRx = /(?:_|\\u005[Ff])(?:_|\\u005[Ff])(?:p|\\u0070)(?:r|\\u0072)(?:o|\\u006[Ff])(?:t|\\u0074)(?:o|\\u006[Ff])(?:_|\\u005[Ff])(?:_|\\u005[Ff])/;
    var suspectConstructorRx = /(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)/;
    var json_parse = function(options2) {
      "use strict";
      var _options = {
        strict: false,
        storeAsString: false,
        alwaysParseAsBig: false,
        protoAction: "error",
        constructorAction: "error"
      };
      if (options2 !== void 0 && options2 !== null) {
        if (options2.strict === true) {
          _options.strict = true;
        }
        if (options2.storeAsString === true) {
          _options.storeAsString = true;
        }
        _options.alwaysParseAsBig = options2.alwaysParseAsBig === true ? options2.alwaysParseAsBig : false;
        if (typeof options2.constructorAction !== "undefined") {
          if (options2.constructorAction === "error" || options2.constructorAction === "ignore" || options2.constructorAction === "preserve") {
            _options.constructorAction = options2.constructorAction;
          } else {
            throw new Error(`Incorrect value for constructorAction option, must be "error", "ignore" or undefined but passed ${options2.constructorAction}`);
          }
        }
        if (typeof options2.protoAction !== "undefined") {
          if (options2.protoAction === "error" || options2.protoAction === "ignore" || options2.protoAction === "preserve") {
            _options.protoAction = options2.protoAction;
          } else {
            throw new Error(`Incorrect value for protoAction option, must be "error", "ignore" or undefined but passed ${options2.protoAction}`);
          }
        }
      }
      var at, ch, escapee = {
        '"': '"',
        "\\": "\\",
        "/": "/",
        b: "\b",
        f: "\f",
        n: "\n",
        r: "\r",
        t: "	"
      }, text2, error2 = function(m) {
        throw {
          name: "SyntaxError",
          message: m,
          at,
          text: text2
        };
      }, next = function(c) {
        if (c && c !== ch) {
          error2("Expected '" + c + "' instead of '" + ch + "'");
        }
        ch = text2.charAt(at);
        at += 1;
        return ch;
      }, number = function() {
        var number2, string2 = "";
        if (ch === "-") {
          string2 = "-";
          next("-");
        }
        while (ch >= "0" && ch <= "9") {
          string2 += ch;
          next();
        }
        if (ch === ".") {
          string2 += ".";
          while (next() && ch >= "0" && ch <= "9") {
            string2 += ch;
          }
        }
        if (ch === "e" || ch === "E") {
          string2 += ch;
          next();
          if (ch === "-" || ch === "+") {
            string2 += ch;
            next();
          }
          while (ch >= "0" && ch <= "9") {
            string2 += ch;
            next();
          }
        }
        number2 = +string2;
        if (!isFinite(number2)) {
          error2("Bad number");
        } else {
          if (Number.isSafeInteger(number2))
            return !_options.alwaysParseAsBig ? number2 : BigInt(number2);
          else
            return _options.storeAsString ? string2 : /[\.eE]/.test(string2) ? number2 : BigInt(string2);
        }
      }, string = function() {
        var hex, i, string2 = "", uffff;
        if (ch === '"') {
          var startAt = at;
          while (next()) {
            if (ch === '"') {
              if (at - 1 > startAt)
                string2 += text2.substring(startAt, at - 1);
              next();
              return string2;
            }
            if (ch === "\\") {
              if (at - 1 > startAt)
                string2 += text2.substring(startAt, at - 1);
              next();
              if (ch === "u") {
                uffff = 0;
                for (i = 0; i < 4; i += 1) {
                  hex = parseInt(next(), 16);
                  if (!isFinite(hex)) {
                    break;
                  }
                  uffff = uffff * 16 + hex;
                }
                string2 += String.fromCharCode(uffff);
              } else if (typeof escapee[ch] === "string") {
                string2 += escapee[ch];
              } else {
                break;
              }
              startAt = at;
            }
          }
        }
        error2("Bad string");
      }, white = function() {
        while (ch && ch <= " ") {
          next();
        }
      }, word = function() {
        switch (ch) {
          case "t":
            next("t");
            next("r");
            next("u");
            next("e");
            return true;
          case "f":
            next("f");
            next("a");
            next("l");
            next("s");
            next("e");
            return false;
          case "n":
            next("n");
            next("u");
            next("l");
            next("l");
            return null;
        }
        error2("Unexpected '" + ch + "'");
      }, value, array2 = function() {
        var array3 = [];
        if (ch === "[") {
          next("[");
          white();
          if (ch === "]") {
            next("]");
            return array3;
          }
          while (ch) {
            array3.push(value());
            white();
            if (ch === "]") {
              next("]");
              return array3;
            }
            next(",");
            white();
          }
        }
        error2("Bad array");
      }, object = function() {
        var key2, object2 = /* @__PURE__ */ Object.create(null);
        if (ch === "{") {
          next("{");
          white();
          if (ch === "}") {
            next("}");
            return object2;
          }
          while (ch) {
            key2 = string();
            white();
            next(":");
            if (_options.strict === true && Object.hasOwnProperty.call(object2, key2)) {
              error2('Duplicate key "' + key2 + '"');
            }
            if (suspectProtoRx.test(key2) === true) {
              if (_options.protoAction === "error") {
                error2("Object contains forbidden prototype property");
              } else if (_options.protoAction === "ignore") {
                value();
              } else {
                object2[key2] = value();
              }
            } else if (suspectConstructorRx.test(key2) === true) {
              if (_options.constructorAction === "error") {
                error2("Object contains forbidden constructor property");
              } else if (_options.constructorAction === "ignore") {
                value();
              } else {
                object2[key2] = value();
              }
            } else {
              object2[key2] = value();
            }
            white();
            if (ch === "}") {
              next("}");
              return object2;
            }
            next(",");
            white();
          }
        }
        error2("Bad object");
      };
      value = function() {
        white();
        switch (ch) {
          case "{":
            return object();
          case "[":
            return array2();
          case '"':
            return string();
          case "-":
            return number();
          default:
            return ch >= "0" && ch <= "9" ? number() : word();
        }
      };
      return function(source, reviver) {
        var result;
        text2 = source + "";
        at = 0;
        ch = " ";
        result = value();
        white();
        if (ch) {
          error2("Syntax error");
        }
        return typeof reviver === "function" ? function walk(holder, key2) {
          var k, v, value2 = holder[key2];
          if (value2 && typeof value2 === "object") {
            Object.keys(value2).forEach(function(k2) {
              v = walk(value2, k2);
              if (v !== void 0) {
                value2[k2] = v;
              } else {
                delete value2[k2];
              }
            });
          }
          return reviver.call(holder, key2, value2);
        }({ "": result }, "") : result;
      };
    };
    module2.exports = json_parse;
  }
});

// node_modules/@apimatic/json-bigint/index.js
var require_json_bigint = __commonJS({
  "node_modules/@apimatic/json-bigint/index.js"(exports, module2) {
    var json_stringify = require_stringify().stringify;
    var json_parse = require_parse();
    module2.exports = function(options2) {
      return {
        parse: json_parse(options2),
        stringify: json_stringify
      };
    };
    module2.exports.parse = json_parse();
    module2.exports.stringify = json_stringify;
  }
});

// node_modules/square/dist/cjs/errors/apiError.js
var require_apiError = __commonJS({
  "node_modules/square/dist/cjs/errors/apiError.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.ApiError = void 0;
    var tslib_1 = require_tslib();
    var json_bigint_1 = tslib_1.__importDefault(require_json_bigint());
    var ApiError = function(_super) {
      tslib_1.__extends(ApiError2, _super);
      function ApiError2(context, message) {
        var _newTarget = this.constructor;
        var _this = this;
        var _a;
        _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        var request2 = context.request, response2 = context.response;
        _this.request = request2;
        _this.statusCode = response2.statusCode;
        _this.headers = response2.headers;
        _this.body = response2.body;
        if (typeof response2.body === "string" && response2.body !== "") {
          var JSON_1 = (0, json_bigint_1["default"])();
          try {
            _this.result = JSON_1.parse(response2.body);
            if (typeof _this.result === "object") {
              var result = _this.result;
              if ("errors" in result) {
                _this.errors = result["errors"];
              } else {
                _this.errors = [
                  {
                    category: "V1_ERROR",
                    code: (_a = result["type"]) !== null && _a !== void 0 ? _a : "Unknown",
                    detail: result["message"],
                    field: result["field"]
                  }
                ];
              }
            }
          } catch (error2) {
            if (__DEV__) {
              if (console) {
                console.warn("Unexpected error: Could not parse HTTP response body as JSON. ".concat(error2.message));
              }
            }
          }
        }
        return _this;
      }
      return ApiError2;
    }(Error);
    exports.ApiError = ApiError;
  }
});

// node_modules/detect-browser/index.js
var require_detect_browser = __commonJS({
  "node_modules/detect-browser/index.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getNodeVersion = exports.detectOS = exports.parseUserAgent = exports.browserName = exports.detect = exports.ReactNativeInfo = exports.BotInfo = exports.SearchBotDeviceInfo = exports.NodeInfo = exports.BrowserInfo = void 0;
    var BrowserInfo = function() {
      function BrowserInfo2(name, version, os) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.type = "browser";
      }
      return BrowserInfo2;
    }();
    exports.BrowserInfo = BrowserInfo;
    var NodeInfo = function() {
      function NodeInfo2(version) {
        this.version = version;
        this.type = "node";
        this.name = "node";
        this.os = process.platform;
      }
      return NodeInfo2;
    }();
    exports.NodeInfo = NodeInfo;
    var SearchBotDeviceInfo = function() {
      function SearchBotDeviceInfo2(name, version, os, bot) {
        this.name = name;
        this.version = version;
        this.os = os;
        this.bot = bot;
        this.type = "bot-device";
      }
      return SearchBotDeviceInfo2;
    }();
    exports.SearchBotDeviceInfo = SearchBotDeviceInfo;
    var BotInfo = function() {
      function BotInfo2() {
        this.type = "bot";
        this.bot = true;
        this.name = "bot";
        this.version = null;
        this.os = null;
      }
      return BotInfo2;
    }();
    exports.BotInfo = BotInfo;
    var ReactNativeInfo = function() {
      function ReactNativeInfo2() {
        this.type = "react-native";
        this.name = "react-native";
        this.version = null;
        this.os = null;
      }
      return ReactNativeInfo2;
    }();
    exports.ReactNativeInfo = ReactNativeInfo;
    var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
    var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
    var REQUIRED_VERSION_PARTS = 3;
    var userAgentRules = [
      ["aol", /AOLShield\/([0-9\._]+)/],
      ["edge", /Edge\/([0-9\._]+)/],
      ["edge-ios", /EdgiOS\/([0-9\._]+)/],
      ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
      ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
      ["samsung", /SamsungBrowser\/([0-9\.]+)/],
      ["silk", /\bSilk\/([0-9._-]+)\b/],
      ["miui", /MiuiBrowser\/([0-9\.]+)$/],
      ["beaker", /BeakerBrowser\/([0-9\.]+)/],
      ["edge-chromium", /EdgA?\/([0-9\.]+)/],
      [
        "chromium-webview",
        /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
      ],
      ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
      ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
      ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
      ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
      ["fxios", /FxiOS\/([0-9\.]+)/],
      ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
      ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
      ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
      ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
      ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
      ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
      ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
      ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
      ["ie", /MSIE\s(7\.0)/],
      ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
      ["android", /Android\s([0-9\.]+)/],
      ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
      ["safari", /Version\/([0-9\._]+).*Safari/],
      ["facebook", /FB[AS]V\/([0-9\.]+)/],
      ["instagram", /Instagram\s([0-9\.]+)/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
      ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
      ["curl", /^curl\/([0-9\.]+)$/],
      ["searchbot", SEARCHBOX_UA_REGEX]
    ];
    var operatingSystemRules = [
      ["iOS", /iP(hone|od|ad)/],
      ["Android OS", /Android/],
      ["BlackBerry OS", /BlackBerry|BB10/],
      ["Windows Mobile", /IEMobile/],
      ["Amazon OS", /Kindle/],
      ["Windows 3.11", /Win16/],
      ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
      ["Windows 98", /(Windows 98)|(Win98)/],
      ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
      ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
      ["Windows Server 2003", /(Windows NT 5.2)/],
      ["Windows Vista", /(Windows NT 6.0)/],
      ["Windows 7", /(Windows NT 6.1)/],
      ["Windows 8", /(Windows NT 6.2)/],
      ["Windows 8.1", /(Windows NT 6.3)/],
      ["Windows 10", /(Windows NT 10.0)/],
      ["Windows ME", /Windows ME/],
      ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
      ["Open BSD", /OpenBSD/],
      ["Sun OS", /SunOS/],
      ["Chrome OS", /CrOS/],
      ["Linux", /(Linux)|(X11)/],
      ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
      ["QNX", /QNX/],
      ["BeOS", /BeOS/],
      ["OS/2", /OS\/2/]
    ];
    function detect(userAgent) {
      if (!!userAgent) {
        return parseUserAgent(userAgent);
      }
      if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
        return new ReactNativeInfo();
      }
      if (typeof navigator !== "undefined") {
        return parseUserAgent(navigator.userAgent);
      }
      return getNodeVersion();
    }
    exports.detect = detect;
    function matchUserAgent(ua) {
      return ua !== "" && userAgentRules.reduce(function(matched, _a) {
        var browser = _a[0], regex = _a[1];
        if (matched) {
          return matched;
        }
        var uaMatch = regex.exec(ua);
        return !!uaMatch && [browser, uaMatch];
      }, false);
    }
    function browserName(ua) {
      var data = matchUserAgent(ua);
      return data ? data[0] : null;
    }
    exports.browserName = browserName;
    function parseUserAgent(ua) {
      var matchedRule = matchUserAgent(ua);
      if (!matchedRule) {
        return null;
      }
      var name = matchedRule[0], match = matchedRule[1];
      if (name === "searchbot") {
        return new BotInfo();
      }
      var versionParts = match[1] && match[1].split(".").join("_").split("_").slice(0, 3);
      if (versionParts) {
        if (versionParts.length < REQUIRED_VERSION_PARTS) {
          versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
        }
      } else {
        versionParts = [];
      }
      var version = versionParts.join(".");
      var os = detectOS(ua);
      var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
      if (searchBotMatch && searchBotMatch[1]) {
        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);
      }
      return new BrowserInfo(name, version, os);
    }
    exports.parseUserAgent = parseUserAgent;
    function detectOS(ua) {
      for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];
        var match = regex.exec(ua);
        if (match) {
          return os;
        }
      }
      return null;
    }
    exports.detectOS = detectOS;
    function getNodeVersion() {
      var isNode = typeof process !== "undefined" && process.version;
      return isNode ? new NodeInfo(process.version.slice(1)) : null;
    }
    exports.getNodeVersion = getNodeVersion;
    function createVersionParts(count) {
      var output = [];
      for (var ii = 0; ii < count; ii++) {
        output.push("0");
      }
      return output;
    }
  }
});

// node_modules/tiny-warning/dist/tiny-warning.cjs.js
var require_tiny_warning_cjs = __commonJS({
  "node_modules/tiny-warning/dist/tiny-warning.cjs.js"(exports, module2) {
    "use strict";
    var isProduction = process.env.NODE_ENV === "production";
    function warning(condition, message) {
      if (!isProduction) {
        if (condition) {
          return;
        }
        var text2 = "Warning: " + message;
        if (typeof console !== "undefined") {
          console.warn(text2);
        }
        try {
          throw Error(text2);
        } catch (x) {
        }
      }
    }
    module2.exports = warning;
  }
});

// node_modules/json-ptr/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/json-ptr/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function replace(source, find, repl) {
      let res = "";
      let rem = source;
      let beg = 0;
      let end = -1;
      while ((end = rem.indexOf(find)) > -1) {
        res += source.substring(beg, beg + end) + repl;
        rem = rem.substring(end + find.length, rem.length);
        beg += end + find.length;
      }
      if (rem.length > 0) {
        res += source.substring(source.length - rem.length, source.length);
      }
      return res;
    }
    function decodeFragmentSegments(segments) {
      let i = -1;
      const len = segments.length;
      const res = new Array(len);
      while (++i < len) {
        if (typeof segments[i] === "string") {
          res[i] = replace(replace(decodeURIComponent(segments[i]), "~1", "/"), "~0", "~");
        } else {
          res[i] = segments[i];
        }
      }
      return res;
    }
    function encodeFragmentSegments(segments) {
      let i = -1;
      const len = segments.length;
      const res = new Array(len);
      while (++i < len) {
        if (typeof segments[i] === "string") {
          res[i] = encodeURIComponent(replace(replace(segments[i], "~", "~0"), "/", "~1"));
        } else {
          res[i] = segments[i];
        }
      }
      return res;
    }
    function decodePointerSegments(segments) {
      let i = -1;
      const len = segments.length;
      const res = new Array(len);
      while (++i < len) {
        if (typeof segments[i] === "string") {
          res[i] = replace(replace(segments[i], "~1", "/"), "~0", "~");
        } else {
          res[i] = segments[i];
        }
      }
      return res;
    }
    function encodePointerSegments(segments) {
      let i = -1;
      const len = segments.length;
      const res = new Array(len);
      while (++i < len) {
        if (typeof segments[i] === "string") {
          res[i] = replace(replace(segments[i], "~", "~0"), "/", "~1");
        } else {
          res[i] = segments[i];
        }
      }
      return res;
    }
    function decodePointer(ptr) {
      if (typeof ptr !== "string") {
        throw new TypeError("Invalid type: JSON Pointers are represented as strings.");
      }
      if (ptr.length === 0) {
        return [];
      }
      if (ptr[0] !== "/") {
        throw new ReferenceError("Invalid JSON Pointer syntax. Non-empty pointer must begin with a solidus `/`.");
      }
      return decodePointerSegments(ptr.substring(1).split("/"));
    }
    function encodePointer(path) {
      if (!path || path && !Array.isArray(path)) {
        throw new TypeError("Invalid type: path must be an array of segments.");
      }
      if (path.length === 0) {
        return "";
      }
      return "/".concat(encodePointerSegments(path).join("/"));
    }
    function decodeUriFragmentIdentifier(ptr) {
      if (typeof ptr !== "string") {
        throw new TypeError("Invalid type: JSON Pointers are represented as strings.");
      }
      if (ptr.length === 0 || ptr[0] !== "#") {
        throw new ReferenceError("Invalid JSON Pointer syntax; URI fragment identifiers must begin with a hash.");
      }
      if (ptr.length === 1) {
        return [];
      }
      if (ptr[1] !== "/") {
        throw new ReferenceError("Invalid JSON Pointer syntax.");
      }
      return decodeFragmentSegments(ptr.substring(2).split("/"));
    }
    function encodeUriFragmentIdentifier(path) {
      if (!path || path && !Array.isArray(path)) {
        throw new TypeError("Invalid type: path must be an array of segments.");
      }
      if (path.length === 0) {
        return "#";
      }
      return "#/".concat(encodeFragmentSegments(path).join("/"));
    }
    var InvalidRelativePointerError = "Invalid Relative JSON Pointer syntax. Relative pointer must begin with a non-negative integer, followed by either the number sign (#), or a JSON Pointer.";
    function decodeRelativePointer(ptr) {
      if (typeof ptr !== "string") {
        throw new TypeError("Invalid type: Relative JSON Pointers are represented as strings.");
      }
      if (ptr.length === 0) {
        throw new ReferenceError(InvalidRelativePointerError);
      }
      const segments = ptr.split("/");
      let first = segments[0];
      if (first[first.length - 1] == "#") {
        if (segments.length > 1) {
          throw new ReferenceError(InvalidRelativePointerError);
        }
        first = first.substr(0, first.length - 1);
      }
      let i = -1;
      const len = first.length;
      while (++i < len) {
        if (first[i] < "0" || first[i] > "9") {
          throw new ReferenceError(InvalidRelativePointerError);
        }
      }
      const path = decodePointerSegments(segments.slice(1));
      path.unshift(segments[0]);
      return path;
    }
    function toArrayIndexReference(arr, idx) {
      if (typeof idx === "number")
        return idx;
      const len = idx.length;
      if (!len)
        return -1;
      let cursor = 0;
      if (len === 1 && idx[0] === "-") {
        if (!Array.isArray(arr)) {
          return 0;
        }
        return arr.length;
      }
      while (++cursor < len) {
        if (idx[cursor] < "0" || idx[cursor] > "9") {
          return -1;
        }
      }
      return parseInt(idx, 10);
    }
    function compilePointerDereference(path) {
      let body2 = "if (typeof(it) !== 'undefined'";
      if (path.length === 0) {
        return (it) => it;
      }
      body2 = path.reduce((body3, _, i) => {
        return body3 + "\n	&& it !== null && typeof((it = it['" + replace(replace(path[i] + "", "\\", "\\\\"), "'", "\\'") + "'])) !== 'undefined'";
      }, "if (typeof(it) !== 'undefined'");
      body2 = body2 + ") {\n	return it;\n }";
      return new Function("it", body2);
    }
    function setValueAtPath(target, val, path, force = false) {
      if (path.length === 0) {
        throw new Error("Cannot set the root object; assign it directly.");
      }
      if (typeof target === "undefined") {
        throw new TypeError("Cannot set values on undefined");
      }
      let it = target;
      const len = path.length;
      const end = path.length - 1;
      let step;
      let cursor = -1;
      let rem;
      let p;
      while (++cursor < len) {
        step = path[cursor];
        if (typeof step !== "string" && typeof step !== "number") {
          throw new TypeError("PathSegments must be a string or a number.");
        }
        if (step === "__proto__" || step === "constructor" || step === "prototype") {
          throw new Error("Attempted prototype pollution disallowed.");
        }
        if (Array.isArray(it)) {
          if (step === "-" && cursor === end) {
            it.push(val);
            return void 0;
          }
          p = toArrayIndexReference(it, step);
          if (it.length > p) {
            if (cursor === end) {
              rem = it[p];
              it[p] = val;
              break;
            }
            it = it[p];
          } else if (cursor === end && p === it.length) {
            if (force) {
              it.push(val);
              return void 0;
            }
          } else if (force) {
            it = it[p] = cursor === end ? val : {};
          }
        } else {
          if (typeof it[step] === "undefined") {
            if (force) {
              if (cursor === end) {
                it[step] = val;
                return void 0;
              }
              const n = Number(path[cursor + 1]);
              if (Number.isInteger(n) && toArrayIndexReference(it[step], n) !== -1) {
                it = it[step] = [];
                continue;
              }
              it = it[step] = {};
              continue;
            }
            return void 0;
          }
          if (cursor === end) {
            rem = it[step];
            it[step] = val;
            break;
          }
          it = it[step];
        }
      }
      return rem;
    }
    function unsetValueAtPath(target, path) {
      if (path.length === 0) {
        throw new Error("Cannot unset the root object; assign it directly.");
      }
      if (typeof target === "undefined") {
        throw new TypeError("Cannot unset values on undefined");
      }
      let it = target;
      const len = path.length;
      const end = path.length - 1;
      let step;
      let cursor = -1;
      let rem;
      let p;
      while (++cursor < len) {
        step = path[cursor];
        if (typeof step !== "string" && typeof step !== "number") {
          throw new TypeError("PathSegments must be a string or a number.");
        }
        if (step === "__proto__" || step === "constructor" || step === "prototype") {
          throw new Error("Attempted prototype pollution disallowed.");
        }
        if (Array.isArray(it)) {
          p = toArrayIndexReference(it, step);
          if (p >= it.length)
            return void 0;
          if (cursor === end) {
            rem = it[p];
            delete it[p];
            break;
          }
          it = it[p];
        } else {
          if (typeof it[step] === "undefined") {
            return void 0;
          }
          if (cursor === end) {
            rem = it[step];
            delete it[step];
            break;
          }
          it = it[step];
        }
      }
      return rem;
    }
    function looksLikeFragment(ptr) {
      return typeof ptr === "string" && ptr.length > 0 && ptr[0] === "#";
    }
    function pickDecoder(ptr) {
      return looksLikeFragment(ptr) ? decodeUriFragmentIdentifier : decodePointer;
    }
    function decodePtrInit(ptr) {
      return Array.isArray(ptr) ? ptr.slice(0) : pickDecoder(ptr)(ptr);
    }
    function isObject2(value) {
      return typeof value === "object" && value !== null;
    }
    function shouldDescend(obj) {
      return isObject2(obj) && !JsonReference.isReference(obj);
    }
    function descendingVisit(target, visitor, encoder2) {
      const distinctObjects = /* @__PURE__ */ new Map();
      const q = [{ obj: target, path: [] }];
      while (q.length) {
        const { obj, path } = q.shift();
        visitor(encoder2(path), obj);
        if (shouldDescend(obj)) {
          distinctObjects.set(obj, new JsonPointer(encodeUriFragmentIdentifier(path)));
          if (!Array.isArray(obj)) {
            const keys = Object.keys(obj);
            const len = keys.length;
            let i = -1;
            while (++i < len) {
              const it = obj[keys[i]];
              if (isObject2(it) && distinctObjects.has(it)) {
                q.push({
                  obj: new JsonReference(distinctObjects.get(it)),
                  path: path.concat(keys[i])
                });
              } else {
                q.push({
                  obj: it,
                  path: path.concat(keys[i])
                });
              }
            }
          } else {
            let j = -1;
            const len = obj.length;
            while (++j < len) {
              const it = obj[j];
              if (isObject2(it) && distinctObjects.has(it)) {
                q.push({
                  obj: new JsonReference(distinctObjects.get(it)),
                  path: path.concat([j + ""])
                });
              } else {
                q.push({
                  obj: it,
                  path: path.concat([j + ""])
                });
              }
            }
          }
        }
      }
    }
    var $ptr = Symbol("pointer");
    var $frg = Symbol("fragmentId");
    var $get = Symbol("getter");
    var JsonPointer = class {
      constructor(ptr) {
        this.path = decodePtrInit(ptr);
      }
      static create(pointer) {
        return new JsonPointer(pointer);
      }
      static has(target, pointer) {
        if (typeof pointer === "string" || Array.isArray(pointer)) {
          pointer = new JsonPointer(pointer);
        }
        return pointer.has(target);
      }
      static get(target, pointer) {
        if (typeof pointer === "string" || Array.isArray(pointer)) {
          pointer = new JsonPointer(pointer);
        }
        return pointer.get(target);
      }
      static set(target, pointer, val, force = false) {
        if (typeof pointer === "string" || Array.isArray(pointer)) {
          pointer = new JsonPointer(pointer);
        }
        return pointer.set(target, val, force);
      }
      static unset(target, pointer) {
        if (typeof pointer === "string" || Array.isArray(pointer)) {
          pointer = new JsonPointer(pointer);
        }
        return pointer.unset(target);
      }
      static decode(pointer) {
        return pickDecoder(pointer)(pointer);
      }
      static visit(target, visitor, fragmentId = false) {
        descendingVisit(target, visitor, fragmentId ? encodeUriFragmentIdentifier : encodePointer);
      }
      static listPointers(target) {
        const res = [];
        descendingVisit(target, (pointer, value) => {
          res.push({ pointer, value });
        }, encodePointer);
        return res;
      }
      static listFragmentIds(target) {
        const res = [];
        descendingVisit(target, (fragmentId, value) => {
          res.push({ fragmentId, value });
        }, encodeUriFragmentIdentifier);
        return res;
      }
      static flatten(target, fragmentId = false) {
        const res = {};
        descendingVisit(target, (p, v) => {
          res[p] = v;
        }, fragmentId ? encodeUriFragmentIdentifier : encodePointer);
        return res;
      }
      static map(target, fragmentId = false) {
        const res = /* @__PURE__ */ new Map();
        descendingVisit(target, res.set.bind(res), fragmentId ? encodeUriFragmentIdentifier : encodePointer);
        return res;
      }
      get(target) {
        if (!this[$get]) {
          this[$get] = compilePointerDereference(this.path);
        }
        return this[$get](target);
      }
      set(target, value, force = false) {
        return setValueAtPath(target, value, this.path, force);
      }
      unset(target) {
        return unsetValueAtPath(target, this.path);
      }
      has(target) {
        return typeof this.get(target) !== "undefined";
      }
      parent(target) {
        const p = this.path;
        if (p.length == 1)
          return void 0;
        const parent = new JsonPointer(p.slice(0, p.length - 1));
        return parent.get(target);
      }
      relative(ptr) {
        const p = this.path;
        const decoded = decodeRelativePointer(ptr);
        const n = parseInt(decoded[0]);
        if (n > p.length)
          throw new Error("Relative location does not exist.");
        const r = p.slice(0, p.length - n).concat(decoded.slice(1));
        if (decoded[0][decoded[0].length - 1] == "#") {
          const name = r[r.length - 1];
          throw new Error(`We won't compile a pointer that will always return '${name}'. Use JsonPointer.rel(target, ptr) instead.`);
        }
        return new JsonPointer(r);
      }
      rel(target, ptr) {
        const p = this.path;
        const decoded = decodeRelativePointer(ptr);
        const n = parseInt(decoded[0]);
        if (n > p.length) {
          return void 0;
        }
        const r = p.slice(0, p.length - n).concat(decoded.slice(1));
        const other = new JsonPointer(r);
        if (decoded[0][decoded[0].length - 1] == "#") {
          const name = r[r.length - 1];
          const parent = other.parent(target);
          return Array.isArray(parent) ? parseInt(name, 10) : name;
        }
        return other.get(target);
      }
      concat(ptr) {
        return new JsonPointer(this.path.concat(ptr instanceof JsonPointer ? ptr.path : decodePtrInit(ptr)));
      }
      get pointer() {
        if (this[$ptr] === void 0) {
          this[$ptr] = encodePointer(this.path);
        }
        return this[$ptr];
      }
      get uriFragmentIdentifier() {
        if (!this[$frg]) {
          this[$frg] = encodeUriFragmentIdentifier(this.path);
        }
        return this[$frg];
      }
      toString() {
        return this.pointer;
      }
    };
    var $pointer = Symbol("pointer");
    var JsonReference = class {
      constructor(pointer) {
        this[$pointer] = pointer instanceof JsonPointer ? pointer : new JsonPointer(pointer);
        this.$ref = this[$pointer].uriFragmentIdentifier;
      }
      static isReference(candidate) {
        if (!candidate)
          return false;
        const ref = candidate;
        return typeof ref.$ref === "string" && typeof ref.resolve === "function";
      }
      resolve(target) {
        return this[$pointer].get(target);
      }
      pointer() {
        return this[$pointer];
      }
      toString() {
        return this.$ref;
      }
    };
    exports.JsonPointer = JsonPointer;
    exports.JsonReference = JsonReference;
    exports.compilePointerDereference = compilePointerDereference;
    exports.decodeFragmentSegments = decodeFragmentSegments;
    exports.decodePointer = decodePointer;
    exports.decodePointerSegments = decodePointerSegments;
    exports.decodePtrInit = decodePtrInit;
    exports.decodeRelativePointer = decodeRelativePointer;
    exports.decodeUriFragmentIdentifier = decodeUriFragmentIdentifier;
    exports.encodeFragmentSegments = encodeFragmentSegments;
    exports.encodePointer = encodePointer;
    exports.encodePointerSegments = encodePointerSegments;
    exports.encodeUriFragmentIdentifier = encodeUriFragmentIdentifier;
    exports.looksLikeFragment = looksLikeFragment;
    exports.pickDecoder = pickDecoder;
    exports.replace = replace;
    exports.setValueAtPath = setValueAtPath;
    exports.toArrayIndexReference = toArrayIndexReference;
    exports.unsetValueAtPath = unsetValueAtPath;
  }
});

// node_modules/@apimatic/core/lib/apiHelper.js
var require_apiHelper = __commonJS({
  "node_modules/@apimatic/core/lib/apiHelper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.updateErrorMessage = exports.updateUserAgent = exports.deprecated = exports.sanitizeUrl = void 0;
    var tslib_1 = require_tslib();
    var http_headers_1 = require_lib3();
    var detect_browser_1 = require_detect_browser();
    var tiny_warning_1 = tslib_1.__importDefault(require_tiny_warning_cjs());
    var json_ptr_1 = require_cjs();
    function sanitizeUrl(url) {
      var protocolRegex = /^https?:\/\/[^/]+/;
      var match = url.match(protocolRegex);
      if (match === null) {
        throw new Error("Invalid URL format: " + url);
      }
      var protocol = match[0];
      var queryUrl = url.substring(protocol.length).replace(/\/\/+/g, "/");
      return protocol + queryUrl;
    }
    exports.sanitizeUrl = sanitizeUrl;
    function deprecated(methodName, notice) {
      var message = "Method " + methodName + " is deprecated.";
      if (notice) {
        message += " " + notice;
      }
      if (process.env.NODE_ENV !== "production") {
        tiny_warning_1.default(false, message);
      }
    }
    exports.deprecated = deprecated;
    function updateUserAgent(userAgent, apiVersion, detail) {
      var updatedAgent = userAgent;
      var result = detect_browser_1.detect();
      if (result) {
        updatedAgent = updatedAgent.replace("{engine}", result.name);
      }
      if (result === null || result === void 0 ? void 0 : result.version) {
        updatedAgent = updatedAgent.replace("{engine-version}", result.version);
      }
      if (result === null || result === void 0 ? void 0 : result.os) {
        updatedAgent = updatedAgent.replace("{os-info}", result.os);
      }
      if (typeof apiVersion !== "undefined") {
        updatedAgent = updatedAgent.replace("{api-version}", apiVersion);
      }
      if (typeof detail !== "undefined") {
        assertUserAgentDetail(detail);
        updatedAgent = updatedAgent.replace("{detail}", encodeURIComponent(detail));
      }
      return updatedAgent;
    }
    exports.updateUserAgent = updateUserAgent;
    function assertUserAgentDetail(detail) {
      if (detail.length > 128) {
        throw new Error("userAgentDetail length exceeds 128 characters limit");
      }
    }
    function updateErrorMessage(message, response2) {
      var placeholders = message.match(/\{\$.*?\}/g);
      var statusCodePlaceholder = placeholders === null || placeholders === void 0 ? void 0 : placeholders.includes("{$statusCode}");
      var headerPlaceholders = placeholders === null || placeholders === void 0 ? void 0 : placeholders.filter(function(value) {
        return value.startsWith("{$response.header");
      });
      var bodyPlaceholders = placeholders === null || placeholders === void 0 ? void 0 : placeholders.filter(function(value) {
        return value.startsWith("{$response.body");
      });
      message = replaceStatusCodePlaceholder(message, response2.statusCode, statusCodePlaceholder);
      message = replaceHeaderPlaceholders(message, response2.headers, headerPlaceholders);
      if (typeof response2.body === "string") {
        message = replaceBodyPlaceholders(message, response2.body, bodyPlaceholders);
      }
      return message;
    }
    exports.updateErrorMessage = updateErrorMessage;
    function replaceStatusCodePlaceholder(message, statusCode, statusCodePlaceholder) {
      if (statusCodePlaceholder) {
        return message.replace("{$statusCode}", statusCode.toString());
      }
      return message;
    }
    function replaceHeaderPlaceholders(message, headers2, headerPlaceholders) {
      if (headerPlaceholders) {
        headerPlaceholders.forEach(function(element) {
          var _a, _b;
          var headerName = (_a = element.split(".").pop()) === null || _a === void 0 ? void 0 : _a.slice(0, -1);
          if (typeof headerName !== "undefined") {
            var value = (_b = http_headers_1.getHeader(headers2, headerName)) !== null && _b !== void 0 ? _b : "";
            message = message.replace(element, value);
          }
        });
      }
      return message;
    }
    function replaceBodyPlaceholders(message, body2, bodyPlaceholders) {
      var parsed = JSON.parse(body2);
      bodyPlaceholders === null || bodyPlaceholders === void 0 ? void 0 : bodyPlaceholders.forEach(function(element) {
        var _a;
        if (element.includes("#")) {
          var _b = tslib_1.__read(element === null || element === void 0 ? void 0 : element.split("#")), rest = _b.slice(1);
          var nodePointer = (_a = rest.join("#")) === null || _a === void 0 ? void 0 : _a.slice(0, -1);
          if (nodePointer) {
            var value = json_ptr_1.JsonPointer.create(nodePointer).get(parsed);
            var replaced_value = typeof value !== "undefined" ? JSON.stringify(value) : "";
            message = message.replace(element, replaced_value);
          }
        } else {
          message = message.replace(element, JSON.stringify(parsed));
        }
      });
      return message;
    }
  }
});

// node_modules/@apimatic/core/lib/coreInterfaces.js
var require_coreInterfaces = __commonJS({
  "node_modules/@apimatic/core/lib/coreInterfaces.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib2(), exports);
  }
});

// node_modules/@apimatic/file-wrapper/lib/fileWrapper.js
var require_fileWrapper = __commonJS({
  "node_modules/@apimatic/file-wrapper/lib/fileWrapper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.cloneFileWrapper = exports.isFileWrapper = exports.FileWrapper = void 0;
    var tslib_1 = require_tslib();
    var FileWrapper = function() {
      function FileWrapper2(file2, options2) {
        this.file = file2;
        this.options = options2;
        this.file = file2;
      }
      return FileWrapper2;
    }();
    exports.FileWrapper = FileWrapper;
    function isFileWrapper(value) {
      return value instanceof FileWrapper;
    }
    exports.isFileWrapper = isFileWrapper;
    function cloneFileWrapper(fileWrapper) {
      var options2;
      if (fileWrapper.options) {
        options2 = cloneFileWrapperOptions(fileWrapper.options);
      }
      return new FileWrapper(fileWrapper.file, options2);
    }
    exports.cloneFileWrapper = cloneFileWrapper;
    function cloneFileWrapperOptions(fileWrapperOptions) {
      var clone = tslib_1.__assign({}, fileWrapperOptions);
      if (fileWrapperOptions.headers) {
        clone.headers = tslib_1.__assign({}, fileWrapperOptions.headers);
      }
      return clone;
    }
  }
});

// node_modules/@apimatic/file-wrapper/lib/index.js
var require_lib5 = __commonJS({
  "node_modules/@apimatic/file-wrapper/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_fileWrapper(), exports);
  }
});

// node_modules/@apimatic/core/lib/fileWrapper.js
var require_fileWrapper2 = __commonJS({
  "node_modules/@apimatic/core/lib/fileWrapper.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib5(), exports);
  }
});

// node_modules/@apimatic/core/lib/errors/abortError.js
var require_abortError = __commonJS({
  "node_modules/@apimatic/core/lib/errors/abortError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AbortError = void 0;
    var tslib_1 = require_tslib();
    var AbortError = function(_super) {
      tslib_1.__extends(AbortError2, _super);
      function AbortError2(message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        return _this;
      }
      return AbortError2;
    }(Error);
    exports.AbortError = AbortError;
  }
});

// node_modules/@apimatic/core/lib/errors/argumentsValidationError.js
var require_argumentsValidationError = __commonJS({
  "node_modules/@apimatic/core/lib/errors/argumentsValidationError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ArgumentsValidationError = void 0;
    var tslib_1 = require_tslib();
    var ArgumentsValidationError = function(_super) {
      tslib_1.__extends(ArgumentsValidationError2, _super);
      function ArgumentsValidationError2(errors2) {
        var e_1, _a;
        var _newTarget = this.constructor;
        var _this = this;
        var errorKeys = Object.keys(errors2);
        var message;
        if (errorKeys.length === 0) {
          message = "One or more arguments failed validation.";
        } else if (errorKeys.length === 1 && errors2[errorKeys[0]].length === 1) {
          message = "Argument for '" + errorKeys[0] + "' failed validation.\n\n" + errors2[errorKeys[0]][0].message;
        } else {
          message = "The following arguments failed validation: " + errorKeys.join(", ") + ".\n\n";
          var msgList = [];
          try {
            for (var errorKeys_1 = tslib_1.__values(errorKeys), errorKeys_1_1 = errorKeys_1.next(); !errorKeys_1_1.done; errorKeys_1_1 = errorKeys_1.next()) {
              var param = errorKeys_1_1.value;
              msgList.push("> For argument '" + param + "':");
              if (errors2[param].length === 1) {
                msgList.push(errors2[param][0].message);
              } else {
                for (var index5 = 0; index5 < errors2[param].length; index5++) {
                  var error2 = errors2[param][index5];
                  msgList.push(">> Issue #" + (index5 + 1) + "\n\n" + error2.message);
                }
              }
            }
          } catch (e_1_1) {
            e_1 = { error: e_1_1 };
          } finally {
            try {
              if (errorKeys_1_1 && !errorKeys_1_1.done && (_a = errorKeys_1.return))
                _a.call(errorKeys_1);
            } finally {
              if (e_1)
                throw e_1.error;
            }
          }
          message += msgList.join("\n\n");
        }
        _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.errors = errors2;
        return _this;
      }
      return ArgumentsValidationError2;
    }(Error);
    exports.ArgumentsValidationError = ArgumentsValidationError;
  }
});

// node_modules/@apimatic/core/lib/errors/responseValidationError.js
var require_responseValidationError = __commonJS({
  "node_modules/@apimatic/core/lib/errors/responseValidationError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ResponseValidationError = void 0;
    var tslib_1 = require_tslib();
    var ResponseValidationError = function(_super) {
      tslib_1.__extends(ResponseValidationError2, _super);
      function ResponseValidationError2(apiResponse, errors2) {
        var _newTarget = this.constructor;
        var _this = this;
        var message = "The response did not match the response schema.";
        if (errors2.length === 1) {
          message += "\n\n" + errors2[0].message;
        } else {
          message += errors2.map(function(e, i) {
            return "\n\n> Issue #" + (i + 1) + "\n\n" + e.message;
          }).join("");
        }
        _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        _this.request = apiResponse.request;
        _this.statusCode = apiResponse.statusCode;
        _this.headers = apiResponse.headers;
        _this.body = apiResponse.body;
        _this.errors = errors2;
        return _this;
      }
      return ResponseValidationError2;
    }(Error);
    exports.ResponseValidationError = ResponseValidationError;
  }
});

// node_modules/@apimatic/core/lib/errors/apiError.js
var require_apiError2 = __commonJS({
  "node_modules/@apimatic/core/lib/errors/apiError.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ApiError = void 0;
    var tslib_1 = require_tslib();
    var json_bigint_1 = tslib_1.__importDefault(require_json_bigint());
    var ApiError = function(_super) {
      tslib_1.__extends(ApiError2, _super);
      function ApiError2(context, message) {
        var _newTarget = this.constructor;
        var _this = _super.call(this, message) || this;
        Object.setPrototypeOf(_this, _newTarget.prototype);
        var request2 = context.request, response2 = context.response;
        _this.request = request2;
        _this.statusCode = response2.statusCode;
        _this.headers = response2.headers;
        _this.body = response2.body;
        if (typeof response2.body === "string" && response2.body !== "") {
          var JSON_1 = json_bigint_1.default();
          try {
            _this.result = JSON_1.parse(response2.body);
          } catch (error2) {
            if (process.env.NODE_ENV !== "production") {
              if (console) {
                console.warn("Unexpected error: Could not parse HTTP response body as JSON. " + error2.message);
              }
            }
          }
        }
        return _this;
      }
      return ApiError2;
    }(Error);
    exports.ApiError = ApiError;
  }
});

// node_modules/@apimatic/core/lib/http/httpHeaders.js
var require_httpHeaders2 = __commonJS({
  "node_modules/@apimatic/core/lib/http/httpHeaders.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib3(), exports);
  }
});

// node_modules/@apimatic/core/lib/http/httpInterceptor.js
var require_httpInterceptor2 = __commonJS({
  "node_modules/@apimatic/core/lib/http/httpInterceptor.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.callHttpInterceptors = void 0;
    function callHttpInterceptors(interceptors, client3) {
      var next = client3;
      var _loop_1 = function(index6) {
        var current = interceptors[index6];
        var last = next;
        next = function(request2, options2) {
          return current(request2, options2, last);
        };
      };
      for (var index5 = interceptors.length - 1; index5 >= 0; index5--) {
        _loop_1(index5);
      }
      return next;
    }
    exports.callHttpInterceptors = callHttpInterceptors;
  }
});

// node_modules/@apimatic/core/lib/schema.js
var require_schema3 = __commonJS({
  "node_modules/@apimatic/core/lib/schema.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib(), exports);
  }
});

// node_modules/lodash.flatmap/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.flatmap/index.js"(exports, module2) {
    var LARGE_ARRAY_SIZE = 200;
    var FUNC_ERROR_TEXT = "Expected a function";
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var UNORDERED_COMPARE_FLAG = 1;
    var PARTIAL_COMPARE_FLAG = 2;
    var INFINITY = 1 / 0;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    var reLeadingDot = /^\./;
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reEscapeChar = /\\(\\)?/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module2 == "object" && module2 && !module2.nodeType && module2;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil2 = function() {
      try {
        return freeProcess && freeProcess.binding("util");
      } catch (e) {
      }
    }();
    var nodeIsTypedArray = nodeUtil2 && nodeUtil2.isTypedArray;
    function arrayMap(array2, iteratee) {
      var index5 = -1, length = array2 ? array2.length : 0, result = Array(length);
      while (++index5 < length) {
        result[index5] = iteratee(array2[index5], index5, array2);
      }
      return result;
    }
    function arrayPush(array2, values) {
      var index5 = -1, length = values.length, offset = array2.length;
      while (++index5 < length) {
        array2[offset + index5] = values[index5];
      }
      return array2;
    }
    function arraySome(array2, predicate) {
      var index5 = -1, length = array2 ? array2.length : 0;
      while (++index5 < length) {
        if (predicate(array2[index5], index5, array2)) {
          return true;
        }
      }
      return false;
    }
    function baseProperty(key2) {
      return function(object) {
        return object == null ? void 0 : object[key2];
      };
    }
    function baseTimes(n, iteratee) {
      var index5 = -1, result = Array(n);
      while (++index5 < n) {
        result[index5] = iteratee(index5);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function getValue(object, key2) {
      return object == null ? void 0 : object[key2];
    }
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    function mapToArray(map2) {
      var index5 = -1, result = Array(map2.size);
      map2.forEach(function(value, key2) {
        result[++index5] = [key2, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set) {
      var index5 = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index5] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var spreadableSymbol = Symbol2 ? Symbol2.isConcatSpreadable : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function Hash(entries) {
      var index5 = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index5 < length) {
        var entry = entries[index5];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
    }
    function hashDelete(key2) {
      return this.has(key2) && delete this.__data__[key2];
    }
    function hashGet(key2) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key2];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key2) ? data[key2] : void 0;
    }
    function hashHas(key2) {
      var data = this.__data__;
      return nativeCreate ? data[key2] !== void 0 : hasOwnProperty.call(data, key2);
    }
    function hashSet(key2, value) {
      var data = this.__data__;
      data[key2] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index5 = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index5 < length) {
        var entry = entries[index5];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
    }
    function listCacheDelete(key2) {
      var data = this.__data__, index5 = assocIndexOf(data, key2);
      if (index5 < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index5 == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index5, 1);
      }
      return true;
    }
    function listCacheGet(key2) {
      var data = this.__data__, index5 = assocIndexOf(data, key2);
      return index5 < 0 ? void 0 : data[index5][1];
    }
    function listCacheHas(key2) {
      return assocIndexOf(this.__data__, key2) > -1;
    }
    function listCacheSet(key2, value) {
      var data = this.__data__, index5 = assocIndexOf(data, key2);
      if (index5 < 0) {
        data.push([key2, value]);
      } else {
        data[index5][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index5 = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index5 < length) {
        var entry = entries[index5];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key2) {
      return getMapData(this, key2)["delete"](key2);
    }
    function mapCacheGet(key2) {
      return getMapData(this, key2).get(key2);
    }
    function mapCacheHas(key2) {
      return getMapData(this, key2).has(key2);
    }
    function mapCacheSet(key2, value) {
      getMapData(this, key2).set(key2, value);
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index5 = -1, length = values ? values.length : 0;
      this.__data__ = new MapCache();
      while (++index5 < length) {
        this.add(values[index5]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      this.__data__ = new ListCache(entries);
    }
    function stackClear() {
      this.__data__ = new ListCache();
    }
    function stackDelete(key2) {
      return this.__data__["delete"](key2);
    }
    function stackGet(key2) {
      return this.__data__.get(key2);
    }
    function stackHas(key2) {
      return this.__data__.has(key2);
    }
    function stackSet(key2, value) {
      var cache = this.__data__;
      if (cache instanceof ListCache) {
        var pairs = cache.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key2, value]);
          return this;
        }
        cache = this.__data__ = new MapCache(pairs);
      }
      cache.set(key2, value);
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];
      var length = result.length, skipIndexes = !!length;
      for (var key2 in value) {
        if ((inherited || hasOwnProperty.call(value, key2)) && !(skipIndexes && (key2 == "length" || isIndex(key2, length)))) {
          result.push(key2);
        }
      }
      return result;
    }
    function assocIndexOf(array2, key2) {
      var length = array2.length;
      while (length--) {
        if (eq(array2[length][0], key2)) {
          return length;
        }
      }
      return -1;
    }
    var baseEach = createBaseEach(baseForOwn);
    function baseFlatten(array2, depth, predicate, isStrict, result) {
      var index5 = -1, length = array2.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index5 < length) {
        var value = array2[index5];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    var baseFor = createBaseFor();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    function baseGet(object, path) {
      path = isKey(path, object) ? [path] : castPath(path);
      var index5 = 0, length = path.length;
      while (object != null && index5 < length) {
        object = object[toKey(path[index5++])];
      }
      return index5 && index5 == length ? object : void 0;
    }
    function baseGetTag(value) {
      return objectToString.call(value);
    }
    function baseHasIn(object, key2) {
      return object != null && key2 in Object(object);
    }
    function baseIsEqual(value, other, customizer, bitmask, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObject2(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
    }
    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = arrayTag, othTag = arrayTag;
      if (!objIsArr) {
        objTag = getTag(object);
        objTag = objTag == argsTag ? objectTag : objTag;
      }
      if (!othIsArr) {
        othTag = getTag(other);
        othTag = othTag == argsTag ? objectTag : othTag;
      }
      var objIsObj = objTag == objectTag && !isHostObject(object), othIsObj = othTag == objectTag && !isHostObject(other), isSameTag = objTag == othTag;
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, equalFunc, customizer, bitmask, stack) : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);
      }
      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);
    }
    function baseIsMatch(object, source, matchData, customizer) {
      var index5 = matchData.length, length = index5, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index5--) {
        var data = matchData[index5];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index5 < length) {
        data = matchData[index5];
        var key2 = data[0], objValue = object[key2], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key2 in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key2, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    function baseIsNative(value) {
      if (!isObject2(value) || isMasked(value)) {
        return false;
      }
      var pattern2 = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
      return pattern2.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
    }
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key2 in Object(object)) {
        if (hasOwnProperty.call(object, key2) && key2 != "constructor") {
          result.push(key2);
        }
      }
      return result;
    }
    function baseMap(collection, iteratee) {
      var index5 = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key2, collection2) {
        result[++index5] = iteratee(value, key2, collection2);
      });
      return result;
    }
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, void 0, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
      };
    }
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function castPath(value) {
      return isArray(value) ? value : stringToPath(value);
    }
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index5 = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index5-- : ++index5 < length) {
          if (iteratee(iterable[index5], index5, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index5 = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key2 = props[fromRight ? length : ++index5];
          if (iteratee(iterable[key2], key2, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    function equalArrays(array2, other, equalFunc, customizer, bitmask, stack) {
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG, arrLength = array2.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array2);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index5 = -1, result = true, seen = bitmask & UNORDERED_COMPARE_FLAG ? new SetCache() : void 0;
      stack.set(array2, other);
      stack.set(other, array2);
      while (++index5 < arrLength) {
        var arrValue = array2[index5], othValue = other[index5];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index5, other, array2, stack) : customizer(arrValue, othValue, index5, array2, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!seen.has(othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, customizer, bitmask, stack))) {
              return seen.add(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array2);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= UNORDERED_COMPARE_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {
      var isPartial = bitmask & PARTIAL_COMPARE_FLAG, objProps = keys(object), objLength = objProps.length, othProps = keys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index5 = objLength;
      while (index5--) {
        var key2 = objProps[index5];
        if (!(isPartial ? key2 in other : hasOwnProperty.call(other, key2))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index5 < objLength) {
        key2 = objProps[index5];
        var objValue = object[key2], othValue = other[key2];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key2, other, object, stack) : customizer(objValue, othValue, key2, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key2 == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getMapData(map2, key2) {
      var data = map2.__data__;
      return isKeyable(key2) ? data[typeof key2 == "string" ? "string" : "hash"] : data.map;
    }
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key2 = result[length], value = object[key2];
        result[length] = [key2, value, isStrictComparable(value)];
      }
      return result;
    }
    function getNative(object, key2) {
      var value = getValue(object, key2);
      return baseIsNative(value) ? value : void 0;
    }
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = objectToString.call(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : void 0;
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function hasPath(object, path, hasFunc) {
      path = isKey(path, object) ? [path] : castPath(path);
      var result, index5 = -1, length = path.length;
      while (++index5 < length) {
        var key2 = toKey(path[index5]);
        if (!(result = object != null && hasFunc(object, key2))) {
          break;
        }
        object = object[key2];
      }
      if (result) {
        return result;
      }
      var length = object ? object.length : 0;
      return !!length && isLength(length) && isIndex(key2, length) && (isArray(object) || isArguments(object));
    }
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    function isIndex(value, length) {
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function isStrictComparable(value) {
      return value === value && !isObject2(value);
    }
    function matchesStrictComparable(key2, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key2] === srcValue && (srcValue !== void 0 || key2 in Object(object));
      };
    }
    var stringToPath = memoize(function(string) {
      string = toString(string);
      var result = [];
      if (reLeadingDot.test(string)) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, string2) {
        result.push(quote ? string2.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, baseIteratee(iteratee, 3));
    }
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key2 = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key2)) {
          return cache.get(key2);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key2, result);
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    function isArguments(value) {
      return isArrayLikeObject(value) && hasOwnProperty.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
    }
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    function isFunction(value) {
      var tag = isObject2(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject2(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function identity(value) {
      return value;
    }
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module2.exports = flatMap;
  }
});

// node_modules/@apimatic/core/lib/http/pathTemplate.js
var require_pathTemplate = __commonJS({
  "node_modules/@apimatic/core/lib/http/pathTemplate.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pathTemplate = exports.SkipEncode = void 0;
    var tslib_1 = require_tslib();
    var lodash_flatmap_1 = tslib_1.__importDefault(require_lodash());
    var SkipEncode = function() {
      function SkipEncode2(value) {
        this.value = value;
      }
      return SkipEncode2;
    }();
    exports.SkipEncode = SkipEncode;
    function pathTemplate(strings) {
      var args = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        args[_i - 1] = arguments[_i];
      }
      var values = lodash_flatmap_1.default(interweaveArrays(strings.map(function(s2) {
        return new SkipEncode(s2);
      }), args), encodePathTemplateSegment);
      var pathSegment = values.join("");
      return pathSegment;
    }
    exports.pathTemplate = pathTemplate;
    function encodePathTemplateSegment(value) {
      var skipEncode = false;
      var encode2 = function(m) {
        var encodeParameter = "";
        if (typeof m === "string" || typeof m === "number" || typeof m === "bigint") {
          encodeParameter = skipEncode || typeof m === "bigint" ? m.toString() : encodeURIComponent(m);
        }
        return encodeParameter;
      };
      if (value instanceof SkipEncode) {
        value = value.value;
        skipEncode = true;
      }
      return Array.isArray(value) ? value.map(encode2).join("/") : [encode2(value)];
    }
    function interweaveArrays(a, b) {
      var min = Math.min(a.length, b.length);
      return Array.apply(null, new Array(min)).reduce(function(result, _, index5) {
        result.push(a[index5], b[index5]);
        return result;
      }, []).concat((a.length > min ? a : b).slice(min));
    }
  }
});

// node_modules/@apimatic/http-query/lib/queryString.js
var require_queryString = __commonJS({
  "node_modules/@apimatic/http-query/lib/queryString.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.urlEncodeKeyValuePairs = exports.urlEncodeObject = exports.filterFileWrapperFromKeyValuePairs = exports.formDataEncodeObject = exports.pipePrefix = exports.commaPrefix = exports.tabPrefix = exports.plainPrefix = exports.unindexedPrefix = exports.indexedPrefix = exports.objectArrayEncoding = exports.objectEncoding = void 0;
    var tslib_1 = require_tslib();
    var file_wrapper_1 = require_lib5();
    function objectEncoding(key2, iter, value, prefixFormat) {
      var _a;
      return formDataEncodeObject((_a = {}, _a[key2 + "[" + iter + "]"] = value, _a), prefixFormat);
    }
    exports.objectEncoding = objectEncoding;
    function objectArrayEncoding(key2, value, prefixFormat, result) {
      for (var iter = 0; iter < value.length; iter += 1) {
        result.push.apply(result, tslib_1.__spreadArray([], tslib_1.__read(objectEncoding(key2, iter, value[iter], prefixFormat))));
      }
    }
    exports.objectArrayEncoding = objectArrayEncoding;
    var indexedPrefix = function(key2, value, result) {
      for (var iter = 0; iter < value.length; iter += 1) {
        result.push.apply(result, tslib_1.__spreadArray([], tslib_1.__read(objectEncoding(key2, iter, value[iter], exports.indexedPrefix))));
      }
    };
    exports.indexedPrefix = indexedPrefix;
    var unindexedPrefix = function(key2, value, result) {
      var e_1, _a, _b;
      if (value.some(function(val2) {
        return typeof val2 === "object";
      })) {
        objectArrayEncoding(key2, value, exports.unindexedPrefix, result);
      } else {
        try {
          for (var value_1 = tslib_1.__values(value), value_1_1 = value_1.next(); !value_1_1.done; value_1_1 = value_1.next()) {
            var val = value_1_1.value;
            result.push.apply(result, tslib_1.__spreadArray([], tslib_1.__read(formDataEncodeObject((_b = {}, _b[key2 + "[]"] = val, _b), exports.unindexedPrefix))));
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (value_1_1 && !value_1_1.done && (_a = value_1.return))
              _a.call(value_1);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
      }
    };
    exports.unindexedPrefix = unindexedPrefix;
    var plainPrefix = function(key2, value, result) {
      var e_2, _a, _b;
      if (value.some(function(val2) {
        return typeof val2 === "object";
      })) {
        objectArrayEncoding(key2, value, exports.plainPrefix, result);
      } else {
        try {
          for (var value_2 = tslib_1.__values(value), value_2_1 = value_2.next(); !value_2_1.done; value_2_1 = value_2.next()) {
            var val = value_2_1.value;
            result.push.apply(result, tslib_1.__spreadArray([], tslib_1.__read(formDataEncodeObject((_b = {}, _b[key2] = val, _b), exports.plainPrefix))));
          }
        } catch (e_2_1) {
          e_2 = { error: e_2_1 };
        } finally {
          try {
            if (value_2_1 && !value_2_1.done && (_a = value_2.return))
              _a.call(value_2);
          } finally {
            if (e_2)
              throw e_2.error;
          }
        }
      }
    };
    exports.plainPrefix = plainPrefix;
    var tabPrefix = function(key2, value, result) {
      if (value.some(function(val) {
        return typeof val === "object";
      })) {
        objectArrayEncoding(key2, value, exports.tabPrefix, result);
      } else {
        var prefixedArray = value.map(function(element) {
          return element.toString();
        }).join("	");
        result.push.apply(result, [{ key: key2, value: prefixedArray }]);
      }
    };
    exports.tabPrefix = tabPrefix;
    var commaPrefix = function(key2, value, result) {
      if (value.some(function(val) {
        return typeof val === "object";
      })) {
        objectArrayEncoding(key2, value, exports.commaPrefix, result);
      } else {
        var prefixedArray = value.map(function(element) {
          return element.toString();
        }).join(",");
        result.push.apply(result, [{ key: key2, value: prefixedArray }]);
      }
    };
    exports.commaPrefix = commaPrefix;
    var pipePrefix = function(key2, value, result) {
      if (value.some(function(val) {
        return typeof val === "object";
      })) {
        objectArrayEncoding(key2, value, exports.pipePrefix, result);
      } else {
        var prefixedArray = value.map(function(element) {
          return element.toString();
        }).join("|");
        result.push.apply(result, [{ key: key2, value: prefixedArray }]);
      }
    };
    exports.pipePrefix = pipePrefix;
    function formDataEncodeObject(obj, prefixFormat) {
      var e_3, _a, _b;
      if (prefixFormat === void 0) {
        prefixFormat = exports.indexedPrefix;
      }
      var result = [];
      try {
        for (var _c = tslib_1.__values(Object.keys(obj)), _d = _c.next(); !_d.done; _d = _c.next()) {
          var key2 = _d.value;
          var value = obj[key2];
          if (value === null || value === void 0) {
            continue;
          } else if (typeof value === "string" || typeof value === "number" || typeof value === "boolean" || typeof value === "bigint") {
            result.push({ key: key2, value: value.toString() });
          } else if (file_wrapper_1.isFileWrapper(value)) {
            result.push({ key: key2, value: file_wrapper_1.cloneFileWrapper(value) });
          } else if (Array.isArray(value)) {
            prefixFormat(key2, value, result);
          } else if (typeof value === "object") {
            for (var objectKey in value) {
              if (Object.prototype.hasOwnProperty.call(value, objectKey)) {
                var element = value[objectKey];
                result.push.apply(result, tslib_1.__spreadArray([], tslib_1.__read(formDataEncodeObject((_b = {}, _b[key2 + "[" + objectKey + "]"] = element, _b), prefixFormat))));
              }
            }
          }
        }
      } catch (e_3_1) {
        e_3 = { error: e_3_1 };
      } finally {
        try {
          if (_d && !_d.done && (_a = _c.return))
            _a.call(_c);
        } finally {
          if (e_3)
            throw e_3.error;
        }
      }
      return result;
    }
    exports.formDataEncodeObject = formDataEncodeObject;
    function filterFileWrapperFromKeyValuePairs(params) {
      return params.filter(function(p) {
        return !file_wrapper_1.isFileWrapper(p.value);
      });
    }
    exports.filterFileWrapperFromKeyValuePairs = filterFileWrapperFromKeyValuePairs;
    function urlEncodeObject(obj, prefixFormat) {
      var params = formDataEncodeObject(obj, prefixFormat);
      return urlEncodeKeyValuePairs(params);
    }
    exports.urlEncodeObject = urlEncodeObject;
    function urlEncodeKeyValuePairs(params) {
      var encode2 = encodeURIComponent;
      return params.map(function(p) {
        return encode2(p.key) + "=" + encode2(p.value.toString());
      }).join("&");
    }
    exports.urlEncodeKeyValuePairs = urlEncodeKeyValuePairs;
  }
});

// node_modules/@apimatic/http-query/lib/index.js
var require_lib6 = __commonJS({
  "node_modules/@apimatic/http-query/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_queryString(), exports);
  }
});

// node_modules/@apimatic/core/lib/http/queryString.js
var require_queryString2 = __commonJS({
  "node_modules/@apimatic/core/lib/http/queryString.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib6(), exports);
  }
});

// node_modules/@apimatic/core/lib/http/validate.js
var require_validate = __commonJS({
  "node_modules/@apimatic/core/lib/http/validate.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.prepareArgs = void 0;
    var schema_1 = require_schema3();
    var argumentsValidationError_1 = require_argumentsValidationError();
    function prepareArgs(params) {
      var validationErrors = {};
      var result = {};
      for (var paramName in params) {
        if (Object.prototype.hasOwnProperty.call(params, paramName)) {
          var paramInfo = params[paramName];
          var validationResult = schema_1.validateAndUnmap(paramInfo[0], paramInfo[1]);
          if (validationResult.errors) {
            validationErrors[paramName] = validationResult.errors;
          } else {
            result[paramName] = validationResult.result;
          }
        }
      }
      if (Object.keys(validationErrors).length > 0) {
        throw new argumentsValidationError_1.ArgumentsValidationError(validationErrors);
      }
      return result;
    }
    exports.prepareArgs = prepareArgs;
  }
});

// node_modules/@apimatic/core/lib/http/retryConfiguration.js
var require_retryConfiguration2 = __commonJS({
  "node_modules/@apimatic/core/lib/http/retryConfiguration.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.shouldRetryRequest = exports.getRetryWaitTime = exports.RequestRetryOption = void 0;
    var httpHeaders_1 = require_httpHeaders2();
    var RequestRetryOption;
    (function(RequestRetryOption2) {
      RequestRetryOption2[RequestRetryOption2["Enable"] = 0] = "Enable";
      RequestRetryOption2[RequestRetryOption2["Disable"] = 1] = "Disable";
      RequestRetryOption2[RequestRetryOption2["Default"] = 2] = "Default";
    })(RequestRetryOption = exports.RequestRetryOption || (exports.RequestRetryOption = {}));
    function getRetryWaitTime(retryConfig, allowedWaitTime, retryCount, httpCode, headers2, timeoutError) {
      var retryWaitTime = 0;
      var retry = false;
      var retryAfter = 0;
      if (retryCount < retryConfig.maxNumberOfRetries) {
        if (timeoutError) {
          retry = retryConfig.retryOnTimeout;
        } else if (typeof headers2 !== "undefined" && typeof httpCode !== "undefined") {
          retryAfter = getRetryAfterSeconds(httpHeaders_1.getHeader(headers2, "retry-after"));
          retry = retryAfter > 0 || retryConfig.httpStatusCodesToRetry.includes(httpCode);
        }
        if (retry) {
          var noise = +(Math.random() / 100).toFixed(3);
          var waitTime = retryConfig.retryInterval * Math.pow(retryConfig.backoffFactor, retryCount) + noise;
          waitTime = Math.max(waitTime, retryAfter);
          if (waitTime <= allowedWaitTime) {
            retryWaitTime = waitTime;
          }
        }
      }
      return retryWaitTime;
    }
    exports.getRetryWaitTime = getRetryWaitTime;
    function getRetryAfterSeconds(retryAfter) {
      if (retryAfter == null) {
        return 0;
      }
      if (isNaN(+retryAfter)) {
        var timeDifference = (new Date(retryAfter).getTime() - Date.now()) / 1e3;
        return isNaN(timeDifference) ? 0 : timeDifference;
      }
      return +retryAfter;
    }
    function shouldRetryRequest(retryOption, retryConfig, httpMethod) {
      switch (retryOption) {
        case RequestRetryOption.Default:
          return retryConfig !== void 0 && httpMethod !== void 0 ? retryConfig.httpMethodsToRetry.includes(httpMethod) : false;
        case RequestRetryOption.Enable:
          return true;
        case RequestRetryOption.Disable:
          return false;
      }
    }
    exports.shouldRetryRequest = shouldRetryRequest;
  }
});

// node_modules/@apimatic/core/node_modules/@apimatic/convert-to-stream/lib/convertToStream.js
var require_convertToStream = __commonJS({
  "node_modules/@apimatic/core/node_modules/@apimatic/convert-to-stream/lib/convertToStream.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertToStream = void 0;
    function convertToStream(content) {
      if (typeof content !== "string") {
        return content;
      }
      var rs = new (require("stream")).Readable();
      rs._read = function() {
      };
      rs.push(content);
      rs.push(null);
      return rs;
    }
    exports.convertToStream = convertToStream;
  }
});

// node_modules/@apimatic/core/node_modules/@apimatic/convert-to-stream/lib/index.js
var require_lib7 = __commonJS({
  "node_modules/@apimatic/core/node_modules/@apimatic/convert-to-stream/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_convertToStream(), exports);
  }
});

// node_modules/@apimatic/core/lib/xml/xmlSerializer.js
var require_xmlSerializer = __commonJS({
  "node_modules/@apimatic/core/lib/xml/xmlSerializer.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.XmlSerialization = void 0;
    var XmlSerialization = function() {
      function XmlSerialization2() {
      }
      XmlSerialization2.prototype.xmlSerialize = function(_rootName, _value) {
        throw new Error("XML serialization is not available.");
      };
      XmlSerialization2.prototype.xmlDeserialize = function(_rootName, _xmlString) {
        throw new Error("XML deserialization is not available.");
      };
      return XmlSerialization2;
    }();
    exports.XmlSerialization = XmlSerialization;
  }
});

// node_modules/@apimatic/core/lib/http/requestBuilder.js
var require_requestBuilder = __commonJS({
  "node_modules/@apimatic/core/lib/http/requestBuilder.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createRequestBuilderFactory = exports.DefaultRequestBuilder = exports.skipEncode = void 0;
    var tslib_1 = require_tslib();
    var json_bigint_1 = tslib_1.__importDefault(require_json_bigint());
    var apiHelper_1 = require_apiHelper();
    var argumentsValidationError_1 = require_argumentsValidationError();
    var responseValidationError_1 = require_responseValidationError();
    var schema_1 = require_schema3();
    var httpHeaders_1 = require_httpHeaders2();
    var httpInterceptor_1 = require_httpInterceptor2();
    var pathTemplate_1 = require_pathTemplate();
    var queryString_1 = require_queryString2();
    var validate_1 = require_validate();
    var retryConfiguration_1 = require_retryConfiguration2();
    var convert_to_stream_1 = require_lib7();
    var xmlSerializer_1 = require_xmlSerializer();
    var JSON2 = json_bigint_1.default();
    function skipEncode(value) {
      return new pathTemplate_1.SkipEncode(value);
    }
    exports.skipEncode = skipEncode;
    var DefaultRequestBuilder = function() {
      function DefaultRequestBuilder2(_httpClient, _baseUrlProvider, _apiErrorCtr, _authenticationProvider, _httpMethod, _xmlSerializer, _retryConfig, _path) {
        this._httpClient = _httpClient;
        this._baseUrlProvider = _baseUrlProvider;
        this._apiErrorCtr = _apiErrorCtr;
        this._authenticationProvider = _authenticationProvider;
        this._httpMethod = _httpMethod;
        this._xmlSerializer = _xmlSerializer;
        this._retryConfig = _retryConfig;
        this._path = _path;
        this._headers = {};
        this._query = [];
        this._interceptors = [];
        this._validateResponse = true;
        this._apiErrorFactory = { apiErrorCtor: _apiErrorCtr };
        this._addResponseValidator();
        this._addAuthentication();
        this._addRetryInterceptor();
        this._retryOption = retryConfiguration_1.RequestRetryOption.Default;
        this.prepareArgs = validate_1.prepareArgs.bind(this);
      }
      DefaultRequestBuilder2.prototype.authenticate = function(params) {
        this._authParams = params;
      };
      DefaultRequestBuilder2.prototype.requestRetryOption = function(option) {
        this._retryOption = option;
      };
      DefaultRequestBuilder2.prototype.deprecated = function(methodName, message) {
        apiHelper_1.deprecated(methodName, message);
      };
      DefaultRequestBuilder2.prototype.appendTemplatePath = function(strings) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
          args[_i - 1] = arguments[_i];
        }
        var pathSegment = pathTemplate_1.pathTemplate.apply(void 0, tslib_1.__spreadArray([strings], tslib_1.__read(args)));
        this.appendPath(pathSegment);
      };
      DefaultRequestBuilder2.prototype.method = function(httpMethodName) {
        this._httpMethod = httpMethodName;
      };
      DefaultRequestBuilder2.prototype.baseUrl = function(arg) {
        this._baseUrlArg = arg;
      };
      DefaultRequestBuilder2.prototype.appendPath = function(path) {
        this._path = this._path ? mergePath(this._path, path) : path;
      };
      DefaultRequestBuilder2.prototype.acceptJson = function() {
        this._accept = httpHeaders_1.JSON_CONTENT_TYPE;
      };
      DefaultRequestBuilder2.prototype.accept = function(acceptHeaderValue) {
        this._accept = acceptHeaderValue;
      };
      DefaultRequestBuilder2.prototype.contentType = function(contentTypeHeaderValue) {
        this._contentType = contentTypeHeaderValue;
      };
      DefaultRequestBuilder2.prototype.header = function(name, value) {
        if (value === void 0) {
          return;
        }
        httpHeaders_1.setHeader(this._headers, name, value.toString());
      };
      DefaultRequestBuilder2.prototype.headers = function(headersToMerge) {
        httpHeaders_1.mergeHeaders(this._headers, headersToMerge);
      };
      DefaultRequestBuilder2.prototype.query = function(nameOrParameters, value, prefixFormat) {
        var _a;
        if (nameOrParameters === null || nameOrParameters === void 0) {
          return;
        }
        var queryString = typeof nameOrParameters === "string" ? queryString_1.urlEncodeObject((_a = {}, _a[nameOrParameters] = value, _a), prefixFormat) : queryString_1.urlEncodeObject(nameOrParameters, prefixFormat);
        if (queryString) {
          this._query.push(queryString);
        }
      };
      DefaultRequestBuilder2.prototype.text = function(body2) {
        this._body = body2;
        this._setContentTypeIfNotSet(httpHeaders_1.TEXT_CONTENT_TYPE);
      };
      DefaultRequestBuilder2.prototype.json = function(data) {
        this._body = JSON2.stringify(data);
        this._setContentTypeIfNotSet(httpHeaders_1.JSON_CONTENT_TYPE);
      };
      DefaultRequestBuilder2.prototype.xml = function(argName, data, rootName, schema) {
        var _a;
        var mappingResult = schema_1.validateAndUnmapXml(data, schema);
        if (mappingResult.errors) {
          throw new argumentsValidationError_1.ArgumentsValidationError((_a = {}, _a[argName] = mappingResult.errors, _a));
        }
        this._body = this._xmlSerializer.xmlSerialize(rootName, mappingResult.result);
        this._setContentTypeIfNotSet(httpHeaders_1.XML_CONTENT_TYPE);
      };
      DefaultRequestBuilder2.prototype.stream = function(file2) {
        this._stream = file2;
      };
      DefaultRequestBuilder2.prototype.form = function(parameters, prefixFormat) {
        this._form = queryString_1.filterFileWrapperFromKeyValuePairs(queryString_1.formDataEncodeObject(parameters, prefixFormat));
      };
      DefaultRequestBuilder2.prototype.formData = function(parameters, prefixFormat) {
        this._formData = queryString_1.formDataEncodeObject(parameters, prefixFormat);
      };
      DefaultRequestBuilder2.prototype.toRequest = function() {
        var request2 = {
          method: this._httpMethod,
          url: mergePath(this._baseUrlProvider(this._baseUrlArg), this._path)
        };
        if (this._query.length > 0) {
          var queryString = this._query.join("&");
          request2.url += (request2.url.indexOf("?") === -1 ? "?" : "&") + queryString;
        }
        request2.url = apiHelper_1.sanitizeUrl(request2.url);
        var headers2 = tslib_1.__assign({}, this._headers);
        if (this._accept) {
          httpHeaders_1.setHeader(headers2, httpHeaders_1.ACCEPT_HEADER, this._accept);
        }
        if (this._contentType) {
          httpHeaders_1.setHeader(headers2, httpHeaders_1.CONTENT_TYPE_HEADER, this._contentType);
        }
        httpHeaders_1.setHeader(headers2, httpHeaders_1.CONTENT_LENGTH_HEADER);
        request2.headers = headers2;
        if (this._body !== void 0) {
          request2.body = { type: "text", content: this._body };
        } else if (this._form !== void 0) {
          request2.body = { type: "form", content: this._form };
        } else if (this._formData !== void 0) {
          request2.body = { type: "form-data", content: this._formData };
        } else if (this._stream !== void 0) {
          request2.body = { type: "stream", content: this._stream };
        }
        return request2;
      };
      DefaultRequestBuilder2.prototype.intercept = function(interceptor) {
        this._interceptors.push(interceptor);
      };
      DefaultRequestBuilder2.prototype.interceptRequest = function(interceptor) {
        this.intercept(function(req, opt, next) {
          return next(interceptor(req), opt);
        });
      };
      DefaultRequestBuilder2.prototype.interceptResponse = function(interceptor) {
        var _this = this;
        this.intercept(function(req, opt, next) {
          return tslib_1.__awaiter(_this, void 0, void 0, function() {
            var _a;
            return tslib_1.__generator(this, function(_b) {
              switch (_b.label) {
                case 0:
                  _a = interceptor;
                  return [4, next(req, opt)];
                case 1:
                  return [2, _a.apply(void 0, [_b.sent()])];
              }
            });
          });
        });
      };
      DefaultRequestBuilder2.prototype.defaultToError = function(apiErrorCtor, message) {
        this._apiErrorFactory = { apiErrorCtor, message };
      };
      DefaultRequestBuilder2.prototype.validateResponse = function(validate) {
        this._validateResponse = validate;
      };
      DefaultRequestBuilder2.prototype.throwOn = function(statusCode, errorConstructor, isTemplate) {
        var args = [];
        for (var _i = 3; _i < arguments.length; _i++) {
          args[_i - 3] = arguments[_i];
        }
        this.interceptResponse(function(context) {
          var response2 = context.response;
          if (isTemplate && args.length > 0) {
            args[0] = apiHelper_1.updateErrorMessage(args[0], response2);
          }
          if (typeof statusCode === "number" && response2.statusCode === statusCode || typeof statusCode !== "number" && response2.statusCode >= statusCode[0] && response2.statusCode <= statusCode[1]) {
            throw new (errorConstructor.bind.apply(errorConstructor, tslib_1.__spreadArray([void 0, context], tslib_1.__read(args))))();
          }
          return context;
        });
      };
      DefaultRequestBuilder2.prototype.call = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var pipeline2, _a, request2, response2;
          var _this = this;
          return tslib_1.__generator(this, function(_b) {
            switch (_b.label) {
              case 0:
                pipeline2 = httpInterceptor_1.callHttpInterceptors(this._interceptors, function(request3, opt) {
                  return tslib_1.__awaiter(_this, void 0, void 0, function() {
                    var response3;
                    return tslib_1.__generator(this, function(_a2) {
                      switch (_a2.label) {
                        case 0:
                          return [4, this._httpClient(request3, opt)];
                        case 1:
                          response3 = _a2.sent();
                          return [2, { request: request3, response: response3 }];
                      }
                    });
                  });
                });
                return [4, pipeline2(this.toRequest(), requestOptions)];
              case 1:
                _a = _b.sent(), request2 = _a.request, response2 = _a.response;
                return [2, tslib_1.__assign(tslib_1.__assign({}, response2), { request: request2, result: void 0 })];
            }
          });
        });
      };
      DefaultRequestBuilder2.prototype.callAsText = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var result;
          return tslib_1.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, this.call(requestOptions)];
              case 1:
                result = _a.sent();
                if (typeof result.body !== "string") {
                  throw new Error("Could not parse body as string.");
                }
                return [2, tslib_1.__assign(tslib_1.__assign({}, result), { result: result.body })];
            }
          });
        });
      };
      DefaultRequestBuilder2.prototype.callAsOptionalText = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var result;
          return tslib_1.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, this.call(requestOptions)];
              case 1:
                result = _a.sent();
                if (typeof result.body !== "string") {
                  return [2, tslib_1.__assign(tslib_1.__assign({}, result), { result: void 0 })];
                }
                return [2, tslib_1.__assign(tslib_1.__assign({}, result), { result: result.body })];
            }
          });
        });
      };
      DefaultRequestBuilder2.prototype.callAsStream = function(requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var result;
          return tslib_1.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                this.interceptRequest(function(req) {
                  return tslib_1.__assign(tslib_1.__assign({}, req), { responseType: "stream" });
                });
                return [4, this.call(requestOptions)];
              case 1:
                result = _a.sent();
                return [2, tslib_1.__assign(tslib_1.__assign({}, result), { result: convert_to_stream_1.convertToStream(result.body) })];
            }
          });
        });
      };
      DefaultRequestBuilder2.prototype.callAsJson = function(schema, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var result, parsed, mappingResult;
          return tslib_1.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                this.interceptRequest(function(request2) {
                  var headers2 = tslib_1.__assign({}, request2.headers);
                  httpHeaders_1.setHeaderIfNotSet(headers2, httpHeaders_1.ACCEPT_HEADER, httpHeaders_1.JSON_CONTENT_TYPE);
                  return tslib_1.__assign(tslib_1.__assign({}, request2), { headers: headers2 });
                });
                return [4, this.call(requestOptions)];
              case 1:
                result = _a.sent();
                if (result.body === "") {
                  throw new Error("Could not parse body as JSON. The response body is empty.");
                }
                if (typeof result.body !== "string") {
                  throw new Error("Could not parse body as JSON. The response body is not a string.");
                }
                try {
                  parsed = JSON2.parse(result.body);
                } catch (error2) {
                  throw new Error("Could not parse body as JSON.\n\n" + error2.message);
                }
                mappingResult = schema_1.validateAndMap(parsed, schema);
                if (mappingResult.errors) {
                  throw new responseValidationError_1.ResponseValidationError(result, mappingResult.errors);
                }
                return [2, tslib_1.__assign(tslib_1.__assign({}, result), { result: mappingResult.result })];
            }
          });
        });
      };
      DefaultRequestBuilder2.prototype.callAsXml = function(rootName, schema, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var result, xmlObject, error_1, mappingResult;
          return tslib_1.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                this.interceptRequest(function(request2) {
                  var headers2 = tslib_1.__assign({}, request2.headers);
                  httpHeaders_1.setHeaderIfNotSet(headers2, httpHeaders_1.ACCEPT_HEADER, httpHeaders_1.XML_CONTENT_TYPE);
                  return tslib_1.__assign(tslib_1.__assign({}, request2), { headers: headers2 });
                });
                return [4, this.call(requestOptions)];
              case 1:
                result = _a.sent();
                if (result.body === "") {
                  throw new Error("Could not parse body as XML. The response body is empty.");
                }
                if (typeof result.body !== "string") {
                  throw new Error("Could not parse body as XML. The response body is not a string.");
                }
                _a.label = 2;
              case 2:
                _a.trys.push([2, 4, , 5]);
                return [4, this._xmlSerializer.xmlDeserialize(rootName, result.body)];
              case 3:
                xmlObject = _a.sent();
                return [3, 5];
              case 4:
                error_1 = _a.sent();
                throw new Error("Could not parse body as XML.\n\n" + error_1.message);
              case 5:
                mappingResult = schema_1.validateAndMapXml(xmlObject, schema);
                if (mappingResult.errors) {
                  throw new responseValidationError_1.ResponseValidationError(result, mappingResult.errors);
                }
                return [2, tslib_1.__assign(tslib_1.__assign({}, result), { result: mappingResult.result })];
            }
          });
        });
      };
      DefaultRequestBuilder2.prototype._setContentTypeIfNotSet = function(contentType) {
        if (!this._contentType) {
          httpHeaders_1.setHeaderIfNotSet(this._headers, httpHeaders_1.CONTENT_TYPE_HEADER, contentType);
        }
      };
      DefaultRequestBuilder2.prototype._addResponseValidator = function() {
        var _this = this;
        this.interceptResponse(function(context) {
          var _a;
          var response2 = context.response;
          if (_this._validateResponse && (response2.statusCode < 200 || response2.statusCode >= 300)) {
            if (typeof ((_a = _this._apiErrorFactory) === null || _a === void 0 ? void 0 : _a.message) === "undefined") {
              _this._apiErrorFactory.message = "Response status code was not ok: " + response2.statusCode + ".";
            }
            throw new _this._apiErrorFactory.apiErrorCtor(context, _this._apiErrorFactory.message);
          }
          return context;
        });
      };
      DefaultRequestBuilder2.prototype._addAuthentication = function() {
        var _this = this;
        this.intercept(function() {
          var args = [];
          for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
          }
          var handler2 = _this._authenticationProvider(_this._authParams);
          return handler2.apply(void 0, tslib_1.__spreadArray([], tslib_1.__read(args)));
        });
      };
      DefaultRequestBuilder2.prototype._addRetryInterceptor = function() {
        var _this = this;
        this.intercept(function(request2, options2, next) {
          return tslib_1.__awaiter(_this, void 0, void 0, function() {
            var context, allowedWaitTime, retryCount, waitTime, timeoutError, shouldRetry, error_2;
            var _a, _b;
            return tslib_1.__generator(this, function(_c) {
              switch (_c.label) {
                case 0:
                  allowedWaitTime = this._retryConfig.maximumRetryWaitTime;
                  retryCount = 0;
                  waitTime = 0;
                  shouldRetry = retryConfiguration_1.shouldRetryRequest(this._retryOption, this._retryConfig, this._httpMethod);
                  _c.label = 1;
                case 1:
                  timeoutError = void 0;
                  if (!(retryCount > 0))
                    return [3, 3];
                  return [4, new Promise(function(res) {
                    return setTimeout(res, waitTime * 1e3);
                  })];
                case 2:
                  _c.sent();
                  allowedWaitTime -= waitTime;
                  _c.label = 3;
                case 3:
                  _c.trys.push([3, 5, , 6]);
                  return [4, next(request2, options2)];
                case 4:
                  context = _c.sent();
                  return [3, 6];
                case 5:
                  error_2 = _c.sent();
                  timeoutError = error_2;
                  return [3, 6];
                case 6:
                  if (shouldRetry) {
                    waitTime = retryConfiguration_1.getRetryWaitTime(this._retryConfig, allowedWaitTime, retryCount, (_a = context === null || context === void 0 ? void 0 : context.response) === null || _a === void 0 ? void 0 : _a.statusCode, (_b = context === null || context === void 0 ? void 0 : context.response) === null || _b === void 0 ? void 0 : _b.headers, timeoutError);
                    retryCount++;
                  }
                  _c.label = 7;
                case 7:
                  if (waitTime > 0)
                    return [3, 1];
                  _c.label = 8;
                case 8:
                  if (timeoutError) {
                    throw timeoutError;
                  }
                  if (typeof (context === null || context === void 0 ? void 0 : context.response) === "undefined") {
                    throw new Error("Response is undefined.");
                  }
                  return [2, { request: request2, response: context.response }];
              }
            });
          });
        });
      };
      return DefaultRequestBuilder2;
    }();
    exports.DefaultRequestBuilder = DefaultRequestBuilder;
    function createRequestBuilderFactory(httpClient, baseUrlProvider, apiErrorConstructor, authenticationProvider, retryConfig, xmlSerializer) {
      if (xmlSerializer === void 0) {
        xmlSerializer = new xmlSerializer_1.XmlSerialization();
      }
      return function(httpMethod, path) {
        return new DefaultRequestBuilder(httpClient, baseUrlProvider, apiErrorConstructor, authenticationProvider, httpMethod, xmlSerializer, retryConfig, path);
      };
    }
    exports.createRequestBuilderFactory = createRequestBuilderFactory;
    function mergePath(left, right) {
      if (!right || right === "") {
        return left;
      }
      if (left[left.length - 1] === "/" && right[0] === "/") {
        return left + right.substr(1);
      } else if (left[left.length - 1] === "/" || right[0] === "/") {
        return left + right;
      } else {
        return left + "/" + right;
      }
    }
  }
});

// node_modules/@apimatic/core/lib/index.js
var require_lib8 = __commonJS({
  "node_modules/@apimatic/core/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.pipePrefix = exports.tabPrefix = exports.commaPrefix = exports.plainPrefix = exports.unindexedPrefix = exports.indexedPrefix = exports.RequestRetryOption = void 0;
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_apiHelper(), exports);
    tslib_1.__exportStar(require_coreInterfaces(), exports);
    tslib_1.__exportStar(require_fileWrapper2(), exports);
    tslib_1.__exportStar(require_abortError(), exports);
    tslib_1.__exportStar(require_argumentsValidationError(), exports);
    tslib_1.__exportStar(require_responseValidationError(), exports);
    tslib_1.__exportStar(require_apiError2(), exports);
    tslib_1.__exportStar(require_httpHeaders2(), exports);
    tslib_1.__exportStar(require_httpInterceptor2(), exports);
    tslib_1.__exportStar(require_requestBuilder(), exports);
    tslib_1.__exportStar(require_pathTemplate(), exports);
    var retryConfiguration_1 = require_retryConfiguration2();
    Object.defineProperty(exports, "RequestRetryOption", { enumerable: true, get: function() {
      return retryConfiguration_1.RequestRetryOption;
    } });
    var queryString_1 = require_queryString2();
    Object.defineProperty(exports, "indexedPrefix", { enumerable: true, get: function() {
      return queryString_1.indexedPrefix;
    } });
    Object.defineProperty(exports, "unindexedPrefix", { enumerable: true, get: function() {
      return queryString_1.unindexedPrefix;
    } });
    Object.defineProperty(exports, "plainPrefix", { enumerable: true, get: function() {
      return queryString_1.plainPrefix;
    } });
    Object.defineProperty(exports, "commaPrefix", { enumerable: true, get: function() {
      return queryString_1.commaPrefix;
    } });
    Object.defineProperty(exports, "tabPrefix", { enumerable: true, get: function() {
      return queryString_1.tabPrefix;
    } });
    Object.defineProperty(exports, "pipePrefix", { enumerable: true, get: function() {
      return queryString_1.pipePrefix;
    } });
  }
});

// node_modules/square/dist/cjs/core.js
var require_core = __commonJS({
  "node_modules/square/dist/cjs/core.js"(exports) {
    "use strict";
    exports.__esModule = true;
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib8(), exports);
  }
});

// node_modules/axios/lib/helpers/bind.js
var require_bind = __commonJS({
  "node_modules/axios/lib/helpers/bind.js"(exports, module2) {
    "use strict";
    module2.exports = function bind(fn, thisArg) {
      return function wrap() {
        var args = new Array(arguments.length);
        for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i];
        }
        return fn.apply(thisArg, args);
      };
    };
  }
});

// node_modules/axios/lib/utils.js
var require_utils2 = __commonJS({
  "node_modules/axios/lib/utils.js"(exports, module2) {
    "use strict";
    var bind = require_bind();
    var toString = Object.prototype.toString;
    function isArray(val) {
      return toString.call(val) === "[object Array]";
    }
    function isUndefined(val) {
      return typeof val === "undefined";
    }
    function isBuffer2(val) {
      return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor) && typeof val.constructor.isBuffer === "function" && val.constructor.isBuffer(val);
    }
    function isArrayBuffer(val) {
      return toString.call(val) === "[object ArrayBuffer]";
    }
    function isFormData(val) {
      return typeof FormData !== "undefined" && val instanceof FormData;
    }
    function isArrayBufferView(val) {
      var result;
      if (typeof ArrayBuffer !== "undefined" && ArrayBuffer.isView) {
        result = ArrayBuffer.isView(val);
      } else {
        result = val && val.buffer && val.buffer instanceof ArrayBuffer;
      }
      return result;
    }
    function isString(val) {
      return typeof val === "string";
    }
    function isNumber(val) {
      return typeof val === "number";
    }
    function isObject2(val) {
      return val !== null && typeof val === "object";
    }
    function isPlainObject(val) {
      if (toString.call(val) !== "[object Object]") {
        return false;
      }
      var prototype = Object.getPrototypeOf(val);
      return prototype === null || prototype === Object.prototype;
    }
    function isDate(val) {
      return toString.call(val) === "[object Date]";
    }
    function isFile(val) {
      return toString.call(val) === "[object File]";
    }
    function isBlob(val) {
      return toString.call(val) === "[object Blob]";
    }
    function isFunction(val) {
      return toString.call(val) === "[object Function]";
    }
    function isStream2(val) {
      return isObject2(val) && isFunction(val.pipe);
    }
    function isURLSearchParams(val) {
      return typeof URLSearchParams !== "undefined" && val instanceof URLSearchParams;
    }
    function trim(str) {
      return str.trim ? str.trim() : str.replace(/^\s+|\s+$/g, "");
    }
    function isStandardBrowserEnv() {
      if (typeof navigator !== "undefined" && (navigator.product === "ReactNative" || navigator.product === "NativeScript" || navigator.product === "NS")) {
        return false;
      }
      return typeof window !== "undefined" && typeof document !== "undefined";
    }
    function forEach(obj, fn) {
      if (obj === null || typeof obj === "undefined") {
        return;
      }
      if (typeof obj !== "object") {
        obj = [obj];
      }
      if (isArray(obj)) {
        for (var i = 0, l = obj.length; i < l; i++) {
          fn.call(null, obj[i], i, obj);
        }
      } else {
        for (var key2 in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key2)) {
            fn.call(null, obj[key2], key2, obj);
          }
        }
      }
    }
    function merge2() {
      var result = {};
      function assignValue(val, key2) {
        if (isPlainObject(result[key2]) && isPlainObject(val)) {
          result[key2] = merge2(result[key2], val);
        } else if (isPlainObject(val)) {
          result[key2] = merge2({}, val);
        } else if (isArray(val)) {
          result[key2] = val.slice();
        } else {
          result[key2] = val;
        }
      }
      for (var i = 0, l = arguments.length; i < l; i++) {
        forEach(arguments[i], assignValue);
      }
      return result;
    }
    function extend(a, b, thisArg) {
      forEach(b, function assignValue(val, key2) {
        if (thisArg && typeof val === "function") {
          a[key2] = bind(val, thisArg);
        } else {
          a[key2] = val;
        }
      });
      return a;
    }
    function stripBOM(content) {
      if (content.charCodeAt(0) === 65279) {
        content = content.slice(1);
      }
      return content;
    }
    module2.exports = {
      isArray,
      isArrayBuffer,
      isBuffer: isBuffer2,
      isFormData,
      isArrayBufferView,
      isString,
      isNumber,
      isObject: isObject2,
      isPlainObject,
      isUndefined,
      isDate,
      isFile,
      isBlob,
      isFunction,
      isStream: isStream2,
      isURLSearchParams,
      isStandardBrowserEnv,
      forEach,
      merge: merge2,
      extend,
      trim,
      stripBOM
    };
  }
});

// node_modules/axios/lib/helpers/buildURL.js
var require_buildURL = __commonJS({
  "node_modules/axios/lib/helpers/buildURL.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    function encode2(val) {
      return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
    }
    module2.exports = function buildURL2(url, params, paramsSerializer) {
      if (!params) {
        return url;
      }
      var serializedParams;
      if (paramsSerializer) {
        serializedParams = paramsSerializer(params);
      } else if (utils2.isURLSearchParams(params)) {
        serializedParams = params.toString();
      } else {
        var parts = [];
        utils2.forEach(params, function serialize2(val, key2) {
          if (val === null || typeof val === "undefined") {
            return;
          }
          if (utils2.isArray(val)) {
            key2 = key2 + "[]";
          } else {
            val = [val];
          }
          utils2.forEach(val, function parseValue(v) {
            if (utils2.isDate(v)) {
              v = v.toISOString();
            } else if (utils2.isObject(v)) {
              v = JSON.stringify(v);
            }
            parts.push(encode2(key2) + "=" + encode2(v));
          });
        });
        serializedParams = parts.join("&");
      }
      if (serializedParams) {
        var hashmarkIndex = url.indexOf("#");
        if (hashmarkIndex !== -1) {
          url = url.slice(0, hashmarkIndex);
        }
        url += (url.indexOf("?") === -1 ? "?" : "&") + serializedParams;
      }
      return url;
    };
  }
});

// node_modules/axios/lib/core/InterceptorManager.js
var require_InterceptorManager = __commonJS({
  "node_modules/axios/lib/core/InterceptorManager.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    function InterceptorManager() {
      this.handlers = [];
    }
    InterceptorManager.prototype.use = function use(fulfilled, rejected, options2) {
      this.handlers.push({
        fulfilled,
        rejected,
        synchronous: options2 ? options2.synchronous : false,
        runWhen: options2 ? options2.runWhen : null
      });
      return this.handlers.length - 1;
    };
    InterceptorManager.prototype.eject = function eject(id) {
      if (this.handlers[id]) {
        this.handlers[id] = null;
      }
    };
    InterceptorManager.prototype.forEach = function forEach(fn) {
      utils2.forEach(this.handlers, function forEachHandler(h) {
        if (h !== null) {
          fn(h);
        }
      });
    };
    module2.exports = InterceptorManager;
  }
});

// node_modules/axios/lib/helpers/normalizeHeaderName.js
var require_normalizeHeaderName = __commonJS({
  "node_modules/axios/lib/helpers/normalizeHeaderName.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    module2.exports = function normalizeHeaderName(headers2, normalizedName) {
      utils2.forEach(headers2, function processHeader2(value, name) {
        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
          headers2[normalizedName] = value;
          delete headers2[name];
        }
      });
    };
  }
});

// node_modules/axios/lib/core/enhanceError.js
var require_enhanceError = __commonJS({
  "node_modules/axios/lib/core/enhanceError.js"(exports, module2) {
    "use strict";
    module2.exports = function enhanceError(error2, config, code, request2, response2) {
      error2.config = config;
      if (code) {
        error2.code = code;
      }
      error2.request = request2;
      error2.response = response2;
      error2.isAxiosError = true;
      error2.toJSON = function toJSON() {
        return {
          message: this.message,
          name: this.name,
          description: this.description,
          number: this.number,
          fileName: this.fileName,
          lineNumber: this.lineNumber,
          columnNumber: this.columnNumber,
          stack: this.stack,
          config: this.config,
          code: this.code
        };
      };
      return error2;
    };
  }
});

// node_modules/axios/lib/core/createError.js
var require_createError = __commonJS({
  "node_modules/axios/lib/core/createError.js"(exports, module2) {
    "use strict";
    var enhanceError = require_enhanceError();
    module2.exports = function createError(message, config, code, request2, response2) {
      var error2 = new Error(message);
      return enhanceError(error2, config, code, request2, response2);
    };
  }
});

// node_modules/axios/lib/core/settle.js
var require_settle = __commonJS({
  "node_modules/axios/lib/core/settle.js"(exports, module2) {
    "use strict";
    var createError = require_createError();
    module2.exports = function settle(resolve, reject, response2) {
      var validateStatus = response2.config.validateStatus;
      if (!response2.status || !validateStatus || validateStatus(response2.status)) {
        resolve(response2);
      } else {
        reject(createError("Request failed with status code " + response2.status, response2.config, null, response2.request, response2));
      }
    };
  }
});

// node_modules/axios/lib/helpers/cookies.js
var require_cookies = __commonJS({
  "node_modules/axios/lib/helpers/cookies.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    module2.exports = utils2.isStandardBrowserEnv() ? function standardBrowserEnv() {
      return {
        write: function write2(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + "=" + encodeURIComponent(value));
          if (utils2.isNumber(expires)) {
            cookie.push("expires=" + new Date(expires).toGMTString());
          }
          if (utils2.isString(path)) {
            cookie.push("path=" + path);
          }
          if (utils2.isString(domain)) {
            cookie.push("domain=" + domain);
          }
          if (secure === true) {
            cookie.push("secure");
          }
          document.cookie = cookie.join("; ");
        },
        read: function read(name) {
          var match = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
          return match ? decodeURIComponent(match[3]) : null;
        },
        remove: function remove(name) {
          this.write(name, "", Date.now() - 864e5);
        }
      };
    }() : function nonStandardBrowserEnv() {
      return {
        write: function write2() {
        },
        read: function read() {
          return null;
        },
        remove: function remove() {
        }
      };
    }();
  }
});

// node_modules/axios/lib/helpers/isAbsoluteURL.js
var require_isAbsoluteURL = __commonJS({
  "node_modules/axios/lib/helpers/isAbsoluteURL.js"(exports, module2) {
    "use strict";
    module2.exports = function isAbsoluteURL(url) {
      return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
    };
  }
});

// node_modules/axios/lib/helpers/combineURLs.js
var require_combineURLs = __commonJS({
  "node_modules/axios/lib/helpers/combineURLs.js"(exports, module2) {
    "use strict";
    module2.exports = function combineURLs(baseURL, relativeURL) {
      return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
    };
  }
});

// node_modules/axios/lib/core/buildFullPath.js
var require_buildFullPath = __commonJS({
  "node_modules/axios/lib/core/buildFullPath.js"(exports, module2) {
    "use strict";
    var isAbsoluteURL = require_isAbsoluteURL();
    var combineURLs = require_combineURLs();
    module2.exports = function buildFullPath(baseURL, requestedURL) {
      if (baseURL && !isAbsoluteURL(requestedURL)) {
        return combineURLs(baseURL, requestedURL);
      }
      return requestedURL;
    };
  }
});

// node_modules/axios/lib/helpers/parseHeaders.js
var require_parseHeaders = __commonJS({
  "node_modules/axios/lib/helpers/parseHeaders.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var ignoreDuplicateOf = [
      "age",
      "authorization",
      "content-length",
      "content-type",
      "etag",
      "expires",
      "from",
      "host",
      "if-modified-since",
      "if-unmodified-since",
      "last-modified",
      "location",
      "max-forwards",
      "proxy-authorization",
      "referer",
      "retry-after",
      "user-agent"
    ];
    module2.exports = function parseHeaders2(headers2) {
      var parsed = {};
      var key2;
      var val;
      var i;
      if (!headers2) {
        return parsed;
      }
      utils2.forEach(headers2.split("\n"), function parser(line) {
        i = line.indexOf(":");
        key2 = utils2.trim(line.substr(0, i)).toLowerCase();
        val = utils2.trim(line.substr(i + 1));
        if (key2) {
          if (parsed[key2] && ignoreDuplicateOf.indexOf(key2) >= 0) {
            return;
          }
          if (key2 === "set-cookie") {
            parsed[key2] = (parsed[key2] ? parsed[key2] : []).concat([val]);
          } else {
            parsed[key2] = parsed[key2] ? parsed[key2] + ", " + val : val;
          }
        }
      });
      return parsed;
    };
  }
});

// node_modules/axios/lib/helpers/isURLSameOrigin.js
var require_isURLSameOrigin = __commonJS({
  "node_modules/axios/lib/helpers/isURLSameOrigin.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    module2.exports = utils2.isStandardBrowserEnv() ? function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement("a");
      var originURL;
      function resolveURL(url) {
        var href = url;
        if (msie) {
          urlParsingNode.setAttribute("href", href);
          href = urlParsingNode.href;
        }
        urlParsingNode.setAttribute("href", href);
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
        };
      }
      originURL = resolveURL(window.location.href);
      return function isURLSameOrigin(requestURL) {
        var parsed = utils2.isString(requestURL) ? resolveURL(requestURL) : requestURL;
        return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
      };
    }() : function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    }();
  }
});

// node_modules/axios/lib/adapters/xhr.js
var require_xhr = __commonJS({
  "node_modules/axios/lib/adapters/xhr.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var settle = require_settle();
    var cookies = require_cookies();
    var buildURL2 = require_buildURL();
    var buildFullPath = require_buildFullPath();
    var parseHeaders2 = require_parseHeaders();
    var isURLSameOrigin = require_isURLSameOrigin();
    var createError = require_createError();
    module2.exports = function xhrAdapter(config) {
      return new Promise(function dispatchXhrRequest(resolve, reject) {
        var requestData = config.data;
        var requestHeaders = config.headers;
        var responseType = config.responseType;
        if (utils2.isFormData(requestData)) {
          delete requestHeaders["Content-Type"];
        }
        var request2 = new XMLHttpRequest();
        if (config.auth) {
          var username = config.auth.username || "";
          var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
          requestHeaders.Authorization = "Basic " + btoa(username + ":" + password);
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        request2.open(config.method.toUpperCase(), buildURL2(fullPath, config.params, config.paramsSerializer), true);
        request2.timeout = config.timeout;
        function onloadend() {
          if (!request2) {
            return;
          }
          var responseHeaders = "getAllResponseHeaders" in request2 ? parseHeaders2(request2.getAllResponseHeaders()) : null;
          var responseData = !responseType || responseType === "text" || responseType === "json" ? request2.responseText : request2.response;
          var response2 = {
            data: responseData,
            status: request2.status,
            statusText: request2.statusText,
            headers: responseHeaders,
            config,
            request: request2
          };
          settle(resolve, reject, response2);
          request2 = null;
        }
        if ("onloadend" in request2) {
          request2.onloadend = onloadend;
        } else {
          request2.onreadystatechange = function handleLoad() {
            if (!request2 || request2.readyState !== 4) {
              return;
            }
            if (request2.status === 0 && !(request2.responseURL && request2.responseURL.indexOf("file:") === 0)) {
              return;
            }
            setTimeout(onloadend);
          };
        }
        request2.onabort = function handleAbort() {
          if (!request2) {
            return;
          }
          reject(createError("Request aborted", config, "ECONNABORTED", request2));
          request2 = null;
        };
        request2.onerror = function handleError() {
          reject(createError("Network Error", config, null, request2));
          request2 = null;
        };
        request2.ontimeout = function handleTimeout() {
          var timeoutErrorMessage = "timeout of " + config.timeout + "ms exceeded";
          if (config.timeoutErrorMessage) {
            timeoutErrorMessage = config.timeoutErrorMessage;
          }
          reject(createError(timeoutErrorMessage, config, config.transitional && config.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", request2));
          request2 = null;
        };
        if (utils2.isStandardBrowserEnv()) {
          var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : void 0;
          if (xsrfValue) {
            requestHeaders[config.xsrfHeaderName] = xsrfValue;
          }
        }
        if ("setRequestHeader" in request2) {
          utils2.forEach(requestHeaders, function setRequestHeader(val, key2) {
            if (typeof requestData === "undefined" && key2.toLowerCase() === "content-type") {
              delete requestHeaders[key2];
            } else {
              request2.setRequestHeader(key2, val);
            }
          });
        }
        if (!utils2.isUndefined(config.withCredentials)) {
          request2.withCredentials = !!config.withCredentials;
        }
        if (responseType && responseType !== "json") {
          request2.responseType = config.responseType;
        }
        if (typeof config.onDownloadProgress === "function") {
          request2.addEventListener("progress", config.onDownloadProgress);
        }
        if (typeof config.onUploadProgress === "function" && request2.upload) {
          request2.upload.addEventListener("progress", config.onUploadProgress);
        }
        if (config.cancelToken) {
          config.cancelToken.promise.then(function onCanceled(cancel) {
            if (!request2) {
              return;
            }
            request2.abort();
            reject(cancel);
            request2 = null;
          });
        }
        if (!requestData) {
          requestData = null;
        }
        request2.send(requestData);
      });
    };
  }
});

// node_modules/ms/index.js
var require_ms = __commonJS({
  "node_modules/ms/index.js"(exports, module2) {
    var s2 = 1e3;
    var m = s2 * 60;
    var h = m * 60;
    var d = h * 24;
    var w = d * 7;
    var y = d * 365.25;
    module2.exports = function(val, options2) {
      options2 = options2 || {};
      var type = typeof val;
      if (type === "string" && val.length > 0) {
        return parse4(val);
      } else if (type === "number" && isFinite(val)) {
        return options2.long ? fmtLong(val) : fmtShort(val);
      }
      throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(val));
    };
    function parse4(str) {
      str = String(str);
      if (str.length > 100) {
        return;
      }
      var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);
      if (!match) {
        return;
      }
      var n = parseFloat(match[1]);
      var type = (match[2] || "ms").toLowerCase();
      switch (type) {
        case "years":
        case "year":
        case "yrs":
        case "yr":
        case "y":
          return n * y;
        case "weeks":
        case "week":
        case "w":
          return n * w;
        case "days":
        case "day":
        case "d":
          return n * d;
        case "hours":
        case "hour":
        case "hrs":
        case "hr":
        case "h":
          return n * h;
        case "minutes":
        case "minute":
        case "mins":
        case "min":
        case "m":
          return n * m;
        case "seconds":
        case "second":
        case "secs":
        case "sec":
        case "s":
          return n * s2;
        case "milliseconds":
        case "millisecond":
        case "msecs":
        case "msec":
        case "ms":
          return n;
        default:
          return void 0;
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return Math.round(ms / d) + "d";
      }
      if (msAbs >= h) {
        return Math.round(ms / h) + "h";
      }
      if (msAbs >= m) {
        return Math.round(ms / m) + "m";
      }
      if (msAbs >= s2) {
        return Math.round(ms / s2) + "s";
      }
      return ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      if (msAbs >= d) {
        return plural(ms, msAbs, d, "day");
      }
      if (msAbs >= h) {
        return plural(ms, msAbs, h, "hour");
      }
      if (msAbs >= m) {
        return plural(ms, msAbs, m, "minute");
      }
      if (msAbs >= s2) {
        return plural(ms, msAbs, s2, "second");
      }
      return ms + " ms";
    }
    function plural(ms, msAbs, n, name) {
      var isPlural = msAbs >= n * 1.5;
      return Math.round(ms / n) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// node_modules/debug/src/common.js
var require_common = __commonJS({
  "node_modules/debug/src/common.js"(exports, module2) {
    function setup(env) {
      createDebug.debug = createDebug;
      createDebug.default = createDebug;
      createDebug.coerce = coerce;
      createDebug.disable = disable;
      createDebug.enable = enable;
      createDebug.enabled = enabled;
      createDebug.humanize = require_ms();
      createDebug.destroy = destroy2;
      Object.keys(env).forEach((key2) => {
        createDebug[key2] = env[key2];
      });
      createDebug.names = [];
      createDebug.skips = [];
      createDebug.formatters = {};
      function selectColor(namespace) {
        let hash2 = 0;
        for (let i = 0; i < namespace.length; i++) {
          hash2 = (hash2 << 5) - hash2 + namespace.charCodeAt(i);
          hash2 |= 0;
        }
        return createDebug.colors[Math.abs(hash2) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug(...args) {
          if (!debug.enabled) {
            return;
          }
          const self2 = debug;
          const curr = Number(new Date());
          const ms = curr - (prevTime || curr);
          self2.diff = ms;
          self2.prev = prevTime;
          self2.curr = curr;
          prevTime = curr;
          args[0] = createDebug.coerce(args[0]);
          if (typeof args[0] !== "string") {
            args.unshift("%O");
          }
          let index5 = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
            if (match === "%%") {
              return "%";
            }
            index5++;
            const formatter = createDebug.formatters[format];
            if (typeof formatter === "function") {
              const val = args[index5];
              match = formatter.call(self2, val);
              args.splice(index5, 1);
              index5--;
            }
            return match;
          });
          createDebug.formatArgs.call(self2, args);
          const logFn = self2.log || createDebug.log;
          logFn.apply(self2, args);
        }
        debug.namespace = namespace;
        debug.useColors = createDebug.useColors();
        debug.color = createDebug.selectColor(namespace);
        debug.extend = extend;
        debug.destroy = createDebug.destroy;
        Object.defineProperty(debug, "enabled", {
          enumerable: true,
          configurable: false,
          get: () => {
            if (enableOverride !== null) {
              return enableOverride;
            }
            if (namespacesCache !== createDebug.namespaces) {
              namespacesCache = createDebug.namespaces;
              enabledCache = createDebug.enabled(namespace);
            }
            return enabledCache;
          },
          set: (v) => {
            enableOverride = v;
          }
        });
        if (typeof createDebug.init === "function") {
          createDebug.init(debug);
        }
        return debug;
      }
      function extend(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === "undefined" ? ":" : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i;
        const split = (typeof namespaces === "string" ? namespaces : "").split(/[\s,]+/);
        const len = split.length;
        for (i = 0; i < len; i++) {
          if (!split[i]) {
            continue;
          }
          namespaces = split[i].replace(/\*/g, ".*?");
          if (namespaces[0] === "-") {
            createDebug.skips.push(new RegExp("^" + namespaces.slice(1) + "$"));
          } else {
            createDebug.names.push(new RegExp("^" + namespaces + "$"));
          }
        }
      }
      function disable() {
        const namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
        ].join(",");
        createDebug.enable("");
        return namespaces;
      }
      function enabled(name) {
        if (name[name.length - 1] === "*") {
          return true;
        }
        let i;
        let len;
        for (i = 0, len = createDebug.skips.length; i < len; i++) {
          if (createDebug.skips[i].test(name)) {
            return false;
          }
        }
        for (i = 0, len = createDebug.names.length; i < len; i++) {
          if (createDebug.names[i].test(name)) {
            return true;
          }
        }
        return false;
      }
      function toNamespace(regexp) {
        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
      }
      function coerce(val) {
        if (val instanceof Error) {
          return val.stack || val.message;
        }
        return val;
      }
      function destroy2() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      createDebug.enable(createDebug.load());
      return createDebug;
    }
    module2.exports = setup;
  }
});

// node_modules/debug/src/browser.js
var require_browser = __commonJS({
  "node_modules/debug/src/browser.js"(exports, module2) {
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load3;
    exports.useColors = useColors;
    exports.storage = localstorage();
    exports.destroy = (() => {
      let warned = false;
      return () => {
        if (!warned) {
          warned = true;
          console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
        }
      };
    })();
    exports.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      if (typeof window !== "undefined" && window.process && (window.process.type === "renderer" || window.process.__nwjs)) {
        return true;
      }
      if (typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
      }
      return typeof document !== "undefined" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== "undefined" && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || typeof navigator !== "undefined" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module2.exports.humanize(this.diff);
      if (!this.useColors) {
        return;
      }
      const c = "color: " + this.color;
      args.splice(1, 0, c, "color: inherit");
      let index5 = 0;
      let lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match) => {
        if (match === "%%") {
          return;
        }
        index5++;
        if (match === "%c") {
          lastC = index5;
        }
      });
      args.splice(lastC, 0, c);
    }
    exports.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        if (namespaces) {
          exports.storage.setItem("debug", namespaces);
        } else {
          exports.storage.removeItem("debug");
        }
      } catch (error2) {
      }
    }
    function load3() {
      let r;
      try {
        r = exports.storage.getItem("debug");
      } catch (error2) {
      }
      if (!r && typeof process !== "undefined" && "env" in process) {
        r = process.env.DEBUG;
      }
      return r;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch (error2) {
      }
    }
    module2.exports = require_common()(exports);
    var { formatters } = module2.exports;
    formatters.j = function(v) {
      try {
        return JSON.stringify(v);
      } catch (error2) {
        return "[UnexpectedJSONParseError]: " + error2.message;
      }
    };
  }
});

// node_modules/debug/src/node.js
var require_node = __commonJS({
  "node_modules/debug/src/node.js"(exports, module2) {
    var tty = require("tty");
    var util2 = require("util");
    exports.init = init3;
    exports.log = log;
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load3;
    exports.useColors = useColors;
    exports.destroy = util2.deprecate(() => {
    }, "Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
    exports.colors = [6, 2, 3, 4, 5, 1];
    try {
      const supportsColor = require("supports-color");
      if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
        exports.colors = [
          20,
          21,
          26,
          27,
          32,
          33,
          38,
          39,
          40,
          41,
          42,
          43,
          44,
          45,
          56,
          57,
          62,
          63,
          68,
          69,
          74,
          75,
          76,
          77,
          78,
          79,
          80,
          81,
          92,
          93,
          98,
          99,
          112,
          113,
          128,
          129,
          134,
          135,
          148,
          149,
          160,
          161,
          162,
          163,
          164,
          165,
          166,
          167,
          168,
          169,
          170,
          171,
          172,
          173,
          178,
          179,
          184,
          185,
          196,
          197,
          198,
          199,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          209,
          214,
          215,
          220,
          221
        ];
      }
    } catch (error2) {
    }
    exports.inspectOpts = Object.keys(process.env).filter((key2) => {
      return /^debug_/i.test(key2);
    }).reduce((obj, key2) => {
      const prop = key2.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k) => {
        return k.toUpperCase();
      });
      let val = process.env[key2];
      if (/^(yes|on|true|enabled)$/i.test(val)) {
        val = true;
      } else if (/^(no|off|false|disabled)$/i.test(val)) {
        val = false;
      } else if (val === "null") {
        val = null;
      } else {
        val = Number(val);
      }
      obj[prop] = val;
      return obj;
    }, {});
    function useColors() {
      return "colors" in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);
    }
    function formatArgs(args) {
      const { namespace: name, useColors: useColors2 } = this;
      if (useColors2) {
        const c = this.color;
        const colorCode = "\x1B[3" + (c < 8 ? c : "8;5;" + c);
        const prefix = `  ${colorCode};1m${name} \x1B[0m`;
        args[0] = prefix + args[0].split("\n").join("\n" + prefix);
        args.push(colorCode + "m+" + module2.exports.humanize(this.diff) + "\x1B[0m");
      } else {
        args[0] = getDate() + name + " " + args[0];
      }
    }
    function getDate() {
      if (exports.inspectOpts.hideDate) {
        return "";
      }
      return new Date().toISOString() + " ";
    }
    function log(...args) {
      return process.stderr.write(util2.format(...args) + "\n");
    }
    function save(namespaces) {
      if (namespaces) {
        process.env.DEBUG = namespaces;
      } else {
        delete process.env.DEBUG;
      }
    }
    function load3() {
      return process.env.DEBUG;
    }
    function init3(debug) {
      debug.inspectOpts = {};
      const keys = Object.keys(exports.inspectOpts);
      for (let i = 0; i < keys.length; i++) {
        debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
      }
    }
    module2.exports = require_common()(exports);
    var { formatters } = module2.exports;
    formatters.o = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util2.inspect(v, this.inspectOpts).split("\n").map((str) => str.trim()).join(" ");
    };
    formatters.O = function(v) {
      this.inspectOpts.colors = this.useColors;
      return util2.inspect(v, this.inspectOpts);
    };
  }
});

// node_modules/debug/src/index.js
var require_src = __commonJS({
  "node_modules/debug/src/index.js"(exports, module2) {
    if (typeof process === "undefined" || process.type === "renderer" || process.browser === true || process.__nwjs) {
      module2.exports = require_browser();
    } else {
      module2.exports = require_node();
    }
  }
});

// node_modules/follow-redirects/debug.js
var require_debug = __commonJS({
  "node_modules/follow-redirects/debug.js"(exports, module2) {
    var debug;
    module2.exports = function() {
      if (!debug) {
        try {
          debug = require_src()("follow-redirects");
        } catch (error2) {
        }
        if (typeof debug !== "function") {
          debug = function() {
          };
        }
      }
      debug.apply(null, arguments);
    };
  }
});

// node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  "node_modules/follow-redirects/index.js"(exports, module2) {
    var url = require("url");
    var URL2 = url.URL;
    var http = require("http");
    var https = require("https");
    var Writable = require("stream").Writable;
    var assert2 = require("assert");
    var debug = require_debug();
    var events = ["abort", "aborted", "connect", "error", "socket", "timeout"];
    var eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType("ERR_INVALID_URL", "Invalid URL", TypeError);
    var RedirectionError = createErrorType("ERR_FR_REDIRECTION_FAILURE", "Redirected request failed");
    var TooManyRedirectsError = createErrorType("ERR_FR_TOO_MANY_REDIRECTS", "Maximum number of redirects exceeded");
    var MaxBodyLengthExceededError = createErrorType("ERR_FR_MAX_BODY_LENGTH_EXCEEDED", "Request body larger than maxBodyLength limit");
    var WriteAfterEndError = createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
    function RedirectableRequest(options2, responseCallback) {
      Writable.call(this);
      this._sanitizeOptions(options2);
      this._options = options2;
      this._ended = false;
      this._ending = false;
      this._redirectCount = 0;
      this._redirects = [];
      this._requestBodyLength = 0;
      this._requestBodyBuffers = [];
      if (responseCallback) {
        this.on("response", responseCallback);
      }
      var self2 = this;
      this._onNativeResponse = function(response2) {
        self2._processResponse(response2);
      };
      this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      abortRequest(this._currentRequest);
      this.emit("abort");
    };
    RedirectableRequest.prototype.write = function(data, encoding2, callback) {
      if (this._ending) {
        throw new WriteAfterEndError();
      }
      if (!isString(data) && !isBuffer2(data)) {
        throw new TypeError("data should be a string, Buffer or Uint8Array");
      }
      if (isFunction(encoding2)) {
        callback = encoding2;
        encoding2 = null;
      }
      if (data.length === 0) {
        if (callback) {
          callback();
        }
        return;
      }
      if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({ data, encoding: encoding2 });
        this._currentRequest.write(data, encoding2, callback);
      } else {
        this.emit("error", new MaxBodyLengthExceededError());
        this.abort();
      }
    };
    RedirectableRequest.prototype.end = function(data, encoding2, callback) {
      if (isFunction(data)) {
        callback = data;
        data = encoding2 = null;
      } else if (isFunction(encoding2)) {
        callback = encoding2;
        encoding2 = null;
      }
      if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
      } else {
        var self2 = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding2, function() {
          self2._ended = true;
          currentRequest.end(null, null, callback);
        });
        this._ending = true;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value;
      this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name];
      this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self2 = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener("timeout", socket.destroy);
        socket.addListener("timeout", socket.destroy);
      }
      function startTimer(socket) {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
        }
        self2._timeout = setTimeout(function() {
          self2.emit("timeout");
          clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
      }
      function clearTimer() {
        if (self2._timeout) {
          clearTimeout(self2._timeout);
          self2._timeout = null;
        }
        self2.removeListener("abort", clearTimer);
        self2.removeListener("error", clearTimer);
        self2.removeListener("response", clearTimer);
        if (callback) {
          self2.removeListener("timeout", callback);
        }
        if (!self2.socket) {
          self2._currentRequest.removeListener("socket", startTimer);
        }
      }
      if (callback) {
        this.on("timeout", callback);
      }
      if (this.socket) {
        startTimer(this.socket);
      } else {
        this._currentRequest.once("socket", startTimer);
      }
      this.on("socket", destroyOnTimeout);
      this.on("abort", clearTimer);
      this.on("error", clearTimer);
      this.on("response", clearTimer);
      return this;
    };
    [
      "flushHeaders",
      "getHeader",
      "setNoDelay",
      "setSocketKeepAlive"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
      };
    });
    ["aborted", "connection", "socket"].forEach(function(property) {
      Object.defineProperty(RedirectableRequest.prototype, property, {
        get: function() {
          return this._currentRequest[property];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options2) {
      if (!options2.headers) {
        options2.headers = {};
      }
      if (options2.host) {
        if (!options2.hostname) {
          options2.hostname = options2.host;
        }
        delete options2.host;
      }
      if (!options2.pathname && options2.path) {
        var searchPos = options2.path.indexOf("?");
        if (searchPos < 0) {
          options2.pathname = options2.path;
        } else {
          options2.pathname = options2.path.substring(0, searchPos);
          options2.search = options2.path.substring(searchPos);
        }
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol;
      var nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        this.emit("error", new TypeError("Unsupported protocol " + protocol));
        return;
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request2 = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      request2._redirectable = this;
      for (var event of events) {
        request2.on(event, eventHandlers[event]);
      }
      this._currentUrl = /^\//.test(this._options.path) ? url.format(this._options) : this._options.path;
      if (this._isRedirect) {
        var i = 0;
        var self2 = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error2) {
          if (request2 === self2._currentRequest) {
            if (error2) {
              self2.emit("error", error2);
            } else if (i < buffers.length) {
              var buffer = buffers[i++];
              if (!request2.finished) {
                request2.write(buffer.data, buffer.encoding, writeNext);
              }
            } else if (self2._ended) {
              request2.end();
            }
          }
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response2) {
      var statusCode = response2.statusCode;
      if (this._options.trackRedirects) {
        this._redirects.push({
          url: this._currentUrl,
          headers: response2.headers,
          statusCode
        });
      }
      var location = response2.headers.location;
      if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
        response2.responseUrl = this._currentUrl;
        response2.redirects = this._redirects;
        this.emit("response", response2);
        this._requestBodyBuffers = [];
        return;
      }
      abortRequest(this._currentRequest);
      response2.destroy();
      if (++this._redirectCount > this._options.maxRedirects) {
        this.emit("error", new TooManyRedirectsError());
        return;
      }
      var requestHeaders;
      var beforeRedirect = this._options.beforeRedirect;
      if (beforeRedirect) {
        requestHeaders = Object.assign({
          Host: response2.req.getHeader("host")
        }, this._options.headers);
      }
      var method = this._options.method;
      if ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" || statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
        this._options.method = "GET";
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
      }
      var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);
      var currentUrlParts = url.parse(this._currentUrl);
      var currentHost = currentHostHeader || currentUrlParts.host;
      var currentUrl = /^\w+:/.test(location) ? this._currentUrl : url.format(Object.assign(currentUrlParts, { host: currentHost }));
      var redirectUrl;
      try {
        redirectUrl = url.resolve(currentUrl, location);
      } catch (cause) {
        this.emit("error", new RedirectionError({ cause }));
        return;
      }
      debug("redirecting to", redirectUrl);
      this._isRedirect = true;
      var redirectUrlParts = url.parse(redirectUrl);
      Object.assign(this._options, redirectUrlParts);
      if (redirectUrlParts.protocol !== currentUrlParts.protocol && redirectUrlParts.protocol !== "https:" || redirectUrlParts.host !== currentHost && !isSubdomain(redirectUrlParts.host, currentHost)) {
        removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);
      }
      if (isFunction(beforeRedirect)) {
        var responseDetails = {
          headers: response2.headers,
          statusCode
        };
        var requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders
        };
        try {
          beforeRedirect(this._options, responseDetails, requestDetails);
        } catch (err) {
          this.emit("error", err);
          return;
        }
        this._sanitizeOptions(this._options);
      }
      try {
        this._performRequest();
      } catch (cause) {
        this.emit("error", new RedirectionError({ cause }));
      }
    };
    function wrap(protocols) {
      var exports2 = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
      };
      var nativeProtocols = {};
      Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + ":";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports2[scheme] = Object.create(nativeProtocol);
        function request2(input, options2, callback) {
          if (isString(input)) {
            var parsed;
            try {
              parsed = urlToOptions(new URL2(input));
            } catch (err) {
              parsed = url.parse(input);
            }
            if (!isString(parsed.protocol)) {
              throw new InvalidUrlError({ input });
            }
            input = parsed;
          } else if (URL2 && input instanceof URL2) {
            input = urlToOptions(input);
          } else {
            callback = options2;
            options2 = input;
            input = { protocol };
          }
          if (isFunction(options2)) {
            callback = options2;
            options2 = null;
          }
          options2 = Object.assign({
            maxRedirects: exports2.maxRedirects,
            maxBodyLength: exports2.maxBodyLength
          }, input, options2);
          options2.nativeProtocols = nativeProtocols;
          if (!isString(options2.host) && !isString(options2.hostname)) {
            options2.hostname = "::1";
          }
          assert2.equal(options2.protocol, protocol, "protocol mismatch");
          debug("options", options2);
          return new RedirectableRequest(options2, callback);
        }
        function get(input, options2, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options2, callback);
          wrappedRequest.end();
          return wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request2, configurable: true, enumerable: true, writable: true },
          get: { value: get, configurable: true, enumerable: true, writable: true }
        });
      });
      return exports2;
    }
    function noop2() {
    }
    function urlToOptions(urlObject) {
      var options2 = {
        protocol: urlObject.protocol,
        hostname: urlObject.hostname.startsWith("[") ? urlObject.hostname.slice(1, -1) : urlObject.hostname,
        hash: urlObject.hash,
        search: urlObject.search,
        pathname: urlObject.pathname,
        path: urlObject.pathname + urlObject.search,
        href: urlObject.href
      };
      if (urlObject.port !== "") {
        options2.port = Number(urlObject.port);
      }
      return options2;
    }
    function removeMatchingHeaders(regex, headers2) {
      var lastValue;
      for (var header in headers2) {
        if (regex.test(header)) {
          lastValue = headers2[header];
          delete headers2[header];
        }
      }
      return lastValue === null || typeof lastValue === "undefined" ? void 0 : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        Error.captureStackTrace(this, this.constructor);
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause ? message + ": " + this.cause.message : message;
      }
      CustomError.prototype = new (baseClass || Error)();
      CustomError.prototype.constructor = CustomError;
      CustomError.prototype.name = "Error [" + code + "]";
      return CustomError;
    }
    function abortRequest(request2) {
      for (var event of events) {
        request2.removeListener(event, eventHandlers[event]);
      }
      request2.on("error", noop2);
      request2.abort();
    }
    function isSubdomain(subdomain, domain) {
      assert2(isString(subdomain) && isString(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === "." && subdomain.endsWith(domain);
    }
    function isString(value) {
      return typeof value === "string" || value instanceof String;
    }
    function isFunction(value) {
      return typeof value === "function";
    }
    function isBuffer2(value) {
      return typeof value === "object" && "length" in value;
    }
    module2.exports = wrap({ http, https });
    module2.exports.wrap = wrap;
  }
});

// node_modules/axios/package.json
var require_package = __commonJS({
  "node_modules/axios/package.json"(exports, module2) {
    module2.exports = {
      name: "axios",
      version: "0.21.4",
      description: "Promise based HTTP client for the browser and node.js",
      main: "index.js",
      scripts: {
        test: "grunt test",
        start: "node ./sandbox/server.js",
        build: "NODE_ENV=production grunt build",
        preversion: "npm test",
        version: "npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json",
        postversion: "git push && git push --tags",
        examples: "node ./examples/server.js",
        coveralls: "cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js",
        fix: "eslint --fix lib/**/*.js"
      },
      repository: {
        type: "git",
        url: "https://github.com/axios/axios.git"
      },
      keywords: [
        "xhr",
        "http",
        "ajax",
        "promise",
        "node"
      ],
      author: "Matt Zabriskie",
      license: "MIT",
      bugs: {
        url: "https://github.com/axios/axios/issues"
      },
      homepage: "https://axios-http.com",
      devDependencies: {
        coveralls: "^3.0.0",
        "es6-promise": "^4.2.4",
        grunt: "^1.3.0",
        "grunt-banner": "^0.6.0",
        "grunt-cli": "^1.2.0",
        "grunt-contrib-clean": "^1.1.0",
        "grunt-contrib-watch": "^1.0.0",
        "grunt-eslint": "^23.0.0",
        "grunt-karma": "^4.0.0",
        "grunt-mocha-test": "^0.13.3",
        "grunt-ts": "^6.0.0-beta.19",
        "grunt-webpack": "^4.0.2",
        "istanbul-instrumenter-loader": "^1.0.0",
        "jasmine-core": "^2.4.1",
        karma: "^6.3.2",
        "karma-chrome-launcher": "^3.1.0",
        "karma-firefox-launcher": "^2.1.0",
        "karma-jasmine": "^1.1.1",
        "karma-jasmine-ajax": "^0.1.13",
        "karma-safari-launcher": "^1.0.0",
        "karma-sauce-launcher": "^4.3.6",
        "karma-sinon": "^1.0.5",
        "karma-sourcemap-loader": "^0.3.8",
        "karma-webpack": "^4.0.2",
        "load-grunt-tasks": "^3.5.2",
        minimist: "^1.2.0",
        mocha: "^8.2.1",
        sinon: "^4.5.0",
        "terser-webpack-plugin": "^4.2.3",
        typescript: "^4.0.5",
        "url-search-params": "^0.10.0",
        webpack: "^4.44.2",
        "webpack-dev-server": "^3.11.0"
      },
      browser: {
        "./lib/adapters/http.js": "./lib/adapters/xhr.js"
      },
      jsdelivr: "dist/axios.min.js",
      unpkg: "dist/axios.min.js",
      typings: "./index.d.ts",
      dependencies: {
        "follow-redirects": "^1.14.0"
      },
      bundlesize: [
        {
          path: "./dist/axios.min.js",
          threshold: "5kB"
        }
      ]
    };
  }
});

// node_modules/axios/lib/adapters/http.js
var require_http = __commonJS({
  "node_modules/axios/lib/adapters/http.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var settle = require_settle();
    var buildFullPath = require_buildFullPath();
    var buildURL2 = require_buildURL();
    var http = require("http");
    var https = require("https");
    var httpFollow = require_follow_redirects().http;
    var httpsFollow = require_follow_redirects().https;
    var url = require("url");
    var zlib = require("zlib");
    var pkg = require_package();
    var createError = require_createError();
    var enhanceError = require_enhanceError();
    var isHttps = /https:?/;
    function setProxy(options2, proxy, location) {
      options2.hostname = proxy.host;
      options2.host = proxy.host;
      options2.port = proxy.port;
      options2.path = location;
      if (proxy.auth) {
        var base642 = Buffer.from(proxy.auth.username + ":" + proxy.auth.password, "utf8").toString("base64");
        options2.headers["Proxy-Authorization"] = "Basic " + base642;
      }
      options2.beforeRedirect = function beforeRedirect(redirection) {
        redirection.headers.host = redirection.host;
        setProxy(redirection, proxy, redirection.href);
      };
    }
    module2.exports = function httpAdapter(config) {
      return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {
        var resolve = function resolve2(value) {
          resolvePromise(value);
        };
        var reject = function reject2(value) {
          rejectPromise(value);
        };
        var data = config.data;
        var headers2 = config.headers;
        if ("User-Agent" in headers2 || "user-agent" in headers2) {
          if (!headers2["User-Agent"] && !headers2["user-agent"]) {
            delete headers2["User-Agent"];
            delete headers2["user-agent"];
          }
        } else {
          headers2["User-Agent"] = "axios/" + pkg.version;
        }
        if (data && !utils2.isStream(data)) {
          if (Buffer.isBuffer(data)) {
          } else if (utils2.isArrayBuffer(data)) {
            data = Buffer.from(new Uint8Array(data));
          } else if (utils2.isString(data)) {
            data = Buffer.from(data, "utf-8");
          } else {
            return reject(createError("Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream", config));
          }
          headers2["Content-Length"] = data.length;
        }
        var auth = void 0;
        if (config.auth) {
          var username = config.auth.username || "";
          var password = config.auth.password || "";
          auth = username + ":" + password;
        }
        var fullPath = buildFullPath(config.baseURL, config.url);
        var parsed = url.parse(fullPath);
        var protocol = parsed.protocol || "http:";
        if (!auth && parsed.auth) {
          var urlAuth = parsed.auth.split(":");
          var urlUsername = urlAuth[0] || "";
          var urlPassword = urlAuth[1] || "";
          auth = urlUsername + ":" + urlPassword;
        }
        if (auth) {
          delete headers2.Authorization;
        }
        var isHttpsRequest = isHttps.test(protocol);
        var agent2 = isHttpsRequest ? config.httpsAgent : config.httpAgent;
        var options2 = {
          path: buildURL2(parsed.path, config.params, config.paramsSerializer).replace(/^\?/, ""),
          method: config.method.toUpperCase(),
          headers: headers2,
          agent: agent2,
          agents: { http: config.httpAgent, https: config.httpsAgent },
          auth
        };
        if (config.socketPath) {
          options2.socketPath = config.socketPath;
        } else {
          options2.hostname = parsed.hostname;
          options2.port = parsed.port;
        }
        var proxy = config.proxy;
        if (!proxy && proxy !== false) {
          var proxyEnv = protocol.slice(0, -1) + "_proxy";
          var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];
          if (proxyUrl) {
            var parsedProxyUrl = url.parse(proxyUrl);
            var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;
            var shouldProxy = true;
            if (noProxyEnv) {
              var noProxy = noProxyEnv.split(",").map(function trim(s2) {
                return s2.trim();
              });
              shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {
                if (!proxyElement) {
                  return false;
                }
                if (proxyElement === "*") {
                  return true;
                }
                if (proxyElement[0] === "." && parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement) {
                  return true;
                }
                return parsed.hostname === proxyElement;
              });
            }
            if (shouldProxy) {
              proxy = {
                host: parsedProxyUrl.hostname,
                port: parsedProxyUrl.port,
                protocol: parsedProxyUrl.protocol
              };
              if (parsedProxyUrl.auth) {
                var proxyUrlAuth = parsedProxyUrl.auth.split(":");
                proxy.auth = {
                  username: proxyUrlAuth[0],
                  password: proxyUrlAuth[1]
                };
              }
            }
          }
        }
        if (proxy) {
          options2.headers.host = parsed.hostname + (parsed.port ? ":" + parsed.port : "");
          setProxy(options2, proxy, protocol + "//" + parsed.hostname + (parsed.port ? ":" + parsed.port : "") + options2.path);
        }
        var transport;
        var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);
        if (config.transport) {
          transport = config.transport;
        } else if (config.maxRedirects === 0) {
          transport = isHttpsProxy ? https : http;
        } else {
          if (config.maxRedirects) {
            options2.maxRedirects = config.maxRedirects;
          }
          transport = isHttpsProxy ? httpsFollow : httpFollow;
        }
        if (config.maxBodyLength > -1) {
          options2.maxBodyLength = config.maxBodyLength;
        }
        var req = transport.request(options2, function handleResponse(res) {
          if (req.aborted)
            return;
          var stream2 = res;
          var lastRequest = res.req || req;
          if (res.statusCode !== 204 && lastRequest.method !== "HEAD" && config.decompress !== false) {
            switch (res.headers["content-encoding"]) {
              case "gzip":
              case "compress":
              case "deflate":
                stream2 = stream2.pipe(zlib.createUnzip());
                delete res.headers["content-encoding"];
                break;
            }
          }
          var response2 = {
            status: res.statusCode,
            statusText: res.statusMessage,
            headers: res.headers,
            config,
            request: lastRequest
          };
          if (config.responseType === "stream") {
            response2.data = stream2;
            settle(resolve, reject, response2);
          } else {
            var responseBuffer = [];
            var totalResponseBytes = 0;
            stream2.on("data", function handleStreamData(chunk) {
              responseBuffer.push(chunk);
              totalResponseBytes += chunk.length;
              if (config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength) {
                stream2.destroy();
                reject(createError("maxContentLength size of " + config.maxContentLength + " exceeded", config, null, lastRequest));
              }
            });
            stream2.on("error", function handleStreamError(err) {
              if (req.aborted)
                return;
              reject(enhanceError(err, config, null, lastRequest));
            });
            stream2.on("end", function handleStreamEnd() {
              var responseData = Buffer.concat(responseBuffer);
              if (config.responseType !== "arraybuffer") {
                responseData = responseData.toString(config.responseEncoding);
                if (!config.responseEncoding || config.responseEncoding === "utf8") {
                  responseData = utils2.stripBOM(responseData);
                }
              }
              response2.data = responseData;
              settle(resolve, reject, response2);
            });
          }
        });
        req.on("error", function handleRequestError(err) {
          if (req.aborted && err.code !== "ERR_FR_TOO_MANY_REDIRECTS")
            return;
          reject(enhanceError(err, config, null, req));
        });
        if (config.timeout) {
          var timeout = parseInt(config.timeout, 10);
          if (isNaN(timeout)) {
            reject(createError("error trying to parse `config.timeout` to int", config, "ERR_PARSE_TIMEOUT", req));
            return;
          }
          req.setTimeout(timeout, function handleRequestTimeout() {
            req.abort();
            reject(createError("timeout of " + timeout + "ms exceeded", config, config.transitional && config.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", req));
          });
        }
        if (config.cancelToken) {
          config.cancelToken.promise.then(function onCanceled(cancel) {
            if (req.aborted)
              return;
            req.abort();
            reject(cancel);
          });
        }
        if (utils2.isStream(data)) {
          data.on("error", function handleStreamError(err) {
            reject(enhanceError(err, config, null, req));
          }).pipe(req);
        } else {
          req.end(data);
        }
      });
    };
  }
});

// node_modules/axios/lib/defaults.js
var require_defaults2 = __commonJS({
  "node_modules/axios/lib/defaults.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var normalizeHeaderName = require_normalizeHeaderName();
    var enhanceError = require_enhanceError();
    var DEFAULT_CONTENT_TYPE = {
      "Content-Type": "application/x-www-form-urlencoded"
    };
    function setContentTypeIfUnset(headers2, value) {
      if (!utils2.isUndefined(headers2) && utils2.isUndefined(headers2["Content-Type"])) {
        headers2["Content-Type"] = value;
      }
    }
    function getDefaultAdapter() {
      var adapter;
      if (typeof XMLHttpRequest !== "undefined") {
        adapter = require_xhr();
      } else if (typeof process !== "undefined" && Object.prototype.toString.call(process) === "[object process]") {
        adapter = require_http();
      }
      return adapter;
    }
    function stringifySafely(rawValue, parser, encoder2) {
      if (utils2.isString(rawValue)) {
        try {
          (parser || JSON.parse)(rawValue);
          return utils2.trim(rawValue);
        } catch (e) {
          if (e.name !== "SyntaxError") {
            throw e;
          }
        }
      }
      return (encoder2 || JSON.stringify)(rawValue);
    }
    var defaults = {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: getDefaultAdapter(),
      transformRequest: [function transformRequest(data, headers2) {
        normalizeHeaderName(headers2, "Accept");
        normalizeHeaderName(headers2, "Content-Type");
        if (utils2.isFormData(data) || utils2.isArrayBuffer(data) || utils2.isBuffer(data) || utils2.isStream(data) || utils2.isFile(data) || utils2.isBlob(data)) {
          return data;
        }
        if (utils2.isArrayBufferView(data)) {
          return data.buffer;
        }
        if (utils2.isURLSearchParams(data)) {
          setContentTypeIfUnset(headers2, "application/x-www-form-urlencoded;charset=utf-8");
          return data.toString();
        }
        if (utils2.isObject(data) || headers2 && headers2["Content-Type"] === "application/json") {
          setContentTypeIfUnset(headers2, "application/json");
          return stringifySafely(data);
        }
        return data;
      }],
      transformResponse: [function transformResponse(data) {
        var transitional = this.transitional;
        var silentJSONParsing = transitional && transitional.silentJSONParsing;
        var forcedJSONParsing = transitional && transitional.forcedJSONParsing;
        var strictJSONParsing = !silentJSONParsing && this.responseType === "json";
        if (strictJSONParsing || forcedJSONParsing && utils2.isString(data) && data.length) {
          try {
            return JSON.parse(data);
          } catch (e) {
            if (strictJSONParsing) {
              if (e.name === "SyntaxError") {
                throw enhanceError(e, this, "E_JSON_PARSE");
              }
              throw e;
            }
          }
        }
        return data;
      }],
      timeout: 0,
      xsrfCookieName: "XSRF-TOKEN",
      xsrfHeaderName: "X-XSRF-TOKEN",
      maxContentLength: -1,
      maxBodyLength: -1,
      validateStatus: function validateStatus(status) {
        return status >= 200 && status < 300;
      }
    };
    defaults.headers = {
      common: {
        "Accept": "application/json, text/plain, */*"
      }
    };
    utils2.forEach(["delete", "get", "head"], function forEachMethodNoData(method) {
      defaults.headers[method] = {};
    });
    utils2.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      defaults.headers[method] = utils2.merge(DEFAULT_CONTENT_TYPE);
    });
    module2.exports = defaults;
  }
});

// node_modules/axios/lib/core/transformData.js
var require_transformData = __commonJS({
  "node_modules/axios/lib/core/transformData.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var defaults = require_defaults2();
    module2.exports = function transformData(data, headers2, fns) {
      var context = this || defaults;
      utils2.forEach(fns, function transform(fn) {
        data = fn.call(context, data, headers2);
      });
      return data;
    };
  }
});

// node_modules/axios/lib/cancel/isCancel.js
var require_isCancel = __commonJS({
  "node_modules/axios/lib/cancel/isCancel.js"(exports, module2) {
    "use strict";
    module2.exports = function isCancel(value) {
      return !!(value && value.__CANCEL__);
    };
  }
});

// node_modules/axios/lib/core/dispatchRequest.js
var require_dispatchRequest = __commonJS({
  "node_modules/axios/lib/core/dispatchRequest.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var transformData = require_transformData();
    var isCancel = require_isCancel();
    var defaults = require_defaults2();
    function throwIfCancellationRequested(config) {
      if (config.cancelToken) {
        config.cancelToken.throwIfRequested();
      }
    }
    module2.exports = function dispatchRequest(config) {
      throwIfCancellationRequested(config);
      config.headers = config.headers || {};
      config.data = transformData.call(config, config.data, config.headers, config.transformRequest);
      config.headers = utils2.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers);
      utils2.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function cleanHeaderConfig(method) {
        delete config.headers[method];
      });
      var adapter = config.adapter || defaults.adapter;
      return adapter(config).then(function onAdapterResolution(response2) {
        throwIfCancellationRequested(config);
        response2.data = transformData.call(config, response2.data, response2.headers, config.transformResponse);
        return response2;
      }, function onAdapterRejection(reason) {
        if (!isCancel(reason)) {
          throwIfCancellationRequested(config);
          if (reason && reason.response) {
            reason.response.data = transformData.call(config, reason.response.data, reason.response.headers, config.transformResponse);
          }
        }
        return Promise.reject(reason);
      });
    };
  }
});

// node_modules/axios/lib/core/mergeConfig.js
var require_mergeConfig = __commonJS({
  "node_modules/axios/lib/core/mergeConfig.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    module2.exports = function mergeConfig(config1, config2) {
      config2 = config2 || {};
      var config = {};
      var valueFromConfig2Keys = ["url", "method", "data"];
      var mergeDeepPropertiesKeys = ["headers", "auth", "proxy", "params"];
      var defaultToConfig2Keys = [
        "baseURL",
        "transformRequest",
        "transformResponse",
        "paramsSerializer",
        "timeout",
        "timeoutMessage",
        "withCredentials",
        "adapter",
        "responseType",
        "xsrfCookieName",
        "xsrfHeaderName",
        "onUploadProgress",
        "onDownloadProgress",
        "decompress",
        "maxContentLength",
        "maxBodyLength",
        "maxRedirects",
        "transport",
        "httpAgent",
        "httpsAgent",
        "cancelToken",
        "socketPath",
        "responseEncoding"
      ];
      var directMergeKeys = ["validateStatus"];
      function getMergedValue(target, source) {
        if (utils2.isPlainObject(target) && utils2.isPlainObject(source)) {
          return utils2.merge(target, source);
        } else if (utils2.isPlainObject(source)) {
          return utils2.merge({}, source);
        } else if (utils2.isArray(source)) {
          return source.slice();
        }
        return source;
      }
      function mergeDeepProperties(prop) {
        if (!utils2.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(config1[prop], config2[prop]);
        } else if (!utils2.isUndefined(config1[prop])) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      }
      utils2.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
        if (!utils2.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(void 0, config2[prop]);
        }
      });
      utils2.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);
      utils2.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
        if (!utils2.isUndefined(config2[prop])) {
          config[prop] = getMergedValue(void 0, config2[prop]);
        } else if (!utils2.isUndefined(config1[prop])) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      });
      utils2.forEach(directMergeKeys, function merge2(prop) {
        if (prop in config2) {
          config[prop] = getMergedValue(config1[prop], config2[prop]);
        } else if (prop in config1) {
          config[prop] = getMergedValue(void 0, config1[prop]);
        }
      });
      var axiosKeys = valueFromConfig2Keys.concat(mergeDeepPropertiesKeys).concat(defaultToConfig2Keys).concat(directMergeKeys);
      var otherKeys = Object.keys(config1).concat(Object.keys(config2)).filter(function filterAxiosKeys(key2) {
        return axiosKeys.indexOf(key2) === -1;
      });
      utils2.forEach(otherKeys, mergeDeepProperties);
      return config;
    };
  }
});

// node_modules/axios/lib/helpers/validator.js
var require_validator = __commonJS({
  "node_modules/axios/lib/helpers/validator.js"(exports, module2) {
    "use strict";
    var pkg = require_package();
    var validators = {};
    ["object", "boolean", "number", "function", "string", "symbol"].forEach(function(type, i) {
      validators[type] = function validator2(thing) {
        return typeof thing === type || "a" + (i < 1 ? "n " : " ") + type;
      };
    });
    var deprecatedWarnings = {};
    var currentVerArr = pkg.version.split(".");
    function isOlderVersion(version, thanVersion) {
      var pkgVersionArr = thanVersion ? thanVersion.split(".") : currentVerArr;
      var destVer = version.split(".");
      for (var i = 0; i < 3; i++) {
        if (pkgVersionArr[i] > destVer[i]) {
          return true;
        } else if (pkgVersionArr[i] < destVer[i]) {
          return false;
        }
      }
      return false;
    }
    validators.transitional = function transitional(validator2, version, message) {
      var isDeprecated = version && isOlderVersion(version);
      function formatMessage(opt, desc) {
        return "[Axios v" + pkg.version + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
      }
      return function(value, opt, opts) {
        if (validator2 === false) {
          throw new Error(formatMessage(opt, " has been removed in " + version));
        }
        if (isDeprecated && !deprecatedWarnings[opt]) {
          deprecatedWarnings[opt] = true;
          console.warn(formatMessage(opt, " has been deprecated since v" + version + " and will be removed in the near future"));
        }
        return validator2 ? validator2(value, opt, opts) : true;
      };
    };
    function assertOptions(options2, schema, allowUnknown) {
      if (typeof options2 !== "object") {
        throw new TypeError("options must be an object");
      }
      var keys = Object.keys(options2);
      var i = keys.length;
      while (i-- > 0) {
        var opt = keys[i];
        var validator2 = schema[opt];
        if (validator2) {
          var value = options2[opt];
          var result = value === void 0 || validator2(value, opt, options2);
          if (result !== true) {
            throw new TypeError("option " + opt + " must be " + result);
          }
          continue;
        }
        if (allowUnknown !== true) {
          throw Error("Unknown option " + opt);
        }
      }
    }
    module2.exports = {
      isOlderVersion,
      assertOptions,
      validators
    };
  }
});

// node_modules/axios/lib/core/Axios.js
var require_Axios = __commonJS({
  "node_modules/axios/lib/core/Axios.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var buildURL2 = require_buildURL();
    var InterceptorManager = require_InterceptorManager();
    var dispatchRequest = require_dispatchRequest();
    var mergeConfig = require_mergeConfig();
    var validator2 = require_validator();
    var validators = validator2.validators;
    function Axios(instanceConfig) {
      this.defaults = instanceConfig;
      this.interceptors = {
        request: new InterceptorManager(),
        response: new InterceptorManager()
      };
    }
    Axios.prototype.request = function request2(config) {
      if (typeof config === "string") {
        config = arguments[1] || {};
        config.url = arguments[0];
      } else {
        config = config || {};
      }
      config = mergeConfig(this.defaults, config);
      if (config.method) {
        config.method = config.method.toLowerCase();
      } else if (this.defaults.method) {
        config.method = this.defaults.method.toLowerCase();
      } else {
        config.method = "get";
      }
      var transitional = config.transitional;
      if (transitional !== void 0) {
        validator2.assertOptions(transitional, {
          silentJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
          forcedJSONParsing: validators.transitional(validators.boolean, "1.0.0"),
          clarifyTimeoutError: validators.transitional(validators.boolean, "1.0.0")
        }, false);
      }
      var requestInterceptorChain = [];
      var synchronousRequestInterceptors = true;
      this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
        if (typeof interceptor.runWhen === "function" && interceptor.runWhen(config) === false) {
          return;
        }
        synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;
        requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);
      });
      var responseInterceptorChain = [];
      this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
        responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
      });
      var promise;
      if (!synchronousRequestInterceptors) {
        var chain = [dispatchRequest, void 0];
        Array.prototype.unshift.apply(chain, requestInterceptorChain);
        chain = chain.concat(responseInterceptorChain);
        promise = Promise.resolve(config);
        while (chain.length) {
          promise = promise.then(chain.shift(), chain.shift());
        }
        return promise;
      }
      var newConfig = config;
      while (requestInterceptorChain.length) {
        var onFulfilled = requestInterceptorChain.shift();
        var onRejected = requestInterceptorChain.shift();
        try {
          newConfig = onFulfilled(newConfig);
        } catch (error2) {
          onRejected(error2);
          break;
        }
      }
      try {
        promise = dispatchRequest(newConfig);
      } catch (error2) {
        return Promise.reject(error2);
      }
      while (responseInterceptorChain.length) {
        promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());
      }
      return promise;
    };
    Axios.prototype.getUri = function getUri(config) {
      config = mergeConfig(this.defaults, config);
      return buildURL2(config.url, config.params, config.paramsSerializer).replace(/^\?/, "");
    };
    utils2.forEach(["delete", "get", "head", "options"], function forEachMethodNoData(method) {
      Axios.prototype[method] = function(url, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data: (config || {}).data
        }));
      };
    });
    utils2.forEach(["post", "put", "patch"], function forEachMethodWithData(method) {
      Axios.prototype[method] = function(url, data, config) {
        return this.request(mergeConfig(config || {}, {
          method,
          url,
          data
        }));
      };
    });
    module2.exports = Axios;
  }
});

// node_modules/axios/lib/cancel/Cancel.js
var require_Cancel = __commonJS({
  "node_modules/axios/lib/cancel/Cancel.js"(exports, module2) {
    "use strict";
    function Cancel(message) {
      this.message = message;
    }
    Cancel.prototype.toString = function toString() {
      return "Cancel" + (this.message ? ": " + this.message : "");
    };
    Cancel.prototype.__CANCEL__ = true;
    module2.exports = Cancel;
  }
});

// node_modules/axios/lib/cancel/CancelToken.js
var require_CancelToken = __commonJS({
  "node_modules/axios/lib/cancel/CancelToken.js"(exports, module2) {
    "use strict";
    var Cancel = require_Cancel();
    function CancelToken(executor) {
      if (typeof executor !== "function") {
        throw new TypeError("executor must be a function.");
      }
      var resolvePromise;
      this.promise = new Promise(function promiseExecutor(resolve) {
        resolvePromise = resolve;
      });
      var token = this;
      executor(function cancel(message) {
        if (token.reason) {
          return;
        }
        token.reason = new Cancel(message);
        resolvePromise(token.reason);
      });
    }
    CancelToken.prototype.throwIfRequested = function throwIfRequested() {
      if (this.reason) {
        throw this.reason;
      }
    };
    CancelToken.source = function source() {
      var cancel;
      var token = new CancelToken(function executor(c) {
        cancel = c;
      });
      return {
        token,
        cancel
      };
    };
    module2.exports = CancelToken;
  }
});

// node_modules/axios/lib/helpers/spread.js
var require_spread = __commonJS({
  "node_modules/axios/lib/helpers/spread.js"(exports, module2) {
    "use strict";
    module2.exports = function spread2(callback) {
      return function wrap(arr) {
        return callback.apply(null, arr);
      };
    };
  }
});

// node_modules/axios/lib/helpers/isAxiosError.js
var require_isAxiosError = __commonJS({
  "node_modules/axios/lib/helpers/isAxiosError.js"(exports, module2) {
    "use strict";
    module2.exports = function isAxiosError(payload) {
      return typeof payload === "object" && payload.isAxiosError === true;
    };
  }
});

// node_modules/axios/lib/axios.js
var require_axios = __commonJS({
  "node_modules/axios/lib/axios.js"(exports, module2) {
    "use strict";
    var utils2 = require_utils2();
    var bind = require_bind();
    var Axios = require_Axios();
    var mergeConfig = require_mergeConfig();
    var defaults = require_defaults2();
    function createInstance(defaultConfig) {
      var context = new Axios(defaultConfig);
      var instance = bind(Axios.prototype.request, context);
      utils2.extend(instance, Axios.prototype, context);
      utils2.extend(instance, context);
      return instance;
    }
    var axios = createInstance(defaults);
    axios.Axios = Axios;
    axios.create = function create(instanceConfig) {
      return createInstance(mergeConfig(axios.defaults, instanceConfig));
    };
    axios.Cancel = require_Cancel();
    axios.CancelToken = require_CancelToken();
    axios.isCancel = require_isCancel();
    axios.all = function all(promises) {
      return Promise.all(promises);
    };
    axios.spread = require_spread();
    axios.isAxiosError = require_isAxiosError();
    module2.exports = axios;
    module2.exports.default = axios;
  }
});

// node_modules/axios/index.js
var require_axios2 = __commonJS({
  "node_modules/axios/index.js"(exports, module2) {
    module2.exports = require_axios();
  }
});

// node_modules/detect-node/index.js
var require_detect_node = __commonJS({
  "node_modules/detect-node/index.js"(exports, module2) {
    module2.exports = Object.prototype.toString.call(typeof process !== "undefined" ? process : 0) === "[object process]";
  }
});

// node_modules/delayed-stream/lib/delayed_stream.js
var require_delayed_stream = __commonJS({
  "node_modules/delayed-stream/lib/delayed_stream.js"(exports, module2) {
    var Stream = require("stream").Stream;
    var util2 = require("util");
    module2.exports = DelayedStream;
    function DelayedStream() {
      this.source = null;
      this.dataSize = 0;
      this.maxDataSize = 1024 * 1024;
      this.pauseStream = true;
      this._maxDataSizeExceeded = false;
      this._released = false;
      this._bufferedEvents = [];
    }
    util2.inherits(DelayedStream, Stream);
    DelayedStream.create = function(source, options2) {
      var delayedStream = new this();
      options2 = options2 || {};
      for (var option in options2) {
        delayedStream[option] = options2[option];
      }
      delayedStream.source = source;
      var realEmit = source.emit;
      source.emit = function() {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
      };
      source.on("error", function() {
      });
      if (delayedStream.pauseStream) {
        source.pause();
      }
      return delayedStream;
    };
    Object.defineProperty(DelayedStream.prototype, "readable", {
      configurable: true,
      enumerable: true,
      get: function() {
        return this.source.readable;
      }
    });
    DelayedStream.prototype.setEncoding = function() {
      return this.source.setEncoding.apply(this.source, arguments);
    };
    DelayedStream.prototype.resume = function() {
      if (!this._released) {
        this.release();
      }
      this.source.resume();
    };
    DelayedStream.prototype.pause = function() {
      this.source.pause();
    };
    DelayedStream.prototype.release = function() {
      this._released = true;
      this._bufferedEvents.forEach(function(args) {
        this.emit.apply(this, args);
      }.bind(this));
      this._bufferedEvents = [];
    };
    DelayedStream.prototype.pipe = function() {
      var r = Stream.prototype.pipe.apply(this, arguments);
      this.resume();
      return r;
    };
    DelayedStream.prototype._handleEmit = function(args) {
      if (this._released) {
        this.emit.apply(this, args);
        return;
      }
      if (args[0] === "data") {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
      }
      this._bufferedEvents.push(args);
    };
    DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
      if (this._maxDataSizeExceeded) {
        return;
      }
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      this._maxDataSizeExceeded = true;
      var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
      this.emit("error", new Error(message));
    };
  }
});

// node_modules/combined-stream/lib/combined_stream.js
var require_combined_stream = __commonJS({
  "node_modules/combined-stream/lib/combined_stream.js"(exports, module2) {
    var util2 = require("util");
    var Stream = require("stream").Stream;
    var DelayedStream = require_delayed_stream();
    module2.exports = CombinedStream;
    function CombinedStream() {
      this.writable = false;
      this.readable = true;
      this.dataSize = 0;
      this.maxDataSize = 2 * 1024 * 1024;
      this.pauseStreams = true;
      this._released = false;
      this._streams = [];
      this._currentStream = null;
      this._insideLoop = false;
      this._pendingNext = false;
    }
    util2.inherits(CombinedStream, Stream);
    CombinedStream.create = function(options2) {
      var combinedStream = new this();
      options2 = options2 || {};
      for (var option in options2) {
        combinedStream[option] = options2[option];
      }
      return combinedStream;
    };
    CombinedStream.isStreamLike = function(stream2) {
      return typeof stream2 !== "function" && typeof stream2 !== "string" && typeof stream2 !== "boolean" && typeof stream2 !== "number" && !Buffer.isBuffer(stream2);
    };
    CombinedStream.prototype.append = function(stream2) {
      var isStreamLike = CombinedStream.isStreamLike(stream2);
      if (isStreamLike) {
        if (!(stream2 instanceof DelayedStream)) {
          var newStream = DelayedStream.create(stream2, {
            maxDataSize: Infinity,
            pauseStream: this.pauseStreams
          });
          stream2.on("data", this._checkDataSize.bind(this));
          stream2 = newStream;
        }
        this._handleErrors(stream2);
        if (this.pauseStreams) {
          stream2.pause();
        }
      }
      this._streams.push(stream2);
      return this;
    };
    CombinedStream.prototype.pipe = function(dest, options2) {
      Stream.prototype.pipe.call(this, dest, options2);
      this.resume();
      return dest;
    };
    CombinedStream.prototype._getNext = function() {
      this._currentStream = null;
      if (this._insideLoop) {
        this._pendingNext = true;
        return;
      }
      this._insideLoop = true;
      try {
        do {
          this._pendingNext = false;
          this._realGetNext();
        } while (this._pendingNext);
      } finally {
        this._insideLoop = false;
      }
    };
    CombinedStream.prototype._realGetNext = function() {
      var stream2 = this._streams.shift();
      if (typeof stream2 == "undefined") {
        this.end();
        return;
      }
      if (typeof stream2 !== "function") {
        this._pipeNext(stream2);
        return;
      }
      var getStream = stream2;
      getStream(function(stream3) {
        var isStreamLike = CombinedStream.isStreamLike(stream3);
        if (isStreamLike) {
          stream3.on("data", this._checkDataSize.bind(this));
          this._handleErrors(stream3);
        }
        this._pipeNext(stream3);
      }.bind(this));
    };
    CombinedStream.prototype._pipeNext = function(stream2) {
      this._currentStream = stream2;
      var isStreamLike = CombinedStream.isStreamLike(stream2);
      if (isStreamLike) {
        stream2.on("end", this._getNext.bind(this));
        stream2.pipe(this, { end: false });
        return;
      }
      var value = stream2;
      this.write(value);
      this._getNext();
    };
    CombinedStream.prototype._handleErrors = function(stream2) {
      var self2 = this;
      stream2.on("error", function(err) {
        self2._emitError(err);
      });
    };
    CombinedStream.prototype.write = function(data) {
      this.emit("data", data);
    };
    CombinedStream.prototype.pause = function() {
      if (!this.pauseStreams) {
        return;
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == "function")
        this._currentStream.pause();
      this.emit("pause");
    };
    CombinedStream.prototype.resume = function() {
      if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
      }
      if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == "function")
        this._currentStream.resume();
      this.emit("resume");
    };
    CombinedStream.prototype.end = function() {
      this._reset();
      this.emit("end");
    };
    CombinedStream.prototype.destroy = function() {
      this._reset();
      this.emit("close");
    };
    CombinedStream.prototype._reset = function() {
      this.writable = false;
      this._streams = [];
      this._currentStream = null;
    };
    CombinedStream.prototype._checkDataSize = function() {
      this._updateDataSize();
      if (this.dataSize <= this.maxDataSize) {
        return;
      }
      var message = "DelayedStream#maxDataSize of " + this.maxDataSize + " bytes exceeded.";
      this._emitError(new Error(message));
    };
    CombinedStream.prototype._updateDataSize = function() {
      this.dataSize = 0;
      var self2 = this;
      this._streams.forEach(function(stream2) {
        if (!stream2.dataSize) {
          return;
        }
        self2.dataSize += stream2.dataSize;
      });
      if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
      }
    };
    CombinedStream.prototype._emitError = function(err) {
      this._reset();
      this.emit("error", err);
    };
  }
});

// node_modules/mime-db/db.json
var require_db = __commonJS({
  "node_modules/mime-db/db.json"(exports, module2) {
    module2.exports = {
      "application/1d-interleaved-parityfec": {
        source: "iana"
      },
      "application/3gpdash-qoe-report+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/3gpp-ims+xml": {
        source: "iana",
        compressible: true
      },
      "application/3gpphal+json": {
        source: "iana",
        compressible: true
      },
      "application/3gpphalforms+json": {
        source: "iana",
        compressible: true
      },
      "application/a2l": {
        source: "iana"
      },
      "application/ace+cbor": {
        source: "iana"
      },
      "application/activemessage": {
        source: "iana"
      },
      "application/activity+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-costmap+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-costmapfilter+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-directory+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointcost+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointcostparams+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointprop+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-endpointpropparams+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-error+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-networkmap+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-networkmapfilter+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-updatestreamcontrol+json": {
        source: "iana",
        compressible: true
      },
      "application/alto-updatestreamparams+json": {
        source: "iana",
        compressible: true
      },
      "application/aml": {
        source: "iana"
      },
      "application/andrew-inset": {
        source: "iana",
        extensions: ["ez"]
      },
      "application/applefile": {
        source: "iana"
      },
      "application/applixware": {
        source: "apache",
        extensions: ["aw"]
      },
      "application/at+jwt": {
        source: "iana"
      },
      "application/atf": {
        source: "iana"
      },
      "application/atfx": {
        source: "iana"
      },
      "application/atom+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atom"]
      },
      "application/atomcat+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomcat"]
      },
      "application/atomdeleted+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomdeleted"]
      },
      "application/atomicmail": {
        source: "iana"
      },
      "application/atomsvc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["atomsvc"]
      },
      "application/atsc-dwd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dwd"]
      },
      "application/atsc-dynamic-event-message": {
        source: "iana"
      },
      "application/atsc-held+xml": {
        source: "iana",
        compressible: true,
        extensions: ["held"]
      },
      "application/atsc-rdt+json": {
        source: "iana",
        compressible: true
      },
      "application/atsc-rsat+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rsat"]
      },
      "application/atxml": {
        source: "iana"
      },
      "application/auth-policy+xml": {
        source: "iana",
        compressible: true
      },
      "application/bacnet-xdd+zip": {
        source: "iana",
        compressible: false
      },
      "application/batch-smtp": {
        source: "iana"
      },
      "application/bdoc": {
        compressible: false,
        extensions: ["bdoc"]
      },
      "application/beep+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/calendar+json": {
        source: "iana",
        compressible: true
      },
      "application/calendar+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xcs"]
      },
      "application/call-completion": {
        source: "iana"
      },
      "application/cals-1840": {
        source: "iana"
      },
      "application/captive+json": {
        source: "iana",
        compressible: true
      },
      "application/cbor": {
        source: "iana"
      },
      "application/cbor-seq": {
        source: "iana"
      },
      "application/cccex": {
        source: "iana"
      },
      "application/ccmp+xml": {
        source: "iana",
        compressible: true
      },
      "application/ccxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ccxml"]
      },
      "application/cdfx+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cdfx"]
      },
      "application/cdmi-capability": {
        source: "iana",
        extensions: ["cdmia"]
      },
      "application/cdmi-container": {
        source: "iana",
        extensions: ["cdmic"]
      },
      "application/cdmi-domain": {
        source: "iana",
        extensions: ["cdmid"]
      },
      "application/cdmi-object": {
        source: "iana",
        extensions: ["cdmio"]
      },
      "application/cdmi-queue": {
        source: "iana",
        extensions: ["cdmiq"]
      },
      "application/cdni": {
        source: "iana"
      },
      "application/cea": {
        source: "iana"
      },
      "application/cea-2018+xml": {
        source: "iana",
        compressible: true
      },
      "application/cellml+xml": {
        source: "iana",
        compressible: true
      },
      "application/cfw": {
        source: "iana"
      },
      "application/city+json": {
        source: "iana",
        compressible: true
      },
      "application/clr": {
        source: "iana"
      },
      "application/clue+xml": {
        source: "iana",
        compressible: true
      },
      "application/clue_info+xml": {
        source: "iana",
        compressible: true
      },
      "application/cms": {
        source: "iana"
      },
      "application/cnrp+xml": {
        source: "iana",
        compressible: true
      },
      "application/coap-group+json": {
        source: "iana",
        compressible: true
      },
      "application/coap-payload": {
        source: "iana"
      },
      "application/commonground": {
        source: "iana"
      },
      "application/conference-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/cose": {
        source: "iana"
      },
      "application/cose-key": {
        source: "iana"
      },
      "application/cose-key-set": {
        source: "iana"
      },
      "application/cpl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cpl"]
      },
      "application/csrattrs": {
        source: "iana"
      },
      "application/csta+xml": {
        source: "iana",
        compressible: true
      },
      "application/cstadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/csvm+json": {
        source: "iana",
        compressible: true
      },
      "application/cu-seeme": {
        source: "apache",
        extensions: ["cu"]
      },
      "application/cwt": {
        source: "iana"
      },
      "application/cybercash": {
        source: "iana"
      },
      "application/dart": {
        compressible: true
      },
      "application/dash+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpd"]
      },
      "application/dash-patch+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpp"]
      },
      "application/dashdelta": {
        source: "iana"
      },
      "application/davmount+xml": {
        source: "iana",
        compressible: true,
        extensions: ["davmount"]
      },
      "application/dca-rft": {
        source: "iana"
      },
      "application/dcd": {
        source: "iana"
      },
      "application/dec-dx": {
        source: "iana"
      },
      "application/dialog-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/dicom": {
        source: "iana"
      },
      "application/dicom+json": {
        source: "iana",
        compressible: true
      },
      "application/dicom+xml": {
        source: "iana",
        compressible: true
      },
      "application/dii": {
        source: "iana"
      },
      "application/dit": {
        source: "iana"
      },
      "application/dns": {
        source: "iana"
      },
      "application/dns+json": {
        source: "iana",
        compressible: true
      },
      "application/dns-message": {
        source: "iana"
      },
      "application/docbook+xml": {
        source: "apache",
        compressible: true,
        extensions: ["dbk"]
      },
      "application/dots+cbor": {
        source: "iana"
      },
      "application/dskpp+xml": {
        source: "iana",
        compressible: true
      },
      "application/dssc+der": {
        source: "iana",
        extensions: ["dssc"]
      },
      "application/dssc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdssc"]
      },
      "application/dvcs": {
        source: "iana"
      },
      "application/ecmascript": {
        source: "iana",
        compressible: true,
        extensions: ["es", "ecma"]
      },
      "application/edi-consent": {
        source: "iana"
      },
      "application/edi-x12": {
        source: "iana",
        compressible: false
      },
      "application/edifact": {
        source: "iana",
        compressible: false
      },
      "application/efi": {
        source: "iana"
      },
      "application/elm+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/elm+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.cap+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/emergencycalldata.comment+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.control+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.deviceinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.ecall.msd": {
        source: "iana"
      },
      "application/emergencycalldata.providerinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.serviceinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.subscriberinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/emergencycalldata.veds+xml": {
        source: "iana",
        compressible: true
      },
      "application/emma+xml": {
        source: "iana",
        compressible: true,
        extensions: ["emma"]
      },
      "application/emotionml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["emotionml"]
      },
      "application/encaprtp": {
        source: "iana"
      },
      "application/epp+xml": {
        source: "iana",
        compressible: true
      },
      "application/epub+zip": {
        source: "iana",
        compressible: false,
        extensions: ["epub"]
      },
      "application/eshop": {
        source: "iana"
      },
      "application/exi": {
        source: "iana",
        extensions: ["exi"]
      },
      "application/expect-ct-report+json": {
        source: "iana",
        compressible: true
      },
      "application/express": {
        source: "iana",
        extensions: ["exp"]
      },
      "application/fastinfoset": {
        source: "iana"
      },
      "application/fastsoap": {
        source: "iana"
      },
      "application/fdt+xml": {
        source: "iana",
        compressible: true,
        extensions: ["fdt"]
      },
      "application/fhir+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/fhir+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/fido.trusted-apps+json": {
        compressible: true
      },
      "application/fits": {
        source: "iana"
      },
      "application/flexfec": {
        source: "iana"
      },
      "application/font-sfnt": {
        source: "iana"
      },
      "application/font-tdpfr": {
        source: "iana",
        extensions: ["pfr"]
      },
      "application/font-woff": {
        source: "iana",
        compressible: false
      },
      "application/framework-attributes+xml": {
        source: "iana",
        compressible: true
      },
      "application/geo+json": {
        source: "iana",
        compressible: true,
        extensions: ["geojson"]
      },
      "application/geo+json-seq": {
        source: "iana"
      },
      "application/geopackage+sqlite3": {
        source: "iana"
      },
      "application/geoxacml+xml": {
        source: "iana",
        compressible: true
      },
      "application/gltf-buffer": {
        source: "iana"
      },
      "application/gml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["gml"]
      },
      "application/gpx+xml": {
        source: "apache",
        compressible: true,
        extensions: ["gpx"]
      },
      "application/gxf": {
        source: "apache",
        extensions: ["gxf"]
      },
      "application/gzip": {
        source: "iana",
        compressible: false,
        extensions: ["gz"]
      },
      "application/h224": {
        source: "iana"
      },
      "application/held+xml": {
        source: "iana",
        compressible: true
      },
      "application/hjson": {
        extensions: ["hjson"]
      },
      "application/http": {
        source: "iana"
      },
      "application/hyperstudio": {
        source: "iana",
        extensions: ["stk"]
      },
      "application/ibe-key-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/ibe-pkg-reply+xml": {
        source: "iana",
        compressible: true
      },
      "application/ibe-pp-data": {
        source: "iana"
      },
      "application/iges": {
        source: "iana"
      },
      "application/im-iscomposing+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/index": {
        source: "iana"
      },
      "application/index.cmd": {
        source: "iana"
      },
      "application/index.obj": {
        source: "iana"
      },
      "application/index.response": {
        source: "iana"
      },
      "application/index.vnd": {
        source: "iana"
      },
      "application/inkml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ink", "inkml"]
      },
      "application/iotp": {
        source: "iana"
      },
      "application/ipfix": {
        source: "iana",
        extensions: ["ipfix"]
      },
      "application/ipp": {
        source: "iana"
      },
      "application/isup": {
        source: "iana"
      },
      "application/its+xml": {
        source: "iana",
        compressible: true,
        extensions: ["its"]
      },
      "application/java-archive": {
        source: "apache",
        compressible: false,
        extensions: ["jar", "war", "ear"]
      },
      "application/java-serialized-object": {
        source: "apache",
        compressible: false,
        extensions: ["ser"]
      },
      "application/java-vm": {
        source: "apache",
        compressible: false,
        extensions: ["class"]
      },
      "application/javascript": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["js", "mjs"]
      },
      "application/jf2feed+json": {
        source: "iana",
        compressible: true
      },
      "application/jose": {
        source: "iana"
      },
      "application/jose+json": {
        source: "iana",
        compressible: true
      },
      "application/jrd+json": {
        source: "iana",
        compressible: true
      },
      "application/jscalendar+json": {
        source: "iana",
        compressible: true
      },
      "application/json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["json", "map"]
      },
      "application/json-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/json-seq": {
        source: "iana"
      },
      "application/json5": {
        extensions: ["json5"]
      },
      "application/jsonml+json": {
        source: "apache",
        compressible: true,
        extensions: ["jsonml"]
      },
      "application/jwk+json": {
        source: "iana",
        compressible: true
      },
      "application/jwk-set+json": {
        source: "iana",
        compressible: true
      },
      "application/jwt": {
        source: "iana"
      },
      "application/kpml-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/kpml-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/ld+json": {
        source: "iana",
        compressible: true,
        extensions: ["jsonld"]
      },
      "application/lgr+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lgr"]
      },
      "application/link-format": {
        source: "iana"
      },
      "application/load-control+xml": {
        source: "iana",
        compressible: true
      },
      "application/lost+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lostxml"]
      },
      "application/lostsync+xml": {
        source: "iana",
        compressible: true
      },
      "application/lpf+zip": {
        source: "iana",
        compressible: false
      },
      "application/lxf": {
        source: "iana"
      },
      "application/mac-binhex40": {
        source: "iana",
        extensions: ["hqx"]
      },
      "application/mac-compactpro": {
        source: "apache",
        extensions: ["cpt"]
      },
      "application/macwriteii": {
        source: "iana"
      },
      "application/mads+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mads"]
      },
      "application/manifest+json": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["webmanifest"]
      },
      "application/marc": {
        source: "iana",
        extensions: ["mrc"]
      },
      "application/marcxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mrcx"]
      },
      "application/mathematica": {
        source: "iana",
        extensions: ["ma", "nb", "mb"]
      },
      "application/mathml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mathml"]
      },
      "application/mathml-content+xml": {
        source: "iana",
        compressible: true
      },
      "application/mathml-presentation+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-associated-procedure-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-deregister+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-envelope+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-msk+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-msk-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-protection-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-reception-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-register+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-register-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-schedule+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbms-user-service-description+xml": {
        source: "iana",
        compressible: true
      },
      "application/mbox": {
        source: "iana",
        extensions: ["mbox"]
      },
      "application/media-policy-dataset+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpf"]
      },
      "application/media_control+xml": {
        source: "iana",
        compressible: true
      },
      "application/mediaservercontrol+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mscml"]
      },
      "application/merge-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/metalink+xml": {
        source: "apache",
        compressible: true,
        extensions: ["metalink"]
      },
      "application/metalink4+xml": {
        source: "iana",
        compressible: true,
        extensions: ["meta4"]
      },
      "application/mets+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mets"]
      },
      "application/mf4": {
        source: "iana"
      },
      "application/mikey": {
        source: "iana"
      },
      "application/mipc": {
        source: "iana"
      },
      "application/missing-blocks+cbor-seq": {
        source: "iana"
      },
      "application/mmt-aei+xml": {
        source: "iana",
        compressible: true,
        extensions: ["maei"]
      },
      "application/mmt-usd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["musd"]
      },
      "application/mods+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mods"]
      },
      "application/moss-keys": {
        source: "iana"
      },
      "application/moss-signature": {
        source: "iana"
      },
      "application/mosskey-data": {
        source: "iana"
      },
      "application/mosskey-request": {
        source: "iana"
      },
      "application/mp21": {
        source: "iana",
        extensions: ["m21", "mp21"]
      },
      "application/mp4": {
        source: "iana",
        extensions: ["mp4s", "m4p"]
      },
      "application/mpeg4-generic": {
        source: "iana"
      },
      "application/mpeg4-iod": {
        source: "iana"
      },
      "application/mpeg4-iod-xmt": {
        source: "iana"
      },
      "application/mrb-consumer+xml": {
        source: "iana",
        compressible: true
      },
      "application/mrb-publish+xml": {
        source: "iana",
        compressible: true
      },
      "application/msc-ivr+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/msc-mixer+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/msword": {
        source: "iana",
        compressible: false,
        extensions: ["doc", "dot"]
      },
      "application/mud+json": {
        source: "iana",
        compressible: true
      },
      "application/multipart-core": {
        source: "iana"
      },
      "application/mxf": {
        source: "iana",
        extensions: ["mxf"]
      },
      "application/n-quads": {
        source: "iana",
        extensions: ["nq"]
      },
      "application/n-triples": {
        source: "iana",
        extensions: ["nt"]
      },
      "application/nasdata": {
        source: "iana"
      },
      "application/news-checkgroups": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-groupinfo": {
        source: "iana",
        charset: "US-ASCII"
      },
      "application/news-transmission": {
        source: "iana"
      },
      "application/nlsml+xml": {
        source: "iana",
        compressible: true
      },
      "application/node": {
        source: "iana",
        extensions: ["cjs"]
      },
      "application/nss": {
        source: "iana"
      },
      "application/oauth-authz-req+jwt": {
        source: "iana"
      },
      "application/oblivious-dns-message": {
        source: "iana"
      },
      "application/ocsp-request": {
        source: "iana"
      },
      "application/ocsp-response": {
        source: "iana"
      },
      "application/octet-stream": {
        source: "iana",
        compressible: false,
        extensions: ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"]
      },
      "application/oda": {
        source: "iana",
        extensions: ["oda"]
      },
      "application/odm+xml": {
        source: "iana",
        compressible: true
      },
      "application/odx": {
        source: "iana"
      },
      "application/oebps-package+xml": {
        source: "iana",
        compressible: true,
        extensions: ["opf"]
      },
      "application/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["ogx"]
      },
      "application/omdoc+xml": {
        source: "apache",
        compressible: true,
        extensions: ["omdoc"]
      },
      "application/onenote": {
        source: "apache",
        extensions: ["onetoc", "onetoc2", "onetmp", "onepkg"]
      },
      "application/opc-nodeset+xml": {
        source: "iana",
        compressible: true
      },
      "application/oscore": {
        source: "iana"
      },
      "application/oxps": {
        source: "iana",
        extensions: ["oxps"]
      },
      "application/p21": {
        source: "iana"
      },
      "application/p21+zip": {
        source: "iana",
        compressible: false
      },
      "application/p2p-overlay+xml": {
        source: "iana",
        compressible: true,
        extensions: ["relo"]
      },
      "application/parityfec": {
        source: "iana"
      },
      "application/passport": {
        source: "iana"
      },
      "application/patch-ops-error+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xer"]
      },
      "application/pdf": {
        source: "iana",
        compressible: false,
        extensions: ["pdf"]
      },
      "application/pdx": {
        source: "iana"
      },
      "application/pem-certificate-chain": {
        source: "iana"
      },
      "application/pgp-encrypted": {
        source: "iana",
        compressible: false,
        extensions: ["pgp"]
      },
      "application/pgp-keys": {
        source: "iana",
        extensions: ["asc"]
      },
      "application/pgp-signature": {
        source: "iana",
        extensions: ["asc", "sig"]
      },
      "application/pics-rules": {
        source: "apache",
        extensions: ["prf"]
      },
      "application/pidf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/pidf-diff+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/pkcs10": {
        source: "iana",
        extensions: ["p10"]
      },
      "application/pkcs12": {
        source: "iana"
      },
      "application/pkcs7-mime": {
        source: "iana",
        extensions: ["p7m", "p7c"]
      },
      "application/pkcs7-signature": {
        source: "iana",
        extensions: ["p7s"]
      },
      "application/pkcs8": {
        source: "iana",
        extensions: ["p8"]
      },
      "application/pkcs8-encrypted": {
        source: "iana"
      },
      "application/pkix-attr-cert": {
        source: "iana",
        extensions: ["ac"]
      },
      "application/pkix-cert": {
        source: "iana",
        extensions: ["cer"]
      },
      "application/pkix-crl": {
        source: "iana",
        extensions: ["crl"]
      },
      "application/pkix-pkipath": {
        source: "iana",
        extensions: ["pkipath"]
      },
      "application/pkixcmp": {
        source: "iana",
        extensions: ["pki"]
      },
      "application/pls+xml": {
        source: "iana",
        compressible: true,
        extensions: ["pls"]
      },
      "application/poc-settings+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/postscript": {
        source: "iana",
        compressible: true,
        extensions: ["ai", "eps", "ps"]
      },
      "application/ppsp-tracker+json": {
        source: "iana",
        compressible: true
      },
      "application/problem+json": {
        source: "iana",
        compressible: true
      },
      "application/problem+xml": {
        source: "iana",
        compressible: true
      },
      "application/provenance+xml": {
        source: "iana",
        compressible: true,
        extensions: ["provx"]
      },
      "application/prs.alvestrand.titrax-sheet": {
        source: "iana"
      },
      "application/prs.cww": {
        source: "iana",
        extensions: ["cww"]
      },
      "application/prs.cyn": {
        source: "iana",
        charset: "7-BIT"
      },
      "application/prs.hpub+zip": {
        source: "iana",
        compressible: false
      },
      "application/prs.nprend": {
        source: "iana"
      },
      "application/prs.plucker": {
        source: "iana"
      },
      "application/prs.rdf-xml-crypt": {
        source: "iana"
      },
      "application/prs.xsf+xml": {
        source: "iana",
        compressible: true
      },
      "application/pskc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["pskcxml"]
      },
      "application/pvd+json": {
        source: "iana",
        compressible: true
      },
      "application/qsig": {
        source: "iana"
      },
      "application/raml+yaml": {
        compressible: true,
        extensions: ["raml"]
      },
      "application/raptorfec": {
        source: "iana"
      },
      "application/rdap+json": {
        source: "iana",
        compressible: true
      },
      "application/rdf+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rdf", "owl"]
      },
      "application/reginfo+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rif"]
      },
      "application/relax-ng-compact-syntax": {
        source: "iana",
        extensions: ["rnc"]
      },
      "application/remote-printing": {
        source: "iana"
      },
      "application/reputon+json": {
        source: "iana",
        compressible: true
      },
      "application/resource-lists+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rl"]
      },
      "application/resource-lists-diff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rld"]
      },
      "application/rfc+xml": {
        source: "iana",
        compressible: true
      },
      "application/riscos": {
        source: "iana"
      },
      "application/rlmi+xml": {
        source: "iana",
        compressible: true
      },
      "application/rls-services+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rs"]
      },
      "application/route-apd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rapd"]
      },
      "application/route-s-tsid+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sls"]
      },
      "application/route-usd+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rusd"]
      },
      "application/rpki-ghostbusters": {
        source: "iana",
        extensions: ["gbr"]
      },
      "application/rpki-manifest": {
        source: "iana",
        extensions: ["mft"]
      },
      "application/rpki-publication": {
        source: "iana"
      },
      "application/rpki-roa": {
        source: "iana",
        extensions: ["roa"]
      },
      "application/rpki-updown": {
        source: "iana"
      },
      "application/rsd+xml": {
        source: "apache",
        compressible: true,
        extensions: ["rsd"]
      },
      "application/rss+xml": {
        source: "apache",
        compressible: true,
        extensions: ["rss"]
      },
      "application/rtf": {
        source: "iana",
        compressible: true,
        extensions: ["rtf"]
      },
      "application/rtploopback": {
        source: "iana"
      },
      "application/rtx": {
        source: "iana"
      },
      "application/samlassertion+xml": {
        source: "iana",
        compressible: true
      },
      "application/samlmetadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/sarif+json": {
        source: "iana",
        compressible: true
      },
      "application/sarif-external-properties+json": {
        source: "iana",
        compressible: true
      },
      "application/sbe": {
        source: "iana"
      },
      "application/sbml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sbml"]
      },
      "application/scaip+xml": {
        source: "iana",
        compressible: true
      },
      "application/scim+json": {
        source: "iana",
        compressible: true
      },
      "application/scvp-cv-request": {
        source: "iana",
        extensions: ["scq"]
      },
      "application/scvp-cv-response": {
        source: "iana",
        extensions: ["scs"]
      },
      "application/scvp-vp-request": {
        source: "iana",
        extensions: ["spq"]
      },
      "application/scvp-vp-response": {
        source: "iana",
        extensions: ["spp"]
      },
      "application/sdp": {
        source: "iana",
        extensions: ["sdp"]
      },
      "application/secevent+jwt": {
        source: "iana"
      },
      "application/senml+cbor": {
        source: "iana"
      },
      "application/senml+json": {
        source: "iana",
        compressible: true
      },
      "application/senml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["senmlx"]
      },
      "application/senml-etch+cbor": {
        source: "iana"
      },
      "application/senml-etch+json": {
        source: "iana",
        compressible: true
      },
      "application/senml-exi": {
        source: "iana"
      },
      "application/sensml+cbor": {
        source: "iana"
      },
      "application/sensml+json": {
        source: "iana",
        compressible: true
      },
      "application/sensml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sensmlx"]
      },
      "application/sensml-exi": {
        source: "iana"
      },
      "application/sep+xml": {
        source: "iana",
        compressible: true
      },
      "application/sep-exi": {
        source: "iana"
      },
      "application/session-info": {
        source: "iana"
      },
      "application/set-payment": {
        source: "iana"
      },
      "application/set-payment-initiation": {
        source: "iana",
        extensions: ["setpay"]
      },
      "application/set-registration": {
        source: "iana"
      },
      "application/set-registration-initiation": {
        source: "iana",
        extensions: ["setreg"]
      },
      "application/sgml": {
        source: "iana"
      },
      "application/sgml-open-catalog": {
        source: "iana"
      },
      "application/shf+xml": {
        source: "iana",
        compressible: true,
        extensions: ["shf"]
      },
      "application/sieve": {
        source: "iana",
        extensions: ["siv", "sieve"]
      },
      "application/simple-filter+xml": {
        source: "iana",
        compressible: true
      },
      "application/simple-message-summary": {
        source: "iana"
      },
      "application/simplesymbolcontainer": {
        source: "iana"
      },
      "application/sipc": {
        source: "iana"
      },
      "application/slate": {
        source: "iana"
      },
      "application/smil": {
        source: "iana"
      },
      "application/smil+xml": {
        source: "iana",
        compressible: true,
        extensions: ["smi", "smil"]
      },
      "application/smpte336m": {
        source: "iana"
      },
      "application/soap+fastinfoset": {
        source: "iana"
      },
      "application/soap+xml": {
        source: "iana",
        compressible: true
      },
      "application/sparql-query": {
        source: "iana",
        extensions: ["rq"]
      },
      "application/sparql-results+xml": {
        source: "iana",
        compressible: true,
        extensions: ["srx"]
      },
      "application/spdx+json": {
        source: "iana",
        compressible: true
      },
      "application/spirits-event+xml": {
        source: "iana",
        compressible: true
      },
      "application/sql": {
        source: "iana"
      },
      "application/srgs": {
        source: "iana",
        extensions: ["gram"]
      },
      "application/srgs+xml": {
        source: "iana",
        compressible: true,
        extensions: ["grxml"]
      },
      "application/sru+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sru"]
      },
      "application/ssdl+xml": {
        source: "apache",
        compressible: true,
        extensions: ["ssdl"]
      },
      "application/ssml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ssml"]
      },
      "application/stix+json": {
        source: "iana",
        compressible: true
      },
      "application/swid+xml": {
        source: "iana",
        compressible: true,
        extensions: ["swidtag"]
      },
      "application/tamp-apex-update": {
        source: "iana"
      },
      "application/tamp-apex-update-confirm": {
        source: "iana"
      },
      "application/tamp-community-update": {
        source: "iana"
      },
      "application/tamp-community-update-confirm": {
        source: "iana"
      },
      "application/tamp-error": {
        source: "iana"
      },
      "application/tamp-sequence-adjust": {
        source: "iana"
      },
      "application/tamp-sequence-adjust-confirm": {
        source: "iana"
      },
      "application/tamp-status-query": {
        source: "iana"
      },
      "application/tamp-status-response": {
        source: "iana"
      },
      "application/tamp-update": {
        source: "iana"
      },
      "application/tamp-update-confirm": {
        source: "iana"
      },
      "application/tar": {
        compressible: true
      },
      "application/taxii+json": {
        source: "iana",
        compressible: true
      },
      "application/td+json": {
        source: "iana",
        compressible: true
      },
      "application/tei+xml": {
        source: "iana",
        compressible: true,
        extensions: ["tei", "teicorpus"]
      },
      "application/tetra_isi": {
        source: "iana"
      },
      "application/thraud+xml": {
        source: "iana",
        compressible: true,
        extensions: ["tfi"]
      },
      "application/timestamp-query": {
        source: "iana"
      },
      "application/timestamp-reply": {
        source: "iana"
      },
      "application/timestamped-data": {
        source: "iana",
        extensions: ["tsd"]
      },
      "application/tlsrpt+gzip": {
        source: "iana"
      },
      "application/tlsrpt+json": {
        source: "iana",
        compressible: true
      },
      "application/tnauthlist": {
        source: "iana"
      },
      "application/token-introspection+jwt": {
        source: "iana"
      },
      "application/toml": {
        compressible: true,
        extensions: ["toml"]
      },
      "application/trickle-ice-sdpfrag": {
        source: "iana"
      },
      "application/trig": {
        source: "iana",
        extensions: ["trig"]
      },
      "application/ttml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ttml"]
      },
      "application/tve-trigger": {
        source: "iana"
      },
      "application/tzif": {
        source: "iana"
      },
      "application/tzif-leap": {
        source: "iana"
      },
      "application/ubjson": {
        compressible: false,
        extensions: ["ubj"]
      },
      "application/ulpfec": {
        source: "iana"
      },
      "application/urc-grpsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/urc-ressheet+xml": {
        source: "iana",
        compressible: true,
        extensions: ["rsheet"]
      },
      "application/urc-targetdesc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["td"]
      },
      "application/urc-uisocketdesc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vcard+json": {
        source: "iana",
        compressible: true
      },
      "application/vcard+xml": {
        source: "iana",
        compressible: true
      },
      "application/vemmi": {
        source: "iana"
      },
      "application/vividence.scriptfile": {
        source: "apache"
      },
      "application/vnd.1000minds.decision-model+xml": {
        source: "iana",
        compressible: true,
        extensions: ["1km"]
      },
      "application/vnd.3gpp-prose+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp-prose-pc3ch+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp-v2x-local-service-information": {
        source: "iana"
      },
      "application/vnd.3gpp.5gnas": {
        source: "iana"
      },
      "application/vnd.3gpp.access-transfer-events+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.bsf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.gmop+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.gtpc": {
        source: "iana"
      },
      "application/vnd.3gpp.interworking-data": {
        source: "iana"
      },
      "application/vnd.3gpp.lpp": {
        source: "iana"
      },
      "application/vnd.3gpp.mc-signalling-ear": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-payload": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-signalling": {
        source: "iana"
      },
      "application/vnd.3gpp.mcdata-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcdata-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-floor-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-location-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-mbms-usage-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-signed+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-ue-init-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcptt-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-affiliation-command+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-affiliation-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-location-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-mbms-usage-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-service-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-transmission-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-ue-config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mcvideo-user-profile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.mid-call+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.ngap": {
        source: "iana"
      },
      "application/vnd.3gpp.pfcp": {
        source: "iana"
      },
      "application/vnd.3gpp.pic-bw-large": {
        source: "iana",
        extensions: ["plb"]
      },
      "application/vnd.3gpp.pic-bw-small": {
        source: "iana",
        extensions: ["psb"]
      },
      "application/vnd.3gpp.pic-bw-var": {
        source: "iana",
        extensions: ["pvb"]
      },
      "application/vnd.3gpp.s1ap": {
        source: "iana"
      },
      "application/vnd.3gpp.sms": {
        source: "iana"
      },
      "application/vnd.3gpp.sms+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.srvcc-ext+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.srvcc-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.state-and-event-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp.ussd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp2.bcmcsinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.3gpp2.sms": {
        source: "iana"
      },
      "application/vnd.3gpp2.tcap": {
        source: "iana",
        extensions: ["tcap"]
      },
      "application/vnd.3lightssoftware.imagescal": {
        source: "iana"
      },
      "application/vnd.3m.post-it-notes": {
        source: "iana",
        extensions: ["pwn"]
      },
      "application/vnd.accpac.simply.aso": {
        source: "iana",
        extensions: ["aso"]
      },
      "application/vnd.accpac.simply.imp": {
        source: "iana",
        extensions: ["imp"]
      },
      "application/vnd.acucobol": {
        source: "iana",
        extensions: ["acu"]
      },
      "application/vnd.acucorp": {
        source: "iana",
        extensions: ["atc", "acutc"]
      },
      "application/vnd.adobe.air-application-installer-package+zip": {
        source: "apache",
        compressible: false,
        extensions: ["air"]
      },
      "application/vnd.adobe.flash.movie": {
        source: "iana"
      },
      "application/vnd.adobe.formscentral.fcdt": {
        source: "iana",
        extensions: ["fcdt"]
      },
      "application/vnd.adobe.fxp": {
        source: "iana",
        extensions: ["fxp", "fxpl"]
      },
      "application/vnd.adobe.partial-upload": {
        source: "iana"
      },
      "application/vnd.adobe.xdp+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdp"]
      },
      "application/vnd.adobe.xfdf": {
        source: "iana",
        extensions: ["xfdf"]
      },
      "application/vnd.aether.imp": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata": {
        source: "iana"
      },
      "application/vnd.afpc.afplinedata-pagedef": {
        source: "iana"
      },
      "application/vnd.afpc.cmoca-cmresource": {
        source: "iana"
      },
      "application/vnd.afpc.foca-charset": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codedfont": {
        source: "iana"
      },
      "application/vnd.afpc.foca-codepage": {
        source: "iana"
      },
      "application/vnd.afpc.modca": {
        source: "iana"
      },
      "application/vnd.afpc.modca-cmtable": {
        source: "iana"
      },
      "application/vnd.afpc.modca-formdef": {
        source: "iana"
      },
      "application/vnd.afpc.modca-mediummap": {
        source: "iana"
      },
      "application/vnd.afpc.modca-objectcontainer": {
        source: "iana"
      },
      "application/vnd.afpc.modca-overlay": {
        source: "iana"
      },
      "application/vnd.afpc.modca-pagesegment": {
        source: "iana"
      },
      "application/vnd.age": {
        source: "iana",
        extensions: ["age"]
      },
      "application/vnd.ah-barcode": {
        source: "iana"
      },
      "application/vnd.ahead.space": {
        source: "iana",
        extensions: ["ahead"]
      },
      "application/vnd.airzip.filesecure.azf": {
        source: "iana",
        extensions: ["azf"]
      },
      "application/vnd.airzip.filesecure.azs": {
        source: "iana",
        extensions: ["azs"]
      },
      "application/vnd.amadeus+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.amazon.ebook": {
        source: "apache",
        extensions: ["azw"]
      },
      "application/vnd.amazon.mobi8-ebook": {
        source: "iana"
      },
      "application/vnd.americandynamics.acc": {
        source: "iana",
        extensions: ["acc"]
      },
      "application/vnd.amiga.ami": {
        source: "iana",
        extensions: ["ami"]
      },
      "application/vnd.amundsen.maze+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.android.ota": {
        source: "iana"
      },
      "application/vnd.android.package-archive": {
        source: "apache",
        compressible: false,
        extensions: ["apk"]
      },
      "application/vnd.anki": {
        source: "iana"
      },
      "application/vnd.anser-web-certificate-issue-initiation": {
        source: "iana",
        extensions: ["cii"]
      },
      "application/vnd.anser-web-funds-transfer-initiation": {
        source: "apache",
        extensions: ["fti"]
      },
      "application/vnd.antix.game-component": {
        source: "iana",
        extensions: ["atx"]
      },
      "application/vnd.apache.arrow.file": {
        source: "iana"
      },
      "application/vnd.apache.arrow.stream": {
        source: "iana"
      },
      "application/vnd.apache.thrift.binary": {
        source: "iana"
      },
      "application/vnd.apache.thrift.compact": {
        source: "iana"
      },
      "application/vnd.apache.thrift.json": {
        source: "iana"
      },
      "application/vnd.api+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.aplextor.warrp+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.apothekende.reservation+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.apple.installer+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mpkg"]
      },
      "application/vnd.apple.keynote": {
        source: "iana",
        extensions: ["key"]
      },
      "application/vnd.apple.mpegurl": {
        source: "iana",
        extensions: ["m3u8"]
      },
      "application/vnd.apple.numbers": {
        source: "iana",
        extensions: ["numbers"]
      },
      "application/vnd.apple.pages": {
        source: "iana",
        extensions: ["pages"]
      },
      "application/vnd.apple.pkpass": {
        compressible: false,
        extensions: ["pkpass"]
      },
      "application/vnd.arastra.swi": {
        source: "iana"
      },
      "application/vnd.aristanetworks.swi": {
        source: "iana",
        extensions: ["swi"]
      },
      "application/vnd.artisan+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.artsquare": {
        source: "iana"
      },
      "application/vnd.astraea-software.iota": {
        source: "iana",
        extensions: ["iota"]
      },
      "application/vnd.audiograph": {
        source: "iana",
        extensions: ["aep"]
      },
      "application/vnd.autopackage": {
        source: "iana"
      },
      "application/vnd.avalon+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.avistar+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.balsamiq.bmml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["bmml"]
      },
      "application/vnd.balsamiq.bmpr": {
        source: "iana"
      },
      "application/vnd.banana-accounting": {
        source: "iana"
      },
      "application/vnd.bbf.usp.error": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg": {
        source: "iana"
      },
      "application/vnd.bbf.usp.msg+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.bekitzur-stech+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.bint.med-content": {
        source: "iana"
      },
      "application/vnd.biopax.rdf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.blink-idb-value-wrapper": {
        source: "iana"
      },
      "application/vnd.blueice.multipass": {
        source: "iana",
        extensions: ["mpm"]
      },
      "application/vnd.bluetooth.ep.oob": {
        source: "iana"
      },
      "application/vnd.bluetooth.le.oob": {
        source: "iana"
      },
      "application/vnd.bmi": {
        source: "iana",
        extensions: ["bmi"]
      },
      "application/vnd.bpf": {
        source: "iana"
      },
      "application/vnd.bpf3": {
        source: "iana"
      },
      "application/vnd.businessobjects": {
        source: "iana",
        extensions: ["rep"]
      },
      "application/vnd.byu.uapi+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cab-jscript": {
        source: "iana"
      },
      "application/vnd.canon-cpdl": {
        source: "iana"
      },
      "application/vnd.canon-lips": {
        source: "iana"
      },
      "application/vnd.capasystems-pg+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cendio.thinlinc.clientconf": {
        source: "iana"
      },
      "application/vnd.century-systems.tcp_stream": {
        source: "iana"
      },
      "application/vnd.chemdraw+xml": {
        source: "iana",
        compressible: true,
        extensions: ["cdxml"]
      },
      "application/vnd.chess-pgn": {
        source: "iana"
      },
      "application/vnd.chipnuts.karaoke-mmd": {
        source: "iana",
        extensions: ["mmd"]
      },
      "application/vnd.ciedi": {
        source: "iana"
      },
      "application/vnd.cinderella": {
        source: "iana",
        extensions: ["cdy"]
      },
      "application/vnd.cirpack.isdn-ext": {
        source: "iana"
      },
      "application/vnd.citationstyles.style+xml": {
        source: "iana",
        compressible: true,
        extensions: ["csl"]
      },
      "application/vnd.claymore": {
        source: "iana",
        extensions: ["cla"]
      },
      "application/vnd.cloanto.rp9": {
        source: "iana",
        extensions: ["rp9"]
      },
      "application/vnd.clonk.c4group": {
        source: "iana",
        extensions: ["c4g", "c4d", "c4f", "c4p", "c4u"]
      },
      "application/vnd.cluetrust.cartomobile-config": {
        source: "iana",
        extensions: ["c11amc"]
      },
      "application/vnd.cluetrust.cartomobile-config-pkg": {
        source: "iana",
        extensions: ["c11amz"]
      },
      "application/vnd.coffeescript": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.document-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.presentation-template": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet": {
        source: "iana"
      },
      "application/vnd.collabio.xodocuments.spreadsheet-template": {
        source: "iana"
      },
      "application/vnd.collection+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.collection.doc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.collection.next+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.comicbook+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.comicbook-rar": {
        source: "iana"
      },
      "application/vnd.commerce-battelle": {
        source: "iana"
      },
      "application/vnd.commonspace": {
        source: "iana",
        extensions: ["csp"]
      },
      "application/vnd.contact.cmsg": {
        source: "iana",
        extensions: ["cdbcmsg"]
      },
      "application/vnd.coreos.ignition+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cosmocaller": {
        source: "iana",
        extensions: ["cmc"]
      },
      "application/vnd.crick.clicker": {
        source: "iana",
        extensions: ["clkx"]
      },
      "application/vnd.crick.clicker.keyboard": {
        source: "iana",
        extensions: ["clkk"]
      },
      "application/vnd.crick.clicker.palette": {
        source: "iana",
        extensions: ["clkp"]
      },
      "application/vnd.crick.clicker.template": {
        source: "iana",
        extensions: ["clkt"]
      },
      "application/vnd.crick.clicker.wordbank": {
        source: "iana",
        extensions: ["clkw"]
      },
      "application/vnd.criticaltools.wbs+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wbs"]
      },
      "application/vnd.cryptii.pipe+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.crypto-shade-file": {
        source: "iana"
      },
      "application/vnd.cryptomator.encrypted": {
        source: "iana"
      },
      "application/vnd.cryptomator.vault": {
        source: "iana"
      },
      "application/vnd.ctc-posml": {
        source: "iana",
        extensions: ["pml"]
      },
      "application/vnd.ctct.ws+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cups-pdf": {
        source: "iana"
      },
      "application/vnd.cups-postscript": {
        source: "iana"
      },
      "application/vnd.cups-ppd": {
        source: "iana",
        extensions: ["ppd"]
      },
      "application/vnd.cups-raster": {
        source: "iana"
      },
      "application/vnd.cups-raw": {
        source: "iana"
      },
      "application/vnd.curl": {
        source: "iana"
      },
      "application/vnd.curl.car": {
        source: "apache",
        extensions: ["car"]
      },
      "application/vnd.curl.pcurl": {
        source: "apache",
        extensions: ["pcurl"]
      },
      "application/vnd.cyan.dean.root+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cybank": {
        source: "iana"
      },
      "application/vnd.cyclonedx+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.cyclonedx+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.d2l.coursepackage1p0+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.d3m-dataset": {
        source: "iana"
      },
      "application/vnd.d3m-problem": {
        source: "iana"
      },
      "application/vnd.dart": {
        source: "iana",
        compressible: true,
        extensions: ["dart"]
      },
      "application/vnd.data-vision.rdz": {
        source: "iana",
        extensions: ["rdz"]
      },
      "application/vnd.datapackage+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dataresource+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dbf": {
        source: "iana",
        extensions: ["dbf"]
      },
      "application/vnd.debian.binary-package": {
        source: "iana"
      },
      "application/vnd.dece.data": {
        source: "iana",
        extensions: ["uvf", "uvvf", "uvd", "uvvd"]
      },
      "application/vnd.dece.ttml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["uvt", "uvvt"]
      },
      "application/vnd.dece.unspecified": {
        source: "iana",
        extensions: ["uvx", "uvvx"]
      },
      "application/vnd.dece.zip": {
        source: "iana",
        extensions: ["uvz", "uvvz"]
      },
      "application/vnd.denovo.fcselayout-link": {
        source: "iana",
        extensions: ["fe_launch"]
      },
      "application/vnd.desmume.movie": {
        source: "iana"
      },
      "application/vnd.dir-bi.plate-dl-nosuffix": {
        source: "iana"
      },
      "application/vnd.dm.delegation+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dna": {
        source: "iana",
        extensions: ["dna"]
      },
      "application/vnd.document+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dolby.mlp": {
        source: "apache",
        extensions: ["mlp"]
      },
      "application/vnd.dolby.mobile.1": {
        source: "iana"
      },
      "application/vnd.dolby.mobile.2": {
        source: "iana"
      },
      "application/vnd.doremir.scorecloud-binary-document": {
        source: "iana"
      },
      "application/vnd.dpgraph": {
        source: "iana",
        extensions: ["dpg"]
      },
      "application/vnd.dreamfactory": {
        source: "iana",
        extensions: ["dfac"]
      },
      "application/vnd.drive+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ds-keypoint": {
        source: "apache",
        extensions: ["kpxx"]
      },
      "application/vnd.dtg.local": {
        source: "iana"
      },
      "application/vnd.dtg.local.flash": {
        source: "iana"
      },
      "application/vnd.dtg.local.html": {
        source: "iana"
      },
      "application/vnd.dvb.ait": {
        source: "iana",
        extensions: ["ait"]
      },
      "application/vnd.dvb.dvbisl+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.dvbj": {
        source: "iana"
      },
      "application/vnd.dvb.esgcontainer": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcdftnotifaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgaccess2": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcesgpdd": {
        source: "iana"
      },
      "application/vnd.dvb.ipdcroaming": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-base": {
        source: "iana"
      },
      "application/vnd.dvb.iptv.alfec-enhancement": {
        source: "iana"
      },
      "application/vnd.dvb.notif-aggregate-root+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-container+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-generic+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-msglist+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-registration-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-ia-registration-response+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.notif-init+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.dvb.pfr": {
        source: "iana"
      },
      "application/vnd.dvb.service": {
        source: "iana",
        extensions: ["svc"]
      },
      "application/vnd.dxr": {
        source: "iana"
      },
      "application/vnd.dynageo": {
        source: "iana",
        extensions: ["geo"]
      },
      "application/vnd.dzr": {
        source: "iana"
      },
      "application/vnd.easykaraoke.cdgdownload": {
        source: "iana"
      },
      "application/vnd.ecdis-update": {
        source: "iana"
      },
      "application/vnd.ecip.rlp": {
        source: "iana"
      },
      "application/vnd.eclipse.ditto+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ecowin.chart": {
        source: "iana",
        extensions: ["mag"]
      },
      "application/vnd.ecowin.filerequest": {
        source: "iana"
      },
      "application/vnd.ecowin.fileupdate": {
        source: "iana"
      },
      "application/vnd.ecowin.series": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesrequest": {
        source: "iana"
      },
      "application/vnd.ecowin.seriesupdate": {
        source: "iana"
      },
      "application/vnd.efi.img": {
        source: "iana"
      },
      "application/vnd.efi.iso": {
        source: "iana"
      },
      "application/vnd.emclient.accessrequest+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.enliven": {
        source: "iana",
        extensions: ["nml"]
      },
      "application/vnd.enphase.envoy": {
        source: "iana"
      },
      "application/vnd.eprints.data+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.epson.esf": {
        source: "iana",
        extensions: ["esf"]
      },
      "application/vnd.epson.msf": {
        source: "iana",
        extensions: ["msf"]
      },
      "application/vnd.epson.quickanime": {
        source: "iana",
        extensions: ["qam"]
      },
      "application/vnd.epson.salt": {
        source: "iana",
        extensions: ["slt"]
      },
      "application/vnd.epson.ssf": {
        source: "iana",
        extensions: ["ssf"]
      },
      "application/vnd.ericsson.quickcall": {
        source: "iana"
      },
      "application/vnd.espass-espass+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.eszigno3+xml": {
        source: "iana",
        compressible: true,
        extensions: ["es3", "et3"]
      },
      "application/vnd.etsi.aoc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.asic-e+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.etsi.asic-s+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.etsi.cug+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvcommand+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvdiscovery+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-bc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-cod+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsad-npvr+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvservice+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvsync+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.iptvueprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.mcid+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.mheg5": {
        source: "iana"
      },
      "application/vnd.etsi.overload-control-policy-dataset+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.pstn+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.sci+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.simservs+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.timestamp-token": {
        source: "iana"
      },
      "application/vnd.etsi.tsl+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.etsi.tsl.der": {
        source: "iana"
      },
      "application/vnd.eu.kasparian.car+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.eudora.data": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.profile": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.settings": {
        source: "iana"
      },
      "application/vnd.evolv.ecig.theme": {
        source: "iana"
      },
      "application/vnd.exstream-empower+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.exstream-package": {
        source: "iana"
      },
      "application/vnd.ezpix-album": {
        source: "iana",
        extensions: ["ez2"]
      },
      "application/vnd.ezpix-package": {
        source: "iana",
        extensions: ["ez3"]
      },
      "application/vnd.f-secure.mobile": {
        source: "iana"
      },
      "application/vnd.familysearch.gedcom+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.fastcopy-disk-image": {
        source: "iana"
      },
      "application/vnd.fdf": {
        source: "iana",
        extensions: ["fdf"]
      },
      "application/vnd.fdsn.mseed": {
        source: "iana",
        extensions: ["mseed"]
      },
      "application/vnd.fdsn.seed": {
        source: "iana",
        extensions: ["seed", "dataless"]
      },
      "application/vnd.ffsns": {
        source: "iana"
      },
      "application/vnd.ficlab.flb+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.filmit.zfc": {
        source: "iana"
      },
      "application/vnd.fints": {
        source: "iana"
      },
      "application/vnd.firemonkeys.cloudcell": {
        source: "iana"
      },
      "application/vnd.flographit": {
        source: "iana",
        extensions: ["gph"]
      },
      "application/vnd.fluxtime.clip": {
        source: "iana",
        extensions: ["ftc"]
      },
      "application/vnd.font-fontforge-sfd": {
        source: "iana"
      },
      "application/vnd.framemaker": {
        source: "iana",
        extensions: ["fm", "frame", "maker", "book"]
      },
      "application/vnd.frogans.fnc": {
        source: "iana",
        extensions: ["fnc"]
      },
      "application/vnd.frogans.ltf": {
        source: "iana",
        extensions: ["ltf"]
      },
      "application/vnd.fsc.weblaunch": {
        source: "iana",
        extensions: ["fsc"]
      },
      "application/vnd.fujifilm.fb.docuworks": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.binder": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujifilm.fb.jfi+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.fujitsu.oasys": {
        source: "iana",
        extensions: ["oas"]
      },
      "application/vnd.fujitsu.oasys2": {
        source: "iana",
        extensions: ["oa2"]
      },
      "application/vnd.fujitsu.oasys3": {
        source: "iana",
        extensions: ["oa3"]
      },
      "application/vnd.fujitsu.oasysgp": {
        source: "iana",
        extensions: ["fg5"]
      },
      "application/vnd.fujitsu.oasysprs": {
        source: "iana",
        extensions: ["bh2"]
      },
      "application/vnd.fujixerox.art-ex": {
        source: "iana"
      },
      "application/vnd.fujixerox.art4": {
        source: "iana"
      },
      "application/vnd.fujixerox.ddd": {
        source: "iana",
        extensions: ["ddd"]
      },
      "application/vnd.fujixerox.docuworks": {
        source: "iana",
        extensions: ["xdw"]
      },
      "application/vnd.fujixerox.docuworks.binder": {
        source: "iana",
        extensions: ["xbd"]
      },
      "application/vnd.fujixerox.docuworks.container": {
        source: "iana"
      },
      "application/vnd.fujixerox.hbpl": {
        source: "iana"
      },
      "application/vnd.fut-misnet": {
        source: "iana"
      },
      "application/vnd.futoin+cbor": {
        source: "iana"
      },
      "application/vnd.futoin+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.fuzzysheet": {
        source: "iana",
        extensions: ["fzs"]
      },
      "application/vnd.genomatix.tuxedo": {
        source: "iana",
        extensions: ["txd"]
      },
      "application/vnd.gentics.grd+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geo+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geocube+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.geogebra.file": {
        source: "iana",
        extensions: ["ggb"]
      },
      "application/vnd.geogebra.slides": {
        source: "iana"
      },
      "application/vnd.geogebra.tool": {
        source: "iana",
        extensions: ["ggt"]
      },
      "application/vnd.geometry-explorer": {
        source: "iana",
        extensions: ["gex", "gre"]
      },
      "application/vnd.geonext": {
        source: "iana",
        extensions: ["gxt"]
      },
      "application/vnd.geoplan": {
        source: "iana",
        extensions: ["g2w"]
      },
      "application/vnd.geospace": {
        source: "iana",
        extensions: ["g3w"]
      },
      "application/vnd.gerber": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt": {
        source: "iana"
      },
      "application/vnd.globalplatform.card-content-mgt-response": {
        source: "iana"
      },
      "application/vnd.gmx": {
        source: "iana",
        extensions: ["gmx"]
      },
      "application/vnd.google-apps.document": {
        compressible: false,
        extensions: ["gdoc"]
      },
      "application/vnd.google-apps.presentation": {
        compressible: false,
        extensions: ["gslides"]
      },
      "application/vnd.google-apps.spreadsheet": {
        compressible: false,
        extensions: ["gsheet"]
      },
      "application/vnd.google-earth.kml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["kml"]
      },
      "application/vnd.google-earth.kmz": {
        source: "iana",
        compressible: false,
        extensions: ["kmz"]
      },
      "application/vnd.gov.sk.e-form+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.gov.sk.e-form+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.gov.sk.xmldatacontainer+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.grafeq": {
        source: "iana",
        extensions: ["gqf", "gqs"]
      },
      "application/vnd.gridmp": {
        source: "iana"
      },
      "application/vnd.groove-account": {
        source: "iana",
        extensions: ["gac"]
      },
      "application/vnd.groove-help": {
        source: "iana",
        extensions: ["ghf"]
      },
      "application/vnd.groove-identity-message": {
        source: "iana",
        extensions: ["gim"]
      },
      "application/vnd.groove-injector": {
        source: "iana",
        extensions: ["grv"]
      },
      "application/vnd.groove-tool-message": {
        source: "iana",
        extensions: ["gtm"]
      },
      "application/vnd.groove-tool-template": {
        source: "iana",
        extensions: ["tpl"]
      },
      "application/vnd.groove-vcard": {
        source: "iana",
        extensions: ["vcg"]
      },
      "application/vnd.hal+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hal+xml": {
        source: "iana",
        compressible: true,
        extensions: ["hal"]
      },
      "application/vnd.handheld-entertainment+xml": {
        source: "iana",
        compressible: true,
        extensions: ["zmm"]
      },
      "application/vnd.hbci": {
        source: "iana",
        extensions: ["hbci"]
      },
      "application/vnd.hc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hcl-bireports": {
        source: "iana"
      },
      "application/vnd.hdt": {
        source: "iana"
      },
      "application/vnd.heroku+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hhe.lesson-player": {
        source: "iana",
        extensions: ["les"]
      },
      "application/vnd.hl7cda+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.hl7v2+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.hp-hpgl": {
        source: "iana",
        extensions: ["hpgl"]
      },
      "application/vnd.hp-hpid": {
        source: "iana",
        extensions: ["hpid"]
      },
      "application/vnd.hp-hps": {
        source: "iana",
        extensions: ["hps"]
      },
      "application/vnd.hp-jlyt": {
        source: "iana",
        extensions: ["jlt"]
      },
      "application/vnd.hp-pcl": {
        source: "iana",
        extensions: ["pcl"]
      },
      "application/vnd.hp-pclxl": {
        source: "iana",
        extensions: ["pclxl"]
      },
      "application/vnd.httphone": {
        source: "iana"
      },
      "application/vnd.hydrostatix.sof-data": {
        source: "iana",
        extensions: ["sfd-hdstx"]
      },
      "application/vnd.hyper+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hyper-item+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hyperdrive+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.hzn-3d-crossword": {
        source: "iana"
      },
      "application/vnd.ibm.afplinedata": {
        source: "iana"
      },
      "application/vnd.ibm.electronic-media": {
        source: "iana"
      },
      "application/vnd.ibm.minipay": {
        source: "iana",
        extensions: ["mpy"]
      },
      "application/vnd.ibm.modcap": {
        source: "iana",
        extensions: ["afp", "listafp", "list3820"]
      },
      "application/vnd.ibm.rights-management": {
        source: "iana",
        extensions: ["irm"]
      },
      "application/vnd.ibm.secure-container": {
        source: "iana",
        extensions: ["sc"]
      },
      "application/vnd.iccprofile": {
        source: "iana",
        extensions: ["icc", "icm"]
      },
      "application/vnd.ieee.1905": {
        source: "iana"
      },
      "application/vnd.igloader": {
        source: "iana",
        extensions: ["igl"]
      },
      "application/vnd.imagemeter.folder+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.imagemeter.image+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.immervision-ivp": {
        source: "iana",
        extensions: ["ivp"]
      },
      "application/vnd.immervision-ivu": {
        source: "iana",
        extensions: ["ivu"]
      },
      "application/vnd.ims.imsccv1p1": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p2": {
        source: "iana"
      },
      "application/vnd.ims.imsccv1p3": {
        source: "iana"
      },
      "application/vnd.ims.lis.v2.result+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolconsumerprofile+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolproxy+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolproxy.id+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolsettings+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ims.lti.v2.toolsettings.simple+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.informedcontrol.rms+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.informix-visionary": {
        source: "iana"
      },
      "application/vnd.infotech.project": {
        source: "iana"
      },
      "application/vnd.infotech.project+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.innopath.wamp.notification": {
        source: "iana"
      },
      "application/vnd.insors.igm": {
        source: "iana",
        extensions: ["igm"]
      },
      "application/vnd.intercon.formnet": {
        source: "iana",
        extensions: ["xpw", "xpx"]
      },
      "application/vnd.intergeo": {
        source: "iana",
        extensions: ["i2g"]
      },
      "application/vnd.intertrust.digibox": {
        source: "iana"
      },
      "application/vnd.intertrust.nncp": {
        source: "iana"
      },
      "application/vnd.intu.qbo": {
        source: "iana",
        extensions: ["qbo"]
      },
      "application/vnd.intu.qfx": {
        source: "iana",
        extensions: ["qfx"]
      },
      "application/vnd.iptc.g2.catalogitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.conceptitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.knowledgeitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.newsitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.newsmessage+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.packageitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.iptc.g2.planningitem+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ipunplugged.rcprofile": {
        source: "iana",
        extensions: ["rcprofile"]
      },
      "application/vnd.irepository.package+xml": {
        source: "iana",
        compressible: true,
        extensions: ["irp"]
      },
      "application/vnd.is-xpr": {
        source: "iana",
        extensions: ["xpr"]
      },
      "application/vnd.isac.fcs": {
        source: "iana",
        extensions: ["fcs"]
      },
      "application/vnd.iso11783-10+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.jam": {
        source: "iana",
        extensions: ["jam"]
      },
      "application/vnd.japannet-directory-service": {
        source: "iana"
      },
      "application/vnd.japannet-jpnstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-payment-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-registration": {
        source: "iana"
      },
      "application/vnd.japannet-registration-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-setstore-wakeup": {
        source: "iana"
      },
      "application/vnd.japannet-verification": {
        source: "iana"
      },
      "application/vnd.japannet-verification-wakeup": {
        source: "iana"
      },
      "application/vnd.jcp.javame.midlet-rms": {
        source: "iana",
        extensions: ["rms"]
      },
      "application/vnd.jisp": {
        source: "iana",
        extensions: ["jisp"]
      },
      "application/vnd.joost.joda-archive": {
        source: "iana",
        extensions: ["joda"]
      },
      "application/vnd.jsk.isdn-ngn": {
        source: "iana"
      },
      "application/vnd.kahootz": {
        source: "iana",
        extensions: ["ktz", "ktr"]
      },
      "application/vnd.kde.karbon": {
        source: "iana",
        extensions: ["karbon"]
      },
      "application/vnd.kde.kchart": {
        source: "iana",
        extensions: ["chrt"]
      },
      "application/vnd.kde.kformula": {
        source: "iana",
        extensions: ["kfo"]
      },
      "application/vnd.kde.kivio": {
        source: "iana",
        extensions: ["flw"]
      },
      "application/vnd.kde.kontour": {
        source: "iana",
        extensions: ["kon"]
      },
      "application/vnd.kde.kpresenter": {
        source: "iana",
        extensions: ["kpr", "kpt"]
      },
      "application/vnd.kde.kspread": {
        source: "iana",
        extensions: ["ksp"]
      },
      "application/vnd.kde.kword": {
        source: "iana",
        extensions: ["kwd", "kwt"]
      },
      "application/vnd.kenameaapp": {
        source: "iana",
        extensions: ["htke"]
      },
      "application/vnd.kidspiration": {
        source: "iana",
        extensions: ["kia"]
      },
      "application/vnd.kinar": {
        source: "iana",
        extensions: ["kne", "knp"]
      },
      "application/vnd.koan": {
        source: "iana",
        extensions: ["skp", "skd", "skt", "skm"]
      },
      "application/vnd.kodak-descriptor": {
        source: "iana",
        extensions: ["sse"]
      },
      "application/vnd.las": {
        source: "iana"
      },
      "application/vnd.las.las+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.las.las+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lasxml"]
      },
      "application/vnd.laszip": {
        source: "iana"
      },
      "application/vnd.leap+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.liberty-request+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.llamagraphics.life-balance.desktop": {
        source: "iana",
        extensions: ["lbd"]
      },
      "application/vnd.llamagraphics.life-balance.exchange+xml": {
        source: "iana",
        compressible: true,
        extensions: ["lbe"]
      },
      "application/vnd.logipipe.circuit+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.loom": {
        source: "iana"
      },
      "application/vnd.lotus-1-2-3": {
        source: "iana",
        extensions: ["123"]
      },
      "application/vnd.lotus-approach": {
        source: "iana",
        extensions: ["apr"]
      },
      "application/vnd.lotus-freelance": {
        source: "iana",
        extensions: ["pre"]
      },
      "application/vnd.lotus-notes": {
        source: "iana",
        extensions: ["nsf"]
      },
      "application/vnd.lotus-organizer": {
        source: "iana",
        extensions: ["org"]
      },
      "application/vnd.lotus-screencam": {
        source: "iana",
        extensions: ["scm"]
      },
      "application/vnd.lotus-wordpro": {
        source: "iana",
        extensions: ["lwp"]
      },
      "application/vnd.macports.portpkg": {
        source: "iana",
        extensions: ["portpkg"]
      },
      "application/vnd.mapbox-vector-tile": {
        source: "iana",
        extensions: ["mvt"]
      },
      "application/vnd.marlin.drm.actiontoken+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.conftoken+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.license+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.marlin.drm.mdcf": {
        source: "iana"
      },
      "application/vnd.mason+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.maxar.archive.3tz+zip": {
        source: "iana",
        compressible: false
      },
      "application/vnd.maxmind.maxmind-db": {
        source: "iana"
      },
      "application/vnd.mcd": {
        source: "iana",
        extensions: ["mcd"]
      },
      "application/vnd.medcalcdata": {
        source: "iana",
        extensions: ["mc1"]
      },
      "application/vnd.mediastation.cdkey": {
        source: "iana",
        extensions: ["cdkey"]
      },
      "application/vnd.meridian-slingshot": {
        source: "iana"
      },
      "application/vnd.mfer": {
        source: "iana",
        extensions: ["mwf"]
      },
      "application/vnd.mfmp": {
        source: "iana",
        extensions: ["mfm"]
      },
      "application/vnd.micro+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.micrografx.flo": {
        source: "iana",
        extensions: ["flo"]
      },
      "application/vnd.micrografx.igx": {
        source: "iana",
        extensions: ["igx"]
      },
      "application/vnd.microsoft.portable-executable": {
        source: "iana"
      },
      "application/vnd.microsoft.windows.thumbnail-cache": {
        source: "iana"
      },
      "application/vnd.miele+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.mif": {
        source: "iana",
        extensions: ["mif"]
      },
      "application/vnd.minisoft-hp3000-save": {
        source: "iana"
      },
      "application/vnd.mitsubishi.misty-guard.trustweb": {
        source: "iana"
      },
      "application/vnd.mobius.daf": {
        source: "iana",
        extensions: ["daf"]
      },
      "application/vnd.mobius.dis": {
        source: "iana",
        extensions: ["dis"]
      },
      "application/vnd.mobius.mbk": {
        source: "iana",
        extensions: ["mbk"]
      },
      "application/vnd.mobius.mqy": {
        source: "iana",
        extensions: ["mqy"]
      },
      "application/vnd.mobius.msl": {
        source: "iana",
        extensions: ["msl"]
      },
      "application/vnd.mobius.plc": {
        source: "iana",
        extensions: ["plc"]
      },
      "application/vnd.mobius.txf": {
        source: "iana",
        extensions: ["txf"]
      },
      "application/vnd.mophun.application": {
        source: "iana",
        extensions: ["mpn"]
      },
      "application/vnd.mophun.certificate": {
        source: "iana",
        extensions: ["mpc"]
      },
      "application/vnd.motorola.flexsuite": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.adsi": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.fis": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.gotap": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.kmr": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.ttc": {
        source: "iana"
      },
      "application/vnd.motorola.flexsuite.wem": {
        source: "iana"
      },
      "application/vnd.motorola.iprm": {
        source: "iana"
      },
      "application/vnd.mozilla.xul+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xul"]
      },
      "application/vnd.ms-3mfdocument": {
        source: "iana"
      },
      "application/vnd.ms-artgalry": {
        source: "iana",
        extensions: ["cil"]
      },
      "application/vnd.ms-asf": {
        source: "iana"
      },
      "application/vnd.ms-cab-compressed": {
        source: "iana",
        extensions: ["cab"]
      },
      "application/vnd.ms-color.iccprofile": {
        source: "apache"
      },
      "application/vnd.ms-excel": {
        source: "iana",
        compressible: false,
        extensions: ["xls", "xlm", "xla", "xlc", "xlt", "xlw"]
      },
      "application/vnd.ms-excel.addin.macroenabled.12": {
        source: "iana",
        extensions: ["xlam"]
      },
      "application/vnd.ms-excel.sheet.binary.macroenabled.12": {
        source: "iana",
        extensions: ["xlsb"]
      },
      "application/vnd.ms-excel.sheet.macroenabled.12": {
        source: "iana",
        extensions: ["xlsm"]
      },
      "application/vnd.ms-excel.template.macroenabled.12": {
        source: "iana",
        extensions: ["xltm"]
      },
      "application/vnd.ms-fontobject": {
        source: "iana",
        compressible: true,
        extensions: ["eot"]
      },
      "application/vnd.ms-htmlhelp": {
        source: "iana",
        extensions: ["chm"]
      },
      "application/vnd.ms-ims": {
        source: "iana",
        extensions: ["ims"]
      },
      "application/vnd.ms-lrm": {
        source: "iana",
        extensions: ["lrm"]
      },
      "application/vnd.ms-office.activex+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-officetheme": {
        source: "iana",
        extensions: ["thmx"]
      },
      "application/vnd.ms-opentype": {
        source: "apache",
        compressible: true
      },
      "application/vnd.ms-outlook": {
        compressible: false,
        extensions: ["msg"]
      },
      "application/vnd.ms-package.obfuscated-opentype": {
        source: "apache"
      },
      "application/vnd.ms-pki.seccat": {
        source: "apache",
        extensions: ["cat"]
      },
      "application/vnd.ms-pki.stl": {
        source: "apache",
        extensions: ["stl"]
      },
      "application/vnd.ms-playready.initiator+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-powerpoint": {
        source: "iana",
        compressible: false,
        extensions: ["ppt", "pps", "pot"]
      },
      "application/vnd.ms-powerpoint.addin.macroenabled.12": {
        source: "iana",
        extensions: ["ppam"]
      },
      "application/vnd.ms-powerpoint.presentation.macroenabled.12": {
        source: "iana",
        extensions: ["pptm"]
      },
      "application/vnd.ms-powerpoint.slide.macroenabled.12": {
        source: "iana",
        extensions: ["sldm"]
      },
      "application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
        source: "iana",
        extensions: ["ppsm"]
      },
      "application/vnd.ms-powerpoint.template.macroenabled.12": {
        source: "iana",
        extensions: ["potm"]
      },
      "application/vnd.ms-printdevicecapabilities+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-printing.printticket+xml": {
        source: "apache",
        compressible: true
      },
      "application/vnd.ms-printschematicket+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ms-project": {
        source: "iana",
        extensions: ["mpp", "mpt"]
      },
      "application/vnd.ms-tnef": {
        source: "iana"
      },
      "application/vnd.ms-windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.nwprinting.oob": {
        source: "iana"
      },
      "application/vnd.ms-windows.printerpairing": {
        source: "iana"
      },
      "application/vnd.ms-windows.wsd.oob": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.lic-resp": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-chlg-req": {
        source: "iana"
      },
      "application/vnd.ms-wmdrm.meter-resp": {
        source: "iana"
      },
      "application/vnd.ms-word.document.macroenabled.12": {
        source: "iana",
        extensions: ["docm"]
      },
      "application/vnd.ms-word.template.macroenabled.12": {
        source: "iana",
        extensions: ["dotm"]
      },
      "application/vnd.ms-works": {
        source: "iana",
        extensions: ["wps", "wks", "wcm", "wdb"]
      },
      "application/vnd.ms-wpl": {
        source: "iana",
        extensions: ["wpl"]
      },
      "application/vnd.ms-xpsdocument": {
        source: "iana",
        compressible: false,
        extensions: ["xps"]
      },
      "application/vnd.msa-disk-image": {
        source: "iana"
      },
      "application/vnd.mseq": {
        source: "iana",
        extensions: ["mseq"]
      },
      "application/vnd.msign": {
        source: "iana"
      },
      "application/vnd.multiad.creator": {
        source: "iana"
      },
      "application/vnd.multiad.creator.cif": {
        source: "iana"
      },
      "application/vnd.music-niff": {
        source: "iana"
      },
      "application/vnd.musician": {
        source: "iana",
        extensions: ["mus"]
      },
      "application/vnd.muvee.style": {
        source: "iana",
        extensions: ["msty"]
      },
      "application/vnd.mynfc": {
        source: "iana",
        extensions: ["taglet"]
      },
      "application/vnd.nacamar.ybrid+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.ncd.control": {
        source: "iana"
      },
      "application/vnd.ncd.reference": {
        source: "iana"
      },
      "application/vnd.nearst.inv+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nebumind.line": {
        source: "iana"
      },
      "application/vnd.nervana": {
        source: "iana"
      },
      "application/vnd.netfpx": {
        source: "iana"
      },
      "application/vnd.neurolanguage.nlu": {
        source: "iana",
        extensions: ["nlu"]
      },
      "application/vnd.nimn": {
        source: "iana"
      },
      "application/vnd.nintendo.nitro.rom": {
        source: "iana"
      },
      "application/vnd.nintendo.snes.rom": {
        source: "iana"
      },
      "application/vnd.nitf": {
        source: "iana",
        extensions: ["ntf", "nitf"]
      },
      "application/vnd.noblenet-directory": {
        source: "iana",
        extensions: ["nnd"]
      },
      "application/vnd.noblenet-sealer": {
        source: "iana",
        extensions: ["nns"]
      },
      "application/vnd.noblenet-web": {
        source: "iana",
        extensions: ["nnw"]
      },
      "application/vnd.nokia.catalogs": {
        source: "iana"
      },
      "application/vnd.nokia.conml+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.conml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.iptv.config+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.isds-radio-presets": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.landmark+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.landmarkcollection+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.n-gage.ac+xml": {
        source: "iana",
        compressible: true,
        extensions: ["ac"]
      },
      "application/vnd.nokia.n-gage.data": {
        source: "iana",
        extensions: ["ngdat"]
      },
      "application/vnd.nokia.n-gage.symbian.install": {
        source: "iana",
        extensions: ["n-gage"]
      },
      "application/vnd.nokia.ncd": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+wbxml": {
        source: "iana"
      },
      "application/vnd.nokia.pcd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.nokia.radio-preset": {
        source: "iana",
        extensions: ["rpst"]
      },
      "application/vnd.nokia.radio-presets": {
        source: "iana",
        extensions: ["rpss"]
      },
      "application/vnd.novadigm.edm": {
        source: "iana",
        extensions: ["edm"]
      },
      "application/vnd.novadigm.edx": {
        source: "iana",
        extensions: ["edx"]
      },
      "application/vnd.novadigm.ext": {
        source: "iana",
        extensions: ["ext"]
      },
      "application/vnd.ntt-local.content-share": {
        source: "iana"
      },
      "application/vnd.ntt-local.file-transfer": {
        source: "iana"
      },
      "application/vnd.ntt-local.ogw_remote-access": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_remote": {
        source: "iana"
      },
      "application/vnd.ntt-local.sip-ta_tcp_stream": {
        source: "iana"
      },
      "application/vnd.oasis.opendocument.chart": {
        source: "iana",
        extensions: ["odc"]
      },
      "application/vnd.oasis.opendocument.chart-template": {
        source: "iana",
        extensions: ["otc"]
      },
      "application/vnd.oasis.opendocument.database": {
        source: "iana",
        extensions: ["odb"]
      },
      "application/vnd.oasis.opendocument.formula": {
        source: "iana",
        extensions: ["odf"]
      },
      "application/vnd.oasis.opendocument.formula-template": {
        source: "iana",
        extensions: ["odft"]
      },
      "application/vnd.oasis.opendocument.graphics": {
        source: "iana",
        compressible: false,
        extensions: ["odg"]
      },
      "application/vnd.oasis.opendocument.graphics-template": {
        source: "iana",
        extensions: ["otg"]
      },
      "application/vnd.oasis.opendocument.image": {
        source: "iana",
        extensions: ["odi"]
      },
      "application/vnd.oasis.opendocument.image-template": {
        source: "iana",
        extensions: ["oti"]
      },
      "application/vnd.oasis.opendocument.presentation": {
        source: "iana",
        compressible: false,
        extensions: ["odp"]
      },
      "application/vnd.oasis.opendocument.presentation-template": {
        source: "iana",
        extensions: ["otp"]
      },
      "application/vnd.oasis.opendocument.spreadsheet": {
        source: "iana",
        compressible: false,
        extensions: ["ods"]
      },
      "application/vnd.oasis.opendocument.spreadsheet-template": {
        source: "iana",
        extensions: ["ots"]
      },
      "application/vnd.oasis.opendocument.text": {
        source: "iana",
        compressible: false,
        extensions: ["odt"]
      },
      "application/vnd.oasis.opendocument.text-master": {
        source: "iana",
        extensions: ["odm"]
      },
      "application/vnd.oasis.opendocument.text-template": {
        source: "iana",
        extensions: ["ott"]
      },
      "application/vnd.oasis.opendocument.text-web": {
        source: "iana",
        extensions: ["oth"]
      },
      "application/vnd.obn": {
        source: "iana"
      },
      "application/vnd.ocf+cbor": {
        source: "iana"
      },
      "application/vnd.oci.image.manifest.v1+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oftn.l10n+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.contentaccessdownload+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.contentaccessstreaming+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.cspg-hexbinary": {
        source: "iana"
      },
      "application/vnd.oipf.dae.svg+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.dae.xhtml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.mippvcontrolmessage+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.pae.gem": {
        source: "iana"
      },
      "application/vnd.oipf.spdiscovery+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.spdlist+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.ueprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oipf.userprofile+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.olpc-sugar": {
        source: "iana",
        extensions: ["xo"]
      },
      "application/vnd.oma-scws-config": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-request": {
        source: "iana"
      },
      "application/vnd.oma-scws-http-response": {
        source: "iana"
      },
      "application/vnd.oma.bcast.associated-procedure-parameter+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.drm-trigger+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.imd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.ltkm": {
        source: "iana"
      },
      "application/vnd.oma.bcast.notification+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.provisioningtrigger": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgboot": {
        source: "iana"
      },
      "application/vnd.oma.bcast.sgdd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.sgdu": {
        source: "iana"
      },
      "application/vnd.oma.bcast.simple-symbol-container": {
        source: "iana"
      },
      "application/vnd.oma.bcast.smartcard-trigger+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.sprov+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.bcast.stkm": {
        source: "iana"
      },
      "application/vnd.oma.cab-address-book+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-feature-handler+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-pcc+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-subs-invite+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.cab-user-prefs+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.dcd": {
        source: "iana"
      },
      "application/vnd.oma.dcdc": {
        source: "iana"
      },
      "application/vnd.oma.dd2+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dd2"]
      },
      "application/vnd.oma.drm.risd+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.group-usage-list+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.lwm2m+cbor": {
        source: "iana"
      },
      "application/vnd.oma.lwm2m+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.lwm2m+tlv": {
        source: "iana"
      },
      "application/vnd.oma.pal+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.detailed-progress-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.final-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.groups+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.invocation-descriptor+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.poc.optimized-progress-report+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.push": {
        source: "iana"
      },
      "application/vnd.oma.scidm.messages+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oma.xcap-directory+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.omads-email+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omads-file+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omads-folder+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.omaloc-supl-init": {
        source: "iana"
      },
      "application/vnd.onepager": {
        source: "iana"
      },
      "application/vnd.onepagertamp": {
        source: "iana"
      },
      "application/vnd.onepagertamx": {
        source: "iana"
      },
      "application/vnd.onepagertat": {
        source: "iana"
      },
      "application/vnd.onepagertatp": {
        source: "iana"
      },
      "application/vnd.onepagertatx": {
        source: "iana"
      },
      "application/vnd.openblox.game+xml": {
        source: "iana",
        compressible: true,
        extensions: ["obgx"]
      },
      "application/vnd.openblox.game-binary": {
        source: "iana"
      },
      "application/vnd.openeye.oeb": {
        source: "iana"
      },
      "application/vnd.openofficeorg.extension": {
        source: "apache",
        extensions: ["oxt"]
      },
      "application/vnd.openstreetmap.data+xml": {
        source: "iana",
        compressible: true,
        extensions: ["osm"]
      },
      "application/vnd.opentimestamps.ots": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.custom-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawing+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.extended-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation": {
        source: "iana",
        compressible: false,
        extensions: ["pptx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide": {
        source: "iana",
        extensions: ["sldx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
        source: "iana",
        extensions: ["ppsx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template": {
        source: "iana",
        extensions: ["potx"]
      },
      "application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
        source: "iana",
        compressible: false,
        extensions: ["xlsx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
        source: "iana",
        extensions: ["xltx"]
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.theme+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.themeoverride+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.vmldrawing": {
        source: "iana"
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
        source: "iana",
        compressible: false,
        extensions: ["docx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
        source: "iana",
        extensions: ["dotx"]
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.core-properties+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.openxmlformats-package.relationships+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oracle.resource+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.orange.indata": {
        source: "iana"
      },
      "application/vnd.osa.netdeploy": {
        source: "iana"
      },
      "application/vnd.osgeo.mapguide.package": {
        source: "iana",
        extensions: ["mgp"]
      },
      "application/vnd.osgi.bundle": {
        source: "iana"
      },
      "application/vnd.osgi.dp": {
        source: "iana",
        extensions: ["dp"]
      },
      "application/vnd.osgi.subsystem": {
        source: "iana",
        extensions: ["esa"]
      },
      "application/vnd.otps.ct-kip+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.oxli.countgraph": {
        source: "iana"
      },
      "application/vnd.pagerduty+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.palm": {
        source: "iana",
        extensions: ["pdb", "pqa", "oprc"]
      },
      "application/vnd.panoply": {
        source: "iana"
      },
      "application/vnd.paos.xml": {
        source: "iana"
      },
      "application/vnd.patentdive": {
        source: "iana"
      },
      "application/vnd.patientecommsdoc": {
        source: "iana"
      },
      "application/vnd.pawaafile": {
        source: "iana",
        extensions: ["paw"]
      },
      "application/vnd.pcos": {
        source: "iana"
      },
      "application/vnd.pg.format": {
        source: "iana",
        extensions: ["str"]
      },
      "application/vnd.pg.osasli": {
        source: "iana",
        extensions: ["ei6"]
      },
      "application/vnd.piaccess.application-licence": {
        source: "iana"
      },
      "application/vnd.picsel": {
        source: "iana",
        extensions: ["efif"]
      },
      "application/vnd.pmi.widget": {
        source: "iana",
        extensions: ["wg"]
      },
      "application/vnd.poc.group-advertisement+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.pocketlearn": {
        source: "iana",
        extensions: ["plf"]
      },
      "application/vnd.powerbuilder6": {
        source: "iana",
        extensions: ["pbd"]
      },
      "application/vnd.powerbuilder6-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder7": {
        source: "iana"
      },
      "application/vnd.powerbuilder7-s": {
        source: "iana"
      },
      "application/vnd.powerbuilder75": {
        source: "iana"
      },
      "application/vnd.powerbuilder75-s": {
        source: "iana"
      },
      "application/vnd.preminet": {
        source: "iana"
      },
      "application/vnd.previewsystems.box": {
        source: "iana",
        extensions: ["box"]
      },
      "application/vnd.proteus.magazine": {
        source: "iana",
        extensions: ["mgz"]
      },
      "application/vnd.psfs": {
        source: "iana"
      },
      "application/vnd.publishare-delta-tree": {
        source: "iana",
        extensions: ["qps"]
      },
      "application/vnd.pvi.ptid1": {
        source: "iana",
        extensions: ["ptid"]
      },
      "application/vnd.pwg-multiplexed": {
        source: "iana"
      },
      "application/vnd.pwg-xhtml-print+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.qualcomm.brew-app-res": {
        source: "iana"
      },
      "application/vnd.quarantainenet": {
        source: "iana"
      },
      "application/vnd.quark.quarkxpress": {
        source: "iana",
        extensions: ["qxd", "qxt", "qwd", "qwt", "qxl", "qxb"]
      },
      "application/vnd.quobject-quoxdocument": {
        source: "iana"
      },
      "application/vnd.radisys.moml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-conf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-conn+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-dialog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-audit-stream+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-conf+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-base+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-fax-detect+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-group+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-speech+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.radisys.msml-dialog-transform+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.rainstor.data": {
        source: "iana"
      },
      "application/vnd.rapid": {
        source: "iana"
      },
      "application/vnd.rar": {
        source: "iana",
        extensions: ["rar"]
      },
      "application/vnd.realvnc.bed": {
        source: "iana",
        extensions: ["bed"]
      },
      "application/vnd.recordare.musicxml": {
        source: "iana",
        extensions: ["mxl"]
      },
      "application/vnd.recordare.musicxml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["musicxml"]
      },
      "application/vnd.renlearn.rlprint": {
        source: "iana"
      },
      "application/vnd.resilient.logic": {
        source: "iana"
      },
      "application/vnd.restful+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.rig.cryptonote": {
        source: "iana",
        extensions: ["cryptonote"]
      },
      "application/vnd.rim.cod": {
        source: "apache",
        extensions: ["cod"]
      },
      "application/vnd.rn-realmedia": {
        source: "apache",
        extensions: ["rm"]
      },
      "application/vnd.rn-realmedia-vbr": {
        source: "apache",
        extensions: ["rmvb"]
      },
      "application/vnd.route66.link66+xml": {
        source: "iana",
        compressible: true,
        extensions: ["link66"]
      },
      "application/vnd.rs-274x": {
        source: "iana"
      },
      "application/vnd.ruckus.download": {
        source: "iana"
      },
      "application/vnd.s3sms": {
        source: "iana"
      },
      "application/vnd.sailingtracker.track": {
        source: "iana",
        extensions: ["st"]
      },
      "application/vnd.sar": {
        source: "iana"
      },
      "application/vnd.sbm.cid": {
        source: "iana"
      },
      "application/vnd.sbm.mid2": {
        source: "iana"
      },
      "application/vnd.scribus": {
        source: "iana"
      },
      "application/vnd.sealed.3df": {
        source: "iana"
      },
      "application/vnd.sealed.csf": {
        source: "iana"
      },
      "application/vnd.sealed.doc": {
        source: "iana"
      },
      "application/vnd.sealed.eml": {
        source: "iana"
      },
      "application/vnd.sealed.mht": {
        source: "iana"
      },
      "application/vnd.sealed.net": {
        source: "iana"
      },
      "application/vnd.sealed.ppt": {
        source: "iana"
      },
      "application/vnd.sealed.tiff": {
        source: "iana"
      },
      "application/vnd.sealed.xls": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.html": {
        source: "iana"
      },
      "application/vnd.sealedmedia.softseal.pdf": {
        source: "iana"
      },
      "application/vnd.seemail": {
        source: "iana",
        extensions: ["see"]
      },
      "application/vnd.seis+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.sema": {
        source: "iana",
        extensions: ["sema"]
      },
      "application/vnd.semd": {
        source: "iana",
        extensions: ["semd"]
      },
      "application/vnd.semf": {
        source: "iana",
        extensions: ["semf"]
      },
      "application/vnd.shade-save-file": {
        source: "iana"
      },
      "application/vnd.shana.informed.formdata": {
        source: "iana",
        extensions: ["ifm"]
      },
      "application/vnd.shana.informed.formtemplate": {
        source: "iana",
        extensions: ["itp"]
      },
      "application/vnd.shana.informed.interchange": {
        source: "iana",
        extensions: ["iif"]
      },
      "application/vnd.shana.informed.package": {
        source: "iana",
        extensions: ["ipk"]
      },
      "application/vnd.shootproof+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.shopkick+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.shp": {
        source: "iana"
      },
      "application/vnd.shx": {
        source: "iana"
      },
      "application/vnd.sigrok.session": {
        source: "iana"
      },
      "application/vnd.simtech-mindmapper": {
        source: "iana",
        extensions: ["twd", "twds"]
      },
      "application/vnd.siren+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.smaf": {
        source: "iana",
        extensions: ["mmf"]
      },
      "application/vnd.smart.notebook": {
        source: "iana"
      },
      "application/vnd.smart.teacher": {
        source: "iana",
        extensions: ["teacher"]
      },
      "application/vnd.snesdev-page-table": {
        source: "iana"
      },
      "application/vnd.software602.filler.form+xml": {
        source: "iana",
        compressible: true,
        extensions: ["fo"]
      },
      "application/vnd.software602.filler.form-xml-zip": {
        source: "iana"
      },
      "application/vnd.solent.sdkm+xml": {
        source: "iana",
        compressible: true,
        extensions: ["sdkm", "sdkd"]
      },
      "application/vnd.spotfire.dxp": {
        source: "iana",
        extensions: ["dxp"]
      },
      "application/vnd.spotfire.sfs": {
        source: "iana",
        extensions: ["sfs"]
      },
      "application/vnd.sqlite3": {
        source: "iana"
      },
      "application/vnd.sss-cod": {
        source: "iana"
      },
      "application/vnd.sss-dtf": {
        source: "iana"
      },
      "application/vnd.sss-ntf": {
        source: "iana"
      },
      "application/vnd.stardivision.calc": {
        source: "apache",
        extensions: ["sdc"]
      },
      "application/vnd.stardivision.draw": {
        source: "apache",
        extensions: ["sda"]
      },
      "application/vnd.stardivision.impress": {
        source: "apache",
        extensions: ["sdd"]
      },
      "application/vnd.stardivision.math": {
        source: "apache",
        extensions: ["smf"]
      },
      "application/vnd.stardivision.writer": {
        source: "apache",
        extensions: ["sdw", "vor"]
      },
      "application/vnd.stardivision.writer-global": {
        source: "apache",
        extensions: ["sgl"]
      },
      "application/vnd.stepmania.package": {
        source: "iana",
        extensions: ["smzip"]
      },
      "application/vnd.stepmania.stepchart": {
        source: "iana",
        extensions: ["sm"]
      },
      "application/vnd.street-stream": {
        source: "iana"
      },
      "application/vnd.sun.wadl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wadl"]
      },
      "application/vnd.sun.xml.calc": {
        source: "apache",
        extensions: ["sxc"]
      },
      "application/vnd.sun.xml.calc.template": {
        source: "apache",
        extensions: ["stc"]
      },
      "application/vnd.sun.xml.draw": {
        source: "apache",
        extensions: ["sxd"]
      },
      "application/vnd.sun.xml.draw.template": {
        source: "apache",
        extensions: ["std"]
      },
      "application/vnd.sun.xml.impress": {
        source: "apache",
        extensions: ["sxi"]
      },
      "application/vnd.sun.xml.impress.template": {
        source: "apache",
        extensions: ["sti"]
      },
      "application/vnd.sun.xml.math": {
        source: "apache",
        extensions: ["sxm"]
      },
      "application/vnd.sun.xml.writer": {
        source: "apache",
        extensions: ["sxw"]
      },
      "application/vnd.sun.xml.writer.global": {
        source: "apache",
        extensions: ["sxg"]
      },
      "application/vnd.sun.xml.writer.template": {
        source: "apache",
        extensions: ["stw"]
      },
      "application/vnd.sus-calendar": {
        source: "iana",
        extensions: ["sus", "susp"]
      },
      "application/vnd.svd": {
        source: "iana",
        extensions: ["svd"]
      },
      "application/vnd.swiftview-ics": {
        source: "iana"
      },
      "application/vnd.sycle+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.syft+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.symbian.install": {
        source: "apache",
        extensions: ["sis", "sisx"]
      },
      "application/vnd.syncml+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["xsm"]
      },
      "application/vnd.syncml.dm+wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["bdm"]
      },
      "application/vnd.syncml.dm+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["xdm"]
      },
      "application/vnd.syncml.dm.notification": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmddf+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["ddf"]
      },
      "application/vnd.syncml.dmtnds+wbxml": {
        source: "iana"
      },
      "application/vnd.syncml.dmtnds+xml": {
        source: "iana",
        charset: "UTF-8",
        compressible: true
      },
      "application/vnd.syncml.ds.notification": {
        source: "iana"
      },
      "application/vnd.tableschema+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tao.intent-module-archive": {
        source: "iana",
        extensions: ["tao"]
      },
      "application/vnd.tcpdump.pcap": {
        source: "iana",
        extensions: ["pcap", "cap", "dmp"]
      },
      "application/vnd.think-cell.ppttc+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tmd.mediaflex.api+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.tml": {
        source: "iana"
      },
      "application/vnd.tmobile-livetv": {
        source: "iana",
        extensions: ["tmo"]
      },
      "application/vnd.tri.onesource": {
        source: "iana"
      },
      "application/vnd.trid.tpt": {
        source: "iana",
        extensions: ["tpt"]
      },
      "application/vnd.triscape.mxs": {
        source: "iana",
        extensions: ["mxs"]
      },
      "application/vnd.trueapp": {
        source: "iana",
        extensions: ["tra"]
      },
      "application/vnd.truedoc": {
        source: "iana"
      },
      "application/vnd.ubisoft.webplayer": {
        source: "iana"
      },
      "application/vnd.ufdl": {
        source: "iana",
        extensions: ["ufd", "ufdl"]
      },
      "application/vnd.uiq.theme": {
        source: "iana",
        extensions: ["utz"]
      },
      "application/vnd.umajin": {
        source: "iana",
        extensions: ["umj"]
      },
      "application/vnd.unity": {
        source: "iana",
        extensions: ["unityweb"]
      },
      "application/vnd.uoml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["uoml"]
      },
      "application/vnd.uplanet.alert": {
        source: "iana"
      },
      "application/vnd.uplanet.alert-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice": {
        source: "iana"
      },
      "application/vnd.uplanet.bearer-choice-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop": {
        source: "iana"
      },
      "application/vnd.uplanet.cacheop-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.channel": {
        source: "iana"
      },
      "application/vnd.uplanet.channel-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.list": {
        source: "iana"
      },
      "application/vnd.uplanet.list-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd": {
        source: "iana"
      },
      "application/vnd.uplanet.listcmd-wbxml": {
        source: "iana"
      },
      "application/vnd.uplanet.signal": {
        source: "iana"
      },
      "application/vnd.uri-map": {
        source: "iana"
      },
      "application/vnd.valve.source.material": {
        source: "iana"
      },
      "application/vnd.vcx": {
        source: "iana",
        extensions: ["vcx"]
      },
      "application/vnd.vd-study": {
        source: "iana"
      },
      "application/vnd.vectorworks": {
        source: "iana"
      },
      "application/vnd.vel+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.verimatrix.vcas": {
        source: "iana"
      },
      "application/vnd.veritone.aion+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.veryant.thin": {
        source: "iana"
      },
      "application/vnd.ves.encrypted": {
        source: "iana"
      },
      "application/vnd.vidsoft.vidconference": {
        source: "iana"
      },
      "application/vnd.visio": {
        source: "iana",
        extensions: ["vsd", "vst", "vss", "vsw"]
      },
      "application/vnd.visionary": {
        source: "iana",
        extensions: ["vis"]
      },
      "application/vnd.vividence.scriptfile": {
        source: "iana"
      },
      "application/vnd.vsf": {
        source: "iana",
        extensions: ["vsf"]
      },
      "application/vnd.wap.sic": {
        source: "iana"
      },
      "application/vnd.wap.slc": {
        source: "iana"
      },
      "application/vnd.wap.wbxml": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["wbxml"]
      },
      "application/vnd.wap.wmlc": {
        source: "iana",
        extensions: ["wmlc"]
      },
      "application/vnd.wap.wmlscriptc": {
        source: "iana",
        extensions: ["wmlsc"]
      },
      "application/vnd.webturbo": {
        source: "iana",
        extensions: ["wtb"]
      },
      "application/vnd.wfa.dpp": {
        source: "iana"
      },
      "application/vnd.wfa.p2p": {
        source: "iana"
      },
      "application/vnd.wfa.wsc": {
        source: "iana"
      },
      "application/vnd.windows.devicepairing": {
        source: "iana"
      },
      "application/vnd.wmc": {
        source: "iana"
      },
      "application/vnd.wmf.bootstrap": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica": {
        source: "iana"
      },
      "application/vnd.wolfram.mathematica.package": {
        source: "iana"
      },
      "application/vnd.wolfram.player": {
        source: "iana",
        extensions: ["nbp"]
      },
      "application/vnd.wordperfect": {
        source: "iana",
        extensions: ["wpd"]
      },
      "application/vnd.wqd": {
        source: "iana",
        extensions: ["wqd"]
      },
      "application/vnd.wrq-hp3000-labelled": {
        source: "iana"
      },
      "application/vnd.wt.stf": {
        source: "iana",
        extensions: ["stf"]
      },
      "application/vnd.wv.csp+wbxml": {
        source: "iana"
      },
      "application/vnd.wv.csp+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.wv.ssp+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xacml+json": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xara": {
        source: "iana",
        extensions: ["xar"]
      },
      "application/vnd.xfdl": {
        source: "iana",
        extensions: ["xfdl"]
      },
      "application/vnd.xfdl.webform": {
        source: "iana"
      },
      "application/vnd.xmi+xml": {
        source: "iana",
        compressible: true
      },
      "application/vnd.xmpie.cpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.dpkg": {
        source: "iana"
      },
      "application/vnd.xmpie.plan": {
        source: "iana"
      },
      "application/vnd.xmpie.ppkg": {
        source: "iana"
      },
      "application/vnd.xmpie.xlim": {
        source: "iana"
      },
      "application/vnd.yamaha.hv-dic": {
        source: "iana",
        extensions: ["hvd"]
      },
      "application/vnd.yamaha.hv-script": {
        source: "iana",
        extensions: ["hvs"]
      },
      "application/vnd.yamaha.hv-voice": {
        source: "iana",
        extensions: ["hvp"]
      },
      "application/vnd.yamaha.openscoreformat": {
        source: "iana",
        extensions: ["osf"]
      },
      "application/vnd.yamaha.openscoreformat.osfpvg+xml": {
        source: "iana",
        compressible: true,
        extensions: ["osfpvg"]
      },
      "application/vnd.yamaha.remote-setup": {
        source: "iana"
      },
      "application/vnd.yamaha.smaf-audio": {
        source: "iana",
        extensions: ["saf"]
      },
      "application/vnd.yamaha.smaf-phrase": {
        source: "iana",
        extensions: ["spf"]
      },
      "application/vnd.yamaha.through-ngn": {
        source: "iana"
      },
      "application/vnd.yamaha.tunnel-udpencap": {
        source: "iana"
      },
      "application/vnd.yaoweme": {
        source: "iana"
      },
      "application/vnd.yellowriver-custom-menu": {
        source: "iana",
        extensions: ["cmp"]
      },
      "application/vnd.youtube.yt": {
        source: "iana"
      },
      "application/vnd.zul": {
        source: "iana",
        extensions: ["zir", "zirz"]
      },
      "application/vnd.zzazz.deck+xml": {
        source: "iana",
        compressible: true,
        extensions: ["zaz"]
      },
      "application/voicexml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["vxml"]
      },
      "application/voucher-cms+json": {
        source: "iana",
        compressible: true
      },
      "application/vq-rtcpxr": {
        source: "iana"
      },
      "application/wasm": {
        source: "iana",
        compressible: true,
        extensions: ["wasm"]
      },
      "application/watcherinfo+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wif"]
      },
      "application/webpush-options+json": {
        source: "iana",
        compressible: true
      },
      "application/whoispp-query": {
        source: "iana"
      },
      "application/whoispp-response": {
        source: "iana"
      },
      "application/widget": {
        source: "iana",
        extensions: ["wgt"]
      },
      "application/winhlp": {
        source: "apache",
        extensions: ["hlp"]
      },
      "application/wita": {
        source: "iana"
      },
      "application/wordperfect5.1": {
        source: "iana"
      },
      "application/wsdl+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wsdl"]
      },
      "application/wspolicy+xml": {
        source: "iana",
        compressible: true,
        extensions: ["wspolicy"]
      },
      "application/x-7z-compressed": {
        source: "apache",
        compressible: false,
        extensions: ["7z"]
      },
      "application/x-abiword": {
        source: "apache",
        extensions: ["abw"]
      },
      "application/x-ace-compressed": {
        source: "apache",
        extensions: ["ace"]
      },
      "application/x-amf": {
        source: "apache"
      },
      "application/x-apple-diskimage": {
        source: "apache",
        extensions: ["dmg"]
      },
      "application/x-arj": {
        compressible: false,
        extensions: ["arj"]
      },
      "application/x-authorware-bin": {
        source: "apache",
        extensions: ["aab", "x32", "u32", "vox"]
      },
      "application/x-authorware-map": {
        source: "apache",
        extensions: ["aam"]
      },
      "application/x-authorware-seg": {
        source: "apache",
        extensions: ["aas"]
      },
      "application/x-bcpio": {
        source: "apache",
        extensions: ["bcpio"]
      },
      "application/x-bdoc": {
        compressible: false,
        extensions: ["bdoc"]
      },
      "application/x-bittorrent": {
        source: "apache",
        extensions: ["torrent"]
      },
      "application/x-blorb": {
        source: "apache",
        extensions: ["blb", "blorb"]
      },
      "application/x-bzip": {
        source: "apache",
        compressible: false,
        extensions: ["bz"]
      },
      "application/x-bzip2": {
        source: "apache",
        compressible: false,
        extensions: ["bz2", "boz"]
      },
      "application/x-cbr": {
        source: "apache",
        extensions: ["cbr", "cba", "cbt", "cbz", "cb7"]
      },
      "application/x-cdlink": {
        source: "apache",
        extensions: ["vcd"]
      },
      "application/x-cfs-compressed": {
        source: "apache",
        extensions: ["cfs"]
      },
      "application/x-chat": {
        source: "apache",
        extensions: ["chat"]
      },
      "application/x-chess-pgn": {
        source: "apache",
        extensions: ["pgn"]
      },
      "application/x-chrome-extension": {
        extensions: ["crx"]
      },
      "application/x-cocoa": {
        source: "nginx",
        extensions: ["cco"]
      },
      "application/x-compress": {
        source: "apache"
      },
      "application/x-conference": {
        source: "apache",
        extensions: ["nsc"]
      },
      "application/x-cpio": {
        source: "apache",
        extensions: ["cpio"]
      },
      "application/x-csh": {
        source: "apache",
        extensions: ["csh"]
      },
      "application/x-deb": {
        compressible: false
      },
      "application/x-debian-package": {
        source: "apache",
        extensions: ["deb", "udeb"]
      },
      "application/x-dgc-compressed": {
        source: "apache",
        extensions: ["dgc"]
      },
      "application/x-director": {
        source: "apache",
        extensions: ["dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"]
      },
      "application/x-doom": {
        source: "apache",
        extensions: ["wad"]
      },
      "application/x-dtbncx+xml": {
        source: "apache",
        compressible: true,
        extensions: ["ncx"]
      },
      "application/x-dtbook+xml": {
        source: "apache",
        compressible: true,
        extensions: ["dtb"]
      },
      "application/x-dtbresource+xml": {
        source: "apache",
        compressible: true,
        extensions: ["res"]
      },
      "application/x-dvi": {
        source: "apache",
        compressible: false,
        extensions: ["dvi"]
      },
      "application/x-envoy": {
        source: "apache",
        extensions: ["evy"]
      },
      "application/x-eva": {
        source: "apache",
        extensions: ["eva"]
      },
      "application/x-font-bdf": {
        source: "apache",
        extensions: ["bdf"]
      },
      "application/x-font-dos": {
        source: "apache"
      },
      "application/x-font-framemaker": {
        source: "apache"
      },
      "application/x-font-ghostscript": {
        source: "apache",
        extensions: ["gsf"]
      },
      "application/x-font-libgrx": {
        source: "apache"
      },
      "application/x-font-linux-psf": {
        source: "apache",
        extensions: ["psf"]
      },
      "application/x-font-pcf": {
        source: "apache",
        extensions: ["pcf"]
      },
      "application/x-font-snf": {
        source: "apache",
        extensions: ["snf"]
      },
      "application/x-font-speedo": {
        source: "apache"
      },
      "application/x-font-sunos-news": {
        source: "apache"
      },
      "application/x-font-type1": {
        source: "apache",
        extensions: ["pfa", "pfb", "pfm", "afm"]
      },
      "application/x-font-vfont": {
        source: "apache"
      },
      "application/x-freearc": {
        source: "apache",
        extensions: ["arc"]
      },
      "application/x-futuresplash": {
        source: "apache",
        extensions: ["spl"]
      },
      "application/x-gca-compressed": {
        source: "apache",
        extensions: ["gca"]
      },
      "application/x-glulx": {
        source: "apache",
        extensions: ["ulx"]
      },
      "application/x-gnumeric": {
        source: "apache",
        extensions: ["gnumeric"]
      },
      "application/x-gramps-xml": {
        source: "apache",
        extensions: ["gramps"]
      },
      "application/x-gtar": {
        source: "apache",
        extensions: ["gtar"]
      },
      "application/x-gzip": {
        source: "apache"
      },
      "application/x-hdf": {
        source: "apache",
        extensions: ["hdf"]
      },
      "application/x-httpd-php": {
        compressible: true,
        extensions: ["php"]
      },
      "application/x-install-instructions": {
        source: "apache",
        extensions: ["install"]
      },
      "application/x-iso9660-image": {
        source: "apache",
        extensions: ["iso"]
      },
      "application/x-iwork-keynote-sffkey": {
        extensions: ["key"]
      },
      "application/x-iwork-numbers-sffnumbers": {
        extensions: ["numbers"]
      },
      "application/x-iwork-pages-sffpages": {
        extensions: ["pages"]
      },
      "application/x-java-archive-diff": {
        source: "nginx",
        extensions: ["jardiff"]
      },
      "application/x-java-jnlp-file": {
        source: "apache",
        compressible: false,
        extensions: ["jnlp"]
      },
      "application/x-javascript": {
        compressible: true
      },
      "application/x-keepass2": {
        extensions: ["kdbx"]
      },
      "application/x-latex": {
        source: "apache",
        compressible: false,
        extensions: ["latex"]
      },
      "application/x-lua-bytecode": {
        extensions: ["luac"]
      },
      "application/x-lzh-compressed": {
        source: "apache",
        extensions: ["lzh", "lha"]
      },
      "application/x-makeself": {
        source: "nginx",
        extensions: ["run"]
      },
      "application/x-mie": {
        source: "apache",
        extensions: ["mie"]
      },
      "application/x-mobipocket-ebook": {
        source: "apache",
        extensions: ["prc", "mobi"]
      },
      "application/x-mpegurl": {
        compressible: false
      },
      "application/x-ms-application": {
        source: "apache",
        extensions: ["application"]
      },
      "application/x-ms-shortcut": {
        source: "apache",
        extensions: ["lnk"]
      },
      "application/x-ms-wmd": {
        source: "apache",
        extensions: ["wmd"]
      },
      "application/x-ms-wmz": {
        source: "apache",
        extensions: ["wmz"]
      },
      "application/x-ms-xbap": {
        source: "apache",
        extensions: ["xbap"]
      },
      "application/x-msaccess": {
        source: "apache",
        extensions: ["mdb"]
      },
      "application/x-msbinder": {
        source: "apache",
        extensions: ["obd"]
      },
      "application/x-mscardfile": {
        source: "apache",
        extensions: ["crd"]
      },
      "application/x-msclip": {
        source: "apache",
        extensions: ["clp"]
      },
      "application/x-msdos-program": {
        extensions: ["exe"]
      },
      "application/x-msdownload": {
        source: "apache",
        extensions: ["exe", "dll", "com", "bat", "msi"]
      },
      "application/x-msmediaview": {
        source: "apache",
        extensions: ["mvb", "m13", "m14"]
      },
      "application/x-msmetafile": {
        source: "apache",
        extensions: ["wmf", "wmz", "emf", "emz"]
      },
      "application/x-msmoney": {
        source: "apache",
        extensions: ["mny"]
      },
      "application/x-mspublisher": {
        source: "apache",
        extensions: ["pub"]
      },
      "application/x-msschedule": {
        source: "apache",
        extensions: ["scd"]
      },
      "application/x-msterminal": {
        source: "apache",
        extensions: ["trm"]
      },
      "application/x-mswrite": {
        source: "apache",
        extensions: ["wri"]
      },
      "application/x-netcdf": {
        source: "apache",
        extensions: ["nc", "cdf"]
      },
      "application/x-ns-proxy-autoconfig": {
        compressible: true,
        extensions: ["pac"]
      },
      "application/x-nzb": {
        source: "apache",
        extensions: ["nzb"]
      },
      "application/x-perl": {
        source: "nginx",
        extensions: ["pl", "pm"]
      },
      "application/x-pilot": {
        source: "nginx",
        extensions: ["prc", "pdb"]
      },
      "application/x-pkcs12": {
        source: "apache",
        compressible: false,
        extensions: ["p12", "pfx"]
      },
      "application/x-pkcs7-certificates": {
        source: "apache",
        extensions: ["p7b", "spc"]
      },
      "application/x-pkcs7-certreqresp": {
        source: "apache",
        extensions: ["p7r"]
      },
      "application/x-pki-message": {
        source: "iana"
      },
      "application/x-rar-compressed": {
        source: "apache",
        compressible: false,
        extensions: ["rar"]
      },
      "application/x-redhat-package-manager": {
        source: "nginx",
        extensions: ["rpm"]
      },
      "application/x-research-info-systems": {
        source: "apache",
        extensions: ["ris"]
      },
      "application/x-sea": {
        source: "nginx",
        extensions: ["sea"]
      },
      "application/x-sh": {
        source: "apache",
        compressible: true,
        extensions: ["sh"]
      },
      "application/x-shar": {
        source: "apache",
        extensions: ["shar"]
      },
      "application/x-shockwave-flash": {
        source: "apache",
        compressible: false,
        extensions: ["swf"]
      },
      "application/x-silverlight-app": {
        source: "apache",
        extensions: ["xap"]
      },
      "application/x-sql": {
        source: "apache",
        extensions: ["sql"]
      },
      "application/x-stuffit": {
        source: "apache",
        compressible: false,
        extensions: ["sit"]
      },
      "application/x-stuffitx": {
        source: "apache",
        extensions: ["sitx"]
      },
      "application/x-subrip": {
        source: "apache",
        extensions: ["srt"]
      },
      "application/x-sv4cpio": {
        source: "apache",
        extensions: ["sv4cpio"]
      },
      "application/x-sv4crc": {
        source: "apache",
        extensions: ["sv4crc"]
      },
      "application/x-t3vm-image": {
        source: "apache",
        extensions: ["t3"]
      },
      "application/x-tads": {
        source: "apache",
        extensions: ["gam"]
      },
      "application/x-tar": {
        source: "apache",
        compressible: true,
        extensions: ["tar"]
      },
      "application/x-tcl": {
        source: "apache",
        extensions: ["tcl", "tk"]
      },
      "application/x-tex": {
        source: "apache",
        extensions: ["tex"]
      },
      "application/x-tex-tfm": {
        source: "apache",
        extensions: ["tfm"]
      },
      "application/x-texinfo": {
        source: "apache",
        extensions: ["texinfo", "texi"]
      },
      "application/x-tgif": {
        source: "apache",
        extensions: ["obj"]
      },
      "application/x-ustar": {
        source: "apache",
        extensions: ["ustar"]
      },
      "application/x-virtualbox-hdd": {
        compressible: true,
        extensions: ["hdd"]
      },
      "application/x-virtualbox-ova": {
        compressible: true,
        extensions: ["ova"]
      },
      "application/x-virtualbox-ovf": {
        compressible: true,
        extensions: ["ovf"]
      },
      "application/x-virtualbox-vbox": {
        compressible: true,
        extensions: ["vbox"]
      },
      "application/x-virtualbox-vbox-extpack": {
        compressible: false,
        extensions: ["vbox-extpack"]
      },
      "application/x-virtualbox-vdi": {
        compressible: true,
        extensions: ["vdi"]
      },
      "application/x-virtualbox-vhd": {
        compressible: true,
        extensions: ["vhd"]
      },
      "application/x-virtualbox-vmdk": {
        compressible: true,
        extensions: ["vmdk"]
      },
      "application/x-wais-source": {
        source: "apache",
        extensions: ["src"]
      },
      "application/x-web-app-manifest+json": {
        compressible: true,
        extensions: ["webapp"]
      },
      "application/x-www-form-urlencoded": {
        source: "iana",
        compressible: true
      },
      "application/x-x509-ca-cert": {
        source: "iana",
        extensions: ["der", "crt", "pem"]
      },
      "application/x-x509-ca-ra-cert": {
        source: "iana"
      },
      "application/x-x509-next-ca-cert": {
        source: "iana"
      },
      "application/x-xfig": {
        source: "apache",
        extensions: ["fig"]
      },
      "application/x-xliff+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xlf"]
      },
      "application/x-xpinstall": {
        source: "apache",
        compressible: false,
        extensions: ["xpi"]
      },
      "application/x-xz": {
        source: "apache",
        extensions: ["xz"]
      },
      "application/x-zmachine": {
        source: "apache",
        extensions: ["z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"]
      },
      "application/x400-bp": {
        source: "iana"
      },
      "application/xacml+xml": {
        source: "iana",
        compressible: true
      },
      "application/xaml+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xaml"]
      },
      "application/xcap-att+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xav"]
      },
      "application/xcap-caps+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xca"]
      },
      "application/xcap-diff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xdf"]
      },
      "application/xcap-el+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xel"]
      },
      "application/xcap-error+xml": {
        source: "iana",
        compressible: true
      },
      "application/xcap-ns+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xns"]
      },
      "application/xcon-conference-info+xml": {
        source: "iana",
        compressible: true
      },
      "application/xcon-conference-info-diff+xml": {
        source: "iana",
        compressible: true
      },
      "application/xenc+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xenc"]
      },
      "application/xhtml+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xhtml", "xht"]
      },
      "application/xhtml-voice+xml": {
        source: "apache",
        compressible: true
      },
      "application/xliff+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xlf"]
      },
      "application/xml": {
        source: "iana",
        compressible: true,
        extensions: ["xml", "xsl", "xsd", "rng"]
      },
      "application/xml-dtd": {
        source: "iana",
        compressible: true,
        extensions: ["dtd"]
      },
      "application/xml-external-parsed-entity": {
        source: "iana"
      },
      "application/xml-patch+xml": {
        source: "iana",
        compressible: true
      },
      "application/xmpp+xml": {
        source: "iana",
        compressible: true
      },
      "application/xop+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xop"]
      },
      "application/xproc+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xpl"]
      },
      "application/xslt+xml": {
        source: "iana",
        compressible: true,
        extensions: ["xsl", "xslt"]
      },
      "application/xspf+xml": {
        source: "apache",
        compressible: true,
        extensions: ["xspf"]
      },
      "application/xv+xml": {
        source: "iana",
        compressible: true,
        extensions: ["mxml", "xhvml", "xvml", "xvm"]
      },
      "application/yang": {
        source: "iana",
        extensions: ["yang"]
      },
      "application/yang-data+json": {
        source: "iana",
        compressible: true
      },
      "application/yang-data+xml": {
        source: "iana",
        compressible: true
      },
      "application/yang-patch+json": {
        source: "iana",
        compressible: true
      },
      "application/yang-patch+xml": {
        source: "iana",
        compressible: true
      },
      "application/yin+xml": {
        source: "iana",
        compressible: true,
        extensions: ["yin"]
      },
      "application/zip": {
        source: "iana",
        compressible: false,
        extensions: ["zip"]
      },
      "application/zlib": {
        source: "iana"
      },
      "application/zstd": {
        source: "iana"
      },
      "audio/1d-interleaved-parityfec": {
        source: "iana"
      },
      "audio/32kadpcm": {
        source: "iana"
      },
      "audio/3gpp": {
        source: "iana",
        compressible: false,
        extensions: ["3gpp"]
      },
      "audio/3gpp2": {
        source: "iana"
      },
      "audio/aac": {
        source: "iana"
      },
      "audio/ac3": {
        source: "iana"
      },
      "audio/adpcm": {
        source: "apache",
        extensions: ["adp"]
      },
      "audio/amr": {
        source: "iana",
        extensions: ["amr"]
      },
      "audio/amr-wb": {
        source: "iana"
      },
      "audio/amr-wb+": {
        source: "iana"
      },
      "audio/aptx": {
        source: "iana"
      },
      "audio/asc": {
        source: "iana"
      },
      "audio/atrac-advanced-lossless": {
        source: "iana"
      },
      "audio/atrac-x": {
        source: "iana"
      },
      "audio/atrac3": {
        source: "iana"
      },
      "audio/basic": {
        source: "iana",
        compressible: false,
        extensions: ["au", "snd"]
      },
      "audio/bv16": {
        source: "iana"
      },
      "audio/bv32": {
        source: "iana"
      },
      "audio/clearmode": {
        source: "iana"
      },
      "audio/cn": {
        source: "iana"
      },
      "audio/dat12": {
        source: "iana"
      },
      "audio/dls": {
        source: "iana"
      },
      "audio/dsr-es201108": {
        source: "iana"
      },
      "audio/dsr-es202050": {
        source: "iana"
      },
      "audio/dsr-es202211": {
        source: "iana"
      },
      "audio/dsr-es202212": {
        source: "iana"
      },
      "audio/dv": {
        source: "iana"
      },
      "audio/dvi4": {
        source: "iana"
      },
      "audio/eac3": {
        source: "iana"
      },
      "audio/encaprtp": {
        source: "iana"
      },
      "audio/evrc": {
        source: "iana"
      },
      "audio/evrc-qcp": {
        source: "iana"
      },
      "audio/evrc0": {
        source: "iana"
      },
      "audio/evrc1": {
        source: "iana"
      },
      "audio/evrcb": {
        source: "iana"
      },
      "audio/evrcb0": {
        source: "iana"
      },
      "audio/evrcb1": {
        source: "iana"
      },
      "audio/evrcnw": {
        source: "iana"
      },
      "audio/evrcnw0": {
        source: "iana"
      },
      "audio/evrcnw1": {
        source: "iana"
      },
      "audio/evrcwb": {
        source: "iana"
      },
      "audio/evrcwb0": {
        source: "iana"
      },
      "audio/evrcwb1": {
        source: "iana"
      },
      "audio/evs": {
        source: "iana"
      },
      "audio/flexfec": {
        source: "iana"
      },
      "audio/fwdred": {
        source: "iana"
      },
      "audio/g711-0": {
        source: "iana"
      },
      "audio/g719": {
        source: "iana"
      },
      "audio/g722": {
        source: "iana"
      },
      "audio/g7221": {
        source: "iana"
      },
      "audio/g723": {
        source: "iana"
      },
      "audio/g726-16": {
        source: "iana"
      },
      "audio/g726-24": {
        source: "iana"
      },
      "audio/g726-32": {
        source: "iana"
      },
      "audio/g726-40": {
        source: "iana"
      },
      "audio/g728": {
        source: "iana"
      },
      "audio/g729": {
        source: "iana"
      },
      "audio/g7291": {
        source: "iana"
      },
      "audio/g729d": {
        source: "iana"
      },
      "audio/g729e": {
        source: "iana"
      },
      "audio/gsm": {
        source: "iana"
      },
      "audio/gsm-efr": {
        source: "iana"
      },
      "audio/gsm-hr-08": {
        source: "iana"
      },
      "audio/ilbc": {
        source: "iana"
      },
      "audio/ip-mr_v2.5": {
        source: "iana"
      },
      "audio/isac": {
        source: "apache"
      },
      "audio/l16": {
        source: "iana"
      },
      "audio/l20": {
        source: "iana"
      },
      "audio/l24": {
        source: "iana",
        compressible: false
      },
      "audio/l8": {
        source: "iana"
      },
      "audio/lpc": {
        source: "iana"
      },
      "audio/melp": {
        source: "iana"
      },
      "audio/melp1200": {
        source: "iana"
      },
      "audio/melp2400": {
        source: "iana"
      },
      "audio/melp600": {
        source: "iana"
      },
      "audio/mhas": {
        source: "iana"
      },
      "audio/midi": {
        source: "apache",
        extensions: ["mid", "midi", "kar", "rmi"]
      },
      "audio/mobile-xmf": {
        source: "iana",
        extensions: ["mxmf"]
      },
      "audio/mp3": {
        compressible: false,
        extensions: ["mp3"]
      },
      "audio/mp4": {
        source: "iana",
        compressible: false,
        extensions: ["m4a", "mp4a"]
      },
      "audio/mp4a-latm": {
        source: "iana"
      },
      "audio/mpa": {
        source: "iana"
      },
      "audio/mpa-robust": {
        source: "iana"
      },
      "audio/mpeg": {
        source: "iana",
        compressible: false,
        extensions: ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"]
      },
      "audio/mpeg4-generic": {
        source: "iana"
      },
      "audio/musepack": {
        source: "apache"
      },
      "audio/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["oga", "ogg", "spx", "opus"]
      },
      "audio/opus": {
        source: "iana"
      },
      "audio/parityfec": {
        source: "iana"
      },
      "audio/pcma": {
        source: "iana"
      },
      "audio/pcma-wb": {
        source: "iana"
      },
      "audio/pcmu": {
        source: "iana"
      },
      "audio/pcmu-wb": {
        source: "iana"
      },
      "audio/prs.sid": {
        source: "iana"
      },
      "audio/qcelp": {
        source: "iana"
      },
      "audio/raptorfec": {
        source: "iana"
      },
      "audio/red": {
        source: "iana"
      },
      "audio/rtp-enc-aescm128": {
        source: "iana"
      },
      "audio/rtp-midi": {
        source: "iana"
      },
      "audio/rtploopback": {
        source: "iana"
      },
      "audio/rtx": {
        source: "iana"
      },
      "audio/s3m": {
        source: "apache",
        extensions: ["s3m"]
      },
      "audio/scip": {
        source: "iana"
      },
      "audio/silk": {
        source: "apache",
        extensions: ["sil"]
      },
      "audio/smv": {
        source: "iana"
      },
      "audio/smv-qcp": {
        source: "iana"
      },
      "audio/smv0": {
        source: "iana"
      },
      "audio/sofa": {
        source: "iana"
      },
      "audio/sp-midi": {
        source: "iana"
      },
      "audio/speex": {
        source: "iana"
      },
      "audio/t140c": {
        source: "iana"
      },
      "audio/t38": {
        source: "iana"
      },
      "audio/telephone-event": {
        source: "iana"
      },
      "audio/tetra_acelp": {
        source: "iana"
      },
      "audio/tetra_acelp_bb": {
        source: "iana"
      },
      "audio/tone": {
        source: "iana"
      },
      "audio/tsvcis": {
        source: "iana"
      },
      "audio/uemclip": {
        source: "iana"
      },
      "audio/ulpfec": {
        source: "iana"
      },
      "audio/usac": {
        source: "iana"
      },
      "audio/vdvi": {
        source: "iana"
      },
      "audio/vmr-wb": {
        source: "iana"
      },
      "audio/vnd.3gpp.iufp": {
        source: "iana"
      },
      "audio/vnd.4sb": {
        source: "iana"
      },
      "audio/vnd.audiokoz": {
        source: "iana"
      },
      "audio/vnd.celp": {
        source: "iana"
      },
      "audio/vnd.cisco.nse": {
        source: "iana"
      },
      "audio/vnd.cmles.radio-events": {
        source: "iana"
      },
      "audio/vnd.cns.anp1": {
        source: "iana"
      },
      "audio/vnd.cns.inf1": {
        source: "iana"
      },
      "audio/vnd.dece.audio": {
        source: "iana",
        extensions: ["uva", "uvva"]
      },
      "audio/vnd.digital-winds": {
        source: "iana",
        extensions: ["eol"]
      },
      "audio/vnd.dlna.adts": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.1": {
        source: "iana"
      },
      "audio/vnd.dolby.heaac.2": {
        source: "iana"
      },
      "audio/vnd.dolby.mlp": {
        source: "iana"
      },
      "audio/vnd.dolby.mps": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2x": {
        source: "iana"
      },
      "audio/vnd.dolby.pl2z": {
        source: "iana"
      },
      "audio/vnd.dolby.pulse.1": {
        source: "iana"
      },
      "audio/vnd.dra": {
        source: "iana",
        extensions: ["dra"]
      },
      "audio/vnd.dts": {
        source: "iana",
        extensions: ["dts"]
      },
      "audio/vnd.dts.hd": {
        source: "iana",
        extensions: ["dtshd"]
      },
      "audio/vnd.dts.uhd": {
        source: "iana"
      },
      "audio/vnd.dvb.file": {
        source: "iana"
      },
      "audio/vnd.everad.plj": {
        source: "iana"
      },
      "audio/vnd.hns.audio": {
        source: "iana"
      },
      "audio/vnd.lucent.voice": {
        source: "iana",
        extensions: ["lvp"]
      },
      "audio/vnd.ms-playready.media.pya": {
        source: "iana",
        extensions: ["pya"]
      },
      "audio/vnd.nokia.mobile-xmf": {
        source: "iana"
      },
      "audio/vnd.nortel.vbk": {
        source: "iana"
      },
      "audio/vnd.nuera.ecelp4800": {
        source: "iana",
        extensions: ["ecelp4800"]
      },
      "audio/vnd.nuera.ecelp7470": {
        source: "iana",
        extensions: ["ecelp7470"]
      },
      "audio/vnd.nuera.ecelp9600": {
        source: "iana",
        extensions: ["ecelp9600"]
      },
      "audio/vnd.octel.sbc": {
        source: "iana"
      },
      "audio/vnd.presonus.multitrack": {
        source: "iana"
      },
      "audio/vnd.qcelp": {
        source: "iana"
      },
      "audio/vnd.rhetorex.32kadpcm": {
        source: "iana"
      },
      "audio/vnd.rip": {
        source: "iana",
        extensions: ["rip"]
      },
      "audio/vnd.rn-realaudio": {
        compressible: false
      },
      "audio/vnd.sealedmedia.softseal.mpeg": {
        source: "iana"
      },
      "audio/vnd.vmx.cvsd": {
        source: "iana"
      },
      "audio/vnd.wave": {
        compressible: false
      },
      "audio/vorbis": {
        source: "iana",
        compressible: false
      },
      "audio/vorbis-config": {
        source: "iana"
      },
      "audio/wav": {
        compressible: false,
        extensions: ["wav"]
      },
      "audio/wave": {
        compressible: false,
        extensions: ["wav"]
      },
      "audio/webm": {
        source: "apache",
        compressible: false,
        extensions: ["weba"]
      },
      "audio/x-aac": {
        source: "apache",
        compressible: false,
        extensions: ["aac"]
      },
      "audio/x-aiff": {
        source: "apache",
        extensions: ["aif", "aiff", "aifc"]
      },
      "audio/x-caf": {
        source: "apache",
        compressible: false,
        extensions: ["caf"]
      },
      "audio/x-flac": {
        source: "apache",
        extensions: ["flac"]
      },
      "audio/x-m4a": {
        source: "nginx",
        extensions: ["m4a"]
      },
      "audio/x-matroska": {
        source: "apache",
        extensions: ["mka"]
      },
      "audio/x-mpegurl": {
        source: "apache",
        extensions: ["m3u"]
      },
      "audio/x-ms-wax": {
        source: "apache",
        extensions: ["wax"]
      },
      "audio/x-ms-wma": {
        source: "apache",
        extensions: ["wma"]
      },
      "audio/x-pn-realaudio": {
        source: "apache",
        extensions: ["ram", "ra"]
      },
      "audio/x-pn-realaudio-plugin": {
        source: "apache",
        extensions: ["rmp"]
      },
      "audio/x-realaudio": {
        source: "nginx",
        extensions: ["ra"]
      },
      "audio/x-tta": {
        source: "apache"
      },
      "audio/x-wav": {
        source: "apache",
        extensions: ["wav"]
      },
      "audio/xm": {
        source: "apache",
        extensions: ["xm"]
      },
      "chemical/x-cdx": {
        source: "apache",
        extensions: ["cdx"]
      },
      "chemical/x-cif": {
        source: "apache",
        extensions: ["cif"]
      },
      "chemical/x-cmdf": {
        source: "apache",
        extensions: ["cmdf"]
      },
      "chemical/x-cml": {
        source: "apache",
        extensions: ["cml"]
      },
      "chemical/x-csml": {
        source: "apache",
        extensions: ["csml"]
      },
      "chemical/x-pdb": {
        source: "apache"
      },
      "chemical/x-xyz": {
        source: "apache",
        extensions: ["xyz"]
      },
      "font/collection": {
        source: "iana",
        extensions: ["ttc"]
      },
      "font/otf": {
        source: "iana",
        compressible: true,
        extensions: ["otf"]
      },
      "font/sfnt": {
        source: "iana"
      },
      "font/ttf": {
        source: "iana",
        compressible: true,
        extensions: ["ttf"]
      },
      "font/woff": {
        source: "iana",
        extensions: ["woff"]
      },
      "font/woff2": {
        source: "iana",
        extensions: ["woff2"]
      },
      "image/aces": {
        source: "iana",
        extensions: ["exr"]
      },
      "image/apng": {
        compressible: false,
        extensions: ["apng"]
      },
      "image/avci": {
        source: "iana",
        extensions: ["avci"]
      },
      "image/avcs": {
        source: "iana",
        extensions: ["avcs"]
      },
      "image/avif": {
        source: "iana",
        compressible: false,
        extensions: ["avif"]
      },
      "image/bmp": {
        source: "iana",
        compressible: true,
        extensions: ["bmp"]
      },
      "image/cgm": {
        source: "iana",
        extensions: ["cgm"]
      },
      "image/dicom-rle": {
        source: "iana",
        extensions: ["drle"]
      },
      "image/emf": {
        source: "iana",
        extensions: ["emf"]
      },
      "image/fits": {
        source: "iana",
        extensions: ["fits"]
      },
      "image/g3fax": {
        source: "iana",
        extensions: ["g3"]
      },
      "image/gif": {
        source: "iana",
        compressible: false,
        extensions: ["gif"]
      },
      "image/heic": {
        source: "iana",
        extensions: ["heic"]
      },
      "image/heic-sequence": {
        source: "iana",
        extensions: ["heics"]
      },
      "image/heif": {
        source: "iana",
        extensions: ["heif"]
      },
      "image/heif-sequence": {
        source: "iana",
        extensions: ["heifs"]
      },
      "image/hej2k": {
        source: "iana",
        extensions: ["hej2"]
      },
      "image/hsj2": {
        source: "iana",
        extensions: ["hsj2"]
      },
      "image/ief": {
        source: "iana",
        extensions: ["ief"]
      },
      "image/jls": {
        source: "iana",
        extensions: ["jls"]
      },
      "image/jp2": {
        source: "iana",
        compressible: false,
        extensions: ["jp2", "jpg2"]
      },
      "image/jpeg": {
        source: "iana",
        compressible: false,
        extensions: ["jpeg", "jpg", "jpe"]
      },
      "image/jph": {
        source: "iana",
        extensions: ["jph"]
      },
      "image/jphc": {
        source: "iana",
        extensions: ["jhc"]
      },
      "image/jpm": {
        source: "iana",
        compressible: false,
        extensions: ["jpm"]
      },
      "image/jpx": {
        source: "iana",
        compressible: false,
        extensions: ["jpx", "jpf"]
      },
      "image/jxr": {
        source: "iana",
        extensions: ["jxr"]
      },
      "image/jxra": {
        source: "iana",
        extensions: ["jxra"]
      },
      "image/jxrs": {
        source: "iana",
        extensions: ["jxrs"]
      },
      "image/jxs": {
        source: "iana",
        extensions: ["jxs"]
      },
      "image/jxsc": {
        source: "iana",
        extensions: ["jxsc"]
      },
      "image/jxsi": {
        source: "iana",
        extensions: ["jxsi"]
      },
      "image/jxss": {
        source: "iana",
        extensions: ["jxss"]
      },
      "image/ktx": {
        source: "iana",
        extensions: ["ktx"]
      },
      "image/ktx2": {
        source: "iana",
        extensions: ["ktx2"]
      },
      "image/naplps": {
        source: "iana"
      },
      "image/pjpeg": {
        compressible: false
      },
      "image/png": {
        source: "iana",
        compressible: false,
        extensions: ["png"]
      },
      "image/prs.btif": {
        source: "iana",
        extensions: ["btif"]
      },
      "image/prs.pti": {
        source: "iana",
        extensions: ["pti"]
      },
      "image/pwg-raster": {
        source: "iana"
      },
      "image/sgi": {
        source: "apache",
        extensions: ["sgi"]
      },
      "image/svg+xml": {
        source: "iana",
        compressible: true,
        extensions: ["svg", "svgz"]
      },
      "image/t38": {
        source: "iana",
        extensions: ["t38"]
      },
      "image/tiff": {
        source: "iana",
        compressible: false,
        extensions: ["tif", "tiff"]
      },
      "image/tiff-fx": {
        source: "iana",
        extensions: ["tfx"]
      },
      "image/vnd.adobe.photoshop": {
        source: "iana",
        compressible: true,
        extensions: ["psd"]
      },
      "image/vnd.airzip.accelerator.azv": {
        source: "iana",
        extensions: ["azv"]
      },
      "image/vnd.cns.inf2": {
        source: "iana"
      },
      "image/vnd.dece.graphic": {
        source: "iana",
        extensions: ["uvi", "uvvi", "uvg", "uvvg"]
      },
      "image/vnd.djvu": {
        source: "iana",
        extensions: ["djvu", "djv"]
      },
      "image/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "image/vnd.dwg": {
        source: "iana",
        extensions: ["dwg"]
      },
      "image/vnd.dxf": {
        source: "iana",
        extensions: ["dxf"]
      },
      "image/vnd.fastbidsheet": {
        source: "iana",
        extensions: ["fbs"]
      },
      "image/vnd.fpx": {
        source: "iana",
        extensions: ["fpx"]
      },
      "image/vnd.fst": {
        source: "iana",
        extensions: ["fst"]
      },
      "image/vnd.fujixerox.edmics-mmr": {
        source: "iana",
        extensions: ["mmr"]
      },
      "image/vnd.fujixerox.edmics-rlc": {
        source: "iana",
        extensions: ["rlc"]
      },
      "image/vnd.globalgraphics.pgb": {
        source: "iana"
      },
      "image/vnd.microsoft.icon": {
        source: "iana",
        compressible: true,
        extensions: ["ico"]
      },
      "image/vnd.mix": {
        source: "iana"
      },
      "image/vnd.mozilla.apng": {
        source: "iana"
      },
      "image/vnd.ms-dds": {
        compressible: true,
        extensions: ["dds"]
      },
      "image/vnd.ms-modi": {
        source: "iana",
        extensions: ["mdi"]
      },
      "image/vnd.ms-photo": {
        source: "apache",
        extensions: ["wdp"]
      },
      "image/vnd.net-fpx": {
        source: "iana",
        extensions: ["npx"]
      },
      "image/vnd.pco.b16": {
        source: "iana",
        extensions: ["b16"]
      },
      "image/vnd.radiance": {
        source: "iana"
      },
      "image/vnd.sealed.png": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.gif": {
        source: "iana"
      },
      "image/vnd.sealedmedia.softseal.jpg": {
        source: "iana"
      },
      "image/vnd.svf": {
        source: "iana"
      },
      "image/vnd.tencent.tap": {
        source: "iana",
        extensions: ["tap"]
      },
      "image/vnd.valve.source.texture": {
        source: "iana",
        extensions: ["vtf"]
      },
      "image/vnd.wap.wbmp": {
        source: "iana",
        extensions: ["wbmp"]
      },
      "image/vnd.xiff": {
        source: "iana",
        extensions: ["xif"]
      },
      "image/vnd.zbrush.pcx": {
        source: "iana",
        extensions: ["pcx"]
      },
      "image/webp": {
        source: "apache",
        extensions: ["webp"]
      },
      "image/wmf": {
        source: "iana",
        extensions: ["wmf"]
      },
      "image/x-3ds": {
        source: "apache",
        extensions: ["3ds"]
      },
      "image/x-cmu-raster": {
        source: "apache",
        extensions: ["ras"]
      },
      "image/x-cmx": {
        source: "apache",
        extensions: ["cmx"]
      },
      "image/x-freehand": {
        source: "apache",
        extensions: ["fh", "fhc", "fh4", "fh5", "fh7"]
      },
      "image/x-icon": {
        source: "apache",
        compressible: true,
        extensions: ["ico"]
      },
      "image/x-jng": {
        source: "nginx",
        extensions: ["jng"]
      },
      "image/x-mrsid-image": {
        source: "apache",
        extensions: ["sid"]
      },
      "image/x-ms-bmp": {
        source: "nginx",
        compressible: true,
        extensions: ["bmp"]
      },
      "image/x-pcx": {
        source: "apache",
        extensions: ["pcx"]
      },
      "image/x-pict": {
        source: "apache",
        extensions: ["pic", "pct"]
      },
      "image/x-portable-anymap": {
        source: "apache",
        extensions: ["pnm"]
      },
      "image/x-portable-bitmap": {
        source: "apache",
        extensions: ["pbm"]
      },
      "image/x-portable-graymap": {
        source: "apache",
        extensions: ["pgm"]
      },
      "image/x-portable-pixmap": {
        source: "apache",
        extensions: ["ppm"]
      },
      "image/x-rgb": {
        source: "apache",
        extensions: ["rgb"]
      },
      "image/x-tga": {
        source: "apache",
        extensions: ["tga"]
      },
      "image/x-xbitmap": {
        source: "apache",
        extensions: ["xbm"]
      },
      "image/x-xcf": {
        compressible: false
      },
      "image/x-xpixmap": {
        source: "apache",
        extensions: ["xpm"]
      },
      "image/x-xwindowdump": {
        source: "apache",
        extensions: ["xwd"]
      },
      "message/cpim": {
        source: "iana"
      },
      "message/delivery-status": {
        source: "iana"
      },
      "message/disposition-notification": {
        source: "iana",
        extensions: [
          "disposition-notification"
        ]
      },
      "message/external-body": {
        source: "iana"
      },
      "message/feedback-report": {
        source: "iana"
      },
      "message/global": {
        source: "iana",
        extensions: ["u8msg"]
      },
      "message/global-delivery-status": {
        source: "iana",
        extensions: ["u8dsn"]
      },
      "message/global-disposition-notification": {
        source: "iana",
        extensions: ["u8mdn"]
      },
      "message/global-headers": {
        source: "iana",
        extensions: ["u8hdr"]
      },
      "message/http": {
        source: "iana",
        compressible: false
      },
      "message/imdn+xml": {
        source: "iana",
        compressible: true
      },
      "message/news": {
        source: "iana"
      },
      "message/partial": {
        source: "iana",
        compressible: false
      },
      "message/rfc822": {
        source: "iana",
        compressible: true,
        extensions: ["eml", "mime"]
      },
      "message/s-http": {
        source: "iana"
      },
      "message/sip": {
        source: "iana"
      },
      "message/sipfrag": {
        source: "iana"
      },
      "message/tracking-status": {
        source: "iana"
      },
      "message/vnd.si.simp": {
        source: "iana"
      },
      "message/vnd.wfa.wsc": {
        source: "iana",
        extensions: ["wsc"]
      },
      "model/3mf": {
        source: "iana",
        extensions: ["3mf"]
      },
      "model/e57": {
        source: "iana"
      },
      "model/gltf+json": {
        source: "iana",
        compressible: true,
        extensions: ["gltf"]
      },
      "model/gltf-binary": {
        source: "iana",
        compressible: true,
        extensions: ["glb"]
      },
      "model/iges": {
        source: "iana",
        compressible: false,
        extensions: ["igs", "iges"]
      },
      "model/mesh": {
        source: "iana",
        compressible: false,
        extensions: ["msh", "mesh", "silo"]
      },
      "model/mtl": {
        source: "iana",
        extensions: ["mtl"]
      },
      "model/obj": {
        source: "iana",
        extensions: ["obj"]
      },
      "model/step": {
        source: "iana"
      },
      "model/step+xml": {
        source: "iana",
        compressible: true,
        extensions: ["stpx"]
      },
      "model/step+zip": {
        source: "iana",
        compressible: false,
        extensions: ["stpz"]
      },
      "model/step-xml+zip": {
        source: "iana",
        compressible: false,
        extensions: ["stpxz"]
      },
      "model/stl": {
        source: "iana",
        extensions: ["stl"]
      },
      "model/vnd.collada+xml": {
        source: "iana",
        compressible: true,
        extensions: ["dae"]
      },
      "model/vnd.dwf": {
        source: "iana",
        extensions: ["dwf"]
      },
      "model/vnd.flatland.3dml": {
        source: "iana"
      },
      "model/vnd.gdl": {
        source: "iana",
        extensions: ["gdl"]
      },
      "model/vnd.gs-gdl": {
        source: "apache"
      },
      "model/vnd.gs.gdl": {
        source: "iana"
      },
      "model/vnd.gtw": {
        source: "iana",
        extensions: ["gtw"]
      },
      "model/vnd.moml+xml": {
        source: "iana",
        compressible: true
      },
      "model/vnd.mts": {
        source: "iana",
        extensions: ["mts"]
      },
      "model/vnd.opengex": {
        source: "iana",
        extensions: ["ogex"]
      },
      "model/vnd.parasolid.transmit.binary": {
        source: "iana",
        extensions: ["x_b"]
      },
      "model/vnd.parasolid.transmit.text": {
        source: "iana",
        extensions: ["x_t"]
      },
      "model/vnd.pytha.pyox": {
        source: "iana"
      },
      "model/vnd.rosette.annotated-data-model": {
        source: "iana"
      },
      "model/vnd.sap.vds": {
        source: "iana",
        extensions: ["vds"]
      },
      "model/vnd.usdz+zip": {
        source: "iana",
        compressible: false,
        extensions: ["usdz"]
      },
      "model/vnd.valve.source.compiled-map": {
        source: "iana",
        extensions: ["bsp"]
      },
      "model/vnd.vtu": {
        source: "iana",
        extensions: ["vtu"]
      },
      "model/vrml": {
        source: "iana",
        compressible: false,
        extensions: ["wrl", "vrml"]
      },
      "model/x3d+binary": {
        source: "apache",
        compressible: false,
        extensions: ["x3db", "x3dbz"]
      },
      "model/x3d+fastinfoset": {
        source: "iana",
        extensions: ["x3db"]
      },
      "model/x3d+vrml": {
        source: "apache",
        compressible: false,
        extensions: ["x3dv", "x3dvz"]
      },
      "model/x3d+xml": {
        source: "iana",
        compressible: true,
        extensions: ["x3d", "x3dz"]
      },
      "model/x3d-vrml": {
        source: "iana",
        extensions: ["x3dv"]
      },
      "multipart/alternative": {
        source: "iana",
        compressible: false
      },
      "multipart/appledouble": {
        source: "iana"
      },
      "multipart/byteranges": {
        source: "iana"
      },
      "multipart/digest": {
        source: "iana"
      },
      "multipart/encrypted": {
        source: "iana",
        compressible: false
      },
      "multipart/form-data": {
        source: "iana",
        compressible: false
      },
      "multipart/header-set": {
        source: "iana"
      },
      "multipart/mixed": {
        source: "iana"
      },
      "multipart/multilingual": {
        source: "iana"
      },
      "multipart/parallel": {
        source: "iana"
      },
      "multipart/related": {
        source: "iana",
        compressible: false
      },
      "multipart/report": {
        source: "iana"
      },
      "multipart/signed": {
        source: "iana",
        compressible: false
      },
      "multipart/vnd.bint.med-plus": {
        source: "iana"
      },
      "multipart/voice-message": {
        source: "iana"
      },
      "multipart/x-mixed-replace": {
        source: "iana"
      },
      "text/1d-interleaved-parityfec": {
        source: "iana"
      },
      "text/cache-manifest": {
        source: "iana",
        compressible: true,
        extensions: ["appcache", "manifest"]
      },
      "text/calendar": {
        source: "iana",
        extensions: ["ics", "ifb"]
      },
      "text/calender": {
        compressible: true
      },
      "text/cmd": {
        compressible: true
      },
      "text/coffeescript": {
        extensions: ["coffee", "litcoffee"]
      },
      "text/cql": {
        source: "iana"
      },
      "text/cql-expression": {
        source: "iana"
      },
      "text/cql-identifier": {
        source: "iana"
      },
      "text/css": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["css"]
      },
      "text/csv": {
        source: "iana",
        compressible: true,
        extensions: ["csv"]
      },
      "text/csv-schema": {
        source: "iana"
      },
      "text/directory": {
        source: "iana"
      },
      "text/dns": {
        source: "iana"
      },
      "text/ecmascript": {
        source: "iana"
      },
      "text/encaprtp": {
        source: "iana"
      },
      "text/enriched": {
        source: "iana"
      },
      "text/fhirpath": {
        source: "iana"
      },
      "text/flexfec": {
        source: "iana"
      },
      "text/fwdred": {
        source: "iana"
      },
      "text/gff3": {
        source: "iana"
      },
      "text/grammar-ref-list": {
        source: "iana"
      },
      "text/html": {
        source: "iana",
        compressible: true,
        extensions: ["html", "htm", "shtml"]
      },
      "text/jade": {
        extensions: ["jade"]
      },
      "text/javascript": {
        source: "iana",
        compressible: true
      },
      "text/jcr-cnd": {
        source: "iana"
      },
      "text/jsx": {
        compressible: true,
        extensions: ["jsx"]
      },
      "text/less": {
        compressible: true,
        extensions: ["less"]
      },
      "text/markdown": {
        source: "iana",
        compressible: true,
        extensions: ["markdown", "md"]
      },
      "text/mathml": {
        source: "nginx",
        extensions: ["mml"]
      },
      "text/mdx": {
        compressible: true,
        extensions: ["mdx"]
      },
      "text/mizar": {
        source: "iana"
      },
      "text/n3": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["n3"]
      },
      "text/parameters": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/parityfec": {
        source: "iana"
      },
      "text/plain": {
        source: "iana",
        compressible: true,
        extensions: ["txt", "text", "conf", "def", "list", "log", "in", "ini"]
      },
      "text/provenance-notation": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/prs.fallenstein.rst": {
        source: "iana"
      },
      "text/prs.lines.tag": {
        source: "iana",
        extensions: ["dsc"]
      },
      "text/prs.prop.logic": {
        source: "iana"
      },
      "text/raptorfec": {
        source: "iana"
      },
      "text/red": {
        source: "iana"
      },
      "text/rfc822-headers": {
        source: "iana"
      },
      "text/richtext": {
        source: "iana",
        compressible: true,
        extensions: ["rtx"]
      },
      "text/rtf": {
        source: "iana",
        compressible: true,
        extensions: ["rtf"]
      },
      "text/rtp-enc-aescm128": {
        source: "iana"
      },
      "text/rtploopback": {
        source: "iana"
      },
      "text/rtx": {
        source: "iana"
      },
      "text/sgml": {
        source: "iana",
        extensions: ["sgml", "sgm"]
      },
      "text/shaclc": {
        source: "iana"
      },
      "text/shex": {
        source: "iana",
        extensions: ["shex"]
      },
      "text/slim": {
        extensions: ["slim", "slm"]
      },
      "text/spdx": {
        source: "iana",
        extensions: ["spdx"]
      },
      "text/strings": {
        source: "iana"
      },
      "text/stylus": {
        extensions: ["stylus", "styl"]
      },
      "text/t140": {
        source: "iana"
      },
      "text/tab-separated-values": {
        source: "iana",
        compressible: true,
        extensions: ["tsv"]
      },
      "text/troff": {
        source: "iana",
        extensions: ["t", "tr", "roff", "man", "me", "ms"]
      },
      "text/turtle": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["ttl"]
      },
      "text/ulpfec": {
        source: "iana"
      },
      "text/uri-list": {
        source: "iana",
        compressible: true,
        extensions: ["uri", "uris", "urls"]
      },
      "text/vcard": {
        source: "iana",
        compressible: true,
        extensions: ["vcard"]
      },
      "text/vnd.a": {
        source: "iana"
      },
      "text/vnd.abc": {
        source: "iana"
      },
      "text/vnd.ascii-art": {
        source: "iana"
      },
      "text/vnd.curl": {
        source: "iana",
        extensions: ["curl"]
      },
      "text/vnd.curl.dcurl": {
        source: "apache",
        extensions: ["dcurl"]
      },
      "text/vnd.curl.mcurl": {
        source: "apache",
        extensions: ["mcurl"]
      },
      "text/vnd.curl.scurl": {
        source: "apache",
        extensions: ["scurl"]
      },
      "text/vnd.debian.copyright": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.dmclientscript": {
        source: "iana"
      },
      "text/vnd.dvb.subtitle": {
        source: "iana",
        extensions: ["sub"]
      },
      "text/vnd.esmertec.theme-descriptor": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.familysearch.gedcom": {
        source: "iana",
        extensions: ["ged"]
      },
      "text/vnd.ficlab.flt": {
        source: "iana"
      },
      "text/vnd.fly": {
        source: "iana",
        extensions: ["fly"]
      },
      "text/vnd.fmi.flexstor": {
        source: "iana",
        extensions: ["flx"]
      },
      "text/vnd.gml": {
        source: "iana"
      },
      "text/vnd.graphviz": {
        source: "iana",
        extensions: ["gv"]
      },
      "text/vnd.hans": {
        source: "iana"
      },
      "text/vnd.hgl": {
        source: "iana"
      },
      "text/vnd.in3d.3dml": {
        source: "iana",
        extensions: ["3dml"]
      },
      "text/vnd.in3d.spot": {
        source: "iana",
        extensions: ["spot"]
      },
      "text/vnd.iptc.newsml": {
        source: "iana"
      },
      "text/vnd.iptc.nitf": {
        source: "iana"
      },
      "text/vnd.latex-z": {
        source: "iana"
      },
      "text/vnd.motorola.reflex": {
        source: "iana"
      },
      "text/vnd.ms-mediapackage": {
        source: "iana"
      },
      "text/vnd.net2phone.commcenter.command": {
        source: "iana"
      },
      "text/vnd.radisys.msml-basic-layout": {
        source: "iana"
      },
      "text/vnd.senx.warpscript": {
        source: "iana"
      },
      "text/vnd.si.uricatalogue": {
        source: "iana"
      },
      "text/vnd.sosi": {
        source: "iana"
      },
      "text/vnd.sun.j2me.app-descriptor": {
        source: "iana",
        charset: "UTF-8",
        extensions: ["jad"]
      },
      "text/vnd.trolltech.linguist": {
        source: "iana",
        charset: "UTF-8"
      },
      "text/vnd.wap.si": {
        source: "iana"
      },
      "text/vnd.wap.sl": {
        source: "iana"
      },
      "text/vnd.wap.wml": {
        source: "iana",
        extensions: ["wml"]
      },
      "text/vnd.wap.wmlscript": {
        source: "iana",
        extensions: ["wmls"]
      },
      "text/vtt": {
        source: "iana",
        charset: "UTF-8",
        compressible: true,
        extensions: ["vtt"]
      },
      "text/x-asm": {
        source: "apache",
        extensions: ["s", "asm"]
      },
      "text/x-c": {
        source: "apache",
        extensions: ["c", "cc", "cxx", "cpp", "h", "hh", "dic"]
      },
      "text/x-component": {
        source: "nginx",
        extensions: ["htc"]
      },
      "text/x-fortran": {
        source: "apache",
        extensions: ["f", "for", "f77", "f90"]
      },
      "text/x-gwt-rpc": {
        compressible: true
      },
      "text/x-handlebars-template": {
        extensions: ["hbs"]
      },
      "text/x-java-source": {
        source: "apache",
        extensions: ["java"]
      },
      "text/x-jquery-tmpl": {
        compressible: true
      },
      "text/x-lua": {
        extensions: ["lua"]
      },
      "text/x-markdown": {
        compressible: true,
        extensions: ["mkd"]
      },
      "text/x-nfo": {
        source: "apache",
        extensions: ["nfo"]
      },
      "text/x-opml": {
        source: "apache",
        extensions: ["opml"]
      },
      "text/x-org": {
        compressible: true,
        extensions: ["org"]
      },
      "text/x-pascal": {
        source: "apache",
        extensions: ["p", "pas"]
      },
      "text/x-processing": {
        compressible: true,
        extensions: ["pde"]
      },
      "text/x-sass": {
        extensions: ["sass"]
      },
      "text/x-scss": {
        extensions: ["scss"]
      },
      "text/x-setext": {
        source: "apache",
        extensions: ["etx"]
      },
      "text/x-sfv": {
        source: "apache",
        extensions: ["sfv"]
      },
      "text/x-suse-ymp": {
        compressible: true,
        extensions: ["ymp"]
      },
      "text/x-uuencode": {
        source: "apache",
        extensions: ["uu"]
      },
      "text/x-vcalendar": {
        source: "apache",
        extensions: ["vcs"]
      },
      "text/x-vcard": {
        source: "apache",
        extensions: ["vcf"]
      },
      "text/xml": {
        source: "iana",
        compressible: true,
        extensions: ["xml"]
      },
      "text/xml-external-parsed-entity": {
        source: "iana"
      },
      "text/yaml": {
        compressible: true,
        extensions: ["yaml", "yml"]
      },
      "video/1d-interleaved-parityfec": {
        source: "iana"
      },
      "video/3gpp": {
        source: "iana",
        extensions: ["3gp", "3gpp"]
      },
      "video/3gpp-tt": {
        source: "iana"
      },
      "video/3gpp2": {
        source: "iana",
        extensions: ["3g2"]
      },
      "video/av1": {
        source: "iana"
      },
      "video/bmpeg": {
        source: "iana"
      },
      "video/bt656": {
        source: "iana"
      },
      "video/celb": {
        source: "iana"
      },
      "video/dv": {
        source: "iana"
      },
      "video/encaprtp": {
        source: "iana"
      },
      "video/ffv1": {
        source: "iana"
      },
      "video/flexfec": {
        source: "iana"
      },
      "video/h261": {
        source: "iana",
        extensions: ["h261"]
      },
      "video/h263": {
        source: "iana",
        extensions: ["h263"]
      },
      "video/h263-1998": {
        source: "iana"
      },
      "video/h263-2000": {
        source: "iana"
      },
      "video/h264": {
        source: "iana",
        extensions: ["h264"]
      },
      "video/h264-rcdo": {
        source: "iana"
      },
      "video/h264-svc": {
        source: "iana"
      },
      "video/h265": {
        source: "iana"
      },
      "video/iso.segment": {
        source: "iana",
        extensions: ["m4s"]
      },
      "video/jpeg": {
        source: "iana",
        extensions: ["jpgv"]
      },
      "video/jpeg2000": {
        source: "iana"
      },
      "video/jpm": {
        source: "apache",
        extensions: ["jpm", "jpgm"]
      },
      "video/jxsv": {
        source: "iana"
      },
      "video/mj2": {
        source: "iana",
        extensions: ["mj2", "mjp2"]
      },
      "video/mp1s": {
        source: "iana"
      },
      "video/mp2p": {
        source: "iana"
      },
      "video/mp2t": {
        source: "iana",
        extensions: ["ts"]
      },
      "video/mp4": {
        source: "iana",
        compressible: false,
        extensions: ["mp4", "mp4v", "mpg4"]
      },
      "video/mp4v-es": {
        source: "iana"
      },
      "video/mpeg": {
        source: "iana",
        compressible: false,
        extensions: ["mpeg", "mpg", "mpe", "m1v", "m2v"]
      },
      "video/mpeg4-generic": {
        source: "iana"
      },
      "video/mpv": {
        source: "iana"
      },
      "video/nv": {
        source: "iana"
      },
      "video/ogg": {
        source: "iana",
        compressible: false,
        extensions: ["ogv"]
      },
      "video/parityfec": {
        source: "iana"
      },
      "video/pointer": {
        source: "iana"
      },
      "video/quicktime": {
        source: "iana",
        compressible: false,
        extensions: ["qt", "mov"]
      },
      "video/raptorfec": {
        source: "iana"
      },
      "video/raw": {
        source: "iana"
      },
      "video/rtp-enc-aescm128": {
        source: "iana"
      },
      "video/rtploopback": {
        source: "iana"
      },
      "video/rtx": {
        source: "iana"
      },
      "video/scip": {
        source: "iana"
      },
      "video/smpte291": {
        source: "iana"
      },
      "video/smpte292m": {
        source: "iana"
      },
      "video/ulpfec": {
        source: "iana"
      },
      "video/vc1": {
        source: "iana"
      },
      "video/vc2": {
        source: "iana"
      },
      "video/vnd.cctv": {
        source: "iana"
      },
      "video/vnd.dece.hd": {
        source: "iana",
        extensions: ["uvh", "uvvh"]
      },
      "video/vnd.dece.mobile": {
        source: "iana",
        extensions: ["uvm", "uvvm"]
      },
      "video/vnd.dece.mp4": {
        source: "iana"
      },
      "video/vnd.dece.pd": {
        source: "iana",
        extensions: ["uvp", "uvvp"]
      },
      "video/vnd.dece.sd": {
        source: "iana",
        extensions: ["uvs", "uvvs"]
      },
      "video/vnd.dece.video": {
        source: "iana",
        extensions: ["uvv", "uvvv"]
      },
      "video/vnd.directv.mpeg": {
        source: "iana"
      },
      "video/vnd.directv.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dlna.mpeg-tts": {
        source: "iana"
      },
      "video/vnd.dvb.file": {
        source: "iana",
        extensions: ["dvb"]
      },
      "video/vnd.fvt": {
        source: "iana",
        extensions: ["fvt"]
      },
      "video/vnd.hns.video": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.1dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-1010": {
        source: "iana"
      },
      "video/vnd.iptvforum.2dparityfec-2005": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsavc": {
        source: "iana"
      },
      "video/vnd.iptvforum.ttsmpeg2": {
        source: "iana"
      },
      "video/vnd.motorola.video": {
        source: "iana"
      },
      "video/vnd.motorola.videop": {
        source: "iana"
      },
      "video/vnd.mpegurl": {
        source: "iana",
        extensions: ["mxu", "m4u"]
      },
      "video/vnd.ms-playready.media.pyv": {
        source: "iana",
        extensions: ["pyv"]
      },
      "video/vnd.nokia.interleaved-multimedia": {
        source: "iana"
      },
      "video/vnd.nokia.mp4vr": {
        source: "iana"
      },
      "video/vnd.nokia.videovoip": {
        source: "iana"
      },
      "video/vnd.objectvideo": {
        source: "iana"
      },
      "video/vnd.radgamettools.bink": {
        source: "iana"
      },
      "video/vnd.radgamettools.smacker": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg1": {
        source: "iana"
      },
      "video/vnd.sealed.mpeg4": {
        source: "iana"
      },
      "video/vnd.sealed.swf": {
        source: "iana"
      },
      "video/vnd.sealedmedia.softseal.mov": {
        source: "iana"
      },
      "video/vnd.uvvu.mp4": {
        source: "iana",
        extensions: ["uvu", "uvvu"]
      },
      "video/vnd.vivo": {
        source: "iana",
        extensions: ["viv"]
      },
      "video/vnd.youtube.yt": {
        source: "iana"
      },
      "video/vp8": {
        source: "iana"
      },
      "video/vp9": {
        source: "iana"
      },
      "video/webm": {
        source: "apache",
        compressible: false,
        extensions: ["webm"]
      },
      "video/x-f4v": {
        source: "apache",
        extensions: ["f4v"]
      },
      "video/x-fli": {
        source: "apache",
        extensions: ["fli"]
      },
      "video/x-flv": {
        source: "apache",
        compressible: false,
        extensions: ["flv"]
      },
      "video/x-m4v": {
        source: "apache",
        extensions: ["m4v"]
      },
      "video/x-matroska": {
        source: "apache",
        compressible: false,
        extensions: ["mkv", "mk3d", "mks"]
      },
      "video/x-mng": {
        source: "apache",
        extensions: ["mng"]
      },
      "video/x-ms-asf": {
        source: "apache",
        extensions: ["asf", "asx"]
      },
      "video/x-ms-vob": {
        source: "apache",
        extensions: ["vob"]
      },
      "video/x-ms-wm": {
        source: "apache",
        extensions: ["wm"]
      },
      "video/x-ms-wmv": {
        source: "apache",
        compressible: false,
        extensions: ["wmv"]
      },
      "video/x-ms-wmx": {
        source: "apache",
        extensions: ["wmx"]
      },
      "video/x-ms-wvx": {
        source: "apache",
        extensions: ["wvx"]
      },
      "video/x-msvideo": {
        source: "apache",
        extensions: ["avi"]
      },
      "video/x-sgi-movie": {
        source: "apache",
        extensions: ["movie"]
      },
      "video/x-smv": {
        source: "apache",
        extensions: ["smv"]
      },
      "x-conference/x-cooltalk": {
        source: "apache",
        extensions: ["ice"]
      },
      "x-shader/x-fragment": {
        compressible: true
      },
      "x-shader/x-vertex": {
        compressible: true
      }
    };
  }
});

// node_modules/mime-db/index.js
var require_mime_db = __commonJS({
  "node_modules/mime-db/index.js"(exports, module2) {
    module2.exports = require_db();
  }
});

// node_modules/mime-types/index.js
var require_mime_types = __commonJS({
  "node_modules/mime-types/index.js"(exports) {
    "use strict";
    var db = require_mime_db();
    var extname = require("path").extname;
    var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
    var TEXT_TYPE_REGEXP = /^text\//i;
    exports.charset = charset;
    exports.charsets = { lookup: charset };
    exports.contentType = contentType;
    exports.extension = extension;
    exports.extensions = /* @__PURE__ */ Object.create(null);
    exports.lookup = lookup;
    exports.types = /* @__PURE__ */ Object.create(null);
    populateMaps(exports.extensions, exports.types);
    function charset(type) {
      if (!type || typeof type !== "string") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var mime = match && db[match[1].toLowerCase()];
      if (mime && mime.charset) {
        return mime.charset;
      }
      if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return "UTF-8";
      }
      return false;
    }
    function contentType(str) {
      if (!str || typeof str !== "string") {
        return false;
      }
      var mime = str.indexOf("/") === -1 ? exports.lookup(str) : str;
      if (!mime) {
        return false;
      }
      if (mime.indexOf("charset") === -1) {
        var charset2 = exports.charset(mime);
        if (charset2)
          mime += "; charset=" + charset2.toLowerCase();
      }
      return mime;
    }
    function extension(type) {
      if (!type || typeof type !== "string") {
        return false;
      }
      var match = EXTRACT_TYPE_REGEXP.exec(type);
      var exts = match && exports.extensions[match[1].toLowerCase()];
      if (!exts || !exts.length) {
        return false;
      }
      return exts[0];
    }
    function lookup(path) {
      if (!path || typeof path !== "string") {
        return false;
      }
      var extension2 = extname("x." + path).toLowerCase().substr(1);
      if (!extension2) {
        return false;
      }
      return exports.types[extension2] || false;
    }
    function populateMaps(extensions, types) {
      var preference = ["nginx", "apache", void 0, "iana"];
      Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
          return;
        }
        extensions[type] = exts;
        for (var i = 0; i < exts.length; i++) {
          var extension2 = exts[i];
          if (types[extension2]) {
            var from = preference.indexOf(db[types[extension2]].source);
            var to = preference.indexOf(mime.source);
            if (types[extension2] !== "application/octet-stream" && (from > to || from === to && types[extension2].substr(0, 12) === "application/")) {
              continue;
            }
          }
          types[extension2] = type;
        }
      });
    }
  }
});

// node_modules/asynckit/lib/defer.js
var require_defer = __commonJS({
  "node_modules/asynckit/lib/defer.js"(exports, module2) {
    module2.exports = defer2;
    function defer2(fn) {
      var nextTick = typeof setImmediate == "function" ? setImmediate : typeof process == "object" && typeof process.nextTick == "function" ? process.nextTick : null;
      if (nextTick) {
        nextTick(fn);
      } else {
        setTimeout(fn, 0);
      }
    }
  }
});

// node_modules/asynckit/lib/async.js
var require_async = __commonJS({
  "node_modules/asynckit/lib/async.js"(exports, module2) {
    var defer2 = require_defer();
    module2.exports = async;
    function async(callback) {
      var isAsync = false;
      defer2(function() {
        isAsync = true;
      });
      return function async_callback(err, result) {
        if (isAsync) {
          callback(err, result);
        } else {
          defer2(function nextTick_callback() {
            callback(err, result);
          });
        }
      };
    }
  }
});

// node_modules/asynckit/lib/abort.js
var require_abort = __commonJS({
  "node_modules/asynckit/lib/abort.js"(exports, module2) {
    module2.exports = abort2;
    function abort2(state) {
      Object.keys(state.jobs).forEach(clean.bind(state));
      state.jobs = {};
    }
    function clean(key2) {
      if (typeof this.jobs[key2] == "function") {
        this.jobs[key2]();
      }
    }
  }
});

// node_modules/asynckit/lib/iterate.js
var require_iterate = __commonJS({
  "node_modules/asynckit/lib/iterate.js"(exports, module2) {
    var async = require_async();
    var abort2 = require_abort();
    module2.exports = iterate;
    function iterate(list, iterator, state, callback) {
      var key2 = state["keyedList"] ? state["keyedList"][state.index] : state.index;
      state.jobs[key2] = runJob(iterator, key2, list[key2], function(error2, output) {
        if (!(key2 in state.jobs)) {
          return;
        }
        delete state.jobs[key2];
        if (error2) {
          abort2(state);
        } else {
          state.results[key2] = output;
        }
        callback(error2, state.results);
      });
    }
    function runJob(iterator, key2, item, callback) {
      var aborter;
      if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
      } else {
        aborter = iterator(item, key2, async(callback));
      }
      return aborter;
    }
  }
});

// node_modules/asynckit/lib/state.js
var require_state = __commonJS({
  "node_modules/asynckit/lib/state.js"(exports, module2) {
    module2.exports = state;
    function state(list, sortMethod) {
      var isNamedList = !Array.isArray(list), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list).length : list.length
      };
      if (sortMethod) {
        initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
          return sortMethod(list[a], list[b]);
        });
      }
      return initState;
    }
  }
});

// node_modules/asynckit/lib/terminator.js
var require_terminator = __commonJS({
  "node_modules/asynckit/lib/terminator.js"(exports, module2) {
    var abort2 = require_abort();
    var async = require_async();
    module2.exports = terminator;
    function terminator(callback) {
      if (!Object.keys(this.jobs).length) {
        return;
      }
      this.index = this.size;
      abort2(this);
      async(callback)(null, this.results);
    }
  }
});

// node_modules/asynckit/parallel.js
var require_parallel = __commonJS({
  "node_modules/asynckit/parallel.js"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = parallel;
    function parallel(list, iterator, callback) {
      var state = initState(list);
      while (state.index < (state["keyedList"] || list).length) {
        iterate(list, iterator, state, function(error2, result) {
          if (error2) {
            callback(error2, result);
            return;
          }
          if (Object.keys(state.jobs).length === 0) {
            callback(null, state.results);
            return;
          }
        });
        state.index++;
      }
      return terminator.bind(state, callback);
    }
  }
});

// node_modules/asynckit/serialOrdered.js
var require_serialOrdered = __commonJS({
  "node_modules/asynckit/serialOrdered.js"(exports, module2) {
    var iterate = require_iterate();
    var initState = require_state();
    var terminator = require_terminator();
    module2.exports = serialOrdered;
    module2.exports.ascending = ascending;
    module2.exports.descending = descending;
    function serialOrdered(list, iterator, sortMethod, callback) {
      var state = initState(list, sortMethod);
      iterate(list, iterator, state, function iteratorHandler(error2, result) {
        if (error2) {
          callback(error2, result);
          return;
        }
        state.index++;
        if (state.index < (state["keyedList"] || list).length) {
          iterate(list, iterator, state, iteratorHandler);
          return;
        }
        callback(null, state.results);
      });
      return terminator.bind(state, callback);
    }
    function ascending(a, b) {
      return a < b ? -1 : a > b ? 1 : 0;
    }
    function descending(a, b) {
      return -1 * ascending(a, b);
    }
  }
});

// node_modules/asynckit/serial.js
var require_serial = __commonJS({
  "node_modules/asynckit/serial.js"(exports, module2) {
    var serialOrdered = require_serialOrdered();
    module2.exports = serial;
    function serial(list, iterator, callback) {
      return serialOrdered(list, iterator, null, callback);
    }
  }
});

// node_modules/asynckit/index.js
var require_asynckit = __commonJS({
  "node_modules/asynckit/index.js"(exports, module2) {
    module2.exports = {
      parallel: require_parallel(),
      serial: require_serial(),
      serialOrdered: require_serialOrdered()
    };
  }
});

// node_modules/form-data/lib/populate.js
var require_populate = __commonJS({
  "node_modules/form-data/lib/populate.js"(exports, module2) {
    module2.exports = function(dst, src) {
      Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
      });
      return dst;
    };
  }
});

// node_modules/form-data/lib/form_data.js
var require_form_data = __commonJS({
  "node_modules/form-data/lib/form_data.js"(exports, module2) {
    var CombinedStream = require_combined_stream();
    var util2 = require("util");
    var path = require("path");
    var http = require("http");
    var https = require("https");
    var parseUrl = require("url").parse;
    var fs2 = require("fs");
    var mime = require_mime_types();
    var asynckit = require_asynckit();
    var populate = require_populate();
    module2.exports = FormData2;
    util2.inherits(FormData2, CombinedStream);
    function FormData2(options2) {
      if (!(this instanceof FormData2)) {
        return new FormData2(options2);
      }
      this._overheadLength = 0;
      this._valueLength = 0;
      this._valuesToMeasure = [];
      CombinedStream.call(this);
      options2 = options2 || {};
      for (var option in options2) {
        this[option] = options2[option];
      }
    }
    FormData2.LINE_BREAK = "\r\n";
    FormData2.DEFAULT_CONTENT_TYPE = "application/octet-stream";
    FormData2.prototype.append = function(field, value, options2) {
      options2 = options2 || {};
      if (typeof options2 == "string") {
        options2 = { filename: options2 };
      }
      var append = CombinedStream.prototype.append.bind(this);
      if (typeof value == "number") {
        value = "" + value;
      }
      if (util2.isArray(value)) {
        this._error(new Error("Arrays are not supported."));
        return;
      }
      var header = this._multiPartHeader(field, value, options2);
      var footer = this._multiPartFooter();
      append(header);
      append(value);
      append(footer);
      this._trackLength(header, value, options2);
    };
    FormData2.prototype._trackLength = function(header, value, options2) {
      var valueLength = 0;
      if (options2.knownLength != null) {
        valueLength += +options2.knownLength;
      } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
      } else if (typeof value === "string") {
        valueLength = Buffer.byteLength(value);
      }
      this._valueLength += valueLength;
      this._overheadLength += Buffer.byteLength(header) + FormData2.LINE_BREAK.length;
      if (!value || !value.path && !(value.readable && value.hasOwnProperty("httpVersion"))) {
        return;
      }
      if (!options2.knownLength) {
        this._valuesToMeasure.push(value);
      }
    };
    FormData2.prototype._lengthRetriever = function(value, callback) {
      if (value.hasOwnProperty("fd")) {
        if (value.end != void 0 && value.end != Infinity && value.start != void 0) {
          callback(null, value.end + 1 - (value.start ? value.start : 0));
        } else {
          fs2.stat(value.path, function(err, stat) {
            var fileSize;
            if (err) {
              callback(err);
              return;
            }
            fileSize = stat.size - (value.start ? value.start : 0);
            callback(null, fileSize);
          });
        }
      } else if (value.hasOwnProperty("httpVersion")) {
        callback(null, +value.headers["content-length"]);
      } else if (value.hasOwnProperty("httpModule")) {
        value.on("response", function(response2) {
          value.pause();
          callback(null, +response2.headers["content-length"]);
        });
        value.resume();
      } else {
        callback("Unknown stream");
      }
    };
    FormData2.prototype._multiPartHeader = function(field, value, options2) {
      if (typeof options2.header == "string") {
        return options2.header;
      }
      var contentDisposition = this._getContentDisposition(value, options2);
      var contentType = this._getContentType(value, options2);
      var contents = "";
      var headers2 = {
        "Content-Disposition": ["form-data", 'name="' + field + '"'].concat(contentDisposition || []),
        "Content-Type": [].concat(contentType || [])
      };
      if (typeof options2.header == "object") {
        populate(headers2, options2.header);
      }
      var header;
      for (var prop in headers2) {
        if (!headers2.hasOwnProperty(prop))
          continue;
        header = headers2[prop];
        if (header == null) {
          continue;
        }
        if (!Array.isArray(header)) {
          header = [header];
        }
        if (header.length) {
          contents += prop + ": " + header.join("; ") + FormData2.LINE_BREAK;
        }
      }
      return "--" + this.getBoundary() + FormData2.LINE_BREAK + contents + FormData2.LINE_BREAK;
    };
    FormData2.prototype._getContentDisposition = function(value, options2) {
      var filename, contentDisposition;
      if (typeof options2.filepath === "string") {
        filename = path.normalize(options2.filepath).replace(/\\/g, "/");
      } else if (options2.filename || value.name || value.path) {
        filename = path.basename(options2.filename || value.name || value.path);
      } else if (value.readable && value.hasOwnProperty("httpVersion")) {
        filename = path.basename(value.client._httpMessage.path || "");
      }
      if (filename) {
        contentDisposition = 'filename="' + filename + '"';
      }
      return contentDisposition;
    };
    FormData2.prototype._getContentType = function(value, options2) {
      var contentType = options2.contentType;
      if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
      }
      if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
      }
      if (!contentType && value.readable && value.hasOwnProperty("httpVersion")) {
        contentType = value.headers["content-type"];
      }
      if (!contentType && (options2.filepath || options2.filename)) {
        contentType = mime.lookup(options2.filepath || options2.filename);
      }
      if (!contentType && typeof value == "object") {
        contentType = FormData2.DEFAULT_CONTENT_TYPE;
      }
      return contentType;
    };
    FormData2.prototype._multiPartFooter = function() {
      return function(next) {
        var footer = FormData2.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
          footer += this._lastBoundary();
        }
        next(footer);
      }.bind(this);
    };
    FormData2.prototype._lastBoundary = function() {
      return "--" + this.getBoundary() + "--" + FormData2.LINE_BREAK;
    };
    FormData2.prototype.getHeaders = function(userHeaders) {
      var header;
      var formHeaders = {
        "content-type": "multipart/form-data; boundary=" + this.getBoundary()
      };
      for (header in userHeaders) {
        if (userHeaders.hasOwnProperty(header)) {
          formHeaders[header.toLowerCase()] = userHeaders[header];
        }
      }
      return formHeaders;
    };
    FormData2.prototype.setBoundary = function(boundary) {
      this._boundary = boundary;
    };
    FormData2.prototype.getBoundary = function() {
      if (!this._boundary) {
        this._generateBoundary();
      }
      return this._boundary;
    };
    FormData2.prototype.getBuffer = function() {
      var dataBuffer = new Buffer.alloc(0);
      var boundary = this.getBoundary();
      for (var i = 0, len = this._streams.length; i < len; i++) {
        if (typeof this._streams[i] !== "function") {
          if (Buffer.isBuffer(this._streams[i])) {
            dataBuffer = Buffer.concat([dataBuffer, this._streams[i]]);
          } else {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(this._streams[i])]);
          }
          if (typeof this._streams[i] !== "string" || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
            dataBuffer = Buffer.concat([dataBuffer, Buffer.from(FormData2.LINE_BREAK)]);
          }
        }
      }
      return Buffer.concat([dataBuffer, Buffer.from(this._lastBoundary())]);
    };
    FormData2.prototype._generateBoundary = function() {
      var boundary = "--------------------------";
      for (var i = 0; i < 24; i++) {
        boundary += Math.floor(Math.random() * 10).toString(16);
      }
      this._boundary = boundary;
    };
    FormData2.prototype.getLengthSync = function() {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this.hasKnownLength()) {
        this._error(new Error("Cannot calculate proper length in synchronous way."));
      }
      return knownLength;
    };
    FormData2.prototype.hasKnownLength = function() {
      var hasKnownLength = true;
      if (this._valuesToMeasure.length) {
        hasKnownLength = false;
      }
      return hasKnownLength;
    };
    FormData2.prototype.getLength = function(cb) {
      var knownLength = this._overheadLength + this._valueLength;
      if (this._streams.length) {
        knownLength += this._lastBoundary().length;
      }
      if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
      }
      asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
          cb(err);
          return;
        }
        values.forEach(function(length) {
          knownLength += length;
        });
        cb(null, knownLength);
      });
    };
    FormData2.prototype.submit = function(params, cb) {
      var request2, options2, defaults = { method: "post" };
      if (typeof params == "string") {
        params = parseUrl(params);
        options2 = populate({
          port: params.port,
          path: params.pathname,
          host: params.hostname,
          protocol: params.protocol
        }, defaults);
      } else {
        options2 = populate(params, defaults);
        if (!options2.port) {
          options2.port = options2.protocol == "https:" ? 443 : 80;
        }
      }
      options2.headers = this.getHeaders(params.headers);
      if (options2.protocol == "https:") {
        request2 = https.request(options2);
      } else {
        request2 = http.request(options2);
      }
      this.getLength(function(err, length) {
        if (err) {
          this._error(err);
          return;
        }
        request2.setHeader("Content-Length", length);
        this.pipe(request2);
        if (cb) {
          var onResponse;
          var callback = function(error2, responce) {
            request2.removeListener("error", callback);
            request2.removeListener("response", onResponse);
            return cb.call(this, error2, responce);
          };
          onResponse = callback.bind(this, null);
          request2.on("error", callback);
          request2.on("response", onResponse);
        }
      }.bind(this));
      return request2;
    };
    FormData2.prototype._error = function(err) {
      if (!this.error) {
        this.error = err;
        this.pause();
        this.emit("error", err);
      }
    };
    FormData2.prototype.toString = function() {
      return "[object FormData]";
    };
  }
});

// node_modules/@apimatic/axios-client-adapter/lib/httpClient.js
var require_httpClient = __commonJS({
  "node_modules/@apimatic/axios-client-adapter/lib/httpClient.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBlob = exports.HttpClient = exports.DEFAULT_TIMEOUT = exports.DEFAULT_AXIOS_CONFIG_OVERRIDES = void 0;
    var tslib_1 = require_tslib();
    var axios_1 = tslib_1.__importDefault(require_axios2());
    var detect_node_1 = tslib_1.__importDefault(require_detect_node());
    var form_data_1 = tslib_1.__importDefault(require_form_data());
    var file_wrapper_1 = require_lib5();
    var http_headers_1 = require_lib3();
    var http_query_1 = require_lib6();
    exports.DEFAULT_AXIOS_CONFIG_OVERRIDES = {
      transformResponse: []
    };
    exports.DEFAULT_TIMEOUT = 30 * 1e3;
    var HttpClient = function() {
      function HttpClient2(abortErrorFactory, _a) {
        var _b = _a === void 0 ? {} : _a, clientConfigOverrides = _b.clientConfigOverrides, _c = _b.timeout, timeout = _c === void 0 ? exports.DEFAULT_TIMEOUT : _c, httpAgent = _b.httpAgent, httpsAgent = _b.httpsAgent;
        this._timeout = timeout;
        this._axiosInstance = axios_1.default.create(tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, exports.DEFAULT_AXIOS_CONFIG_OVERRIDES), clientConfigOverrides), { httpAgent, httpsAgent }));
        this._abortErrorFactory = abortErrorFactory;
      }
      HttpClient2.prototype.convertHttpRequest = function(req) {
        var e_1, _a;
        var _b, _c;
        var newRequest = {
          method: req.method,
          url: req.url,
          responseType: "text",
          headers: tslib_1.__assign({}, req.headers)
        };
        if (req.auth) {
          newRequest.auth = {
            username: req.auth.username,
            password: req.auth.password || ""
          };
        }
        var requestBody = req.body;
        if ((requestBody === null || requestBody === void 0 ? void 0 : requestBody.type) === "text") {
          newRequest.data = requestBody.content;
        } else if ((requestBody === null || requestBody === void 0 ? void 0 : requestBody.type) === "form-data" && requestBody.content.some(function(item) {
          return file_wrapper_1.isFileWrapper(item.value);
        })) {
          var form = new form_data_1.default();
          try {
            for (var _d = tslib_1.__values(requestBody.content), _e = _d.next(); !_e.done; _e = _d.next()) {
              var iter = _e.value;
              if (file_wrapper_1.isFileWrapper(iter.value)) {
                var fileData = iter.value.file;
                if (isBlob(fileData) && ((_b = iter.value.options) === null || _b === void 0 ? void 0 : _b.contentType)) {
                  fileData = new Blob([fileData], {
                    type: iter.value.options.contentType
                  });
                }
                form.append(iter.key, fileData, iter.value.options);
              } else {
                form.append(iter.key, iter.value);
              }
            }
          } catch (e_1_1) {
            e_1 = { error: e_1_1 };
          } finally {
            try {
              if (_e && !_e.done && (_a = _d.return))
                _a.call(_d);
            } finally {
              if (e_1)
                throw e_1.error;
            }
          }
          newRequest.data = form;
          http_headers_1.mergeHeaders(newRequest.headers, form.getHeaders());
        } else if ((requestBody === null || requestBody === void 0 ? void 0 : requestBody.type) === "form-data" || (requestBody === null || requestBody === void 0 ? void 0 : requestBody.type) === "form") {
          http_headers_1.setHeader(newRequest.headers, http_headers_1.CONTENT_TYPE_HEADER, http_headers_1.FORM_URLENCODED_CONTENT_TYPE);
          newRequest.data = http_query_1.urlEncodeKeyValuePairs(requestBody.content);
        } else if ((requestBody === null || requestBody === void 0 ? void 0 : requestBody.type) === "stream") {
          var contentType = "application/octet-stream";
          if (isBlob(requestBody.content.file) && requestBody.content.file.type) {
            contentType = requestBody.content.file.type;
          } else if ((_c = requestBody.content.options) === null || _c === void 0 ? void 0 : _c.contentType) {
            contentType = requestBody.content.options.contentType;
          }
          http_headers_1.setHeaderIfNotSet(newRequest.headers, http_headers_1.CONTENT_TYPE_HEADER, contentType);
          newRequest.data = requestBody.content.file;
        }
        if (req.responseType === "stream") {
          newRequest.responseType = detect_node_1.default ? "stream" : "blob";
        }
        newRequest.validateStatus = function() {
          return true;
        };
        newRequest.timeout = this._timeout;
        return newRequest;
      };
      HttpClient2.prototype.convertHttpResponse = function(resp) {
        return {
          body: resp.data,
          headers: resp.headers,
          statusCode: resp.status
        };
      };
      HttpClient2.prototype.executeRequest = function(request2, requestOptions) {
        return tslib_1.__awaiter(this, void 0, void 0, function() {
          var axiosRequest, cancelToken_1, _a, error_1;
          return tslib_1.__generator(this, function(_b) {
            switch (_b.label) {
              case 0:
                axiosRequest = this.convertHttpRequest(request2);
                if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.abortSignal) {
                  if (requestOptions.abortSignal.aborted) {
                    throw this.abortError();
                  }
                  cancelToken_1 = axios_1.default.CancelToken.source();
                  axiosRequest.cancelToken = cancelToken_1.token;
                  requestOptions.abortSignal.addEventListener("abort", function() {
                    cancelToken_1.cancel();
                  });
                }
                _b.label = 1;
              case 1:
                _b.trys.push([1, 3, , 4]);
                _a = this.convertHttpResponse;
                return [4, this._axiosInstance(axiosRequest)];
              case 2:
                return [2, _a.apply(this, [_b.sent()])];
              case 3:
                error_1 = _b.sent();
                if (axios_1.default.isCancel(error_1)) {
                  throw this.abortError();
                }
                throw error_1;
              case 4:
                return [2];
            }
          });
        });
      };
      HttpClient2.prototype.abortError = function() {
        return new this._abortErrorFactory("The HTTP call was aborted.");
      };
      return HttpClient2;
    }();
    exports.HttpClient = HttpClient;
    function isBlob(value) {
      if (typeof Blob === "undefined") {
        return false;
      }
      return value instanceof Blob || Object.prototype.toString.call(value) === "[object Blob]";
    }
    exports.isBlob = isBlob;
  }
});

// node_modules/@apimatic/axios-client-adapter/lib/index.js
var require_lib9 = __commonJS({
  "node_modules/@apimatic/axios-client-adapter/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_httpClient(), exports);
  }
});

// node_modules/square/dist/cjs/clientAdapter.js
var require_clientAdapter = __commonJS({
  "node_modules/square/dist/cjs/clientAdapter.js"(exports) {
    "use strict";
    exports.__esModule = true;
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_lib9(), exports);
  }
});

// node_modules/square/dist/cjs/client.js
var require_client = __commonJS({
  "node_modules/square/dist/cjs/client.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.Client = exports.SDK_VERSION = void 0;
    var tslib_1 = require_tslib();
    var applePayApi_1 = require_applePayApi();
    var bankAccountsApi_1 = require_bankAccountsApi();
    var bookingCustomAttributesApi_1 = require_bookingCustomAttributesApi();
    var bookingsApi_1 = require_bookingsApi();
    var cardsApi_1 = require_cardsApi();
    var cashDrawersApi_1 = require_cashDrawersApi();
    var catalogApi_1 = require_catalogApi();
    var checkoutApi_1 = require_checkoutApi();
    var customerCustomAttributesApi_1 = require_customerCustomAttributesApi();
    var customerGroupsApi_1 = require_customerGroupsApi();
    var customersApi_1 = require_customersApi();
    var customerSegmentsApi_1 = require_customerSegmentsApi();
    var devicesApi_1 = require_devicesApi();
    var disputesApi_1 = require_disputesApi();
    var employeesApi_1 = require_employeesApi();
    var giftCardActivitiesApi_1 = require_giftCardActivitiesApi();
    var giftCardsApi_1 = require_giftCardsApi();
    var inventoryApi_1 = require_inventoryApi();
    var invoicesApi_1 = require_invoicesApi();
    var laborApi_1 = require_laborApi();
    var locationCustomAttributesApi_1 = require_locationCustomAttributesApi();
    var locationsApi_1 = require_locationsApi();
    var loyaltyApi_1 = require_loyaltyApi();
    var merchantCustomAttributesApi_1 = require_merchantCustomAttributesApi();
    var merchantsApi_1 = require_merchantsApi();
    var mobileAuthorizationApi_1 = require_mobileAuthorizationApi();
    var oAuthApi_1 = require_oAuthApi();
    var orderCustomAttributesApi_1 = require_orderCustomAttributesApi();
    var ordersApi_1 = require_ordersApi();
    var paymentsApi_1 = require_paymentsApi();
    var payoutsApi_1 = require_payoutsApi();
    var refundsApi_1 = require_refundsApi();
    var sitesApi_1 = require_sitesApi();
    var snippetsApi_1 = require_snippetsApi();
    var subscriptionsApi_1 = require_subscriptionsApi();
    var teamApi_1 = require_teamApi();
    var terminalApi_1 = require_terminalApi();
    var transactionsApi_1 = require_transactionsApi();
    var v1TransactionsApi_1 = require_v1TransactionsApi();
    var vendorsApi_1 = require_vendorsApi();
    var webhookSubscriptionsApi_1 = require_webhookSubscriptionsApi();
    var authentication_1 = require_authentication2();
    var configuration_1 = require_configuration();
    var defaultConfiguration_1 = require_defaultConfiguration();
    var apiError_1 = require_apiError();
    var core_1 = require_core();
    var core_2 = require_core();
    var core_3 = require_core();
    var core_4 = require_core();
    var core_5 = require_core();
    var clientAdapter_1 = require_clientAdapter();
    exports.SDK_VERSION = "27.0.0";
    var Client4 = function() {
      function Client5(config) {
        var _this = this;
        var _a, _b, _c, _d;
        this._config = tslib_1.__assign(tslib_1.__assign({}, defaultConfiguration_1.DEFAULT_CONFIGURATION), config);
        this._retryConfig = tslib_1.__assign(tslib_1.__assign({}, defaultConfiguration_1.DEFAULT_RETRY_CONFIG), (_a = this._config.httpClientOptions) === null || _a === void 0 ? void 0 : _a.retryConfig);
        this._timeout = typeof ((_b = this._config.httpClientOptions) === null || _b === void 0 ? void 0 : _b.timeout) != "undefined" ? this._config.httpClientOptions.timeout : this._config.timeout;
        this._userAgent = (0, core_4.updateUserAgent)("Square-TypeScript-SDK/27.0.0 ({api-version}) {engine}/{engine-version} ({os-info}) {detail}", this._config.squareVersion, this._config.userAgentDetail);
        this._requestBuilderFactory = createRequestHandlerFactory(function(server) {
          return getBaseUri(server, _this._config);
        }, (0, authentication_1.accessTokenAuthenticationProvider)(this._config), new clientAdapter_1.HttpClient(core_5.AbortError, {
          timeout: this._timeout,
          clientConfigOverrides: this._config.unstable_httpClientOptions,
          httpAgent: (_c = this._config.httpClientOptions) === null || _c === void 0 ? void 0 : _c.httpAgent,
          httpsAgent: (_d = this._config.httpClientOptions) === null || _d === void 0 ? void 0 : _d.httpsAgent
        }), [
          withErrorHandlers,
          withUserAgent(this._userAgent),
          withAdditionalHeaders(this._config),
          withAuthenticationByDefault,
          withSquareVersion(this._config)
        ], this._retryConfig);
        this.applePayApi = new applePayApi_1.ApplePayApi(this);
        this.bankAccountsApi = new bankAccountsApi_1.BankAccountsApi(this);
        this.bookingCustomAttributesApi = new bookingCustomAttributesApi_1.BookingCustomAttributesApi(this);
        this.bookingsApi = new bookingsApi_1.BookingsApi(this);
        this.cardsApi = new cardsApi_1.CardsApi(this);
        this.cashDrawersApi = new cashDrawersApi_1.CashDrawersApi(this);
        this.catalogApi = new catalogApi_1.CatalogApi(this);
        this.checkoutApi = new checkoutApi_1.CheckoutApi(this);
        this.customerCustomAttributesApi = new customerCustomAttributesApi_1.CustomerCustomAttributesApi(this);
        this.customerGroupsApi = new customerGroupsApi_1.CustomerGroupsApi(this);
        this.customersApi = new customersApi_1.CustomersApi(this);
        this.customerSegmentsApi = new customerSegmentsApi_1.CustomerSegmentsApi(this);
        this.devicesApi = new devicesApi_1.DevicesApi(this);
        this.disputesApi = new disputesApi_1.DisputesApi(this);
        this.employeesApi = new employeesApi_1.EmployeesApi(this);
        this.giftCardActivitiesApi = new giftCardActivitiesApi_1.GiftCardActivitiesApi(this);
        this.giftCardsApi = new giftCardsApi_1.GiftCardsApi(this);
        this.inventoryApi = new inventoryApi_1.InventoryApi(this);
        this.invoicesApi = new invoicesApi_1.InvoicesApi(this);
        this.laborApi = new laborApi_1.LaborApi(this);
        this.locationCustomAttributesApi = new locationCustomAttributesApi_1.LocationCustomAttributesApi(this);
        this.locationsApi = new locationsApi_1.LocationsApi(this);
        this.loyaltyApi = new loyaltyApi_1.LoyaltyApi(this);
        this.merchantCustomAttributesApi = new merchantCustomAttributesApi_1.MerchantCustomAttributesApi(this);
        this.merchantsApi = new merchantsApi_1.MerchantsApi(this);
        this.mobileAuthorizationApi = new mobileAuthorizationApi_1.MobileAuthorizationApi(this);
        this.oAuthApi = new oAuthApi_1.OAuthApi(this);
        this.orderCustomAttributesApi = new orderCustomAttributesApi_1.OrderCustomAttributesApi(this);
        this.ordersApi = new ordersApi_1.OrdersApi(this);
        this.paymentsApi = new paymentsApi_1.PaymentsApi(this);
        this.payoutsApi = new payoutsApi_1.PayoutsApi(this);
        this.refundsApi = new refundsApi_1.RefundsApi(this);
        this.sitesApi = new sitesApi_1.SitesApi(this);
        this.snippetsApi = new snippetsApi_1.SnippetsApi(this);
        this.subscriptionsApi = new subscriptionsApi_1.SubscriptionsApi(this);
        this.teamApi = new teamApi_1.TeamApi(this);
        this.terminalApi = new terminalApi_1.TerminalApi(this);
        this.transactionsApi = new transactionsApi_1.TransactionsApi(this);
        this.v1TransactionsApi = new v1TransactionsApi_1.V1TransactionsApi(this);
        this.vendorsApi = new vendorsApi_1.VendorsApi(this);
        this.webhookSubscriptionsApi = new webhookSubscriptionsApi_1.WebhookSubscriptionsApi(this);
      }
      Client5.prototype.getRequestBuilderFactory = function() {
        return this._requestBuilderFactory;
      };
      Client5.prototype.withConfiguration = function(config) {
        return new Client5(tslib_1.__assign(tslib_1.__assign({}, this._config), config));
      };
      return Client5;
    }();
    exports.Client = Client4;
    function createHttpClientAdapter(client3) {
      var _this = this;
      return function(request2, requestOptions) {
        return tslib_1.__awaiter(_this, void 0, void 0, function() {
          return tslib_1.__generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                return [4, client3.executeRequest(request2, requestOptions)];
              case 1:
                return [2, _a.sent()];
            }
          });
        });
      };
    }
    function getBaseUri(server, config) {
      if (server === void 0) {
        server = "default";
      }
      if (config.environment === configuration_1.Environment.Production) {
        if (server === "default") {
          return "https://connect.squareup.com";
        }
      }
      if (config.environment === configuration_1.Environment.Sandbox) {
        if (server === "default") {
          return "https://connect.squareupsandbox.com";
        }
      }
      if (config.environment === configuration_1.Environment.Custom) {
        if (server === "default") {
          return (0, core_2.pathTemplate)(templateObject_1 || (templateObject_1 = tslib_1.__makeTemplateObject(["", ""], ["", ""])), new core_2.SkipEncode(config.customUrl));
        }
      }
      throw new Error("Could not get Base URL. Invalid environment or server.");
    }
    function createRequestHandlerFactory(baseUrlProvider, authProvider, httpClient, addons, retryConfig) {
      var requestBuilderFactory = (0, core_5.createRequestBuilderFactory)(createHttpClientAdapter(httpClient), baseUrlProvider, apiError_1.ApiError, authProvider, retryConfig);
      return tap.apply(void 0, tslib_1.__spreadArray([requestBuilderFactory], addons, false));
    }
    function tap(requestBuilderFactory) {
      var callback = [];
      for (var _i = 1; _i < arguments.length; _i++) {
        callback[_i - 1] = arguments[_i];
      }
      return function() {
        var args = [];
        for (var _i2 = 0; _i2 < arguments.length; _i2++) {
          args[_i2] = arguments[_i2];
        }
        var requestBuilder = requestBuilderFactory.apply(void 0, args);
        callback.forEach(function(c) {
          return c(requestBuilder);
        });
        return requestBuilder;
      };
    }
    function withErrorHandlers(rb) {
      rb.defaultToError(apiError_1.ApiError);
    }
    function withAdditionalHeaders(_a) {
      var additionalHeaders = _a.additionalHeaders;
      var clone = tslib_1.__assign({}, additionalHeaders);
      (0, core_1.assertHeaders)(clone);
      return function(rb) {
        rb.interceptRequest(function(request2) {
          var _a2;
          var headers2 = (_a2 = request2.headers) !== null && _a2 !== void 0 ? _a2 : {};
          (0, core_1.mergeHeaders)(headers2, clone);
          return tslib_1.__assign(tslib_1.__assign({}, request2), { headers: headers2 });
        });
      };
    }
    function withUserAgent(userAgent) {
      return function(rb) {
        rb.interceptRequest(function(request2) {
          var _a;
          var headers2 = (_a = request2.headers) !== null && _a !== void 0 ? _a : {};
          (0, core_3.setHeader)(headers2, "user-agent", userAgent);
          return tslib_1.__assign(tslib_1.__assign({}, request2), { headers: headers2 });
        });
      };
    }
    function withSquareVersion(_a) {
      var squareVersion = _a.squareVersion;
      return function(rb) {
        rb.interceptRequest(function(request2) {
          var _a2;
          var headers2 = (_a2 = request2.headers) !== null && _a2 !== void 0 ? _a2 : {};
          (0, core_3.setHeader)(headers2, "Square-Version", squareVersion);
          return tslib_1.__assign(tslib_1.__assign({}, request2), { headers: headers2 });
        });
      };
    }
    function withAuthenticationByDefault(rb) {
      rb.authenticate(true);
    }
    var templateObject_1;
  }
});

// node_modules/square/dist/cjs/utilities/webhooksHelper.js
var require_webhooksHelper = __commonJS({
  "node_modules/square/dist/cjs/utilities/webhooksHelper.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.WebhooksHelper = void 0;
    var tslib_1 = require_tslib();
    var crypto_1 = tslib_1.__importDefault(require("crypto"));
    var WebhooksHelper = function() {
      function WebhooksHelper2() {
      }
      WebhooksHelper2.isValidWebhookEventSignature = function(requestBody, signatureHeader, signatureKey, notificationUrl) {
        if (requestBody == null) {
          return false;
        }
        if (signatureKey == null || signatureKey.length == 0) {
          throw new Error("signatureKey is null or empty");
        }
        if (notificationUrl == null || notificationUrl.length == 0) {
          throw new Error("notificationUrl is null or empty");
        }
        var payloadBytes = Buffer.from(notificationUrl + requestBody, "utf-8");
        var signatureKeyBytes = Buffer.from(signatureKey, "utf-8");
        var hmac = crypto_1["default"].createHmac("sha256", signatureKeyBytes);
        hmac.update(payloadBytes);
        var hashBase64 = hmac.digest("base64");
        return hashBase64 === signatureHeader;
      };
      return WebhooksHelper2;
    }();
    exports.WebhooksHelper = WebhooksHelper;
  }
});

// node_modules/square/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/square/dist/cjs/index.js"(exports) {
    "use strict";
    exports.__esModule = true;
    exports.ResponseValidationError = exports.isFileWrapper = exports.FileWrapper = exports.cloneFileWrapper = exports.ArgumentsValidationError = exports.AbortError = void 0;
    var tslib_1 = require_tslib();
    tslib_1.__exportStar(require_client(), exports);
    tslib_1.__exportStar(require_configuration(), exports);
    var core_1 = require_core();
    tslib_1.__createBinding(exports, core_1, "AbortError");
    tslib_1.__createBinding(exports, core_1, "ArgumentsValidationError");
    tslib_1.__createBinding(exports, core_1, "cloneFileWrapper");
    tslib_1.__createBinding(exports, core_1, "FileWrapper");
    tslib_1.__createBinding(exports, core_1, "isFileWrapper");
    tslib_1.__createBinding(exports, core_1, "ResponseValidationError");
    tslib_1.__exportStar(require_defaultConfiguration(), exports);
    tslib_1.__exportStar(require_applePayApi(), exports);
    tslib_1.__exportStar(require_bankAccountsApi(), exports);
    tslib_1.__exportStar(require_bookingCustomAttributesApi(), exports);
    tslib_1.__exportStar(require_bookingsApi(), exports);
    tslib_1.__exportStar(require_cardsApi(), exports);
    tslib_1.__exportStar(require_cashDrawersApi(), exports);
    tslib_1.__exportStar(require_catalogApi(), exports);
    tslib_1.__exportStar(require_checkoutApi(), exports);
    tslib_1.__exportStar(require_customerCustomAttributesApi(), exports);
    tslib_1.__exportStar(require_customerGroupsApi(), exports);
    tslib_1.__exportStar(require_customersApi(), exports);
    tslib_1.__exportStar(require_customerSegmentsApi(), exports);
    tslib_1.__exportStar(require_devicesApi(), exports);
    tslib_1.__exportStar(require_disputesApi(), exports);
    tslib_1.__exportStar(require_employeesApi(), exports);
    tslib_1.__exportStar(require_giftCardActivitiesApi(), exports);
    tslib_1.__exportStar(require_giftCardsApi(), exports);
    tslib_1.__exportStar(require_inventoryApi(), exports);
    tslib_1.__exportStar(require_invoicesApi(), exports);
    tslib_1.__exportStar(require_laborApi(), exports);
    tslib_1.__exportStar(require_locationCustomAttributesApi(), exports);
    tslib_1.__exportStar(require_locationsApi(), exports);
    tslib_1.__exportStar(require_loyaltyApi(), exports);
    tslib_1.__exportStar(require_merchantCustomAttributesApi(), exports);
    tslib_1.__exportStar(require_merchantsApi(), exports);
    tslib_1.__exportStar(require_mobileAuthorizationApi(), exports);
    tslib_1.__exportStar(require_oAuthApi(), exports);
    tslib_1.__exportStar(require_orderCustomAttributesApi(), exports);
    tslib_1.__exportStar(require_ordersApi(), exports);
    tslib_1.__exportStar(require_paymentsApi(), exports);
    tslib_1.__exportStar(require_payoutsApi(), exports);
    tslib_1.__exportStar(require_refundsApi(), exports);
    tslib_1.__exportStar(require_sitesApi(), exports);
    tslib_1.__exportStar(require_snippetsApi(), exports);
    tslib_1.__exportStar(require_subscriptionsApi(), exports);
    tslib_1.__exportStar(require_teamApi(), exports);
    tslib_1.__exportStar(require_terminalApi(), exports);
    tslib_1.__exportStar(require_transactionsApi(), exports);
    tslib_1.__exportStar(require_v1TransactionsApi(), exports);
    tslib_1.__exportStar(require_vendorsApi(), exports);
    tslib_1.__exportStar(require_webhookSubscriptionsApi(), exports);
    tslib_1.__exportStar(require_apiError(), exports);
    tslib_1.__exportStar(require_webhooksHelper(), exports);
  }
});

// .netlify/server/chunks/hooks.server.js
var hooks_server_exports = {};
async function retrieveStoreItems() {
  try {
    const response2 = await client2.catalogApi.searchCatalogItems({});
    storeItems = response2.result.items;
    console.log(storeItems);
    console.log("Retrieved store items");
    retrieveStoreItemImgs();
  } catch (error2) {
    console.log(error2);
  }
}
async function retrieveStoreItemImgs() {
  let index5 = 0;
  let imgURL = [];
  for (const item of storeItems) {
    let ids = item.itemData.imageIds;
    if (ids.length == 1) {
      ids = String(ids);
      console.log(ids);
      try {
        const response2 = await client2.catalogApi.retrieveCatalogObject(ids);
        imgURL.push(response2.result.object.imageData.url);
        console.log("Appended all img URLs");
      } catch (error2) {
        console.log(error2);
      }
    } else if (ids.length > 1) {
      for (let id of ids) {
        id = String(id);
        console.log(id);
        try {
          console.log(`attempting to retrieve image with id: ${id}`);
          const response2 = await client2.catalogApi.retrieveCatalogObject(id);
          imgURL.push(response2.result.object.imageData.url);
          console.log("Appended all img URLs");
        } catch (error2) {
          console.log(error2);
        }
      }
    }
    storeItems[index5].itemData.imgURL = imgURL;
    index5++;
  }
  createJSONStoreItems();
}
function createJSONStoreItems() {
  const json2 = JSON.stringify(storeItems, (key2, value) => typeof value === "bigint" ? value.toString() + "n" : value, 2);
  import_fs.default.writeFile("src/routes/store-items.json", json2, "utf8", function(err) {
    console.log("File written");
    if (err)
      throw err;
  });
  console.log("Updated JSON Store File");
}
var import_square, import_fs, SQUARE_ACCESS_TOKEN, SQUARE_ACCESS_TOKEN_SANDBOX, client2, storeItems;
var init_hooks_server = __esm({
  ".netlify/server/chunks/hooks.server.js"() {
    import_square = __toESM(require_cjs2(), 1);
    import_fs = __toESM(require("fs"), 1);
    SQUARE_ACCESS_TOKEN = "EAAAEIHMfBOsMn8YdFwXlNvmCHrnJw0RqLVfXk0zCKIuzviJW1J3_LqPpsN3AqnX";
    SQUARE_ACCESS_TOKEN_SANDBOX = "EAAAEFGCqdV8Nx-7p0MnkLNhTZZ7x9wmwqzWoHtKJ3SfDFOjcnUyQieFoMYgNnQJ";
    console.log(SQUARE_ACCESS_TOKEN_SANDBOX);
    client2 = new import_square.Client({
      accessToken: SQUARE_ACCESS_TOKEN,
      environment: import_square.Environment.Production
    });
    retrieveStoreItems();
  }
});

// node_modules/cookie/index.js
var require_cookie = __commonJS({
  "node_modules/cookie/index.js"(exports) {
    "use strict";
    exports.parse = parse4;
    exports.serialize = serialize2;
    var __toString = Object.prototype.toString;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse4(str, options2) {
      if (typeof str !== "string") {
        throw new TypeError("argument str must be a string");
      }
      var obj = {};
      var opt = options2 || {};
      var dec = opt.decode || decode;
      var index5 = 0;
      while (index5 < str.length) {
        var eqIdx = str.indexOf("=", index5);
        if (eqIdx === -1) {
          break;
        }
        var endIdx = str.indexOf(";", index5);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index5 = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        var key2 = str.slice(index5, eqIdx).trim();
        if (obj[key2] === void 0) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key2] = tryDecode(val, dec);
        }
        index5 = endIdx + 1;
      }
      return obj;
    }
    function serialize2(name, val, options2) {
      var opt = options2 || {};
      var enc = opt.encode || encode2;
      if (typeof enc !== "function") {
        throw new TypeError("option encode is invalid");
      }
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError("argument name is invalid");
      }
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError("argument val is invalid");
      }
      var str = name + "=" + value;
      if (opt.maxAge != null) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError("option domain is invalid");
        }
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError("option path is invalid");
        }
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate(expires) || isNaN(expires.valueOf())) {
          throw new TypeError("option expires is invalid");
        }
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.priority) {
        var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function decode(str) {
      return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
    }
    function encode2(val) {
      return encodeURIComponent(val);
    }
    function isDate(val) {
      return __toString.call(val) === "[object Date]" || val instanceof Date;
    }
    function tryDecode(str, decode2) {
      try {
        return decode2(str);
      } catch (e) {
        return str;
      }
    }
  }
});

// node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "node_modules/set-cookie-parser/lib/set-cookie.js"(exports, module2) {
    "use strict";
    var defaultParseOptions2 = {
      decodeValues: true,
      map: false,
      silent: false
    };
    function isNonEmptyString2(str) {
      return typeof str === "string" && !!str.trim();
    }
    function parseString3(setCookieValue, options2) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString2);
      var nameValuePairStr = parts.shift();
      var parsed = parseNameValuePair2(nameValuePairStr);
      var name = parsed.name;
      var value = parsed.value;
      options2 = options2 ? Object.assign({}, defaultParseOptions2, options2) : defaultParseOptions2;
      try {
        value = options2.decodeValues ? decodeURIComponent(value) : value;
      } catch (e) {
        console.error("set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.", e);
      }
      var cookie = {
        name,
        value
      };
      parts.forEach(function(part) {
        var sides = part.split("=");
        var key2 = sides.shift().trimLeft().toLowerCase();
        var value2 = sides.join("=");
        if (key2 === "expires") {
          cookie.expires = new Date(value2);
        } else if (key2 === "max-age") {
          cookie.maxAge = parseInt(value2, 10);
        } else if (key2 === "secure") {
          cookie.secure = true;
        } else if (key2 === "httponly") {
          cookie.httpOnly = true;
        } else if (key2 === "samesite") {
          cookie.sameSite = value2;
        } else {
          cookie[key2] = value2;
        }
      });
      return cookie;
    }
    function parseNameValuePair2(nameValuePairStr) {
      var name = "";
      var value = "";
      var nameValueArr = nameValuePairStr.split("=");
      if (nameValueArr.length > 1) {
        name = nameValueArr.shift();
        value = nameValueArr.join("=");
      } else {
        value = nameValuePairStr;
      }
      return { name, value };
    }
    function parse4(input, options2) {
      options2 = options2 ? Object.assign({}, defaultParseOptions2, options2) : defaultParseOptions2;
      if (!input) {
        if (!options2.map) {
          return [];
        } else {
          return {};
        }
      }
      if (input.headers) {
        if (typeof input.headers.getSetCookie === "function") {
          input = input.headers.getSetCookie();
        } else if (input.headers["set-cookie"]) {
          input = input.headers["set-cookie"];
        } else {
          var sch = input.headers[Object.keys(input.headers).find(function(key2) {
            return key2.toLowerCase() === "set-cookie";
          })];
          if (!sch && input.headers.cookie && !options2.silent) {
            console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.");
          }
          input = sch;
        }
      }
      if (!Array.isArray(input)) {
        input = [input];
      }
      options2 = options2 ? Object.assign({}, defaultParseOptions2, options2) : defaultParseOptions2;
      if (!options2.map) {
        return input.filter(isNonEmptyString2).map(function(str) {
          return parseString3(str, options2);
        });
      } else {
        var cookies = {};
        return input.filter(isNonEmptyString2).reduce(function(cookies2, str) {
          var cookie = parseString3(str, options2);
          cookies2[cookie.name] = cookie;
          return cookies2;
        }, cookies);
      }
    }
    function splitCookiesString3(cookiesString) {
      if (Array.isArray(cookiesString)) {
        return cookiesString;
      }
      if (typeof cookiesString !== "string") {
        return [];
      }
      var cookiesStrings = [];
      var pos = 0;
      var start;
      var ch;
      var lastComma;
      var nextStart;
      var cookiesSeparatorFound;
      function skipWhitespace() {
        while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
          pos += 1;
        }
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
      }
      while (pos < cookiesString.length) {
        start = pos;
        cookiesSeparatorFound = false;
        while (skipWhitespace()) {
          ch = cookiesString.charAt(pos);
          if (ch === ",") {
            lastComma = pos;
            pos += 1;
            skipWhitespace();
            nextStart = pos;
            while (pos < cookiesString.length && notSpecialChar()) {
              pos += 1;
            }
            if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
              cookiesSeparatorFound = true;
              pos = nextStart;
              cookiesStrings.push(cookiesString.substring(start, lastComma));
              start = pos;
            } else {
              pos = lastComma + 1;
            }
          } else {
            pos += 1;
          }
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) {
          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
        }
      }
      return cookiesStrings;
    }
    module2.exports = parse4;
    module2.exports.parse = parse4;
    module2.exports.parseString = parseString3;
    module2.exports.splitCookiesString = splitCookiesString3;
  }
});

// .netlify/server/chunks/stores.js
var getStores, page;
var init_stores = __esm({
  ".netlify/server/chunks/stores.js"() {
    init_index2();
    getStores = () => {
      const stores = getContext("__svelte__");
      return {
        page: {
          subscribe: stores.page.subscribe
        },
        navigating: {
          subscribe: stores.navigating.subscribe
        },
        updated: stores.updated
      };
    };
    page = {
      subscribe(fn) {
        const store = getStores().page;
        return store.subscribe(fn);
      }
    };
  }
});

// .netlify/server/entries/pages/_layout.svelte.js
var layout_svelte_exports = {};
__export(layout_svelte_exports, {
  default: () => Layout
});
var css$2, Header, css$1, Footer, css, Layout;
var init_layout_svelte = __esm({
  ".netlify/server/entries/pages/_layout.svelte.js"() {
    init_index2();
    init_stores();
    css$2 = {
      code: "header.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d{z-index:1;padding-top:2rem;background:linear-gradient(rgba(0, 0, 0, 0.6), rgba(255, 255, 255, 0));width:100vw;position:absolute;top:0;left:0}.logo-container.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d{position:relative;height:100%;background-color:var(--color-primary)}.logo-container.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d:before{content:'';position:absolute;top:0;left:-200%;height:100%;width:200%;background-color:var(--color-primary);z-index:-1}nav.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d{list-style-type:none}nav.svelte-15jwt4d a.svelte-15jwt4d.svelte-15jwt4d,#menu.svelte-15jwt4d a.svelte-15jwt4d.svelte-15jwt4d{color:var(--color-light);font-family:var(--font-header);font-size:1.3rem;z-index:12;text-decoration:none;text-transform:uppercase}.nav-item.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d{height:fit-content}.nav-item.svelte-15jwt4d li.svelte-15jwt4d.svelte-15jwt4d{text-decoration:none}.nav-item.svelte-15jwt4d li.svelte-15jwt4d.svelte-15jwt4d:after{content:'';display:block;width:0;height:2px;background-color:var(--color-highlight);transition:width 0.3s}a[aria-current='page'].svelte-15jwt4d>li.svelte-15jwt4d.svelte-15jwt4d:after{width:100%}a[aria-current='page-mobile'].svelte-15jwt4d>li.svelte-15jwt4d.svelte-15jwt4d:after{background-color:var(--color-highlight);content:'';display:block;width:100%;height:2px}.nav-item.svelte-15jwt4d:hover .svelte-15jwt4d.svelte-15jwt4d:not(a[aria-current='page']):after{width:100%;transition:width 0.3s}img.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d{max-height:100px;height:100%;position:relative;z-index:20}header.svelte-15jwt4d .btn.svelte-15jwt4d.svelte-15jwt4d{font-size:1.2rem;padding:0.5rem 1.2rem}ul.svelte-15jwt4d>a.svelte-15jwt4d.svelte-15jwt4d{text-decoration:none;color:#3e3f3c;font-size:16px;display:inline-block}#menuToggle.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d,#menuToggle.svelte-15jwt4d input.svelte-15jwt4d.svelte-15jwt4d,#menuToggle.svelte-15jwt4d a.svelte-15jwt4d.svelte-15jwt4d,#menuToggle.svelte-15jwt4d input.svelte-15jwt4d.svelte-15jwt4d{display:none}@media screen and (max-width: 991px){header.svelte-15jwt4d>.col-12.svelte-15jwt4d.svelte-15jwt4d{background-color:var(--color-primary)}.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d::-webkit-scrollbar{width:0}#menuToggle.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d{display:block;-webkit-user-select:none;user-select:none;position:relative;padding-right:1rem}#menuToggle.svelte-15jwt4d a.svelte-15jwt4d.svelte-15jwt4d{text-decoration:none;transition:color 0.3s ease;display:block;color:var(--color-light)}#menuToggle.svelte-15jwt4d input.svelte-15jwt4d.svelte-15jwt4d{display:block;width:40px;height:32px;position:absolute;top:-7px;cursor:pointer;opacity:0;z-index:3;-webkit-touch-callout:none}#menuToggle.svelte-15jwt4d span.svelte-15jwt4d.svelte-15jwt4d{display:block;width:33px;background-color:var(--color-light);height:4px;margin-bottom:5px;position:relative;border-radius:3px;z-index:2;transform-origin:4px 0px;transition:transform 0.5s cubic-bezier(0.77,0.2,0.05,1.0),\r\n              background 0.5s cubic-bezier(0.77,0.2,0.05,1.0),\r\n              opacity 0.55s ease}#menuToggle.svelte-15jwt4d span.svelte-15jwt4d.svelte-15jwt4d:first-child{transform-origin:0% 0%}#menuToggle.svelte-15jwt4d span.svelte-15jwt4d.svelte-15jwt4d:nth-last-child(2){transform-origin:0% 100%}#menuToggle.svelte-15jwt4d input.svelte-15jwt4d:checked~span.svelte-15jwt4d{opacity:1;transform:rotate(45deg) translate(-2px, -1px);background-color:var(--color-light)}#menuToggle.svelte-15jwt4d input.svelte-15jwt4d:checked~span.svelte-15jwt4d:nth-last-child(3){opacity:0;transform:rotate(0deg) scale(0.2, 0.2)}#menuToggle.svelte-15jwt4d input.svelte-15jwt4d:checked~span.svelte-15jwt4d:nth-last-child(2){transform:rotate(-45deg) translate(0, -1px)}#menu.svelte-15jwt4d.svelte-15jwt4d.svelte-15jwt4d{position:absolute;right:0;top:0;width:100vw;padding:25px;padding-top:125px;background:var(--color-dark);list-style-type:none;-webkit-font-smoothing:antialiased;transform-origin:0% 0%;transform:translate(100%, 0);transition:all 0.6s ease;z-index:-100}#menu.svelte-15jwt4d a.svelte-15jwt4d.svelte-15jwt4d{padding:10px 0;z-index:1;position:relative}#menuToggle.svelte-15jwt4d input.svelte-15jwt4d:checked~ul.svelte-15jwt4d{transform:none}}",
      map: null
    };
    Header = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      let headerToggle = false;
      $$result.css.add(css$2);
      $$unsubscribe_page();
      return `

<header class="${"col-12 px-0 mx-0 svelte-15jwt4d"}"><div class="${"col-12 d-flex justify-content-between px-0 px-lg-5 align-items-center svelte-15jwt4d"}"><a class="${"pr-5 d-flex justify-content-start px-0 align-items-center logo-container svelte-15jwt4d"}" href="${"/"}"><img src="${"/img/OBA_PrimaryLogo_WhiteType.png"}" alt="${"Oregon Bicycle Adventures Logo"}" class="${"ml-3 mr-0 p-2 p-sm-3 p-lg-2 svelte-15jwt4d"}"></a>
        <nav class="${"d-none d-lg-flex col-lg-6 col-xxl-5 justify-content-between align-items-center svelte-15jwt4d"}"><a class="${"nav-item d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/tours") ? "page" : void 0, 0)} href="${"/tours"}"><li class="${"svelte-15jwt4d"}">Tours</li></a>
            <a class="${"nav-item d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/store") ? "page" : void 0, 0)} href="${"/store"}"><li class="${"svelte-15jwt4d"}">Store</li></a>
            <a class="${"nav-item d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/blog") ? "page" : void 0, 0)} href="${"/blog"}"><li class="${"svelte-15jwt4d"}">Blog</li></a>
            <a class="${"nav-item d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/about") ? "page" : void 0, 0)} href="${"/about"}"><li class="${"svelte-15jwt4d"}">About</li></a>
            <a class="${"nav-item d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/contact") ? "page" : void 0, 0)} href="${"/contact"}"><li class="${"svelte-15jwt4d"}">Contact</li></a></nav>

        <div class="${"col-1 col-xxl-3 d-none d-lg-flex justify-content-end align-items-center align-content-center svelte-15jwt4d"}"><a href="${"https://fareharbor.com/embeds/book/oregonbicycleadventures/?full-items=yes"}" class="${"svelte-15jwt4d"}"><button class="${"btn btn-primary svelte-15jwt4d"}">Book</button></a></div>
        <div id="${"menuToggle"}" class="${"px-3 d-lg-none svelte-15jwt4d"}"><input type="${"checkbox"}" class="${"svelte-15jwt4d"}"${add_attribute("checked", headerToggle, 1)}>
            <span class="${" svelte-15jwt4d"}"></span>
            <span class="${" svelte-15jwt4d"}"></span>
            <span class="${" svelte-15jwt4d"}"></span>
            <ul id="${"menu"}" class="${" svelte-15jwt4d"}"><a class="${"col-12 d-flex justify-content-center svelte-15jwt4d"}" href="${"https://fareharbor.com/embeds/book/oregonbicycleadventures/?full-items=yes"}"><button class="${"btn btn-secondary svelte-15jwt4d"}">Book</button></a>
                <a class="${"d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/tours") ? "page-mobile" : void 0, 0)} href="${"/tours"}"><li class="${"svelte-15jwt4d"}">Tours</li></a>
                <a class="${"d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/store") ? "page-mobile" : void 0, 0)} href="${"/store"}"><li class="${"svelte-15jwt4d"}">Store</li></a>
                <a class="${"d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/blog") ? "page-mobile" : void 0, 0)} href="${"/blog"}"><li class="${"svelte-15jwt4d"}">Blog</li></a>
                <a class="${"d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/about") ? "page-mobile" : void 0, 0)} href="${"/about"}"><li class="${"svelte-15jwt4d"}">About</li></a>
                <a class="${"d-flex justify-content-center align-items-center svelte-15jwt4d"}"${add_attribute("aria-current", $page.url.pathname.startsWith("/contact") ? "page-mobile" : void 0, 0)} href="${"/contact"}"><li class="${"svelte-15jwt4d"}">Contact</li></a></ul></div></div>
</header>`;
    });
    css$1 = {
      code: "footer.svelte-nhjtpw.svelte-nhjtpw,footer.svelte-nhjtpw>.col-12.svelte-nhjtpw{height:fit-content}footer.svelte-nhjtpw.svelte-nhjtpw{border-bottom:solid 20px var(--color-dark)}i.svelte-nhjtpw.svelte-nhjtpw{font-size:1.5rem;color:var(black)}.img-container.svelte-nhjtpw.svelte-nhjtpw{box-shadow:none;width:100%}footer.svelte-nhjtpw.svelte-nhjtpw{background-color:var(--color-primary)}footer.svelte-nhjtpw p.svelte-nhjtpw,footer.svelte-nhjtpw i.svelte-nhjtpw{color:var(--color-light)}",
      map: null
    };
    Footer = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css$1);
      return `<footer id="${"footer"}" class="${"col-12 vh-50 d-flex align-content-center pt-5 pb-3 svelte-nhjtpw"}"><div class="${"col-12 d-flex justify-content-between align-content-center align-items-center flex-wrap py-5 svelte-nhjtpw"}"><div class="${"col-12 col-md-3 px-0 order-md-2 d-flex justify-content-center flex-wrap"}"><a href="${"/"}" class="${"img-container col-10 svelte-nhjtpw"}"><img class="${"img"}" src="${"/img/OBA_PrimaryLogo_WhiteType.png"}" alt="${"Oregon Bicycle Adventures Logo"}"></a>
            </div>
        <div class="${"col-12 col-md-3 px-0 order-md-1 d-flex align-content-center flex-wrap py-3"}"><p class="${"col-12 svelte-nhjtpw"}">Oregon Bicycle Adventures, LLC</p>
            <p class="${"col-12 svelte-nhjtpw"}">morgan@oregonbicycleadventures.com</p>
            <p class="${"col-12 svelte-nhjtpw"}">(503) 949-8766</p>
            <p class="${"col-12 svelte-nhjtpw"}">Bend, Oregon</p></div>
        <div class="${"col-12 col-md-3 px-0 pt-3 order-md-3 d-flex align-content-center flex-wrap justify-content-around"}"><i class="${"fa-brands fa-instagram svelte-nhjtpw"}" onclick="${"location.href='https://www.instagram.com/oregonbicycleadventures/';"}" style="${"cursor: pointer;"}"></i>
            <i class="${"fa-brands fa-facebook svelte-nhjtpw"}" onclick="${"location.href='https://www.facebook.com/profile.php?id=100092429499374';"}" style="${"cursor: pointer;"}"></i>
            <i class="${"fa-solid fa-envelope svelte-nhjtpw"}" onclick="${"location.href='/contact';"}" style="${"cursor: pointer;"}"></i></div></div>
</footer>`;
    });
    css = {
      code: "main.svelte-1iq9rj6{z-index:0}",
      map: null
    };
    Layout = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css);
      return `<div class="${"app"}"><main class="${"svelte-1iq9rj6"}">${validate_component(Header, "Header").$$render($$result, {}, {}, {})}
		${slots.default ? slots.default({}) : ``}
        ${validate_component(Footer, "Footer").$$render($$result, {}, {}, {})}</main>
	
</div>`;
    });
  }
});

// .netlify/server/nodes/0.js
var __exports = {};
__export(__exports, {
  component: () => component,
  fonts: () => fonts,
  imports: () => imports,
  index: () => index,
  stylesheets: () => stylesheets
});
var index, component, imports, stylesheets, fonts;
var init__ = __esm({
  ".netlify/server/nodes/0.js"() {
    index = 0;
    component = async () => (await Promise.resolve().then(() => (init_layout_svelte(), layout_svelte_exports))).default;
    imports = ["_app/immutable/nodes/0.33d141e4.js", "_app/immutable/chunks/index.ccc3dc3a.js", "_app/immutable/chunks/stores.6ee61478.js", "_app/immutable/chunks/singletons.6a1b0d15.js", "_app/immutable/chunks/index.d2e4c5b0.js"];
    stylesheets = ["_app/immutable/assets/0.af2a9fe4.css"];
    fonts = [];
  }
});

// .netlify/server/entries/fallbacks/error.svelte.js
var error_svelte_exports = {};
__export(error_svelte_exports, {
  default: () => Error2
});
var Error2;
var init_error_svelte = __esm({
  ".netlify/server/entries/fallbacks/error.svelte.js"() {
    init_index2();
    init_stores();
    Error2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $page, $$unsubscribe_page;
      $$unsubscribe_page = subscribe(page, (value) => $page = value);
      $$unsubscribe_page();
      return `<h1>${escape($page.status)}</h1>
<p>${escape($page.error?.message)}</p>`;
    });
  }
});

// .netlify/server/nodes/1.js
var __exports2 = {};
__export(__exports2, {
  component: () => component2,
  fonts: () => fonts2,
  imports: () => imports2,
  index: () => index2,
  stylesheets: () => stylesheets2
});
var index2, component2, imports2, stylesheets2, fonts2;
var init__2 = __esm({
  ".netlify/server/nodes/1.js"() {
    index2 = 1;
    component2 = async () => (await Promise.resolve().then(() => (init_error_svelte(), error_svelte_exports))).default;
    imports2 = ["_app/immutable/nodes/1.f796dc6c.js", "_app/immutable/chunks/index.ccc3dc3a.js", "_app/immutable/chunks/stores.6ee61478.js", "_app/immutable/chunks/singletons.6a1b0d15.js", "_app/immutable/chunks/index.d2e4c5b0.js"];
    stylesheets2 = [];
    fonts2 = [];
  }
});

// .netlify/server/entries/pages/store/_itemName_/_page.ts.js
var page_ts_exports = {};
__export(page_ts_exports, {
  load: () => load,
  prerender: () => prerender
});
var load, prerender;
var init_page_ts = __esm({
  ".netlify/server/entries/pages/store/_itemName_/_page.ts.js"() {
    load = ({ params }) => {
      console.log("page reload", params);
      return {
        itemName: params.itemName
      };
    };
    prerender = false;
  }
});

// .netlify/server/chunks/store-items.js
var items;
var init_store_items = __esm({
  ".netlify/server/chunks/store-items.js"() {
    items = [
      {
        type: "ITEM",
        id: "447LL3SLYPBRG2DT2NB4DQTR",
        updatedAt: "2023-06-16T01:48:15.302Z",
        version: "1686880095302n",
        isDeleted: false,
        presentAtAllLocations: true,
        itemData: {
          name: "OBA Long Sleeve Jersey",
          description: "In partnership with Cascade Armory, a Bend-based biking apparel brand, we're excited to introduce our inaugural jersey! This piece is ideal for those wanting to celebrate a memorable journey with us or simply show some love for their preferred Oregon Adventure brand. This jersey combines high-quality materials and a well-considered design that suits everyday wear.\n\nStraying from the conventional snug fit of typical biking jerseys, we've chosen a looser fit that allows this jersey to be worn both on and off your bike. While it may add a smidge of drag at high speeds, we believe it aligns better with our ethos at Oregon Bicycle Adventures. And lets be honest, we're not about to set any land speed records out on our bikes, so might as well be comfortable and stylish while we take in the views. \n\nFeatures\n-Honeycomb ventilated side panels \n\n- Dimple Jersey Mesh\n\n- Clean Hidden Stitching\n\n- Sublimated Graphics \n\n- 1x1 Rib for Neck Opening",
          categoryId: "46FL7UFUQQ6USZDI6ZEI6UJJ",
          variations: [
            {
              type: "ITEM_VARIATION",
              id: "SYHCY6PQPZ4TOSW67KNA3WFT",
              updatedAt: "2023-06-16T01:48:15.302Z",
              version: "1686880095302n",
              isDeleted: false,
              presentAtAllLocations: true,
              itemVariationData: {
                itemId: "447LL3SLYPBRG2DT2NB4DQTR",
                name: "S",
                ordinal: 0,
                pricingType: "FIXED_PRICING",
                priceMoney: {
                  amount: "6000n",
                  currency: "USD"
                },
                locationOverrides: [
                  {
                    locationId: "LEYW7FQW17A32",
                    trackInventory: true
                  }
                ],
                inventoryAlertType: "NONE",
                itemOptionValues: [
                  {
                    itemOptionId: "NZIAFXUWBUPXLETGDRVTXRPQ",
                    itemOptionValueId: "BVBWFZ5BCHU37NY4EURX3F7G"
                  }
                ],
                sellable: true,
                stockable: true
              }
            },
            {
              type: "ITEM_VARIATION",
              id: "5CAVVK42UV2MRPSNCTHU7IKV",
              updatedAt: "2023-06-16T01:48:15.302Z",
              version: "1686880095302n",
              isDeleted: false,
              presentAtAllLocations: true,
              itemVariationData: {
                itemId: "447LL3SLYPBRG2DT2NB4DQTR",
                name: "M",
                ordinal: 1,
                pricingType: "FIXED_PRICING",
                priceMoney: {
                  amount: "6000n",
                  currency: "USD"
                },
                locationOverrides: [
                  {
                    locationId: "LEYW7FQW17A32",
                    trackInventory: true
                  }
                ],
                trackInventory: false,
                inventoryAlertType: "NONE",
                itemOptionValues: [
                  {
                    itemOptionId: "NZIAFXUWBUPXLETGDRVTXRPQ",
                    itemOptionValueId: "4AESGQTE2UJLBIC2WGOIWFO2"
                  }
                ],
                sellable: true,
                stockable: true
              }
            },
            {
              type: "ITEM_VARIATION",
              id: "3CL4RZCKKJ5NRANRALWEH66S",
              updatedAt: "2023-06-16T01:48:15.302Z",
              version: "1686880095302n",
              isDeleted: false,
              presentAtAllLocations: true,
              itemVariationData: {
                itemId: "447LL3SLYPBRG2DT2NB4DQTR",
                name: "L",
                ordinal: 2,
                pricingType: "FIXED_PRICING",
                priceMoney: {
                  amount: "6000n",
                  currency: "USD"
                },
                locationOverrides: [
                  {
                    locationId: "LEYW7FQW17A32",
                    trackInventory: true
                  }
                ],
                trackInventory: false,
                inventoryAlertType: "NONE",
                itemOptionValues: [
                  {
                    itemOptionId: "NZIAFXUWBUPXLETGDRVTXRPQ",
                    itemOptionValueId: "YVASEDA2EWBXEKZ72YKQZUB3"
                  }
                ],
                sellable: true,
                stockable: true
              }
            },
            {
              type: "ITEM_VARIATION",
              id: "JVUGOJUIAZT4SCCYUG4HPUMX",
              updatedAt: "2023-06-16T01:48:15.302Z",
              version: "1686880095302n",
              isDeleted: false,
              presentAtAllLocations: true,
              itemVariationData: {
                itemId: "447LL3SLYPBRG2DT2NB4DQTR",
                name: "XL",
                ordinal: 3,
                pricingType: "FIXED_PRICING",
                priceMoney: {
                  amount: "6000n",
                  currency: "USD"
                },
                locationOverrides: [
                  {
                    locationId: "LEYW7FQW17A32",
                    trackInventory: true
                  }
                ],
                trackInventory: false,
                inventoryAlertType: "NONE",
                itemOptionValues: [
                  {
                    itemOptionId: "NZIAFXUWBUPXLETGDRVTXRPQ",
                    itemOptionValueId: "F7RZKH6XTQHAPJDL4P32PL7D"
                  }
                ],
                sellable: true,
                stockable: true
              }
            },
            {
              type: "ITEM_VARIATION",
              id: "NRRIJL6I4DJ52FKD57CJN3OY",
              updatedAt: "2023-06-16T01:48:15.302Z",
              version: "1686880095302n",
              isDeleted: false,
              presentAtAllLocations: true,
              itemVariationData: {
                itemId: "447LL3SLYPBRG2DT2NB4DQTR",
                name: "XXL",
                ordinal: 4,
                pricingType: "FIXED_PRICING",
                priceMoney: {
                  amount: "6000n",
                  currency: "USD"
                },
                locationOverrides: [
                  {
                    locationId: "LEYW7FQW17A32",
                    trackInventory: true
                  }
                ],
                trackInventory: false,
                inventoryAlertType: "NONE",
                itemOptionValues: [
                  {
                    itemOptionId: "NZIAFXUWBUPXLETGDRVTXRPQ",
                    itemOptionValueId: "WUKDPF654QY5RBZDBFJLJ5TA"
                  }
                ],
                sellable: true,
                stockable: true
              }
            }
          ],
          productType: "REGULAR",
          skipModifierScreen: false,
          itemOptions: [
            {
              itemOptionId: "NZIAFXUWBUPXLETGDRVTXRPQ"
            }
          ],
          imageIds: [
            "FIQAQOZX5XUYKBDPXH7WCZPO",
            "YDEG3IYIPHWJA435U5IDSGRC"
          ],
          descriptionHtml: "<p>In partnership with Cascade Armory, a Bend-based biking apparel brand, we&#39;re excited to introduce our inaugural jersey! This piece is ideal for those wanting to celebrate a memorable journey with us or simply show some love for their preferred Oregon Adventure brand. This jersey combines high-quality materials and a well-considered design that suits everyday wear.</p><p><br></p><p>Straying from the conventional snug fit of typical biking jerseys, we&#39;ve chosen a looser fit that allows this jersey to be worn both on and off your bike. While it may add a smidge of drag at high speeds, we believe it aligns better with our ethos at Oregon Bicycle Adventures. And lets be honest, we&#39;re not about to set any land speed records out on our bikes, so might as well be comfortable and stylish while we take in the views. </p><p><br></p><p><strong>Features</strong></p><p>-Honeycomb ventilated side panels </p><p><br></p><p>- Dimple Jersey Mesh</p><p><br></p><p>- Clean Hidden Stitching</p><p><br></p><p>- Sublimated Graphics </p><p><br></p><p>- 1x1 Rib for Neck Opening</p>",
          descriptionPlaintext: "In partnership with Cascade Armory, a Bend-based biking apparel brand, we're excited to introduce our inaugural jersey! This piece is ideal for those wanting to celebrate a memorable journey with us or simply show some love for their preferred Oregon Adventure brand. This jersey combines high-quality materials and a well-considered design that suits everyday wear.\n\nStraying from the conventional snug fit of typical biking jerseys, we've chosen a looser fit that allows this jersey to be worn both on and off your bike. While it may add a smidge of drag at high speeds, we believe it aligns better with our ethos at Oregon Bicycle Adventures. And lets be honest, we're not about to set any land speed records out on our bikes, so might as well be comfortable and stylish while we take in the views. \n\nFeatures\n-Honeycomb ventilated side panels \n\n- Dimple Jersey Mesh\n\n- Clean Hidden Stitching\n\n- Sublimated Graphics \n\n- 1x1 Rib for Neck Opening",
          imgURL: [
            "https://items-images-production.s3.us-west-2.amazonaws.com/files/9e3e1c4da9f82a8a2b6f98f1cab9169086adaa51/original.png",
            "https://items-images-production.s3.us-west-2.amazonaws.com/files/b405e3a76ea0af7bd422b7bbeb87eae4b76f0630/original.png"
          ]
        }
      }
    ];
  }
});

// .netlify/server/entries/pages/store/_itemName_/_page.svelte.js
var page_svelte_exports = {};
__export(page_svelte_exports, {
  default: () => Page
});
var Page;
var init_page_svelte = __esm({
  ".netlify/server/entries/pages/store/_itemName_/_page.svelte.js"() {
    init_index2();
    init_store_items();
    Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { data } = $$props;
      let item;
      items.forEach((article) => {
        if (article.itemData.name == data.itemName) {
          item = article;
        }
      });
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      return `<div class="${"vh-60 hero col-12 d-flex flex-column justify-content-end"}"><div class="${"img-container"}"><div class="${"img-overlay"}"></div>
        <img class="${"hero-img img"}"${add_attribute("src", item.itemData.imgURL[0], 0)}></div>
    <div id="${"hero-tagline-container"}" class="${"d-flex justify-content-center flex-wrap p-3 pb-3 pb-md-5"}"><h1 class="${"hero-tagline col-12"}">${escape(item.itemData.name)}</h1></div></div>`;
    });
  }
});

// .netlify/server/nodes/8.js
var __exports3 = {};
__export(__exports3, {
  component: () => component3,
  fonts: () => fonts3,
  imports: () => imports3,
  index: () => index3,
  stylesheets: () => stylesheets3,
  universal: () => page_ts_exports,
  universal_id: () => universal_id
});
var index3, component3, universal_id, imports3, stylesheets3, fonts3;
var init__3 = __esm({
  ".netlify/server/nodes/8.js"() {
    init_page_ts();
    index3 = 8;
    component3 = async () => (await Promise.resolve().then(() => (init_page_svelte(), page_svelte_exports))).default;
    universal_id = "src/routes/store/[itemName]/+page.ts";
    imports3 = ["_app/immutable/nodes/8.53e09ec5.js", "_app/immutable/chunks/index.ccc3dc3a.js", "_app/immutable/chunks/store-items.01af659b.js"];
    stylesheets3 = [];
    fonts3 = [];
  }
});

// .netlify/server/entries/pages/tours/_tourName_/_page.ts.js
var page_ts_exports2 = {};
__export(page_ts_exports2, {
  csr: () => csr,
  load: () => load2,
  prerender: () => prerender2
});
var csr, load2, prerender2;
var init_page_ts2 = __esm({
  ".netlify/server/entries/pages/tours/_tourName_/_page.ts.js"() {
    csr = true;
    load2 = ({ params }) => {
      console.log("page reload", params);
      return {
        tourName: params.tourName
      };
    };
    prerender2 = false;
  }
});

// .netlify/server/chunks/tours.js
var tours;
var init_tours = __esm({
  ".netlify/server/chunks/tours.js"() {
    tours = [
      {
        id: 1,
        title: "McKenzie Pass Scenic Tour",
        nickname: "McKenzie Pass",
        featured: true,
        published: true,
        type: "Single Day",
        duration: "6 Hours",
        difficulty: "Intermediate",
        difficultyRating: 4,
        available: true,
        availabilityStart: "May 15th",
        availabilityEnd: "October 15th",
        price: "$ 75",
        ages: "12+",
        distance: "38 miles",
        miles: "38",
        elevationGain: "2,400 ft",
        ebikes: false,
        featuredIndex: 1,
        quickDetails: true,
        meetingLocation: "Sisters, OR",
        maxGroupSize: 4,
        description: [
          {
            content: `Experience the awe-inspiring beauty of McKenzie Pass on a guided bicycle tour, with a unique opportunity to ride on a road that is typically closed to motor vehicles before June 15th. Booking the trip before this date will allow you to ride without any cars, enhancing the serene atmosphere of this incredible journey. If you venture out early enough, you'll be amazed by giant snow walls on both sides of the road, formed by plows clearing the way for the summer season \u2013 a truly spectacular sight!`
          },
          {
            content: `The climb to the top is not for the faint of heart, but the reward is worth it. You'll be greeted by a lava-rock moonscape that spreads out before you for miles, a view unlike anything you've probably ever encountered on a bike ride. Along the way, you'll follow an 1860s wagon route and pass through Windy Point, where you'll get a great view of Mt. Washington and your first look at the vast, 2,000-year-old lava flow.`
          },
          {
            content: `At the summit, you'll be able to explore the lava-rock-constructed Dee Wright Observatory, which provides 360-degree views of mountains, buttes, and other topography. Don't miss out on this unforgettable experience!`
          },
          {
            content: `Water and snacks provided.`
          }
        ],
        whatsProvided: ["Tour guide to teach, motivate, and inspire you while you ride", "Water & snacks", "Picnic at the Summit", "Support vehicle with storage for personal items", "Optional bike & helmet rental", "Optional shuttle to and from Bend"],
        whatToBring: ["Comfortable, weather appropriate athletic clothes", "Phone/camera", "A sense of adventure!"],
        mettingLocation: "Bend, OR",
        importantInfo: "",
        highlights: [
          "Lava-rock moonscape",
          "Dee Wright Observatory",
          "Windy Point"
        ],
        reviews: [
          {
            name: "John Doe",
            rating: 5,
            review: "This was a great tour! The guide was very knowledgeable and friendly. I would definitely recommend this tour to anyone looking for a fun and unique experience."
          }
        ],
        pics: 8,
        picAlts: [
          "3 people with bikes posing at the summit of McKenzie Pass, sunny sky and mountain views in the background",
          "2 people posing on their bikes in front of a wall of snow next to the road",
          "Beautiful scene featuring a wooden fence, a green pasture, and the sisters mountains in the background",
          "A picture taken from behind of 3 ciclist biking up the McKenzie Pass, blue skies and tall trees loom overhead",
          "A picture of a woman biking up the McKenzie Pass, looking at the camera and giving a hang loose, with lava rock and mountains in the background",
          "A drone shot of the top of the Mckenzie pass, featuring the Dwight Observatory made of lavarock",
          "A picture taken from behind of 3 ciclist biking up the McKenzie Pass, surrounded by green, lush trees",
          "A picture taken from behind of 2 ciclist biking up the McKenzie Pass, surrounded by green trees and a blue sky"
        ],
        bannerAlt: "A picture of lavarock and mountains, with a blue sky in the background, taken from the top of the McKenzie Pass",
        meals: false,
        lodging: false,
        calendarURL: "https://fareharbor.com/embeds/script/calendar/oregonbicycleadventures/items/451357/?fallback=simple&full-items=yes&flow=928317",
        ridewithgps: `https://ridewithgps.com/embeds?type=route&id=42770639&sampleGraph=true&privacyCode=CEPHFlyV4wdGq6ag`,
        conclusion: "",
        contact: false
      },
      {
        id: 2,
        title: "Twin Bridges Scenic Tour",
        nickname: "Twin Bridges",
        featured: true,
        published: true,
        type: "Single Day",
        duration: "4 Hours",
        difficulty: "Intermediate",
        difficultyRating: 3,
        distance: "25 miles",
        miles: "25",
        elevationGain: "700 ft",
        price: "$ 65",
        ages: "12+",
        ebikes: false,
        featuredIndex: 2,
        quickDetails: true,
        meetingLocation: "Bend, OR",
        maxGroupSize: 4,
        description: [
          {
            content: `Join us on a guided bicycle tour along the Twin Bridges Scenic Bikeway, a picturesque route that encapsulates the natural beauty of Central Oregon. Starting at Drake Park, you'll pedal through the bustling city of Bend before quickly escaping into the tranquil high desert fields and rock formations. Along the way, you'll cross two bridges over the Deschutes River and pass by wetlands, ranches, and hobby farms. Keep your eyes peeled for wildlife and birds that are unique to this area. After a series of short climbs, enjoy a long glide down and back to the start.`
          },
          {
            content: `Partway through our ride, we'll take a break for a quick, yet delightful picnic, offering a chance to sample snacks that are unique to the area.`
          },
          {
            content: `With low traffic volume and bike lanes, this ride is suitable for most fitness levels, from late March through October.`
          }
        ],
        whatsProvided: ["Tour guide to teach, motivate, and inspire you while you ride", "Water & snacks", "Beer and food vouchers at the Bite in Tumalo", "Shuttle back to Bend", "Support vehicle with storage for personal items", "Optional bike & helmet rental", "Optional custom pickup and dropoff locations"],
        whatToBring: ["Comfortable, weather appropriate athletic clothes", "Wallet/ID", "Phone/camera", "A sense of adventure!"],
        pics: 4,
        picAlts: [
          "A picture taken from behind of 4 ciclists biking on a back road, about to head downhill, blue skies and green trees loom overhead",
          "2 people biking towards the camera on a two lane backroad, with south sister mountain in the background",
          '1 person taking a right hand turn on his bike towards the camera. Ranch fence and pasture in the background, with the sisters mountains behind that. A sign on the road reads "Bend 12" and "Sisters 10" in opposite directions',
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time."
        ],
        bannerAlt: "Close up of two bicyclist biking down a back road, away from the camera and towards the sisters mountains in the background",
        meals: false,
        lodging: false,
        ridewithgps: `https://ridewithgps.com/embeds?type=route&id=42761311&title=Twin%20Bridges%20Scenic%20Tour&sampleGraph=true&privacyCode=TVa5OuPX2YDtzuBy`,
        calendarURL: "https://fareharbor.com/embeds/script/calendar/oregonbicycleadventures/items/451510/?fallback=simple&full-items=yes&flow=928317",
        conclusion: "",
        contact: false
      },
      {
        id: 3,
        title: "The Essential Central Oregon Bike Tour",
        nickname: "COAT",
        featured: true,
        published: true,
        type: "Multi Day",
        duration: "4 Days",
        difficulty: "Intermediate",
        difficultyRating: 4,
        distance: "109 miles",
        miles: "109",
        elevationGain: "4,200 ft",
        ages: "18+",
        price: "$2,600",
        ebikes: false,
        featuredIndex: 3,
        quickDetails: true,
        meetingLocation: "Bend, OR",
        maxGroupSize: 8,
        activities: ["Biking (bike included)", "Hiking", "Beer tasting", "Brewery Tour", "Foot Tours"],
        description: [
          {
            content: `Get ready for an unforgettable journey through Central Oregon's most scenic landscapes. This 4-day cycling adventure has been expertly curated to ensure you experience the absolute best of Central Oregon, covering its must-see spots and hidden gems.`
          },
          { content: `From the charming streets of Bend to the stunning panoramas of Smith Rock, we've got it all covered. Savor local brews in Bend, pedal your way through the captivating Crooked River Canyon, and witness the awe-inspiring views from the summit of McKenzie Pass. You'll taste award-winning wines at Faith, Hope & Charity Vineyards, and enjoy a well-deserved celebratory meal at the historic McKenzie General Store.` },
          { content: `Don't miss out on the chance to immerse yourself in the local culture, savor local flavors, and create lifelong memories while traversing the region's diverse landscapes. This is the tour for those who want to experience Central Oregon as we believe it\u2019s best experienced - from the seat of a bicycle.` }
        ],
        whatsProvided: ["Tour guide to teach, motivate, and inspire you while you ride", "Water & snacks", "Support vehicle with storage for personal items", "Bike & helmet rental", "3 Nights in unique, locally-inspired lodging", "3 Breakfasts, 3 Lunches, 3 Dinners", "Wine tasting at Faith, Hope, and Charity Vineyards", "Brewery tour and tasting at Deschutes Brewery", "Access to all photos taken by our photographer", "Complimentary OBA Jersey and water bottle"],
        whatToBring: ["Comfortable, weather appropriate athletic clothes for 4 days", "Swimsuit", "Phone/camera", "A sense of adventure!"],
        pics: 13,
        picAlts: [
          "A picture taken from behind of 4 ciclists biking on a back road, about to head downhill, blue skies and green trees loom overhead",
          "2 people biking towards the camera on a two lane backroad, with south sister mountain in the background",
          '1 person taking a right hand turn on his bike towards the camera. Ranch fence and pasture in the background, with the sisters mountains behind that. A sign on the road reads "Bend 12" and "Sisters 10" in opposite directions',
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time.",
          "5 people pose on the back of a truck, with bikes in the back. They are all smiling and appear to be having a great time."
        ],
        meals: true,
        lodging: true,
        bannerAlt: "Smith rock, with a red path winding in the foreground, and the river and jagged rocks in the background",
        calendarURL: "https://fareharbor.com/embeds/script/calendar/oregonbicycleadventures/items/460994/?fallback=simple&full-items=yes&flow=no",
        bookBtnURL: "https://fareharbor.com/embeds/book/oregonbicycleadventures/items/460994/?full-items=yes&flow=no",
        ridewithgps: `https://ridewithgps.com/embeds?type=route&id=42716795&sampleGraph=true&privacyCode=FQBtdqGEu1IyLSSp`,
        conclusion: "",
        contact: false,
        notes: "https://ridewithgps.com/embeds?type=route&id=42716795&sampleGraph=true&privacyCode=FQBtdqGEu1IyLSSp",
        itinerary: [
          {
            day: "1",
            title: "Bend meet and greet, Ride the River Trail, and tour brewery",
            description: [
              `Welcome to the vibrant town of Bend! We're about to kick off our adventure with an optional spin around downtown and along the scenic river trail. Next, we'll cycle to the renowned Deschutes Brewery, a pillar of Bend's thriving beer culture since the late '80s. There, we'll get a sneak peek into their brewing magic, followed by a taste of their renowned brews. Our journey carries on at Deschutes Public House, where a dinner inspired by the art of brewing is set up for us. We wrap up the day at the quirky McMenamins Old St. Francis School. This revamped 1936 schoolhouse-turned-hotel is a trove of charm, with art commemorating its history and a relaxing soaking pool. We're all set to dive into local culture, tastes, and tales together - the perfect launch pad for our thrilling adventure ahead.`
            ],
            meals: ["Dinner"],
            lodging: "McMenamins Old St. Francis School",
            activities: "Brewery Tour",
            miles: "Optional 8",
            elevationGain: "0 ft",
            elevationLoss: "0 ft",
            ridewithgps: "",
            pics: 0
          },
          {
            day: "2",
            title: "Crooked River Scenic Ride to Smith Rock",
            description: [
              `Our first official day of biking gets underway on the captivating Crooked River Scenic Bikeway. We're riding through the timeless beauty of narrow, basalt canyons, reminiscent of the old Oregon Trail days. Our backdrop? The grandeur of the Cascade Mountains, peaceful rivers, and expansive high-desert pastureland on our journey to Smith Rock.`,
              `Our mid-point sees us dropping by Prineville for a bite at the legendary Tastee Treet. A go-to spot for delicious burgers, homemade fries, and retro shakes, it's been winning over locals for more than half a century.`,
              `Refueled, we press on to Smith Rock, celebrated as the birthplace of U.S. sport rock-climbing and one of Oregon's Seven Wonders. There's an optional hike to the top on offer - brace for awe-inspiring views and a light picnic at the summit. Be on the lookout for golden eagles and river otters!`,
              `We'll cap off the day with dinner at Terrebonne Depot before heading to Smith Rock Resort. Our night's rest is in unique yurt-style rooms with grand views of the Crooked River canyons.`
            ],
            meals: ["Breakfast", "Lunch", "Dinner"],
            lodging: "Smith Rock Resort",
            activities: "Smith Rock Hike",
            miles: "38",
            elevationGain: "748 ft",
            elevationLoss: "1,187 ft",
            ridewithgps: "",
            pics: 0
          },
          {
            day: "3",
            title: "Smith Rock to Sisters",
            description: [
              `Day three sees us riding the Sisters to Smith Rock Scenic Bikeway in reverse. Our ride will whisk us past historic landmarks, follow the curves of the Deschutes River, and offer spectacular vistas of the Cascade Mountains. The route unfolds through tranquil forests, fertile valleys, and charming riverside paths.`,
              `Around the mid-point of our journey, we'll pause for a well-deserved lunch break at Faith Hope & Charity Vineyards. Surrounded by the captivating Central Oregon landscape, we'll savor a delicious meal and partake in a spot of wine tasting.`,
              `Once our cycling adventure concludes, you'll have free rein to explore downtown Sisters. This 1880's western-themed town is a haven of unique boutiques, vibrant galleries, and a rich local culture waiting to be discovered.`,
              `At the end of the day, we'll retreat to the comfort and luxury of the FivePine Lodge & Spa. Combining the warmth of a bed and breakfast, the privacy of secluded cabins, and all the amenities of a high-end resort, it's the perfect way to round off an exhilarating day.`
            ],
            meals: ["Breakfast", "Lunch", "Dinner"],
            lodging: "FivePine Lodge and Spa",
            activities: "Sisters Walking Tour & Shopping",
            miles: "33",
            elevationGain: "1,236 ft",
            elevationLoss: "891 ft",
            ridewithgps: "",
            pics: 0
          },
          {
            day: "4",
            title: "McKenzie Pass Scenic Ride and Hot Spring ",
            description: [
              `Day four kicks off at Sisters Coffee Company, a local treasure that has been brewing up a storm since 1989. We'll warm up with their expertly crafted coffee and a wholesome breakfast to fuel the day ahead.`,
              `Next up is the ride along McKenzie Pass Scenic Bikeway, an iconic route showcasing Oregon's stunning geological beauty and breathtaking landscapes. The climb to the top is an exhilarating challenge, but reaching the summit to the Dee Wright Observatory, with sweeping views of mountains, buttes, and the path we've traversed, is the perfect reward.`,
              `We wrap up the day, and our trip, at the historic McKenzie General Store. Established in 1932, it's a spot that seamlessly blends history, local allure, and delightful food. Over a celebratory lunch, we'll look back on our adventure, cherishing the memories of our extraordinary four-day journey.`
            ],
            meals: ["Breakfast", "Lunch", "Dinner"],
            lodging: "",
            activities: "Sisters Walking Tour & Shopping",
            miles: "38",
            elevationGain: "2,367 ft",
            elevationLoss: "3,876 ft",
            ridewithgps: "",
            pics: 0
          }
        ]
      },
      {
        id: 5,
        title: "Madras Mountain Views Tour",
        nickname: "Madras",
        featured: false,
        published: false,
        type: "Single Day",
        duration: "Half Day",
        difficulty: "Intermediate",
        difficultyRating: 3,
        distance: "29 miles",
        miles: "29",
        elevationGain: "1,000 ft",
        ages: "12+",
        price: "$ 75",
        ebikes: false,
        featuredIndex: 4,
        quickDetails: true,
        meetingLocation: "Madras, OR",
        maxGroupSize: 4,
        description: [
          {
            content: `Join us at Oregon Bicycle Adventures for an unforgettable 29-mile bike tour through the heart of Central Oregon's scenic landscapes. From the lively town of Madras, pedal your way through serene ranch lands, brushing the stunning rim of Lake Billy Chinook, while the majestic snowy peaks of the Cascade Range paint a beautiful backdrop. Encounter playful goats, munching horses, and bask in the delightful scent of fresh crops. At the midpoint, we'll pause in the quaint town of Culver for a delicious picnic amidst this idyllic rural setting. Refreshed, continue to The Cove Palisades State Park, where the high-desert and deep canyon vistas are simply breathtaking. An optional detour at mile 20 leads to Round Butte Overlook Park, a great spot for birdwatching. The tour wraps up with a tranquil downhill glide back into Madras, completing a day full of charming Oregonian vistas and memories.`
          }
        ],
        whatsProvided: ["Bike", "Helmet", "Water", "Picnic", "Shuttle from Bend", "Support vehicle", "Storage for personal items"],
        whatToBring: ["Comfortable, weather appropriate athletic clothes", "Phone/camera", "A sense of adventure!"],
        pics: 0,
        meals: false,
        lodging: false,
        bannerAlt: "",
        ridewithgps: `https://ridewithgps.com/embeds?type=route&id=42761311&title=Twin%20Bridges%20Scenic%20Tour&sampleGraph=true&privacyCode=TVa5OuPX2YDtzuBy`,
        calendarURL: "https://fareharbor.com/embeds/script/calendar/oregonbicycleadventures/items/451510/?fallback=simple&full-items=yes&flow=928317",
        conclusion: "",
        contact: false
      },
      {
        id: 4,
        title: "Custom Bicycle Tour",
        nickname: "Custom Tour",
        featured: false,
        published: true,
        featuredIndex: 3,
        type: "",
        duration: "",
        difficulty: "",
        difficultyRating: "",
        distance: "",
        miles: "",
        elevationGain: "",
        ages: "",
        price: "",
        ebikes: false,
        quickDetails: false,
        meetingLocation: "",
        maxGroupSize: "",
        description: [
          {
            content: `Discover the beauty of the Pacific Northwest on a one-of-a-kind, personalized bicycle adventure with Oregon Bicycle Adventures. Our Custom Private Bike Tour offers you the ultimate cycling experience, tailored to your unique interests, preferences, and fitness level. Simply tell us about your dream cycling tour, and we will handle all the planning and logistics to create a memorable trip just for you.`
          },
          {
            content: `From the rugged coastline to the Cascade Mountains, Oregon is home to diverse landscapes, charming towns, and a wealth of outdoor activities. Whether you're interested in a tailored day trip to explore Oregon's natural wonders such as Crater Lake and Smith Rock, or you're ready to take on an epic journey across the state, we accommodate all sizes and types of adventures to suit your desires.`
          }
        ],
        whatsProvided: ["A pre-tour consultation to discuss your preferences, interests, and desired trip duration", "Customized route planning, tailored to your preferred difficulty and distance", "Professional and knowledgeable local guides to lead your tour and provide insider insights", "Premium bike rental, including road, gravel, or mountain bikes", "Support vehicle to carry your belongings and provide on-route assistance if needed", "Carefully selected accommodations, from cozy B&Bs to luxurious boutique hotels", "Delicious, locally sourced meals to fuel your adventure", "Optional activities and experiences based on your interests, such as wine tastings, white water rafting, or guided hikes"],
        whatToBring: "",
        mettingLocation: "",
        importantInfo: "",
        highlights: [
          "Lava-rock moonscape",
          "Dee Wright Observatory",
          "Windy Point"
        ],
        reviews: [
          {
            name: "John Doe",
            rating: 5,
            review: "This was a great tour! The guide was very knowledgeable and friendly. I would definitely recommend this tour to anyone looking for a fun and unique experience."
          }
        ],
        pics: 0,
        meals: false,
        lodging: false,
        bannerAlt: "A cyclist with panniers rides on a scenic road with trees to his right, and a winding river to his left",
        calendarURL: "",
        ridewithgps: ``,
        conclusion: "To start planning your Custom Private Bike Tour with Oregon Bicycle Adventures, please contact us through our contact form or give us a call at (503) 949-8766. Our team is excited to help you create an unforgettable cycling experience in the breathtaking Pacific Northwest!",
        contact: true
      },
      {
        id: 6,
        title: "Custom Shuttle Ride",
        nickname: "Shuttle",
        featured: false,
        published: true,
        type: "Single Day",
        duration: "",
        difficulty: "",
        difficultyRating: "",
        distance: "",
        miles: "",
        elevationGain: "",
        ages: "12+",
        price: "Starting at $ 20 per person",
        ebikes: false,
        featuredIndex: 4,
        quickDetails: false,
        meetingLocation: "Bend, OR",
        maxGroupSize: 4,
        description: [
          {
            content: `With years of experience exploring the diverse trails around Bend, we at Oregon Bicycle Adventures are excited to introduce our new shuttle service for mountain bikers. Whether you're a seasoned rider or a newcomer, we curate tailored routes to match your skill level and interests, ensuring you make the most of your time in Bend. Leave the planning and logistics to us as we provide guidance, transportation, and gear for you to Bend's legendary trails.`
          }
        ],
        whatsProvided: [
          "Round-trip transportation from your Bend location to the trailhead and back.",
          "Curated route planning based on your skill and comfort level, leveraging our years of trail-riding experience in Bend.",
          "Careful handling and transportation of your bike.",
          "Optional bike and helmet rentals available at an additional cost.",
          "Complimentary water and light refreshments for your journey.",
          "Tailored route planning based on your skill and comfort level, leveraging our years of trail-riding experience in Bend.",
          "Trail maps and detailed guidance on the selected routes.",
          "Basic first-aid kit for safety on the trails.",
          "Emergency support, should any issues arise during your ride."
        ],
        whatToBring: [
          "Your mountain bike, helmet, and a basic repair kit (if not renting)",
          "Water and snacks",
          "Comfortable, weather appropriate athletic clothes",
          "Phone/camera",
          "A sense of adventure!"
        ],
        pics: 0,
        meals: false,
        lodging: false,
        bannerAlt: "Close up of mountain bikes on a tailgate, with trees and the rising sun in the background.",
        ridewithgps: ``,
        calendarURL: "",
        conclusion: "",
        contact: false
      }
    ];
  }
});

// .netlify/server/chunks/splide.min.js
function slice(arrayLike, start, end) {
  return Array.prototype.slice.call(arrayLike, start, end);
}
function apply(func) {
  return func.bind.apply(func, [null].concat(slice(arguments, 1)));
}
function typeOf(type, subject) {
  return typeof subject === type;
}
var init_splide_min = __esm({
  ".netlify/server/chunks/splide.min.js"() {
    apply(typeOf, "function");
    apply(typeOf, "string");
    apply(typeOf, "undefined");
  }
});

// .netlify/server/chunks/SplideSlide.js
function classNames(...classes) {
  return classes.filter(Boolean).join(" ");
}
function forOwn(object, iteratee) {
  if (object) {
    const keys = Object.keys(object);
    for (let i = 0; i < keys.length; i++) {
      const key2 = keys[i];
      if (key2 !== "__proto__") {
        if (iteratee(object[key2], key2) === false) {
          break;
        }
      }
    }
  }
  return object;
}
function isObject(subject) {
  return subject !== null && typeof subject === "object";
}
function isEqualDeep(subject1, subject2) {
  if (Array.isArray(subject1) && Array.isArray(subject2)) {
    return subject1.length === subject2.length && !subject1.some((elm, index5) => !isEqualDeep(elm, subject2[index5]));
  }
  if (isObject(subject1) && isObject(subject2)) {
    const keys1 = Object.keys(subject1);
    const keys2 = Object.keys(subject2);
    return keys1.length === keys2.length && !keys1.some((key2) => {
      return !Object.prototype.hasOwnProperty.call(subject2, key2) || !isEqualDeep(subject1[key2], subject2[key2]);
    });
  }
  return subject1 === subject2;
}
function merge(object, source) {
  const merged = object;
  forOwn(source, (value, key2) => {
    if (Array.isArray(value)) {
      merged[key2] = value.slice();
    } else if (isObject(value)) {
      merged[key2] = merge(isObject(merged[key2]) ? merged[key2] : {}, value);
    } else {
      merged[key2] = value;
    }
  });
  return merged;
}
var Splide_1, SplideTrack, SplideSlide;
var init_SplideSlide = __esm({
  ".netlify/server/chunks/SplideSlide.js"() {
    init_index2();
    init_splide_min();
    Splide_1 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["class", "options", "splide", "extensions", "transition", "hasTrack", "go", "sync"]);
      let { class: className = void 0 } = $$props;
      let { options: options2 = {} } = $$props;
      let { splide = void 0 } = $$props;
      let { extensions = void 0 } = $$props;
      let { transition = void 0 } = $$props;
      let { hasTrack = true } = $$props;
      createEventDispatcher();
      let root;
      let prevOptions = merge({}, options2);
      function go(control) {
        splide?.go(control);
      }
      function sync(target) {
        splide?.sync(target);
      }
      if ($$props.class === void 0 && $$bindings.class && className !== void 0)
        $$bindings.class(className);
      if ($$props.options === void 0 && $$bindings.options && options2 !== void 0)
        $$bindings.options(options2);
      if ($$props.splide === void 0 && $$bindings.splide && splide !== void 0)
        $$bindings.splide(splide);
      if ($$props.extensions === void 0 && $$bindings.extensions && extensions !== void 0)
        $$bindings.extensions(extensions);
      if ($$props.transition === void 0 && $$bindings.transition && transition !== void 0)
        $$bindings.transition(transition);
      if ($$props.hasTrack === void 0 && $$bindings.hasTrack && hasTrack !== void 0)
        $$bindings.hasTrack(hasTrack);
      if ($$props.go === void 0 && $$bindings.go && go !== void 0)
        $$bindings.go(go);
      if ($$props.sync === void 0 && $$bindings.sync && sync !== void 0)
        $$bindings.sync(sync);
      {
        if (splide && !isEqualDeep(prevOptions, options2)) {
          splide.options = options2;
          prevOptions = merge({}, prevOptions);
        }
      }
      return `

<div${spread([
        {
          class: escape_attribute_value(classNames("splide", className))
        },
        escape_object($$restProps)
      ], {})}${add_attribute("this", root, 0)}>${hasTrack ? `${validate_component(SplideTrack, "SplideTrack").$$render($$result, {}, {}, {
        default: () => {
          return `${slots.default ? slots.default({}) : ``}`;
        }
      })}` : `${slots.default ? slots.default({}) : ``}`}</div>`;
    });
    SplideTrack = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["class"]);
      let { class: className = void 0 } = $$props;
      if ($$props.class === void 0 && $$bindings.class && className !== void 0)
        $$bindings.class(className);
      return `<div${spread([
        {
          class: escape_attribute_value(classNames("splide__track", className))
        },
        escape_object($$restProps)
      ], {})}><ul class="${"splide__list"}">${slots.default ? slots.default({}) : ``}</ul></div>`;
    });
    SplideSlide = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let $$restProps = compute_rest_props($$props, ["class"]);
      let { class: className = void 0 } = $$props;
      if ($$props.class === void 0 && $$bindings.class && className !== void 0)
        $$bindings.class(className);
      return `<li${spread([
        {
          class: escape_attribute_value(classNames("splide__slide", className))
        },
        escape_object($$restProps)
      ], {})}>${slots.default ? slots.default({}) : ``}</li>`;
    });
  }
});

// .netlify/server/chunks/ContactCard.js
var css2, ContactCard;
var init_ContactCard = __esm({
  ".netlify/server/chunks/ContactCard.js"() {
    init_index2();
    css2 = {
      code: "ul.svelte-1f9ydaj{list-style:none}#submissionForm.svelte-1f9ydaj{max-width:600px}#submissionForm.svelte-1f9ydaj{margin-bottom:25px}.fields.svelte-1f9ydaj{width:100%}.field.svelte-1f9ydaj{padding:10px 5px;width:100%}#name.svelte-1f9ydaj{width:100%}#tel.svelte-1f9ydaj,#email.svelte-1f9ydaj{width:100%}#telContainer.svelte-1f9ydaj,#emailContainer.svelte-1f9ydaj{width:50%}#message.svelte-1f9ydaj{width:100%}input.svelte-1f9ydaj{width:100%;flex-grow:2;line-height:1.5rem}",
      map: null
    };
    ContactCard = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      $$result.css.add(css2);
      return `<form id="${"submissionForm"}" class="${"d-flex justify-content-center flex-wrap col-12 mb-0 svelte-1f9ydaj"}" name="${"netlify-form-example"}" method="${"POST"}" netlify-honeypot="${"bot-field"}" data-netlify="${"true"}"><input type="${"hidden"}" name="${"form-name"}" value="${"netlify-form-example"}" class="${"svelte-1f9ydaj"}">
    <div class="${"fields d-flex justify-content-center flex-wrap svelte-1f9ydaj"}"><div class="${"field col-12 svelte-1f9ydaj"}"><label for="${"name"}">Name</label>
            <input type="${"text"}" name="${"name"}" id="${"name"}" required class="${"svelte-1f9ydaj"}"></div>
        <div id="${"emailContainer"}" class="${"field col-6 svelte-1f9ydaj"}"><label for="${"email"}">Email</label><br>
            <input type="${"text"}" name="${"email"}" id="${"email"}" required class="${"svelte-1f9ydaj"}"></div>
        <div id="${"telContainer"}" class="${"field col-6 svelte-1f9ydaj"}"><label for="${"tel"}">Phone Number</label><br>
            <input type="${"tel"}" name="${"tel"}" id="${"tel"}" class="${"svelte-1f9ydaj"}"></div>
        <div class="${"field svelte-1f9ydaj"}"><label for="${"message"}">Message</label>
            <textarea name="${"message"}" id="${"message"}" rows="${"5"}" class="${"svelte-1f9ydaj"}"></textarea></div></div>
    <ul class="${"actions col-12 d-flex justify-content-center px-0 svelte-1f9ydaj"}"><li><input type="${"submit"}" value="${"Submit"}" class="${"col-12 svelte-1f9ydaj"}" id="${"submitbtn"}"></li></ul>
</form>`;
    });
  }
});

// .netlify/server/entries/pages/tours/_tourName_/_page.svelte.js
var page_svelte_exports2 = {};
__export(page_svelte_exports2, {
  default: () => Page2
});
var css$3, Calendar, css$22, TourImg, css$12, DetailItem, css3, Page2;
var init_page_svelte2 = __esm({
  ".netlify/server/entries/pages/tours/_tourName_/_page.svelte.js"() {
    init_index2();
    init_tours();
    init_SplideSlide();
    init_splide_min();
    init_ContactCard();
    css$3 = {
      code: "iframe.svelte-13nqlle{width:100%;height:400px;border:none;overflow:hidden;transition:all 0.5s ease-in-out}",
      map: null
    };
    Calendar = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { url } = $$props;
      let frame;
      if ($$props.url === void 0 && $$bindings.url && url !== void 0)
        $$bindings.url(url);
      $$result.css.add(css$3);
      return `


<iframe id="${"idIframe"}" src="${"about:blank"}" class="${"svelte-13nqlle"}"${add_attribute("this", frame, 0)}></iframe>`;
    });
    css$22 = {
      code: ".tour-pic.svelte-13g29sm img.svelte-13g29sm{width:100%;aspect-ratio:3/2;max-height:80vh;object-fit:cover;object-position:center}",
      map: null
    };
    TourImg = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { tour } = $$props;
      let { picIndex } = $$props;
      let imgSrc;
      function renderPicture(listing) {
        imgSrc = `../../img/tours/${tour.id}. ${tour.nickname}/tour${tour.id}-${picIndex}.jpg`;
        return imgSrc;
      }
      if ($$props.tour === void 0 && $$bindings.tour && tour !== void 0)
        $$bindings.tour(tour);
      if ($$props.picIndex === void 0 && $$bindings.picIndex && picIndex !== void 0)
        $$bindings.picIndex(picIndex);
      $$result.css.add(css$22);
      return `<div class="${"tour-pic d-flex align-items-center svelte-13g29sm"}"><img${add_attribute("src", renderPicture(), 0)} class="${" svelte-13g29sm"}"${add_attribute("alt", tour.picAlts[picIndex], 0)}>
</div>`;
    });
    css$12 = {
      code: "ul.svelte-12elz8n.svelte-12elz8n{padding-left:0}p.svelte-12elz8n.svelte-12elz8n{margin:0;padding:0;width:fit-content}button.svelte-12elz8n.svelte-12elz8n{background-color:var(--color-primary)}button.svelte-12elz8n.svelte-12elz8n{border:none;line-height:100%;margin:auto;color:white;cursor:pointer;margin:0;padding-bottom:0.5em;padding-top:0.5em\r\n	}svg.svelte-12elz8n.svelte-12elz8n{transition:transform 0.2s ease-in}@media(min-width: 768px){button.svelte-12elz8n.svelte-12elz8n,ul.svelte-12elz8n.svelte-12elz8n,p.svelte-12elz8n.svelte-12elz8n,svg.svelte-12elz8n.svelte-12elz8n{display:none}}[aria-expanded=true].svelte-12elz8n svg.svelte-12elz8n{transform:rotate(0.25turn)}",
      map: null
    };
    DetailItem = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { itinerary } = $$props;
      let isOpen = false;
      if ($$props.itinerary === void 0 && $$bindings.itinerary && itinerary !== void 0)
        $$bindings.itinerary(itinerary);
      $$result.css.add(css$12);
      return `<button${add_attribute("aria-expanded", isOpen, 0)} class="${"d-flex justify-content-center align-items-center d-md-none svelte-12elz8n"}"><svg style="${"tran"}" width="${"20"}" height="${"20"}" fill="${"none"}" stroke-linecap="${"round"}" stroke-linejoin="${"round"}" stroke-width="${"2"}" viewBox="${"0 0 24 24"}" stroke="${"currentColor"}" class="${"svelte-12elz8n"}"><path d="${"M9 5l7 7-7 7"}"></path></svg> <p class="${"svelte-12elz8n"}">Details</p></button>
${``}`;
    });
    css3 = {
      code: "@media(min-width: 1400px){#tour-content-container.svelte-skxk20.svelte-skxk20{max-width:83vw !important}}.ls-none.svelte-skxk20.svelte-skxk20{list-style:none}.btn.svelte-skxk20.svelte-skxk20{background-color:var(--color-primary);color:var(--color-light);width:fit-content}.back-to.svelte-skxk20.svelte-skxk20{text-decoration:none}#quick-details-container.svelte-skxk20 h3.svelte-skxk20{color:white}#quick-details-container.svelte-skxk20 li.svelte-skxk20{padding:0.7rem;background-color:var(--color-background-light);margin:0.5rem}#quick-details-container.svelte-skxk20 ul.svelte-skxk20{list-style:none}#quick-details-container.svelte-skxk20.svelte-skxk20{height:fit-content;background-color:var(--color-primary)}#quick-details-container.svelte-skxk20 .svelte-skxk20{color:white}#calendar-aside.svelte-skxk20>div.svelte-skxk20{border-radius:6px;box-shadow:4px 4px 4px 4px rgba(0, 0, 0, 0.2);background-color:white;overflow:hidden}#aside-topsection.svelte-skxk20>img.svelte-skxk20{aspect-ratio:3/2}#aside-topsection.svelte-skxk20>img.svelte-skxk20{object-fit:cover;overflow:hidden}aside.svelte-skxk20.svelte-skxk20{height:500px}aside.svelte-skxk20.svelte-skxk20{position:relative;top:-20vh;margin:20px;padding-right:4vw !important;padding-left:0}a.svelte-skxk20.svelte-skxk20{color:black}@media(max-width: 992px){aside.svelte-skxk20.svelte-skxk20{top:0;padding-right:0}#calendar-aside.svelte-skxk20>div.svelte-skxk20{box-shadow:none}}",
      map: null
    };
    Page2 = create_ssr_component(($$result, $$props, $$bindings, slots) => {
      let { data } = $$props;
      let tour;
      tours.forEach((item) => {
        if (item.title == data.tourName) {
          tour = item;
          console.log(tour);
        }
      });
      let url = tour.calendarURL;
      let imgSrcCover = `../../img/tours/${tour.id}. ${tour.nickname}/tour${tour.id}-cover.jpg`;
      if ($$props.data === void 0 && $$bindings.data && data !== void 0)
        $$bindings.data(data);
      $$result.css.add(css3);
      return `<section class="${"d-flex justify-content-center flex-wrap"}"><div id="${""}" class="${"vh-60 hero col-12 d-flex flex-column justify-content-end"}"><div class="${"img-container"}"><div class="${"img-overlay"}"></div>
            <img${add_attribute("src", imgSrcCover, 0)}${add_attribute("alt", tour.coverAlt, 0)} class="${"hero-img img"}"></div>
        


        <div id="${"hero-tagline-container"}" class="${"d-flex justify-content-start flex-wrap p-3 pb-3 pb-md-5"}"><h1 class="${"hero-tagline font-logo col-12 col-lg-8 text-left text-md-center"}">${escape(tour.title)}</h1></div></div>
    <div id="${"tour-content-container"}" class="${"d-flex align-items-start flex-wrap col-12 px-0 col-xxl-10 svelte-skxk20"}"><div id="${"tour-info-container"}" class="${"col-12 col-md-7 col-lg-8 d-flex flex-wrap justify-content-center content-container text-start center m-0 mb-5 px-lg-5 pt-3 svelte-skxk20"}">
            ${tour.quickDetails ? `<div id="${"quick-details-container"}" class="${"col-10 d-fex justify-content-start flex-wrap p-3 mb-3 svelte-skxk20"}"><h3 class="${"font-logo svelte-skxk20"}">Quick Details</h3>
                <ul class="${"d-flex justify-content-start mb-1 flex-wrap col-12 svelte-skxk20"}"><li class="${"svelte-skxk20"}">Price: ${escape(tour.price)}</li>
                    <li class="${"svelte-skxk20"}">Duration: ${escape(tour.duration)}</li>
                    <li class="${"svelte-skxk20"}">Distance: ${escape(tour.distance)}</li>
                    
                    <li class="${"svelte-skxk20"}">Level: ${escape(tour.difficulty)}</li>
                    <li class="${"svelte-skxk20"}">Ages: ${escape(tour.ages)}</li>
                    <li class="${"svelte-skxk20"}">Location: ${escape(tour.meetingLocation)}</li>
                    <li class="${"svelte-skxk20"}">Max Group Size: ${escape(tour.maxGroupSize)}</li>
                    </ul></div>
            <div class="${"tour-divider col-12 mb-5 mt-3"}"></div>` : ``}
            
            <div class="${"col-12 d-flex justify-content-start flex-wrap px-3"}"><h3 class="${"font-logo text-left"}">Description</h3>
                ${each(tour.description, (paragraph) => {
        return `<p class="${"col-12 text-left px-0 my-3 blog-text"}">${escape(paragraph.content)}</p>`;
      })}</div>

            <div class="${"tour-divider col-12 mb-5 mt-3"}"></div>

            ${tour.ridewithgps ? `<div class="${"col-12 d-flex justify-content-start flex-wrap px-3"}"><iframe class="${"my-3"}"${add_attribute("src", tour.ridewithgps, 0)} style="${"width: 1px; min-width: 100%; height: 700px; border: none;"}" scrolling="${"no"}"></iframe></div>
            <div class="${"tour-divider col-12 mb-5 mt-3"}"></div>` : ``}


            ${tour.pics > 0 ? `<div class="${"col-12 px-3"}"><h3 class="${"font-logo text-left"}">Pictures</h3>
                ${validate_component(Splide_1, "Splide").$$render($$result, {
        "aria-label": "",
        class: "z-reset",
        hasTrack: false,
        options: {
          type: "loop",
          perPage: 2,
          breakpoints: {
            768: { perPage: 1.5 },
            576: { perPage: 1 }
          },
          focus: "center",
          drag: "free",
          snap: true
        }
      }, {}, {
        default: () => {
          return `${validate_component(SplideTrack, "SplideTrack").$$render($$result, {}, {}, {
            default: () => {
              return `${each(Array(tour.pics), (pic, i) => {
                return `${validate_component(SplideSlide, "SplideSlide").$$render($$result, { class: "mb-5 mt-0 mr-3" }, {}, {
                  default: () => {
                    return `${validate_component(TourImg, "TourImg").$$render($$result, { tour, picIndex: i }, {}, {})}
                            
                            
                        `;
                  }
                })}`;
              })}`;
            }
          })}
                    <div class="${"splide__arrows"}"><button class="${"splide__arrow splide__arrow--prev"}"><i class="${"fa-solid fa-caret-left"}"></i></button>
                        <button class="${"splide__arrow splide__arrow--next"}"><i class="${"fa-solid fa-caret-right"}"></i></button></div>`;
        }
      })}</div>
            <div class="${"tour-divider col-12 mb-5 mt-3"}"></div>` : ``}

            ${tour.itinerary ? `<div class="${"col-12 d-flex justify-content-start flex-wrap px-3"}"><h3 class="${"font-logo text-left"}">Itinerary</h3>
                ${each(tour.itinerary, (itinerary) => {
        return `<div class="${"col-12 d-flex flex-wrap"}"><h3 class="${"text-left px-0 my-3 col-12"}">Day ${escape(itinerary.day)} - ${escape(itinerary.title)}</h3>
                    <div class="${"tour-divider mb-3 col-12 d-none d-md-inline"}"></div>
                    <div class="${"col-12 col-xl-3 d-flex flex-xl-column justify-content-start flex-wrap bg-light mb-3 mb-xl-3 pt-3"}">
                            <div class="${"px-1 px-sm-3 col-6 col-xl-auto bg-light"}"><p class="${"text-left px-0 fw-bold"}">Meals Provided</p>
                                <ul class="${"pl-3"}">${each(itinerary.meals, (meal) => {
          return `<li class="${"ls-none svelte-skxk20"}">${escape(meal)}</li>`;
        })}
                                </ul></div>
                            <div class="${"px-1 px-sm-3 col-6 col-xl-auto bg-light"}"><p class="${"text-left px-0 fw-bold"}">Lodging</p>
                                <p class="${"text-left px-3"}">${escape(itinerary.lodging)}</p></div>
                            <div class="${"px-1 px-sm-3 col-6 col-xl-auto bg-light"}"><p class="${"text-left px-0 fw-bold"}">Distance</p>
                                <p class="${"text-left px-3"}">${escape(itinerary.miles)} miles</p></div>
                            <div class="${"px-1 px-sm-3 col-6 col-xl-auto bg-light"}"><p class="${"text-left px-0 fw-bold"}">Elevation Gain/Loss</p>
                                <p class="${"text-left px-3"}">+${escape(itinerary.elevationGain)}/-${escape(itinerary.elevationLoss)}</p>
                            </div></div>
                        <div class="${"col-12 col-xl-9 d-flex flex-column justify-content-start mb-3 px-0 px-xl-4"}">
                            ${each(itinerary.description, (paragraph) => {
          return `<p class="${"text-left px-0 d-none d-md-inline"}">${escape(paragraph)}</p>`;
        })}
                            ${validate_component(DetailItem, "DetailItem").$$render($$result, { itinerary }, {}, {})} 
                        </div></div>
                    ${itinerary.day != tour.itinerary.length ? `<div class="${"tour-divider mb-3 col-12 d-inline d-md-none"}"></div>` : ``}`;
      })}</div>
            <div class="${"tour-divider col-12 mb-5 mt-3"}"></div>` : ``}
            

            
           
            
            ${tour.whatsProvided ? `<div class="${"col-12 d-flex justify-content-start flex-wrap px-3"}"><h3 class="${"font-logo text-left"}">What&#39;s included</h3>
                <ul class="${"col-12 mx-3"}">${each(tour.whatsProvided, (item) => {
        return `<li class="${"col-12 text-left px-0 my-3 blog-text"}">${escape(item)}</li>`;
      })}</ul></div>
            <div class="${"tour-divider col-12 mb-5 mt-3"}"></div>` : ``}
            
            ${tour.whatToBring ? `<div class="${"col-12 d-flex justify-content-start flex-wrap px-3"}"><h3 class="${"font-logo text-left"}">What to bring</h3>
                    <ul class="${"col-12 mx-3"}">${each(tour.whatToBring, (item) => {
        return `<li class="${"col-12 text-left px-0 my-3 blog-text"}">${escape(item)}</li>`;
      })}</ul></div>` : ``}
            

            ${tour.conclusion ? `<div class="${"col-12 d-flex justify-content-start flex-wrap px-3"}"><p class="${"col-12 text-left px-0 my-3 blog-text"}">${escape(tour.conclusion)}</p></div>` : ``}</div> 
        
        
        <aside id="${"calendar-aside"}" class="${"col-md-5 col-lg-4 m-0 p-3 p-lg-0 svelte-skxk20"}">${tour.calendarURL ? `<div class="${"px-0 mx-0 col-12 d-flex flex-wrap svelte-skxk20"}"><div id="${"aside-topsection"}" class="${"col-12 mx-0 px-0 order-2 order-md-1 svelte-skxk20"}"><img src="${"../../img/tour1-cover.jpg"}" alt="${"calendar"}" class="${"col-12 px-0 d-none d-md-inline svelte-skxk20"}"></div>
                <div id="${"aside-bottomsection"}" class="${"col-12 mx-0 px-0 order-1 order-md-2 svelte-skxk20"}">${validate_component(Calendar, "Calendar").$$render($$result, { url }, {}, {})}</div></div>` : `<div class="${"px-0 mx-0 col-12 d-flex flex-wrap svelte-skxk20"}"><div id="${""}" class="${"col-12 mx-0 p-3 order-2 order-md-1"}"><h3 class="${"font-logo text-left"}">Contact To Book</h3>
                    <div class="${"tour-divider col-12 mb-3 mt-3"}"></div>
                    <div class="${"col-12 d-flex justify-content-center my-3"}">${validate_component(ContactCard, "ContactCard").$$render($$result, {}, {}, {})}</div></div></div>`}</aside></div>
    
    <div class="${"col-12 d-flex justify-content-center mb-5"}"><a${add_attribute("href", tour.bookBtnURL, 0)} class="${"svelte-skxk20"}"><button class="${"btn btn-primary svelte-skxk20"}">Book now</button></a></div>  


    <div class="${"col-12 px-1 px-sm-3 px-lg-5 d-flex justify-content-start"}"><a href="${"/tours"}" class="${"back-to svelte-skxk20"}"><div class="${"py-3 px-3 mb-5"}">&lt;- Back to all tours</div></a></div>
    
    </section>
 

 `;
    });
  }
});

// .netlify/server/nodes/10.js
var __exports4 = {};
__export(__exports4, {
  component: () => component4,
  fonts: () => fonts4,
  imports: () => imports4,
  index: () => index4,
  stylesheets: () => stylesheets4,
  universal: () => page_ts_exports2,
  universal_id: () => universal_id2
});
var index4, component4, universal_id2, imports4, stylesheets4, fonts4;
var init__4 = __esm({
  ".netlify/server/nodes/10.js"() {
    init_page_ts2();
    index4 = 10;
    component4 = async () => (await Promise.resolve().then(() => (init_page_svelte2(), page_svelte_exports2))).default;
    universal_id2 = "src/routes/tours/[tourName]/+page.ts";
    imports4 = ["_app/immutable/nodes/10.d501da53.js", "_app/immutable/chunks/index.ccc3dc3a.js", "_app/immutable/chunks/tours.b1893224.js", "_app/immutable/chunks/Calendar.7b1e0a27.js", "_app/immutable/chunks/SplideSlide.a5526e8f.js", "_app/immutable/chunks/splide.min.5029779c.js", "_app/immutable/chunks/ContactCard.ba6d41aa.js"];
    stylesheets4 = ["_app/immutable/assets/10.1faf892e.css", "_app/immutable/assets/Calendar.b67e6c6d.css", "_app/immutable/assets/splide.6c527891.css", "_app/immutable/assets/ContactCard.e0b478b4.css"];
    fonts4 = [];
  }
});

// .netlify/functions-internal/render.mjs
var render_exports = {};
__export(render_exports, {
  handler: () => handler
});
module.exports = __toCommonJS(render_exports);

// .netlify/shims.js
var import_assert = __toESM(require("assert"), 1);
var import_net = __toESM(require("net"), 1);
var import_http = __toESM(require("http"), 1);
var import_stream = __toESM(require("stream"), 1);
var import_buffer = __toESM(require("buffer"), 1);
var import_util = __toESM(require("util"), 1);
var import_querystring = __toESM(require("querystring"), 1);
var import_web = __toESM(require("stream/web"), 1);
var import_worker_threads = __toESM(require("worker_threads"), 1);
var import_perf_hooks = __toESM(require("perf_hooks"), 1);
var import_types = __toESM(require("util/types"), 1);
var import_url = __toESM(require("url"), 1);
var import_string_decoder = __toESM(require("string_decoder"), 1);
var import_events = __toESM(require("events"), 1);
var import_tls = __toESM(require("tls"), 1);
var import_async_hooks = __toESM(require("async_hooks"), 1);
var import_console = __toESM(require("console"), 1);
var import_zlib = __toESM(require("zlib"), 1);
var import_crypto = require("crypto");
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var undici = {};
var symbols$2 = {
  kClose: Symbol("close"),
  kDestroy: Symbol("destroy"),
  kDispatch: Symbol("dispatch"),
  kUrl: Symbol("url"),
  kWriting: Symbol("writing"),
  kResuming: Symbol("resuming"),
  kQueue: Symbol("queue"),
  kConnect: Symbol("connect"),
  kConnecting: Symbol("connecting"),
  kHeadersList: Symbol("headers list"),
  kKeepAliveDefaultTimeout: Symbol("default keep alive timeout"),
  kKeepAliveMaxTimeout: Symbol("max keep alive timeout"),
  kKeepAliveTimeoutThreshold: Symbol("keep alive timeout threshold"),
  kKeepAliveTimeoutValue: Symbol("keep alive timeout"),
  kKeepAlive: Symbol("keep alive"),
  kHeadersTimeout: Symbol("headers timeout"),
  kBodyTimeout: Symbol("body timeout"),
  kServerName: Symbol("server name"),
  kLocalAddress: Symbol("local address"),
  kHost: Symbol("host"),
  kNoRef: Symbol("no ref"),
  kBodyUsed: Symbol("used"),
  kRunning: Symbol("running"),
  kBlocking: Symbol("blocking"),
  kPending: Symbol("pending"),
  kSize: Symbol("size"),
  kBusy: Symbol("busy"),
  kQueued: Symbol("queued"),
  kFree: Symbol("free"),
  kConnected: Symbol("connected"),
  kClosed: Symbol("closed"),
  kNeedDrain: Symbol("need drain"),
  kReset: Symbol("reset"),
  kDestroyed: Symbol("destroyed"),
  kMaxHeadersSize: Symbol("max headers size"),
  kRunningIdx: Symbol("running index"),
  kPendingIdx: Symbol("pending index"),
  kError: Symbol("error"),
  kClients: Symbol("clients"),
  kClient: Symbol("client"),
  kParser: Symbol("parser"),
  kOnDestroyed: Symbol("destroy callbacks"),
  kPipelining: Symbol("pipelinig"),
  kSocket: Symbol("socket"),
  kHostHeader: Symbol("host header"),
  kConnector: Symbol("connector"),
  kStrictContentLength: Symbol("strict content length"),
  kMaxRedirections: Symbol("maxRedirections"),
  kMaxRequests: Symbol("maxRequestsPerClient"),
  kProxy: Symbol("proxy agent options"),
  kCounter: Symbol("socket request counter"),
  kInterceptors: Symbol("dispatch interceptors"),
  kMaxResponseSize: Symbol("max response size")
};
var UndiciError$2 = class UndiciError extends Error {
  constructor(message) {
    super(message);
    this.name = "UndiciError";
    this.code = "UND_ERR";
  }
};
var ConnectTimeoutError$1 = class ConnectTimeoutError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, ConnectTimeoutError$1);
    this.name = "ConnectTimeoutError";
    this.message = message || "Connect Timeout Error";
    this.code = "UND_ERR_CONNECT_TIMEOUT";
  }
};
var HeadersTimeoutError$1 = class HeadersTimeoutError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, HeadersTimeoutError$1);
    this.name = "HeadersTimeoutError";
    this.message = message || "Headers Timeout Error";
    this.code = "UND_ERR_HEADERS_TIMEOUT";
  }
};
var HeadersOverflowError$1 = class HeadersOverflowError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, HeadersOverflowError$1);
    this.name = "HeadersOverflowError";
    this.message = message || "Headers Overflow Error";
    this.code = "UND_ERR_HEADERS_OVERFLOW";
  }
};
var BodyTimeoutError$1 = class BodyTimeoutError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, BodyTimeoutError$1);
    this.name = "BodyTimeoutError";
    this.message = message || "Body Timeout Error";
    this.code = "UND_ERR_BODY_TIMEOUT";
  }
};
var ResponseStatusCodeError$1 = class ResponseStatusCodeError extends UndiciError$2 {
  constructor(message, statusCode, headers2, body2) {
    super(message);
    Error.captureStackTrace(this, ResponseStatusCodeError$1);
    this.name = "ResponseStatusCodeError";
    this.message = message || "Response Status Code Error";
    this.code = "UND_ERR_RESPONSE_STATUS_CODE";
    this.body = body2;
    this.status = statusCode;
    this.statusCode = statusCode;
    this.headers = headers2;
  }
};
var InvalidArgumentError$k = class InvalidArgumentError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, InvalidArgumentError$k);
    this.name = "InvalidArgumentError";
    this.message = message || "Invalid Argument Error";
    this.code = "UND_ERR_INVALID_ARG";
  }
};
var InvalidReturnValueError$2 = class InvalidReturnValueError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, InvalidReturnValueError$2);
    this.name = "InvalidReturnValueError";
    this.message = message || "Invalid Return Value Error";
    this.code = "UND_ERR_INVALID_RETURN_VALUE";
  }
};
var RequestAbortedError$9 = class RequestAbortedError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, RequestAbortedError$9);
    this.name = "AbortError";
    this.message = message || "Request aborted";
    this.code = "UND_ERR_ABORTED";
  }
};
var InformationalError$1 = class InformationalError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, InformationalError$1);
    this.name = "InformationalError";
    this.message = message || "Request information";
    this.code = "UND_ERR_INFO";
  }
};
var RequestContentLengthMismatchError$1 = class RequestContentLengthMismatchError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, RequestContentLengthMismatchError$1);
    this.name = "RequestContentLengthMismatchError";
    this.message = message || "Request body length does not match content-length header";
    this.code = "UND_ERR_REQ_CONTENT_LENGTH_MISMATCH";
  }
};
var ResponseContentLengthMismatchError$1 = class ResponseContentLengthMismatchError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, ResponseContentLengthMismatchError$1);
    this.name = "ResponseContentLengthMismatchError";
    this.message = message || "Response body length does not match content-length header";
    this.code = "UND_ERR_RES_CONTENT_LENGTH_MISMATCH";
  }
};
var ClientDestroyedError$1 = class ClientDestroyedError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, ClientDestroyedError$1);
    this.name = "ClientDestroyedError";
    this.message = message || "The client is destroyed";
    this.code = "UND_ERR_DESTROYED";
  }
};
var ClientClosedError$1 = class ClientClosedError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, ClientClosedError$1);
    this.name = "ClientClosedError";
    this.message = message || "The client is closed";
    this.code = "UND_ERR_CLOSED";
  }
};
var SocketError$3 = class SocketError extends UndiciError$2 {
  constructor(message, socket) {
    super(message);
    Error.captureStackTrace(this, SocketError$3);
    this.name = "SocketError";
    this.message = message || "Socket error";
    this.code = "UND_ERR_SOCKET";
    this.socket = socket;
  }
};
var NotSupportedError$2 = class NotSupportedError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, NotSupportedError$2);
    this.name = "NotSupportedError";
    this.message = message || "Not supported error";
    this.code = "UND_ERR_NOT_SUPPORTED";
  }
};
var BalancedPoolMissingUpstreamError$1 = class BalancedPoolMissingUpstreamError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, NotSupportedError$2);
    this.name = "MissingUpstreamError";
    this.message = message || "No upstream has been added to the BalancedPool";
    this.code = "UND_ERR_BPL_MISSING_UPSTREAM";
  }
};
var HTTPParserError$1 = class HTTPParserError extends Error {
  constructor(message, code, data) {
    super(message);
    Error.captureStackTrace(this, HTTPParserError$1);
    this.name = "HTTPParserError";
    this.code = code ? `HPE_${code}` : void 0;
    this.data = data ? data.toString() : void 0;
  }
};
var ResponseExceededMaxSizeError$1 = class ResponseExceededMaxSizeError extends UndiciError$2 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, ResponseExceededMaxSizeError$1);
    this.name = "ResponseExceededMaxSizeError";
    this.message = message || "Response content exceeded max size";
    this.code = "UND_ERR_RES_EXCEEDED_MAX_SIZE";
  }
};
var errors = {
  HTTPParserError: HTTPParserError$1,
  UndiciError: UndiciError$2,
  HeadersTimeoutError: HeadersTimeoutError$1,
  HeadersOverflowError: HeadersOverflowError$1,
  BodyTimeoutError: BodyTimeoutError$1,
  RequestContentLengthMismatchError: RequestContentLengthMismatchError$1,
  ConnectTimeoutError: ConnectTimeoutError$1,
  ResponseStatusCodeError: ResponseStatusCodeError$1,
  InvalidArgumentError: InvalidArgumentError$k,
  InvalidReturnValueError: InvalidReturnValueError$2,
  RequestAbortedError: RequestAbortedError$9,
  ClientDestroyedError: ClientDestroyedError$1,
  ClientClosedError: ClientClosedError$1,
  InformationalError: InformationalError$1,
  SocketError: SocketError$3,
  NotSupportedError: NotSupportedError$2,
  ResponseContentLengthMismatchError: ResponseContentLengthMismatchError$1,
  BalancedPoolMissingUpstreamError: BalancedPoolMissingUpstreamError$1,
  ResponseExceededMaxSizeError: ResponseExceededMaxSizeError$1
};
var assert$7 = import_assert.default;
var { kDestroyed: kDestroyed$1, kBodyUsed: kBodyUsed$1 } = symbols$2;
var { IncomingMessage } = import_http.default;
var stream$1 = import_stream.default;
var net$2 = import_net.default;
var { InvalidArgumentError: InvalidArgumentError$j } = errors;
var { Blob: Blob$1 } = import_buffer.default;
var nodeUtil = import_util.default;
var { stringify } = import_querystring.default;
function nop$1() {
}
function isStream(obj) {
  return obj && typeof obj.pipe === "function";
}
function isBlobLike(object) {
  return Blob$1 && object instanceof Blob$1 || object && typeof object === "object" && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && /^(Blob|File)$/.test(object[Symbol.toStringTag]);
}
function buildURL$2(url, queryParams) {
  if (url.includes("?") || url.includes("#")) {
    throw new Error('Query params cannot be passed when url already contains "?" or "#".');
  }
  const stringified = stringify(queryParams);
  if (stringified) {
    url += "?" + stringified;
  }
  return url;
}
function parseURL(url) {
  if (typeof url === "string") {
    url = new URL(url);
  }
  if (!url || typeof url !== "object") {
    throw new InvalidArgumentError$j("invalid url");
  }
  if (url.port != null && url.port !== "" && !Number.isFinite(parseInt(url.port))) {
    throw new InvalidArgumentError$j("invalid port");
  }
  if (url.path != null && typeof url.path !== "string") {
    throw new InvalidArgumentError$j("invalid path");
  }
  if (url.pathname != null && typeof url.pathname !== "string") {
    throw new InvalidArgumentError$j("invalid pathname");
  }
  if (url.hostname != null && typeof url.hostname !== "string") {
    throw new InvalidArgumentError$j("invalid hostname");
  }
  if (url.origin != null && typeof url.origin !== "string") {
    throw new InvalidArgumentError$j("invalid origin");
  }
  if (!/^https?:/.test(url.origin || url.protocol)) {
    throw new InvalidArgumentError$j("invalid protocol");
  }
  if (!(url instanceof URL)) {
    const port = url.port != null ? url.port : url.protocol === "https:" ? 443 : 80;
    let origin = url.origin != null ? url.origin : `${url.protocol}//${url.hostname}:${port}`;
    let path = url.path != null ? url.path : `${url.pathname || ""}${url.search || ""}`;
    if (origin.endsWith("/")) {
      origin = origin.substring(0, origin.length - 1);
    }
    if (path && !path.startsWith("/")) {
      path = `/${path}`;
    }
    url = new URL(origin + path);
  }
  return url;
}
function parseOrigin$1(url) {
  url = parseURL(url);
  if (url.pathname !== "/" || url.search || url.hash) {
    throw new InvalidArgumentError$j("invalid url");
  }
  return url;
}
function getHostname(host) {
  if (host[0] === "[") {
    const idx2 = host.indexOf("]");
    assert$7(idx2 !== -1);
    return host.substr(1, idx2 - 1);
  }
  const idx = host.indexOf(":");
  if (idx === -1)
    return host;
  return host.substr(0, idx);
}
function getServerName(host) {
  if (!host) {
    return null;
  }
  assert$7.strictEqual(typeof host, "string");
  const servername = getHostname(host);
  if (net$2.isIP(servername)) {
    return "";
  }
  return servername;
}
function deepClone(obj) {
  return JSON.parse(JSON.stringify(obj));
}
function isAsyncIterable(obj) {
  return !!(obj != null && typeof obj[Symbol.asyncIterator] === "function");
}
function isIterable(obj) {
  return !!(obj != null && (typeof obj[Symbol.iterator] === "function" || typeof obj[Symbol.asyncIterator] === "function"));
}
function bodyLength(body2) {
  if (body2 == null) {
    return 0;
  } else if (isStream(body2)) {
    const state = body2._readableState;
    return state && state.ended === true && Number.isFinite(state.length) ? state.length : null;
  } else if (isBlobLike(body2)) {
    return body2.size != null ? body2.size : null;
  } else if (isBuffer(body2)) {
    return body2.byteLength;
  }
  return null;
}
function isDestroyed(stream2) {
  return !stream2 || !!(stream2.destroyed || stream2[kDestroyed$1]);
}
function isReadableAborted(stream2) {
  const state = stream2 && stream2._readableState;
  return isDestroyed(stream2) && state && !state.endEmitted;
}
function destroy(stream2, err) {
  if (!isStream(stream2) || isDestroyed(stream2)) {
    return;
  }
  if (typeof stream2.destroy === "function") {
    if (Object.getPrototypeOf(stream2).constructor === IncomingMessage) {
      stream2.socket = null;
    }
    stream2.destroy(err);
  } else if (err) {
    process.nextTick((stream3, err2) => {
      stream3.emit("error", err2);
    }, stream2, err);
  }
  if (stream2.destroyed !== true) {
    stream2[kDestroyed$1] = true;
  }
}
var KEEPALIVE_TIMEOUT_EXPR = /timeout=(\d+)/;
function parseKeepAliveTimeout(val) {
  const m = val.toString().match(KEEPALIVE_TIMEOUT_EXPR);
  return m ? parseInt(m[1], 10) * 1e3 : null;
}
function parseHeaders(headers2, obj = {}) {
  for (let i = 0; i < headers2.length; i += 2) {
    const key2 = headers2[i].toString().toLowerCase();
    let val = obj[key2];
    if (!val) {
      if (Array.isArray(headers2[i + 1])) {
        obj[key2] = headers2[i + 1];
      } else {
        obj[key2] = headers2[i + 1].toString();
      }
    } else {
      if (!Array.isArray(val)) {
        val = [val];
        obj[key2] = val;
      }
      val.push(headers2[i + 1].toString());
    }
  }
  return obj;
}
function parseRawHeaders(headers2) {
  return headers2.map((header) => header.toString());
}
function isBuffer(buffer) {
  return buffer instanceof Uint8Array || Buffer.isBuffer(buffer);
}
function validateHandler(handler2, method, upgrade2) {
  if (!handler2 || typeof handler2 !== "object") {
    throw new InvalidArgumentError$j("handler must be an object");
  }
  if (typeof handler2.onConnect !== "function") {
    throw new InvalidArgumentError$j("invalid onConnect method");
  }
  if (typeof handler2.onError !== "function") {
    throw new InvalidArgumentError$j("invalid onError method");
  }
  if (typeof handler2.onBodySent !== "function" && handler2.onBodySent !== void 0) {
    throw new InvalidArgumentError$j("invalid onBodySent method");
  }
  if (upgrade2 || method === "CONNECT") {
    if (typeof handler2.onUpgrade !== "function") {
      throw new InvalidArgumentError$j("invalid onUpgrade method");
    }
  } else {
    if (typeof handler2.onHeaders !== "function") {
      throw new InvalidArgumentError$j("invalid onHeaders method");
    }
    if (typeof handler2.onData !== "function") {
      throw new InvalidArgumentError$j("invalid onData method");
    }
    if (typeof handler2.onComplete !== "function") {
      throw new InvalidArgumentError$j("invalid onComplete method");
    }
  }
}
function isDisturbed(body2) {
  return !!(body2 && (stream$1.isDisturbed ? stream$1.isDisturbed(body2) || body2[kBodyUsed$1] : body2[kBodyUsed$1] || body2.readableDidRead || body2._readableState && body2._readableState.dataEmitted || isReadableAborted(body2)));
}
function isErrored(body2) {
  return !!(body2 && (stream$1.isErrored ? stream$1.isErrored(body2) : /state: 'errored'/.test(nodeUtil.inspect(body2))));
}
function isReadable(body2) {
  return !!(body2 && (stream$1.isReadable ? stream$1.isReadable(body2) : /state: 'readable'/.test(nodeUtil.inspect(body2))));
}
function getSocketInfo(socket) {
  return {
    localAddress: socket.localAddress,
    localPort: socket.localPort,
    remoteAddress: socket.remoteAddress,
    remotePort: socket.remotePort,
    remoteFamily: socket.remoteFamily,
    timeout: socket.timeout,
    bytesWritten: socket.bytesWritten,
    bytesRead: socket.bytesRead
  };
}
var ReadableStream2;
function ReadableStreamFrom$1(iterable) {
  if (!ReadableStream2) {
    ReadableStream2 = import_web.default.ReadableStream;
  }
  if (ReadableStream2.from) {
    return ReadableStream2.from(iterable);
  }
  let iterator;
  return new ReadableStream2({
    async start() {
      iterator = iterable[Symbol.asyncIterator]();
    },
    async pull(controller) {
      const { done, value } = await iterator.next();
      if (done) {
        queueMicrotask(() => {
          controller.close();
        });
      } else {
        const buf = Buffer.isBuffer(value) ? value : Buffer.from(value);
        controller.enqueue(new Uint8Array(buf));
      }
      return controller.desiredSize > 0;
    },
    async cancel(reason) {
      await iterator.return();
    }
  }, 0);
}
function isFormDataLike(chunk) {
  return chunk && chunk.constructor && chunk.constructor.name === "FormData";
}
var kEnumerableProperty = /* @__PURE__ */ Object.create(null);
kEnumerableProperty.enumerable = true;
var util$e = {
  kEnumerableProperty,
  nop: nop$1,
  isDisturbed,
  isErrored,
  isReadable,
  toUSVString: nodeUtil.toUSVString || ((val) => `${val}`),
  isReadableAborted,
  isBlobLike,
  parseOrigin: parseOrigin$1,
  parseURL,
  getServerName,
  isStream,
  isIterable,
  isAsyncIterable,
  isDestroyed,
  parseRawHeaders,
  parseHeaders,
  parseKeepAliveTimeout,
  destroy,
  bodyLength,
  deepClone,
  ReadableStreamFrom: ReadableStreamFrom$1,
  isBuffer,
  validateHandler,
  getSocketInfo,
  isFormDataLike,
  buildURL: buildURL$2
};
var utils$1;
var hasRequiredUtils$1;
function requireUtils$1() {
  if (hasRequiredUtils$1)
    return utils$1;
  hasRequiredUtils$1 = 1;
  function parseContentType(str) {
    if (str.length === 0)
      return;
    const params = /* @__PURE__ */ Object.create(null);
    let i = 0;
    for (; i < str.length; ++i) {
      const code = str.charCodeAt(i);
      if (TOKEN[code] !== 1) {
        if (code !== 47 || i === 0)
          return;
        break;
      }
    }
    if (i === str.length)
      return;
    const type = str.slice(0, i).toLowerCase();
    const subtypeStart = ++i;
    for (; i < str.length; ++i) {
      const code = str.charCodeAt(i);
      if (TOKEN[code] !== 1) {
        if (i === subtypeStart)
          return;
        if (parseContentTypeParams(str, i, params) === void 0)
          return;
        break;
      }
    }
    if (i === subtypeStart)
      return;
    const subtype = str.slice(subtypeStart, i).toLowerCase();
    return { type, subtype, params };
  }
  function parseContentTypeParams(str, i, params) {
    while (i < str.length) {
      for (; i < str.length; ++i) {
        const code = str.charCodeAt(i);
        if (code !== 32 && code !== 9)
          break;
      }
      if (i === str.length)
        break;
      if (str.charCodeAt(i++) !== 59)
        return;
      for (; i < str.length; ++i) {
        const code = str.charCodeAt(i);
        if (code !== 32 && code !== 9)
          break;
      }
      if (i === str.length)
        return;
      let name;
      const nameStart = i;
      for (; i < str.length; ++i) {
        const code = str.charCodeAt(i);
        if (TOKEN[code] !== 1) {
          if (code !== 61)
            return;
          break;
        }
      }
      if (i === str.length)
        return;
      name = str.slice(nameStart, i);
      ++i;
      if (i === str.length)
        return;
      let value = "";
      let valueStart;
      if (str.charCodeAt(i) === 34) {
        valueStart = ++i;
        let escaping = false;
        for (; i < str.length; ++i) {
          const code = str.charCodeAt(i);
          if (code === 92) {
            if (escaping) {
              valueStart = i;
              escaping = false;
            } else {
              value += str.slice(valueStart, i);
              escaping = true;
            }
            continue;
          }
          if (code === 34) {
            if (escaping) {
              valueStart = i;
              escaping = false;
              continue;
            }
            value += str.slice(valueStart, i);
            break;
          }
          if (escaping) {
            valueStart = i - 1;
            escaping = false;
          }
          if (QDTEXT[code] !== 1)
            return;
        }
        if (i === str.length)
          return;
        ++i;
      } else {
        valueStart = i;
        for (; i < str.length; ++i) {
          const code = str.charCodeAt(i);
          if (TOKEN[code] !== 1) {
            if (i === valueStart)
              return;
            break;
          }
        }
        value = str.slice(valueStart, i);
      }
      name = name.toLowerCase();
      if (params[name] === void 0)
        params[name] = value;
    }
    return params;
  }
  function parseDisposition(str, defDecoder) {
    if (str.length === 0)
      return;
    const params = /* @__PURE__ */ Object.create(null);
    let i = 0;
    for (; i < str.length; ++i) {
      const code = str.charCodeAt(i);
      if (TOKEN[code] !== 1) {
        if (parseDispositionParams(str, i, params, defDecoder) === void 0)
          return;
        break;
      }
    }
    const type = str.slice(0, i).toLowerCase();
    return { type, params };
  }
  function parseDispositionParams(str, i, params, defDecoder) {
    while (i < str.length) {
      for (; i < str.length; ++i) {
        const code = str.charCodeAt(i);
        if (code !== 32 && code !== 9)
          break;
      }
      if (i === str.length)
        break;
      if (str.charCodeAt(i++) !== 59)
        return;
      for (; i < str.length; ++i) {
        const code = str.charCodeAt(i);
        if (code !== 32 && code !== 9)
          break;
      }
      if (i === str.length)
        return;
      let name;
      const nameStart = i;
      for (; i < str.length; ++i) {
        const code = str.charCodeAt(i);
        if (TOKEN[code] !== 1) {
          if (code === 61)
            break;
          return;
        }
      }
      if (i === str.length)
        return;
      let value = "";
      let valueStart;
      let charset;
      name = str.slice(nameStart, i);
      if (name.charCodeAt(name.length - 1) === 42) {
        const charsetStart = ++i;
        for (; i < str.length; ++i) {
          const code = str.charCodeAt(i);
          if (CHARSET[code] !== 1) {
            if (code !== 39)
              return;
            break;
          }
        }
        if (i === str.length)
          return;
        charset = str.slice(charsetStart, i);
        ++i;
        for (; i < str.length; ++i) {
          const code = str.charCodeAt(i);
          if (code === 39)
            break;
        }
        if (i === str.length)
          return;
        ++i;
        if (i === str.length)
          return;
        valueStart = i;
        let encode2 = 0;
        for (; i < str.length; ++i) {
          const code = str.charCodeAt(i);
          if (EXTENDED_VALUE[code] !== 1) {
            if (code === 37) {
              let hexUpper;
              let hexLower;
              if (i + 2 < str.length && (hexUpper = HEX_VALUES[str.charCodeAt(i + 1)]) !== -1 && (hexLower = HEX_VALUES[str.charCodeAt(i + 2)]) !== -1) {
                const byteVal = (hexUpper << 4) + hexLower;
                value += str.slice(valueStart, i);
                value += String.fromCharCode(byteVal);
                i += 2;
                valueStart = i + 1;
                if (byteVal >= 128)
                  encode2 = 2;
                else if (encode2 === 0)
                  encode2 = 1;
                continue;
              }
              return;
            }
            break;
          }
        }
        value += str.slice(valueStart, i);
        value = convertToUTF8(value, charset, encode2);
        if (value === void 0)
          return;
      } else {
        ++i;
        if (i === str.length)
          return;
        if (str.charCodeAt(i) === 34) {
          valueStart = ++i;
          let escaping = false;
          for (; i < str.length; ++i) {
            const code = str.charCodeAt(i);
            if (code === 92) {
              if (escaping) {
                valueStart = i;
                escaping = false;
              } else {
                value += str.slice(valueStart, i);
                escaping = true;
              }
              continue;
            }
            if (code === 34) {
              if (escaping) {
                valueStart = i;
                escaping = false;
                continue;
              }
              value += str.slice(valueStart, i);
              break;
            }
            if (escaping) {
              valueStart = i - 1;
              escaping = false;
            }
            if (QDTEXT[code] !== 1)
              return;
          }
          if (i === str.length)
            return;
          ++i;
        } else {
          valueStart = i;
          for (; i < str.length; ++i) {
            const code = str.charCodeAt(i);
            if (TOKEN[code] !== 1) {
              if (i === valueStart)
                return;
              break;
            }
          }
          value = str.slice(valueStart, i);
        }
        value = defDecoder(value, 2);
        if (value === void 0)
          return;
      }
      name = name.toLowerCase();
      if (params[name] === void 0)
        params[name] = value;
    }
    return params;
  }
  function getDecoder(charset) {
    let lc;
    while (true) {
      switch (charset) {
        case "utf-8":
        case "utf8":
          return decoders.utf8;
        case "latin1":
        case "ascii":
        case "us-ascii":
        case "iso-8859-1":
        case "iso8859-1":
        case "iso88591":
        case "iso_8859-1":
        case "windows-1252":
        case "iso_8859-1:1987":
        case "cp1252":
        case "x-cp1252":
          return decoders.latin1;
        case "utf16le":
        case "utf-16le":
        case "ucs2":
        case "ucs-2":
          return decoders.utf16le;
        case "base64":
          return decoders.base64;
        default:
          if (lc === void 0) {
            lc = true;
            charset = charset.toLowerCase();
            continue;
          }
          return decoders.other.bind(charset);
      }
    }
  }
  const decoders = {
    utf8: (data, hint) => {
      if (data.length === 0)
        return "";
      if (typeof data === "string") {
        if (hint < 2)
          return data;
        data = Buffer.from(data, "latin1");
      }
      return data.utf8Slice(0, data.length);
    },
    latin1: (data, hint) => {
      if (data.length === 0)
        return "";
      if (typeof data === "string")
        return data;
      return data.latin1Slice(0, data.length);
    },
    utf16le: (data, hint) => {
      if (data.length === 0)
        return "";
      if (typeof data === "string")
        data = Buffer.from(data, "latin1");
      return data.ucs2Slice(0, data.length);
    },
    base64: (data, hint) => {
      if (data.length === 0)
        return "";
      if (typeof data === "string")
        data = Buffer.from(data, "latin1");
      return data.base64Slice(0, data.length);
    },
    other: (data, hint) => {
      if (data.length === 0)
        return "";
      if (typeof data === "string")
        data = Buffer.from(data, "latin1");
      try {
        const decoder = new TextDecoder(this);
        return decoder.decode(data);
      } catch {
      }
    }
  };
  function convertToUTF8(data, charset, hint) {
    const decode = getDecoder(charset);
    if (decode)
      return decode(data, hint);
  }
  function basename(path) {
    if (typeof path !== "string")
      return "";
    for (let i = path.length - 1; i >= 0; --i) {
      switch (path.charCodeAt(i)) {
        case 47:
        case 92:
          path = path.slice(i + 1);
          return path === ".." || path === "." ? "" : path;
      }
    }
    return path === ".." || path === "." ? "" : path;
  }
  const TOKEN = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ];
  const QDTEXT = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1
  ];
  const CHARSET = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ];
  const EXTENDED_VALUE = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ];
  const HEX_VALUES = [
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    10,
    11,
    12,
    13,
    14,
    15,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    10,
    11,
    12,
    13,
    14,
    15,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1
  ];
  utils$1 = {
    basename,
    convertToUTF8,
    getDecoder,
    parseContentType,
    parseDisposition
  };
  return utils$1;
}
var sbmh;
var hasRequiredSbmh;
function requireSbmh() {
  if (hasRequiredSbmh)
    return sbmh;
  hasRequiredSbmh = 1;
  function memcmp(buf1, pos1, buf2, pos2, num) {
    for (let i = 0; i < num; ++i) {
      if (buf1[pos1 + i] !== buf2[pos2 + i])
        return false;
    }
    return true;
  }
  class SBMH {
    constructor(needle, cb) {
      if (typeof cb !== "function")
        throw new Error("Missing match callback");
      if (typeof needle === "string")
        needle = Buffer.from(needle);
      else if (!Buffer.isBuffer(needle))
        throw new Error(`Expected Buffer for needle, got ${typeof needle}`);
      const needleLen = needle.length;
      this.maxMatches = Infinity;
      this.matches = 0;
      this._cb = cb;
      this._lookbehindSize = 0;
      this._needle = needle;
      this._bufPos = 0;
      this._lookbehind = Buffer.allocUnsafe(needleLen);
      this._occ = [
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen,
        needleLen
      ];
      if (needleLen > 1) {
        for (let i = 0; i < needleLen - 1; ++i)
          this._occ[needle[i]] = needleLen - 1 - i;
      }
    }
    reset() {
      this.matches = 0;
      this._lookbehindSize = 0;
      this._bufPos = 0;
    }
    push(chunk, pos) {
      let result;
      if (!Buffer.isBuffer(chunk))
        chunk = Buffer.from(chunk, "latin1");
      const chunkLen = chunk.length;
      this._bufPos = pos || 0;
      while (result !== chunkLen && this.matches < this.maxMatches)
        result = feed(this, chunk);
      return result;
    }
    destroy() {
      const lbSize = this._lookbehindSize;
      if (lbSize)
        this._cb(false, this._lookbehind, 0, lbSize, false);
      this.reset();
    }
  }
  function feed(self2, data) {
    const len = data.length;
    const needle = self2._needle;
    const needleLen = needle.length;
    let pos = -self2._lookbehindSize;
    const lastNeedleCharPos = needleLen - 1;
    const lastNeedleChar = needle[lastNeedleCharPos];
    const end = len - needleLen;
    const occ = self2._occ;
    const lookbehind = self2._lookbehind;
    if (pos < 0) {
      while (pos < 0 && pos <= end) {
        const nextPos = pos + lastNeedleCharPos;
        const ch = nextPos < 0 ? lookbehind[self2._lookbehindSize + nextPos] : data[nextPos];
        if (ch === lastNeedleChar && matchNeedle(self2, data, pos, lastNeedleCharPos)) {
          self2._lookbehindSize = 0;
          ++self2.matches;
          if (pos > -self2._lookbehindSize)
            self2._cb(true, lookbehind, 0, self2._lookbehindSize + pos, false);
          else
            self2._cb(true, void 0, 0, 0, true);
          return self2._bufPos = pos + needleLen;
        }
        pos += occ[ch];
      }
      while (pos < 0 && !matchNeedle(self2, data, pos, len - pos))
        ++pos;
      if (pos < 0) {
        const bytesToCutOff = self2._lookbehindSize + pos;
        if (bytesToCutOff > 0) {
          self2._cb(false, lookbehind, 0, bytesToCutOff, false);
        }
        self2._lookbehindSize -= bytesToCutOff;
        lookbehind.copy(lookbehind, 0, bytesToCutOff, self2._lookbehindSize);
        lookbehind.set(data, self2._lookbehindSize);
        self2._lookbehindSize += len;
        self2._bufPos = len;
        return len;
      }
      self2._cb(false, lookbehind, 0, self2._lookbehindSize, false);
      self2._lookbehindSize = 0;
    }
    pos += self2._bufPos;
    const firstNeedleChar = needle[0];
    while (pos <= end) {
      const ch = data[pos + lastNeedleCharPos];
      if (ch === lastNeedleChar && data[pos] === firstNeedleChar && memcmp(needle, 0, data, pos, lastNeedleCharPos)) {
        ++self2.matches;
        if (pos > 0)
          self2._cb(true, data, self2._bufPos, pos, true);
        else
          self2._cb(true, void 0, 0, 0, true);
        return self2._bufPos = pos + needleLen;
      }
      pos += occ[ch];
    }
    while (pos < len) {
      if (data[pos] !== firstNeedleChar || !memcmp(data, pos, needle, 0, len - pos)) {
        ++pos;
        continue;
      }
      data.copy(lookbehind, 0, pos, len);
      self2._lookbehindSize = len - pos;
      break;
    }
    if (pos > 0)
      self2._cb(false, data, self2._bufPos, pos < len ? pos : len, true);
    self2._bufPos = len;
    return len;
  }
  function matchNeedle(self2, data, pos, len) {
    const lb = self2._lookbehind;
    const lbSize = self2._lookbehindSize;
    const needle = self2._needle;
    for (let i = 0; i < len; ++i, ++pos) {
      const ch = pos < 0 ? lb[lbSize + pos] : data[pos];
      if (ch !== needle[i])
        return false;
    }
    return true;
  }
  sbmh = SBMH;
  return sbmh;
}
var multipart;
var hasRequiredMultipart;
function requireMultipart() {
  if (hasRequiredMultipart)
    return multipart;
  hasRequiredMultipart = 1;
  const { Readable: Readable2, Writable } = import_stream.default;
  const StreamSearch = requireSbmh();
  const {
    basename,
    convertToUTF8,
    getDecoder,
    parseContentType,
    parseDisposition
  } = requireUtils$1();
  const BUF_CRLF = Buffer.from("\r\n");
  const BUF_CR = Buffer.from("\r");
  const BUF_DASH = Buffer.from("-");
  function noop2() {
  }
  const MAX_HEADER_PAIRS = 2e3;
  const MAX_HEADER_SIZE = 16 * 1024;
  const HPARSER_NAME = 0;
  const HPARSER_PRE_OWS = 1;
  const HPARSER_VALUE = 2;
  class HeaderParser {
    constructor(cb) {
      this.header = /* @__PURE__ */ Object.create(null);
      this.pairCount = 0;
      this.byteCount = 0;
      this.state = HPARSER_NAME;
      this.name = "";
      this.value = "";
      this.crlf = 0;
      this.cb = cb;
    }
    reset() {
      this.header = /* @__PURE__ */ Object.create(null);
      this.pairCount = 0;
      this.byteCount = 0;
      this.state = HPARSER_NAME;
      this.name = "";
      this.value = "";
      this.crlf = 0;
    }
    push(chunk, pos, end) {
      let start = pos;
      while (pos < end) {
        switch (this.state) {
          case HPARSER_NAME: {
            let done = false;
            for (; pos < end; ++pos) {
              if (this.byteCount === MAX_HEADER_SIZE)
                return -1;
              ++this.byteCount;
              const code = chunk[pos];
              if (TOKEN[code] !== 1) {
                if (code !== 58)
                  return -1;
                this.name += chunk.latin1Slice(start, pos);
                if (this.name.length === 0)
                  return -1;
                ++pos;
                done = true;
                this.state = HPARSER_PRE_OWS;
                break;
              }
            }
            if (!done) {
              this.name += chunk.latin1Slice(start, pos);
              break;
            }
          }
          case HPARSER_PRE_OWS: {
            let done = false;
            for (; pos < end; ++pos) {
              if (this.byteCount === MAX_HEADER_SIZE)
                return -1;
              ++this.byteCount;
              const code = chunk[pos];
              if (code !== 32 && code !== 9) {
                start = pos;
                done = true;
                this.state = HPARSER_VALUE;
                break;
              }
            }
            if (!done)
              break;
          }
          case HPARSER_VALUE:
            switch (this.crlf) {
              case 0:
                for (; pos < end; ++pos) {
                  if (this.byteCount === MAX_HEADER_SIZE)
                    return -1;
                  ++this.byteCount;
                  const code = chunk[pos];
                  if (FIELD_VCHAR[code] !== 1) {
                    if (code !== 13)
                      return -1;
                    ++this.crlf;
                    break;
                  }
                }
                this.value += chunk.latin1Slice(start, pos++);
                break;
              case 1:
                if (this.byteCount === MAX_HEADER_SIZE)
                  return -1;
                ++this.byteCount;
                if (chunk[pos++] !== 10)
                  return -1;
                ++this.crlf;
                break;
              case 2: {
                if (this.byteCount === MAX_HEADER_SIZE)
                  return -1;
                ++this.byteCount;
                const code = chunk[pos];
                if (code === 32 || code === 9) {
                  start = pos;
                  this.crlf = 0;
                } else {
                  if (++this.pairCount < MAX_HEADER_PAIRS) {
                    this.name = this.name.toLowerCase();
                    if (this.header[this.name] === void 0)
                      this.header[this.name] = [this.value];
                    else
                      this.header[this.name].push(this.value);
                  }
                  if (code === 13) {
                    ++this.crlf;
                    ++pos;
                  } else {
                    start = pos;
                    this.crlf = 0;
                    this.state = HPARSER_NAME;
                    this.name = "";
                    this.value = "";
                  }
                }
                break;
              }
              case 3: {
                if (this.byteCount === MAX_HEADER_SIZE)
                  return -1;
                ++this.byteCount;
                if (chunk[pos++] !== 10)
                  return -1;
                const header = this.header;
                this.reset();
                this.cb(header);
                return pos;
              }
            }
            break;
        }
      }
      return pos;
    }
  }
  class FileStream extends Readable2 {
    constructor(opts, owner) {
      super(opts);
      this.truncated = false;
      this._readcb = null;
      this.once("end", () => {
        this._read();
        if (--owner._fileEndsLeft === 0 && owner._finalcb) {
          const cb = owner._finalcb;
          owner._finalcb = null;
          process.nextTick(cb);
        }
      });
    }
    _read(n) {
      const cb = this._readcb;
      if (cb) {
        this._readcb = null;
        cb();
      }
    }
  }
  const ignoreData = {
    push: (chunk, pos) => {
    },
    destroy: () => {
    }
  };
  function callAndUnsetCb(self2, err) {
    const cb = self2._writecb;
    self2._writecb = null;
    if (err)
      self2.destroy(err);
    else if (cb)
      cb();
  }
  function nullDecoder(val, hint) {
    return val;
  }
  class Multipart extends Writable {
    constructor(cfg) {
      const streamOpts = {
        autoDestroy: true,
        emitClose: true,
        highWaterMark: typeof cfg.highWaterMark === "number" ? cfg.highWaterMark : void 0
      };
      super(streamOpts);
      if (!cfg.conType.params || typeof cfg.conType.params.boundary !== "string")
        throw new Error("Multipart: Boundary not found");
      const boundary = cfg.conType.params.boundary;
      const paramDecoder = typeof cfg.defParamCharset === "string" && cfg.defParamCharset ? getDecoder(cfg.defParamCharset) : nullDecoder;
      const defCharset = cfg.defCharset || "utf8";
      const preservePath = cfg.preservePath;
      const fileOpts = {
        autoDestroy: true,
        emitClose: true,
        highWaterMark: typeof cfg.fileHwm === "number" ? cfg.fileHwm : void 0
      };
      const limits = cfg.limits;
      const fieldSizeLimit = limits && typeof limits.fieldSize === "number" ? limits.fieldSize : 1 * 1024 * 1024;
      const fileSizeLimit = limits && typeof limits.fileSize === "number" ? limits.fileSize : Infinity;
      const filesLimit = limits && typeof limits.files === "number" ? limits.files : Infinity;
      const fieldsLimit = limits && typeof limits.fields === "number" ? limits.fields : Infinity;
      const partsLimit = limits && typeof limits.parts === "number" ? limits.parts : Infinity;
      let parts = -1;
      let fields = 0;
      let files = 0;
      let skipPart = false;
      this._fileEndsLeft = 0;
      this._fileStream = void 0;
      this._complete = false;
      let fileSize = 0;
      let field;
      let fieldSize = 0;
      let partCharset;
      let partEncoding;
      let partType;
      let partName;
      let partTruncated = false;
      let hitFilesLimit = false;
      let hitFieldsLimit = false;
      this._hparser = null;
      const hparser = new HeaderParser((header) => {
        this._hparser = null;
        skipPart = false;
        partType = "text/plain";
        partCharset = defCharset;
        partEncoding = "7bit";
        partName = void 0;
        partTruncated = false;
        let filename;
        if (!header["content-disposition"]) {
          skipPart = true;
          return;
        }
        const disp = parseDisposition(header["content-disposition"][0], paramDecoder);
        if (!disp || disp.type !== "form-data") {
          skipPart = true;
          return;
        }
        if (disp.params) {
          if (disp.params.name)
            partName = disp.params.name;
          if (disp.params["filename*"])
            filename = disp.params["filename*"];
          else if (disp.params.filename)
            filename = disp.params.filename;
          if (filename !== void 0 && !preservePath)
            filename = basename(filename);
        }
        if (header["content-type"]) {
          const conType = parseContentType(header["content-type"][0]);
          if (conType) {
            partType = `${conType.type}/${conType.subtype}`;
            if (conType.params && typeof conType.params.charset === "string")
              partCharset = conType.params.charset.toLowerCase();
          }
        }
        if (header["content-transfer-encoding"])
          partEncoding = header["content-transfer-encoding"][0].toLowerCase();
        if (partType === "application/octet-stream" || filename !== void 0) {
          if (files === filesLimit) {
            if (!hitFilesLimit) {
              hitFilesLimit = true;
              this.emit("filesLimit");
            }
            skipPart = true;
            return;
          }
          ++files;
          if (this.listenerCount("file") === 0) {
            skipPart = true;
            return;
          }
          fileSize = 0;
          this._fileStream = new FileStream(fileOpts, this);
          ++this._fileEndsLeft;
          this.emit("file", partName, this._fileStream, {
            filename,
            encoding: partEncoding,
            mimeType: partType
          });
        } else {
          if (fields === fieldsLimit) {
            if (!hitFieldsLimit) {
              hitFieldsLimit = true;
              this.emit("fieldsLimit");
            }
            skipPart = true;
            return;
          }
          ++fields;
          if (this.listenerCount("field") === 0) {
            skipPart = true;
            return;
          }
          field = [];
          fieldSize = 0;
        }
      });
      let matchPostBoundary = 0;
      const ssCb = (isMatch, data, start, end, isDataSafe) => {
        retrydata:
          while (data) {
            if (this._hparser !== null) {
              const ret = this._hparser.push(data, start, end);
              if (ret === -1) {
                this._hparser = null;
                hparser.reset();
                this.emit("error", new Error("Malformed part header"));
                break;
              }
              start = ret;
            }
            if (start === end)
              break;
            if (matchPostBoundary !== 0) {
              if (matchPostBoundary === 1) {
                switch (data[start]) {
                  case 45:
                    matchPostBoundary = 2;
                    ++start;
                    break;
                  case 13:
                    matchPostBoundary = 3;
                    ++start;
                    break;
                  default:
                    matchPostBoundary = 0;
                }
                if (start === end)
                  return;
              }
              if (matchPostBoundary === 2) {
                matchPostBoundary = 0;
                if (data[start] === 45) {
                  this._complete = true;
                  this._bparser = ignoreData;
                  return;
                }
                const writecb = this._writecb;
                this._writecb = noop2;
                ssCb(false, BUF_DASH, 0, 1, false);
                this._writecb = writecb;
              } else if (matchPostBoundary === 3) {
                matchPostBoundary = 0;
                if (data[start] === 10) {
                  ++start;
                  if (parts >= partsLimit)
                    break;
                  this._hparser = hparser;
                  if (start === end)
                    break;
                  continue retrydata;
                } else {
                  const writecb = this._writecb;
                  this._writecb = noop2;
                  ssCb(false, BUF_CR, 0, 1, false);
                  this._writecb = writecb;
                }
              }
            }
            if (!skipPart) {
              if (this._fileStream) {
                let chunk;
                const actualLen = Math.min(end - start, fileSizeLimit - fileSize);
                if (!isDataSafe) {
                  chunk = Buffer.allocUnsafe(actualLen);
                  data.copy(chunk, 0, start, start + actualLen);
                } else {
                  chunk = data.slice(start, start + actualLen);
                }
                fileSize += chunk.length;
                if (fileSize === fileSizeLimit) {
                  if (chunk.length > 0)
                    this._fileStream.push(chunk);
                  this._fileStream.emit("limit");
                  this._fileStream.truncated = true;
                  skipPart = true;
                } else if (!this._fileStream.push(chunk)) {
                  if (this._writecb)
                    this._fileStream._readcb = this._writecb;
                  this._writecb = null;
                }
              } else if (field !== void 0) {
                let chunk;
                const actualLen = Math.min(end - start, fieldSizeLimit - fieldSize);
                if (!isDataSafe) {
                  chunk = Buffer.allocUnsafe(actualLen);
                  data.copy(chunk, 0, start, start + actualLen);
                } else {
                  chunk = data.slice(start, start + actualLen);
                }
                fieldSize += actualLen;
                field.push(chunk);
                if (fieldSize === fieldSizeLimit) {
                  skipPart = true;
                  partTruncated = true;
                }
              }
            }
            break;
          }
        if (isMatch) {
          matchPostBoundary = 1;
          if (this._fileStream) {
            this._fileStream.push(null);
            this._fileStream = null;
          } else if (field !== void 0) {
            let data2;
            switch (field.length) {
              case 0:
                data2 = "";
                break;
              case 1:
                data2 = convertToUTF8(field[0], partCharset, 0);
                break;
              default:
                data2 = convertToUTF8(Buffer.concat(field, fieldSize), partCharset, 0);
            }
            field = void 0;
            fieldSize = 0;
            this.emit("field", partName, data2, {
              nameTruncated: false,
              valueTruncated: partTruncated,
              encoding: partEncoding,
              mimeType: partType
            });
          }
          if (++parts === partsLimit)
            this.emit("partsLimit");
        }
      };
      this._bparser = new StreamSearch(`\r
--${boundary}`, ssCb);
      this._writecb = null;
      this._finalcb = null;
      this.write(BUF_CRLF);
    }
    static detect(conType) {
      return conType.type === "multipart" && conType.subtype === "form-data";
    }
    _write(chunk, enc, cb) {
      this._writecb = cb;
      this._bparser.push(chunk, 0);
      if (this._writecb)
        callAndUnsetCb(this);
    }
    _destroy(err, cb) {
      this._hparser = null;
      this._bparser = ignoreData;
      if (!err)
        err = checkEndState(this);
      const fileStream = this._fileStream;
      if (fileStream) {
        this._fileStream = null;
        fileStream.destroy(err);
      }
      cb(err);
    }
    _final(cb) {
      this._bparser.destroy();
      if (!this._complete)
        return cb(new Error("Unexpected end of form"));
      if (this._fileEndsLeft)
        this._finalcb = finalcb.bind(null, this, cb);
      else
        finalcb(this, cb);
    }
  }
  function finalcb(self2, cb, err) {
    if (err)
      return cb(err);
    err = checkEndState(self2);
    cb(err);
  }
  function checkEndState(self2) {
    if (self2._hparser)
      return new Error("Malformed part header");
    const fileStream = self2._fileStream;
    if (fileStream) {
      self2._fileStream = null;
      fileStream.destroy(new Error("Unexpected end of file"));
    }
    if (!self2._complete)
      return new Error("Unexpected end of form");
  }
  const TOKEN = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    1,
    1,
    0,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ];
  const FIELD_VCHAR = [
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1
  ];
  multipart = Multipart;
  return multipart;
}
var urlencoded;
var hasRequiredUrlencoded;
function requireUrlencoded() {
  if (hasRequiredUrlencoded)
    return urlencoded;
  hasRequiredUrlencoded = 1;
  const { Writable } = import_stream.default;
  const { getDecoder } = requireUtils$1();
  class URLEncoded extends Writable {
    constructor(cfg) {
      const streamOpts = {
        autoDestroy: true,
        emitClose: true,
        highWaterMark: typeof cfg.highWaterMark === "number" ? cfg.highWaterMark : void 0
      };
      super(streamOpts);
      let charset = cfg.defCharset || "utf8";
      if (cfg.conType.params && typeof cfg.conType.params.charset === "string")
        charset = cfg.conType.params.charset;
      this.charset = charset;
      const limits = cfg.limits;
      this.fieldSizeLimit = limits && typeof limits.fieldSize === "number" ? limits.fieldSize : 1 * 1024 * 1024;
      this.fieldsLimit = limits && typeof limits.fields === "number" ? limits.fields : Infinity;
      this.fieldNameSizeLimit = limits && typeof limits.fieldNameSize === "number" ? limits.fieldNameSize : 100;
      this._inKey = true;
      this._keyTrunc = false;
      this._valTrunc = false;
      this._bytesKey = 0;
      this._bytesVal = 0;
      this._fields = 0;
      this._key = "";
      this._val = "";
      this._byte = -2;
      this._lastPos = 0;
      this._encode = 0;
      this._decoder = getDecoder(charset);
    }
    static detect(conType) {
      return conType.type === "application" && conType.subtype === "x-www-form-urlencoded";
    }
    _write(chunk, enc, cb) {
      if (this._fields >= this.fieldsLimit)
        return cb();
      let i = 0;
      const len = chunk.length;
      this._lastPos = 0;
      if (this._byte !== -2) {
        i = readPctEnc(this, chunk, i, len);
        if (i === -1)
          return cb(new Error("Malformed urlencoded form"));
        if (i >= len)
          return cb();
        if (this._inKey)
          ++this._bytesKey;
        else
          ++this._bytesVal;
      }
      main:
        while (i < len) {
          if (this._inKey) {
            i = skipKeyBytes(this, chunk, i, len);
            while (i < len) {
              switch (chunk[i]) {
                case 61:
                  if (this._lastPos < i)
                    this._key += chunk.latin1Slice(this._lastPos, i);
                  this._lastPos = ++i;
                  this._key = this._decoder(this._key, this._encode);
                  this._encode = 0;
                  this._inKey = false;
                  continue main;
                case 38:
                  if (this._lastPos < i)
                    this._key += chunk.latin1Slice(this._lastPos, i);
                  this._lastPos = ++i;
                  this._key = this._decoder(this._key, this._encode);
                  this._encode = 0;
                  if (this._bytesKey > 0) {
                    this.emit("field", this._key, "", {
                      nameTruncated: this._keyTrunc,
                      valueTruncated: false,
                      encoding: this.charset,
                      mimeType: "text/plain"
                    });
                  }
                  this._key = "";
                  this._val = "";
                  this._keyTrunc = false;
                  this._valTrunc = false;
                  this._bytesKey = 0;
                  this._bytesVal = 0;
                  if (++this._fields >= this.fieldsLimit) {
                    this.emit("fieldsLimit");
                    return cb();
                  }
                  continue;
                case 43:
                  if (this._lastPos < i)
                    this._key += chunk.latin1Slice(this._lastPos, i);
                  this._key += " ";
                  this._lastPos = i + 1;
                  break;
                case 37:
                  if (this._encode === 0)
                    this._encode = 1;
                  if (this._lastPos < i)
                    this._key += chunk.latin1Slice(this._lastPos, i);
                  this._lastPos = i + 1;
                  this._byte = -1;
                  i = readPctEnc(this, chunk, i + 1, len);
                  if (i === -1)
                    return cb(new Error("Malformed urlencoded form"));
                  if (i >= len)
                    return cb();
                  ++this._bytesKey;
                  i = skipKeyBytes(this, chunk, i, len);
                  continue;
              }
              ++i;
              ++this._bytesKey;
              i = skipKeyBytes(this, chunk, i, len);
            }
            if (this._lastPos < i)
              this._key += chunk.latin1Slice(this._lastPos, i);
          } else {
            i = skipValBytes(this, chunk, i, len);
            while (i < len) {
              switch (chunk[i]) {
                case 38:
                  if (this._lastPos < i)
                    this._val += chunk.latin1Slice(this._lastPos, i);
                  this._lastPos = ++i;
                  this._inKey = true;
                  this._val = this._decoder(this._val, this._encode);
                  this._encode = 0;
                  if (this._bytesKey > 0 || this._bytesVal > 0) {
                    this.emit("field", this._key, this._val, {
                      nameTruncated: this._keyTrunc,
                      valueTruncated: this._valTrunc,
                      encoding: this.charset,
                      mimeType: "text/plain"
                    });
                  }
                  this._key = "";
                  this._val = "";
                  this._keyTrunc = false;
                  this._valTrunc = false;
                  this._bytesKey = 0;
                  this._bytesVal = 0;
                  if (++this._fields >= this.fieldsLimit) {
                    this.emit("fieldsLimit");
                    return cb();
                  }
                  continue main;
                case 43:
                  if (this._lastPos < i)
                    this._val += chunk.latin1Slice(this._lastPos, i);
                  this._val += " ";
                  this._lastPos = i + 1;
                  break;
                case 37:
                  if (this._encode === 0)
                    this._encode = 1;
                  if (this._lastPos < i)
                    this._val += chunk.latin1Slice(this._lastPos, i);
                  this._lastPos = i + 1;
                  this._byte = -1;
                  i = readPctEnc(this, chunk, i + 1, len);
                  if (i === -1)
                    return cb(new Error("Malformed urlencoded form"));
                  if (i >= len)
                    return cb();
                  ++this._bytesVal;
                  i = skipValBytes(this, chunk, i, len);
                  continue;
              }
              ++i;
              ++this._bytesVal;
              i = skipValBytes(this, chunk, i, len);
            }
            if (this._lastPos < i)
              this._val += chunk.latin1Slice(this._lastPos, i);
          }
        }
      cb();
    }
    _final(cb) {
      if (this._byte !== -2)
        return cb(new Error("Malformed urlencoded form"));
      if (!this._inKey || this._bytesKey > 0 || this._bytesVal > 0) {
        if (this._inKey)
          this._key = this._decoder(this._key, this._encode);
        else
          this._val = this._decoder(this._val, this._encode);
        this.emit("field", this._key, this._val, {
          nameTruncated: this._keyTrunc,
          valueTruncated: this._valTrunc,
          encoding: this.charset,
          mimeType: "text/plain"
        });
      }
      cb();
    }
  }
  function readPctEnc(self2, chunk, pos, len) {
    if (pos >= len)
      return len;
    if (self2._byte === -1) {
      const hexUpper = HEX_VALUES[chunk[pos++]];
      if (hexUpper === -1)
        return -1;
      if (hexUpper >= 8)
        self2._encode = 2;
      if (pos < len) {
        const hexLower = HEX_VALUES[chunk[pos++]];
        if (hexLower === -1)
          return -1;
        if (self2._inKey)
          self2._key += String.fromCharCode((hexUpper << 4) + hexLower);
        else
          self2._val += String.fromCharCode((hexUpper << 4) + hexLower);
        self2._byte = -2;
        self2._lastPos = pos;
      } else {
        self2._byte = hexUpper;
      }
    } else {
      const hexLower = HEX_VALUES[chunk[pos++]];
      if (hexLower === -1)
        return -1;
      if (self2._inKey)
        self2._key += String.fromCharCode((self2._byte << 4) + hexLower);
      else
        self2._val += String.fromCharCode((self2._byte << 4) + hexLower);
      self2._byte = -2;
      self2._lastPos = pos;
    }
    return pos;
  }
  function skipKeyBytes(self2, chunk, pos, len) {
    if (self2._bytesKey > self2.fieldNameSizeLimit) {
      if (!self2._keyTrunc) {
        if (self2._lastPos < pos)
          self2._key += chunk.latin1Slice(self2._lastPos, pos - 1);
      }
      self2._keyTrunc = true;
      for (; pos < len; ++pos) {
        const code = chunk[pos];
        if (code === 61 || code === 38)
          break;
        ++self2._bytesKey;
      }
      self2._lastPos = pos;
    }
    return pos;
  }
  function skipValBytes(self2, chunk, pos, len) {
    if (self2._bytesVal > self2.fieldSizeLimit) {
      if (!self2._valTrunc) {
        if (self2._lastPos < pos)
          self2._val += chunk.latin1Slice(self2._lastPos, pos - 1);
      }
      self2._valTrunc = true;
      for (; pos < len; ++pos) {
        if (chunk[pos] === 38)
          break;
        ++self2._bytesVal;
      }
      self2._lastPos = pos;
    }
    return pos;
  }
  const HEX_VALUES = [
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    10,
    11,
    12,
    13,
    14,
    15,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    10,
    11,
    12,
    13,
    14,
    15,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1,
    -1
  ];
  urlencoded = URLEncoded;
  return urlencoded;
}
var lib;
var hasRequiredLib;
function requireLib() {
  if (hasRequiredLib)
    return lib;
  hasRequiredLib = 1;
  const { parseContentType } = requireUtils$1();
  function getInstance(cfg) {
    const headers2 = cfg.headers;
    const conType = parseContentType(headers2["content-type"]);
    if (!conType)
      throw new Error("Malformed content type");
    for (const type of TYPES) {
      const matched = type.detect(conType);
      if (!matched)
        continue;
      const instanceCfg = {
        limits: cfg.limits,
        headers: headers2,
        conType,
        highWaterMark: void 0,
        fileHwm: void 0,
        defCharset: void 0,
        defParamCharset: void 0,
        preservePath: false
      };
      if (cfg.highWaterMark)
        instanceCfg.highWaterMark = cfg.highWaterMark;
      if (cfg.fileHwm)
        instanceCfg.fileHwm = cfg.fileHwm;
      instanceCfg.defCharset = cfg.defCharset;
      instanceCfg.defParamCharset = cfg.defParamCharset;
      instanceCfg.preservePath = cfg.preservePath;
      return new type(instanceCfg);
    }
    throw new Error(`Unsupported content type: ${headers2["content-type"]}`);
  }
  const TYPES = [
    requireMultipart(),
    requireUrlencoded()
  ].filter(function(typemod) {
    return typeof typemod.detect === "function";
  });
  lib = (cfg) => {
    if (typeof cfg !== "object" || cfg === null)
      cfg = {};
    if (typeof cfg.headers !== "object" || cfg.headers === null || typeof cfg.headers["content-type"] !== "string") {
      throw new Error("Missing Content-Type");
    }
    return getInstance(cfg);
  };
  return lib;
}
var constants$2;
var hasRequiredConstants$1;
function requireConstants$1() {
  if (hasRequiredConstants$1)
    return constants$2;
  hasRequiredConstants$1 = 1;
  const { MessageChannel, receiveMessageOnPort } = import_worker_threads.default;
  const corsSafeListedMethods = ["GET", "HEAD", "POST"];
  const nullBodyStatus = [101, 204, 205, 304];
  const redirectStatus = [301, 302, 303, 307, 308];
  const badPorts = [
    "1",
    "7",
    "9",
    "11",
    "13",
    "15",
    "17",
    "19",
    "20",
    "21",
    "22",
    "23",
    "25",
    "37",
    "42",
    "43",
    "53",
    "69",
    "77",
    "79",
    "87",
    "95",
    "101",
    "102",
    "103",
    "104",
    "109",
    "110",
    "111",
    "113",
    "115",
    "117",
    "119",
    "123",
    "135",
    "137",
    "139",
    "143",
    "161",
    "179",
    "389",
    "427",
    "465",
    "512",
    "513",
    "514",
    "515",
    "526",
    "530",
    "531",
    "532",
    "540",
    "548",
    "554",
    "556",
    "563",
    "587",
    "601",
    "636",
    "989",
    "990",
    "993",
    "995",
    "1719",
    "1720",
    "1723",
    "2049",
    "3659",
    "4045",
    "5060",
    "5061",
    "6000",
    "6566",
    "6665",
    "6666",
    "6667",
    "6668",
    "6669",
    "6697",
    "10080"
  ];
  const referrerPolicy = [
    "",
    "no-referrer",
    "no-referrer-when-downgrade",
    "same-origin",
    "origin",
    "strict-origin",
    "origin-when-cross-origin",
    "strict-origin-when-cross-origin",
    "unsafe-url"
  ];
  const requestRedirect = ["follow", "manual", "error"];
  const safeMethods = ["GET", "HEAD", "OPTIONS", "TRACE"];
  const requestMode = ["navigate", "same-origin", "no-cors", "cors"];
  const requestCredentials = ["omit", "same-origin", "include"];
  const requestCache = [
    "default",
    "no-store",
    "reload",
    "no-cache",
    "force-cache",
    "only-if-cached"
  ];
  const requestBodyHeader = [
    "content-encoding",
    "content-language",
    "content-location",
    "content-type"
  ];
  const requestDuplex = [
    "half"
  ];
  const forbiddenMethods = ["CONNECT", "TRACE", "TRACK"];
  const subresource = [
    "audio",
    "audioworklet",
    "font",
    "image",
    "manifest",
    "paintworklet",
    "script",
    "style",
    "track",
    "video",
    "xslt",
    ""
  ];
  const DOMException = globalThis.DOMException ?? (() => {
    try {
      atob("~");
    } catch (err) {
      return Object.getPrototypeOf(err).constructor;
    }
  })();
  let channel;
  const structuredClone = globalThis.structuredClone ?? function structuredClone2(value, options2 = void 0) {
    if (arguments.length === 0) {
      throw new TypeError("missing argument");
    }
    if (!channel) {
      channel = new MessageChannel();
    }
    channel.port1.unref();
    channel.port2.unref();
    channel.port1.postMessage(value, options2?.transfer);
    return receiveMessageOnPort(channel.port2).message;
  };
  constants$2 = {
    DOMException,
    structuredClone,
    subresource,
    forbiddenMethods,
    requestBodyHeader,
    referrerPolicy,
    requestRedirect,
    requestMode,
    requestCredentials,
    requestCache,
    redirectStatus,
    corsSafeListedMethods,
    nullBodyStatus,
    safeMethods,
    badPorts,
    requestDuplex
  };
  return constants$2;
}
var util$d;
var hasRequiredUtil$1;
function requireUtil$1() {
  if (hasRequiredUtil$1)
    return util$d;
  hasRequiredUtil$1 = 1;
  const { redirectStatus, badPorts, referrerPolicy: referrerPolicyTokens } = requireConstants$1();
  const { performance: performance2 } = import_perf_hooks.default;
  const { isBlobLike: isBlobLike2, toUSVString: toUSVString2, ReadableStreamFrom: ReadableStreamFrom2 } = util$e;
  const assert2 = import_assert.default;
  const { isUint8Array } = import_types.default;
  let crypto2;
  try {
    crypto2 = require("crypto");
  } catch {
  }
  function responseURL(response2) {
    const urlList = response2.urlList;
    const length = urlList.length;
    return length === 0 ? null : urlList[length - 1].toString();
  }
  function responseLocationURL(response2, requestFragment) {
    if (!redirectStatus.includes(response2.status)) {
      return null;
    }
    let location = response2.headersList.get("location");
    location = location ? new URL(location, responseURL(response2)) : null;
    if (location && !location.hash) {
      location.hash = requestFragment;
    }
    return location;
  }
  function requestCurrentURL(request2) {
    return request2.urlList[request2.urlList.length - 1];
  }
  function requestBadPort(request2) {
    const url = requestCurrentURL(request2);
    if (/^https?:/.test(url.protocol) && badPorts.includes(url.port)) {
      return "blocked";
    }
    return "allowed";
  }
  function isErrorLike(object) {
    return object instanceof Error || (object?.constructor?.name === "Error" || object?.constructor?.name === "DOMException");
  }
  function isValidReasonPhrase(statusText) {
    for (let i = 0; i < statusText.length; ++i) {
      const c = statusText.charCodeAt(i);
      if (!(c === 9 || c >= 32 && c <= 126 || c >= 128 && c <= 255)) {
        return false;
      }
    }
    return true;
  }
  function isTokenChar(c) {
    return !(c >= 127 || c <= 32 || c === "(" || c === ")" || c === "<" || c === ">" || c === "@" || c === "," || c === ";" || c === ":" || c === "\\" || c === '"' || c === "/" || c === "[" || c === "]" || c === "?" || c === "=" || c === "{" || c === "}");
  }
  function isValidHTTPToken(characters) {
    if (!characters || typeof characters !== "string") {
      return false;
    }
    for (let i = 0; i < characters.length; ++i) {
      const c = characters.charCodeAt(i);
      if (c > 127 || !isTokenChar(c)) {
        return false;
      }
    }
    return true;
  }
  function isValidHeaderName(potentialValue) {
    if (potentialValue.length === 0) {
      return false;
    }
    return isValidHTTPToken(potentialValue);
  }
  function isValidHeaderValue(potentialValue) {
    if (potentialValue.startsWith("	") || potentialValue.startsWith(" ") || potentialValue.endsWith("	") || potentialValue.endsWith(" ")) {
      return false;
    }
    if (potentialValue.includes("\0") || potentialValue.includes("\r") || potentialValue.includes("\n")) {
      return false;
    }
    return true;
  }
  function setRequestReferrerPolicyOnRedirect(request2, actualResponse) {
    const { headersList } = actualResponse;
    const policyHeader = (headersList.get("referrer-policy") ?? "").split(",");
    let policy = "";
    if (policyHeader.length > 0) {
      for (let i = policyHeader.length; i !== 0; i--) {
        const token = policyHeader[i - 1].trim();
        if (referrerPolicyTokens.includes(token)) {
          policy = token;
          break;
        }
      }
    }
    if (policy !== "") {
      request2.referrerPolicy = policy;
    }
  }
  function crossOriginResourcePolicyCheck() {
    return "allowed";
  }
  function corsCheck() {
    return "success";
  }
  function TAOCheck() {
    return "success";
  }
  function appendFetchMetadata(httpRequest) {
    let header = null;
    header = httpRequest.mode;
    httpRequest.headersList.set("sec-fetch-mode", header);
  }
  function appendRequestOriginHeader(request2) {
    let serializedOrigin = request2.origin;
    if (request2.responseTainting === "cors" || request2.mode === "websocket") {
      if (serializedOrigin) {
        request2.headersList.append("Origin", serializedOrigin);
      }
    } else if (request2.method !== "GET" && request2.method !== "HEAD") {
      switch (request2.referrerPolicy) {
        case "no-referrer":
          serializedOrigin = null;
          break;
        case "no-referrer-when-downgrade":
        case "strict-origin":
        case "strict-origin-when-cross-origin":
          if (/^https:/.test(request2.origin) && !/^https:/.test(requestCurrentURL(request2))) {
            serializedOrigin = null;
          }
          break;
        case "same-origin":
          if (!sameOrigin(request2, requestCurrentURL(request2))) {
            serializedOrigin = null;
          }
          break;
      }
      if (serializedOrigin) {
        request2.headersList.append("Origin", serializedOrigin);
      }
    }
  }
  function coarsenedSharedCurrentTime(crossOriginIsolatedCapability) {
    return performance2.now();
  }
  function createOpaqueTimingInfo(timingInfo) {
    return {
      startTime: timingInfo.startTime ?? 0,
      redirectStartTime: 0,
      redirectEndTime: 0,
      postRedirectStartTime: timingInfo.startTime ?? 0,
      finalServiceWorkerStartTime: 0,
      finalNetworkResponseStartTime: 0,
      finalNetworkRequestStartTime: 0,
      endTime: 0,
      encodedBodySize: 0,
      decodedBodySize: 0,
      finalConnectionTimingInfo: null
    };
  }
  function makePolicyContainer() {
    return {};
  }
  function clonePolicyContainer() {
    return {};
  }
  function determineRequestsReferrer(request2) {
    const policy = request2.referrerPolicy;
    if (policy == null || policy === "" || policy === "no-referrer") {
      return "no-referrer";
    }
    const environment = request2.client;
    let referrerSource = null;
    if (request2.referrer === "client") {
      if (request2.client?.globalObject?.constructor?.name === "Window") {
        const origin = environment.globalObject.self?.origin ?? environment.globalObject.location?.origin;
        if (origin == null || origin === "null")
          return "no-referrer";
        referrerSource = new URL(environment.globalObject.location.href);
      } else {
        if (environment?.globalObject?.location == null) {
          return "no-referrer";
        }
        referrerSource = new URL(environment.globalObject.location.href);
      }
    } else if (request2.referrer instanceof URL) {
      referrerSource = request2.referrer;
    } else {
      return "no-referrer";
    }
    const urlProtocol = referrerSource.protocol;
    if (urlProtocol === "about:" || urlProtocol === "data:" || urlProtocol === "blob:") {
      return "no-referrer";
    }
    let temp;
    let referrerOrigin;
    const referrerUrl = (temp = stripURLForReferrer(referrerSource)).length > 4096 ? referrerOrigin = stripURLForReferrer(referrerSource, true) : temp;
    const areSameOrigin = sameOrigin(request2, referrerUrl);
    const isNonPotentiallyTrustWorthy = isURLPotentiallyTrustworthy(referrerUrl) && !isURLPotentiallyTrustworthy(request2.url);
    switch (policy) {
      case "origin":
        return referrerOrigin != null ? referrerOrigin : stripURLForReferrer(referrerSource, true);
      case "unsafe-url":
        return referrerUrl;
      case "same-origin":
        return areSameOrigin ? referrerOrigin : "no-referrer";
      case "origin-when-cross-origin":
        return areSameOrigin ? referrerUrl : referrerOrigin;
      case "strict-origin-when-cross-origin":
        if (areSameOrigin)
          return referrerOrigin;
      case "strict-origin":
      case "no-referrer-when-downgrade":
      default:
        return isNonPotentiallyTrustWorthy ? "no-referrer" : referrerOrigin;
    }
    function stripURLForReferrer(url, originOnly = false) {
      const urlObject = new URL(url.href);
      urlObject.username = "";
      urlObject.password = "";
      urlObject.hash = "";
      return originOnly ? urlObject.origin : urlObject.href;
    }
  }
  function isURLPotentiallyTrustworthy(url) {
    if (!(url instanceof URL)) {
      return false;
    }
    if (url.href === "about:blank" || url.href === "about:srcdoc") {
      return true;
    }
    if (url.protocol === "data:")
      return true;
    if (url.protocol === "file:")
      return true;
    return isOriginPotentiallyTrustworthy(url.origin);
    function isOriginPotentiallyTrustworthy(origin) {
      if (origin == null || origin === "null")
        return false;
      const originAsURL = new URL(origin);
      if (originAsURL.protocol === "https:" || originAsURL.protocol === "wss:") {
        return true;
      }
      if (/^127(?:\.[0-9]+){0,2}\.[0-9]+$|^\[(?:0*:)*?:?0*1\]$/.test(originAsURL.hostname) || (originAsURL.hostname === "localhost" || originAsURL.hostname.includes("localhost.")) || originAsURL.hostname.endsWith(".localhost")) {
        return true;
      }
      return false;
    }
  }
  function bytesMatch(bytes, metadataList) {
    if (crypto2 === void 0) {
      return true;
    }
    const parsedMetadata = parseMetadata(metadataList);
    if (parsedMetadata === "no metadata") {
      return true;
    }
    if (parsedMetadata.length === 0) {
      return true;
    }
    const list = parsedMetadata.sort((c, d) => d.algo.localeCompare(c.algo));
    const strongest = list[0].algo;
    const metadata = list.filter((item) => item.algo === strongest);
    for (const item of metadata) {
      const algorithm = item.algo;
      const expectedValue = item.hash;
      const actualValue = crypto2.createHash(algorithm).update(bytes).digest("base64");
      if (actualValue === expectedValue) {
        return true;
      }
    }
    return false;
  }
  const parseHashWithOptions = /((?<algo>sha256|sha384|sha512)-(?<hash>[A-z0-9+/]{1}.*={0,2}))( +[\x21-\x7e]?)?/i;
  function parseMetadata(metadata) {
    const result = [];
    let empty = true;
    const supportedHashes = crypto2.getHashes();
    for (const token of metadata.split(" ")) {
      empty = false;
      const parsedToken = parseHashWithOptions.exec(token);
      if (parsedToken === null || parsedToken.groups === void 0) {
        continue;
      }
      const algorithm = parsedToken.groups.algo;
      if (supportedHashes.includes(algorithm.toLowerCase())) {
        result.push(parsedToken.groups);
      }
    }
    if (empty === true) {
      return "no metadata";
    }
    return result;
  }
  function tryUpgradeRequestToAPotentiallyTrustworthyURL(request2) {
  }
  function sameOrigin(A, B) {
    if (A.protocol === B.protocol && A.hostname === B.hostname && A.port === B.port) {
      return true;
    }
    return false;
  }
  function createDeferredPromise() {
    let res;
    let rej;
    const promise = new Promise((resolve, reject) => {
      res = resolve;
      rej = reject;
    });
    return { promise, resolve: res, reject: rej };
  }
  function isAborted(fetchParams) {
    return fetchParams.controller.state === "aborted";
  }
  function isCancelled(fetchParams) {
    return fetchParams.controller.state === "aborted" || fetchParams.controller.state === "terminated";
  }
  function normalizeMethod(method) {
    return /^(DELETE|GET|HEAD|OPTIONS|POST|PUT)$/i.test(method) ? method.toUpperCase() : method;
  }
  function serializeJavascriptValueToJSONString(value) {
    const result = JSON.stringify(value);
    if (result === void 0) {
      throw new TypeError("Value is not JSON serializable");
    }
    assert2(typeof result === "string");
    return result;
  }
  const esIteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));
  function makeIterator(iterator, name, kind) {
    const object = {
      index: 0,
      kind,
      target: iterator
    };
    const i = {
      next() {
        if (Object.getPrototypeOf(this) !== i) {
          throw new TypeError(`'next' called on an object that does not implement interface ${name} Iterator.`);
        }
        const { index: index5, kind: kind2, target } = object;
        const values = target();
        const len = values.length;
        if (index5 >= len) {
          return { value: void 0, done: true };
        }
        const pair = values[index5];
        object.index = index5 + 1;
        return iteratorResult(pair, kind2);
      },
      [Symbol.toStringTag]: `${name} Iterator`
    };
    Object.setPrototypeOf(i, esIteratorPrototype);
    return Object.setPrototypeOf({}, i);
  }
  function iteratorResult(pair, kind) {
    let result;
    switch (kind) {
      case "key": {
        result = pair[0];
        break;
      }
      case "value": {
        result = pair[1];
        break;
      }
      case "key+value": {
        result = pair;
        break;
      }
    }
    return { value: result, done: false };
  }
  async function fullyReadBody(body2, processBody, processBodyError) {
    try {
      const chunks = [];
      let length = 0;
      const reader = body2.stream.getReader();
      while (true) {
        const { done, value } = await reader.read();
        if (done === true) {
          break;
        }
        assert2(isUint8Array(value));
        chunks.push(value);
        length += value.byteLength;
      }
      const fulfilledSteps = (bytes) => queueMicrotask(() => {
        processBody(bytes);
      });
      fulfilledSteps(Buffer.concat(chunks, length));
    } catch (err) {
      queueMicrotask(() => processBodyError(err));
    }
  }
  let ReadableStream3 = globalThis.ReadableStream;
  function isReadableStreamLike(stream2) {
    if (!ReadableStream3) {
      ReadableStream3 = import_web.default.ReadableStream;
    }
    return stream2 instanceof ReadableStream3 || stream2[Symbol.toStringTag] === "ReadableStream" && typeof stream2.tee === "function";
  }
  const MAXIMUM_ARGUMENT_LENGTH = 65535;
  function isomorphicDecode(input) {
    if (input.length < MAXIMUM_ARGUMENT_LENGTH) {
      return String.fromCharCode(...input);
    }
    return input.reduce((previous, current) => previous + String.fromCharCode(current), "");
  }
  function readableStreamClose(controller) {
    try {
      controller.close();
    } catch (err) {
      if (!err.message.includes("Controller is already closed")) {
        throw err;
      }
    }
  }
  function isomorphicEncode(input) {
    for (let i = 0; i < input.length; i++) {
      assert2(input.charCodeAt(i) <= 255);
    }
    return input;
  }
  const hasOwn = Object.hasOwn || ((dict, key2) => Object.prototype.hasOwnProperty.call(dict, key2));
  util$d = {
    isAborted,
    isCancelled,
    createDeferredPromise,
    ReadableStreamFrom: ReadableStreamFrom2,
    toUSVString: toUSVString2,
    tryUpgradeRequestToAPotentiallyTrustworthyURL,
    coarsenedSharedCurrentTime,
    determineRequestsReferrer,
    makePolicyContainer,
    clonePolicyContainer,
    appendFetchMetadata,
    appendRequestOriginHeader,
    TAOCheck,
    corsCheck,
    crossOriginResourcePolicyCheck,
    createOpaqueTimingInfo,
    setRequestReferrerPolicyOnRedirect,
    isValidHTTPToken,
    requestBadPort,
    requestCurrentURL,
    responseURL,
    responseLocationURL,
    isBlobLike: isBlobLike2,
    isURLPotentiallyTrustworthy,
    isValidReasonPhrase,
    sameOrigin,
    normalizeMethod,
    serializeJavascriptValueToJSONString,
    makeIterator,
    isValidHeaderName,
    isValidHeaderValue,
    hasOwn,
    isErrorLike,
    fullyReadBody,
    bytesMatch,
    isReadableStreamLike,
    readableStreamClose,
    isomorphicEncode,
    isomorphicDecode
  };
  return util$d;
}
var symbols$1;
var hasRequiredSymbols$1;
function requireSymbols$1() {
  if (hasRequiredSymbols$1)
    return symbols$1;
  hasRequiredSymbols$1 = 1;
  symbols$1 = {
    kUrl: Symbol("url"),
    kHeaders: Symbol("headers"),
    kSignal: Symbol("signal"),
    kState: Symbol("state"),
    kGuard: Symbol("guard"),
    kRealm: Symbol("realm"),
    kHeadersCaseInsensitive: Symbol("headers case insensitive")
  };
  return symbols$1;
}
var webidl_1;
var hasRequiredWebidl;
function requireWebidl() {
  if (hasRequiredWebidl)
    return webidl_1;
  hasRequiredWebidl = 1;
  const { types } = import_util.default;
  const { hasOwn, toUSVString: toUSVString2 } = requireUtil$1();
  const webidl = {};
  webidl.converters = {};
  webidl.util = {};
  webidl.errors = {};
  webidl.errors.exception = function(message) {
    return new TypeError(`${message.header}: ${message.message}`);
  };
  webidl.errors.conversionFailed = function(context) {
    const plural = context.types.length === 1 ? "" : " one of";
    const message = `${context.argument} could not be converted to${plural}: ${context.types.join(", ")}.`;
    return webidl.errors.exception({
      header: context.prefix,
      message
    });
  };
  webidl.errors.invalidArgument = function(context) {
    return webidl.errors.exception({
      header: context.prefix,
      message: `"${context.value}" is an invalid ${context.type}.`
    });
  };
  webidl.brandCheck = function(V, I) {
    if (!(V instanceof I)) {
      throw new TypeError("Illegal invocation");
    }
  };
  webidl.argumentLengthCheck = function({ length }, min, ctx) {
    if (length < min) {
      throw webidl.errors.exception(__spreadValues({
        message: `${min} argument${min !== 1 ? "s" : ""} required, but${length ? " only" : ""} ${length} found.`
      }, ctx));
    }
  };
  webidl.util.Type = function(V) {
    switch (typeof V) {
      case "undefined":
        return "Undefined";
      case "boolean":
        return "Boolean";
      case "string":
        return "String";
      case "symbol":
        return "Symbol";
      case "number":
        return "Number";
      case "bigint":
        return "BigInt";
      case "function":
      case "object": {
        if (V === null) {
          return "Null";
        }
        return "Object";
      }
    }
  };
  webidl.util.ConvertToInt = function(V, bitLength, signedness, opts = {}) {
    let upperBound;
    let lowerBound;
    if (bitLength === 64) {
      upperBound = Math.pow(2, 53) - 1;
      if (signedness === "unsigned") {
        lowerBound = 0;
      } else {
        lowerBound = Math.pow(-2, 53) + 1;
      }
    } else if (signedness === "unsigned") {
      lowerBound = 0;
      upperBound = Math.pow(2, bitLength) - 1;
    } else {
      lowerBound = Math.pow(-2, bitLength) - 1;
      upperBound = Math.pow(2, bitLength - 1) - 1;
    }
    let x = Number(V);
    if (x === 0) {
      x = 0;
    }
    if (opts.enforceRange === true) {
      if (Number.isNaN(x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {
        throw webidl.errors.exception({
          header: "Integer conversion",
          message: `Could not convert ${V} to an integer.`
        });
      }
      x = webidl.util.IntegerPart(x);
      if (x < lowerBound || x > upperBound) {
        throw webidl.errors.exception({
          header: "Integer conversion",
          message: `Value must be between ${lowerBound}-${upperBound}, got ${x}.`
        });
      }
      return x;
    }
    if (!Number.isNaN(x) && opts.clamp === true) {
      x = Math.min(Math.max(x, lowerBound), upperBound);
      if (Math.floor(x) % 2 === 0) {
        x = Math.floor(x);
      } else {
        x = Math.ceil(x);
      }
      return x;
    }
    if (Number.isNaN(x) || x === 0 && Object.is(0, x) || x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY) {
      return 0;
    }
    x = webidl.util.IntegerPart(x);
    x = x % Math.pow(2, bitLength);
    if (signedness === "signed" && x >= Math.pow(2, bitLength) - 1) {
      return x - Math.pow(2, bitLength);
    }
    return x;
  };
  webidl.util.IntegerPart = function(n) {
    const r = Math.floor(Math.abs(n));
    if (n < 0) {
      return -1 * r;
    }
    return r;
  };
  webidl.sequenceConverter = function(converter) {
    return (V) => {
      if (webidl.util.Type(V) !== "Object") {
        throw webidl.errors.exception({
          header: "Sequence",
          message: `Value of type ${webidl.util.Type(V)} is not an Object.`
        });
      }
      const method = V?.[Symbol.iterator]?.();
      const seq = [];
      if (method === void 0 || typeof method.next !== "function") {
        throw webidl.errors.exception({
          header: "Sequence",
          message: "Object is not an iterator."
        });
      }
      while (true) {
        const { done, value } = method.next();
        if (done) {
          break;
        }
        seq.push(converter(value));
      }
      return seq;
    };
  };
  webidl.recordConverter = function(keyConverter, valueConverter) {
    return (O) => {
      if (webidl.util.Type(O) !== "Object") {
        throw webidl.errors.exception({
          header: "Record",
          message: `Value of type ${webidl.util.Type(O)} is not an Object.`
        });
      }
      const result = {};
      if (!types.isProxy(O)) {
        const keys2 = Object.keys(O);
        for (const key2 of keys2) {
          const typedKey = keyConverter(key2);
          const typedValue = valueConverter(O[key2]);
          result[typedKey] = typedValue;
        }
        return result;
      }
      const keys = Reflect.ownKeys(O);
      for (const key2 of keys) {
        const desc = Reflect.getOwnPropertyDescriptor(O, key2);
        if (desc?.enumerable) {
          const typedKey = keyConverter(key2);
          const typedValue = valueConverter(O[key2]);
          result[typedKey] = typedValue;
        }
      }
      return result;
    };
  };
  webidl.interfaceConverter = function(i) {
    return (V, opts = {}) => {
      if (opts.strict !== false && !(V instanceof i)) {
        throw webidl.errors.exception({
          header: i.name,
          message: `Expected ${V} to be an instance of ${i.name}.`
        });
      }
      return V;
    };
  };
  webidl.dictionaryConverter = function(converters) {
    return (dictionary) => {
      const type = webidl.util.Type(dictionary);
      const dict = {};
      if (type === "Null" || type === "Undefined") {
        return dict;
      } else if (type !== "Object") {
        throw webidl.errors.exception({
          header: "Dictionary",
          message: `Expected ${dictionary} to be one of: Null, Undefined, Object.`
        });
      }
      for (const options2 of converters) {
        const { key: key2, defaultValue, required, converter } = options2;
        if (required === true) {
          if (!hasOwn(dictionary, key2)) {
            throw webidl.errors.exception({
              header: "Dictionary",
              message: `Missing required key "${key2}".`
            });
          }
        }
        let value = dictionary[key2];
        const hasDefault = hasOwn(options2, "defaultValue");
        if (hasDefault && value !== null) {
          value = value ?? defaultValue;
        }
        if (required || hasDefault || value !== void 0) {
          value = converter(value);
          if (options2.allowedValues && !options2.allowedValues.includes(value)) {
            throw webidl.errors.exception({
              header: "Dictionary",
              message: `${value} is not an accepted type. Expected one of ${options2.allowedValues.join(", ")}.`
            });
          }
          dict[key2] = value;
        }
      }
      return dict;
    };
  };
  webidl.nullableConverter = function(converter) {
    return (V) => {
      if (V === null) {
        return V;
      }
      return converter(V);
    };
  };
  webidl.converters.DOMString = function(V, opts = {}) {
    if (V === null && opts.legacyNullToEmptyString) {
      return "";
    }
    if (typeof V === "symbol") {
      throw new TypeError("Could not convert argument of type symbol to string.");
    }
    return String(V);
  };
  webidl.converters.ByteString = function(V) {
    const x = webidl.converters.DOMString(V);
    for (let index5 = 0; index5 < x.length; index5++) {
      const charCode = x.charCodeAt(index5);
      if (charCode > 255) {
        throw new TypeError(`Cannot convert argument to a ByteString because the character at index ${index5} has a value of ${charCode} which is greater than 255.`);
      }
    }
    return x;
  };
  webidl.converters.USVString = toUSVString2;
  webidl.converters.boolean = function(V) {
    const x = Boolean(V);
    return x;
  };
  webidl.converters.any = function(V) {
    return V;
  };
  webidl.converters["long long"] = function(V) {
    const x = webidl.util.ConvertToInt(V, 64, "signed");
    return x;
  };
  webidl.converters["unsigned long long"] = function(V) {
    const x = webidl.util.ConvertToInt(V, 64, "unsigned");
    return x;
  };
  webidl.converters["unsigned short"] = function(V) {
    const x = webidl.util.ConvertToInt(V, 16, "unsigned");
    return x;
  };
  webidl.converters.ArrayBuffer = function(V, opts = {}) {
    if (webidl.util.Type(V) !== "Object" || !types.isAnyArrayBuffer(V)) {
      throw webidl.errors.conversionFailed({
        prefix: `${V}`,
        argument: `${V}`,
        types: ["ArrayBuffer"]
      });
    }
    if (opts.allowShared === false && types.isSharedArrayBuffer(V)) {
      throw webidl.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    }
    return V;
  };
  webidl.converters.TypedArray = function(V, T, opts = {}) {
    if (webidl.util.Type(V) !== "Object" || !types.isTypedArray(V) || V.constructor.name !== T.name) {
      throw webidl.errors.conversionFailed({
        prefix: `${T.name}`,
        argument: `${V}`,
        types: [T.name]
      });
    }
    if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
      throw webidl.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    }
    return V;
  };
  webidl.converters.DataView = function(V, opts = {}) {
    if (webidl.util.Type(V) !== "Object" || !types.isDataView(V)) {
      throw webidl.errors.exception({
        header: "DataView",
        message: "Object is not a DataView."
      });
    }
    if (opts.allowShared === false && types.isSharedArrayBuffer(V.buffer)) {
      throw webidl.errors.exception({
        header: "ArrayBuffer",
        message: "SharedArrayBuffer is not allowed."
      });
    }
    return V;
  };
  webidl.converters.BufferSource = function(V, opts = {}) {
    if (types.isAnyArrayBuffer(V)) {
      return webidl.converters.ArrayBuffer(V, opts);
    }
    if (types.isTypedArray(V)) {
      return webidl.converters.TypedArray(V, V.constructor);
    }
    if (types.isDataView(V)) {
      return webidl.converters.DataView(V, opts);
    }
    throw new TypeError(`Could not convert ${V} to a BufferSource.`);
  };
  webidl.converters["sequence<ByteString>"] = webidl.sequenceConverter(webidl.converters.ByteString);
  webidl.converters["sequence<sequence<ByteString>>"] = webidl.sequenceConverter(webidl.converters["sequence<ByteString>"]);
  webidl.converters["record<ByteString, ByteString>"] = webidl.recordConverter(webidl.converters.ByteString, webidl.converters.ByteString);
  webidl_1 = {
    webidl
  };
  return webidl_1;
}
var dataURL;
var hasRequiredDataURL;
function requireDataURL() {
  if (hasRequiredDataURL)
    return dataURL;
  hasRequiredDataURL = 1;
  const assert2 = import_assert.default;
  const { atob: atob2 } = import_buffer.default;
  const { format } = import_url.default;
  const { isValidHTTPToken, isomorphicDecode } = requireUtil$1();
  const encoder2 = new TextEncoder();
  function dataURLProcessor(dataURL2) {
    assert2(dataURL2.protocol === "data:");
    let input = URLSerializer(dataURL2, true);
    input = input.slice(5);
    const position = { position: 0 };
    let mimeType = collectASequenceOfCodePoints((char) => char !== ",", input, position);
    const mimeTypeLength = mimeType.length;
    mimeType = mimeType.replace(/^(\u0020)+|(\u0020)+$/g, "");
    if (position.position >= input.length) {
      return "failure";
    }
    position.position++;
    const encodedBody = input.slice(mimeTypeLength + 1);
    let body2 = stringPercentDecode(encodedBody);
    if (/;(\u0020){0,}base64$/i.test(mimeType)) {
      const stringBody = isomorphicDecode(body2);
      body2 = forgivingBase64(stringBody);
      if (body2 === "failure") {
        return "failure";
      }
      mimeType = mimeType.slice(0, -6);
      mimeType = mimeType.replace(/(\u0020)+$/, "");
      mimeType = mimeType.slice(0, -1);
    }
    if (mimeType.startsWith(";")) {
      mimeType = "text/plain" + mimeType;
    }
    let mimeTypeRecord = parseMIMEType(mimeType);
    if (mimeTypeRecord === "failure") {
      mimeTypeRecord = parseMIMEType("text/plain;charset=US-ASCII");
    }
    return { mimeType: mimeTypeRecord, body: body2 };
  }
  function URLSerializer(url, excludeFragment = false) {
    return format(url, { fragment: !excludeFragment });
  }
  function collectASequenceOfCodePoints(condition, input, position) {
    let result = "";
    while (position.position < input.length && condition(input[position.position])) {
      result += input[position.position];
      position.position++;
    }
    return result;
  }
  function stringPercentDecode(input) {
    const bytes = encoder2.encode(input);
    return percentDecode(bytes);
  }
  function percentDecode(input) {
    const output = [];
    for (let i = 0; i < input.length; i++) {
      const byte = input[i];
      if (byte !== 37) {
        output.push(byte);
      } else if (byte === 37 && !/^[0-9A-Fa-f]{2}$/i.test(String.fromCharCode(input[i + 1], input[i + 2]))) {
        output.push(37);
      } else {
        const nextTwoBytes = String.fromCharCode(input[i + 1], input[i + 2]);
        const bytePoint = Number.parseInt(nextTwoBytes, 16);
        output.push(bytePoint);
        i += 2;
      }
    }
    return Uint8Array.from(output);
  }
  function parseMIMEType(input) {
    input = input.trim();
    const position = { position: 0 };
    const type = collectASequenceOfCodePoints((char) => char !== "/", input, position);
    if (type.length === 0 || !/^[!#$%&'*+-.^_|~A-z0-9]+$/.test(type)) {
      return "failure";
    }
    if (position.position > input.length) {
      return "failure";
    }
    position.position++;
    let subtype = collectASequenceOfCodePoints((char) => char !== ";", input, position);
    subtype = subtype.trimEnd();
    if (subtype.length === 0 || !/^[!#$%&'*+-.^_|~A-z0-9]+$/.test(subtype)) {
      return "failure";
    }
    const mimeType = {
      type: type.toLowerCase(),
      subtype: subtype.toLowerCase(),
      parameters: /* @__PURE__ */ new Map(),
      get essence() {
        return `${this.type}/${this.subtype}`;
      }
    };
    while (position.position < input.length) {
      position.position++;
      collectASequenceOfCodePoints((char) => /(\u000A|\u000D|\u0009|\u0020)/.test(char), input, position);
      let parameterName = collectASequenceOfCodePoints((char) => char !== ";" && char !== "=", input, position);
      parameterName = parameterName.toLowerCase();
      if (position.position < input.length) {
        if (input[position.position] === ";") {
          continue;
        }
        position.position++;
      }
      if (position.position > input.length) {
        break;
      }
      let parameterValue = null;
      if (input[position.position] === '"') {
        parameterValue = collectAnHTTPQuotedString(input, position, true);
        collectASequenceOfCodePoints((char) => char !== ";", input, position);
      } else {
        parameterValue = collectASequenceOfCodePoints((char) => char !== ";", input, position);
        parameterValue = parameterValue.trimEnd();
        if (parameterValue.length === 0) {
          continue;
        }
      }
      if (parameterName.length !== 0 && /^[!#$%&'*+-.^_|~A-z0-9]+$/.test(parameterName) && !/^(\u0009|\x{0020}-\x{007E}|\x{0080}-\x{00FF})+$/.test(parameterValue) && !mimeType.parameters.has(parameterName)) {
        mimeType.parameters.set(parameterName, parameterValue);
      }
    }
    return mimeType;
  }
  function forgivingBase64(data) {
    data = data.replace(/[\u0009\u000A\u000C\u000D\u0020]/g, "");
    if (data.length % 4 === 0) {
      data = data.replace(/=?=$/, "");
    }
    if (data.length % 4 === 1) {
      return "failure";
    }
    if (/[^+/0-9A-Za-z]/.test(data)) {
      return "failure";
    }
    const binary = atob2(data);
    const bytes = new Uint8Array(binary.length);
    for (let byte = 0; byte < binary.length; byte++) {
      bytes[byte] = binary.charCodeAt(byte);
    }
    return bytes;
  }
  function collectAnHTTPQuotedString(input, position, extractValue) {
    const positionStart = position.position;
    let value = "";
    assert2(input[position.position] === '"');
    position.position++;
    while (true) {
      value += collectASequenceOfCodePoints((char) => char !== '"' && char !== "\\", input, position);
      if (position.position >= input.length) {
        break;
      }
      const quoteOrBackslash = input[position.position];
      position.position++;
      if (quoteOrBackslash === "\\") {
        if (position.position >= input.length) {
          value += "\\";
          break;
        }
        value += input[position.position];
        position.position++;
      } else {
        assert2(quoteOrBackslash === '"');
        break;
      }
    }
    if (extractValue) {
      return value;
    }
    return input.slice(positionStart, position.position);
  }
  function serializeAMimeType(mimeType) {
    assert2(mimeType !== "failure");
    const { type, subtype, parameters } = mimeType;
    let serialization = `${type}/${subtype}`;
    for (let [name, value] of parameters.entries()) {
      serialization += ";";
      serialization += name;
      serialization += "=";
      if (!isValidHTTPToken(value)) {
        value = value.replace(/(\\|")/g, "\\$1");
        value = '"' + value;
        value += '"';
      }
      serialization += value;
    }
    return serialization;
  }
  dataURL = {
    dataURLProcessor,
    URLSerializer,
    collectASequenceOfCodePoints,
    stringPercentDecode,
    parseMIMEType,
    collectAnHTTPQuotedString,
    serializeAMimeType
  };
  return dataURL;
}
var file;
var hasRequiredFile;
function requireFile() {
  if (hasRequiredFile)
    return file;
  hasRequiredFile = 1;
  const { Blob: Blob3, File: NativeFile } = import_buffer.default;
  const { types } = import_util.default;
  const { kState } = requireSymbols$1();
  const { isBlobLike: isBlobLike2 } = requireUtil$1();
  const { webidl } = requireWebidl();
  const { parseMIMEType, serializeAMimeType } = requireDataURL();
  const { kEnumerableProperty: kEnumerableProperty2 } = util$e;
  class File extends Blob3 {
    constructor(fileBits, fileName, options2 = {}) {
      webidl.argumentLengthCheck(arguments, 2, { header: "File constructor" });
      fileBits = webidl.converters["sequence<BlobPart>"](fileBits);
      fileName = webidl.converters.USVString(fileName);
      options2 = webidl.converters.FilePropertyBag(options2);
      const n = fileName;
      let t = options2.type;
      let d;
      substep: {
        if (t) {
          t = parseMIMEType(t);
          if (t === "failure") {
            t = "";
            break substep;
          }
          t = serializeAMimeType(t).toLowerCase();
        }
        d = options2.lastModified;
      }
      super(processBlobParts(fileBits, options2), { type: t });
      this[kState] = {
        name: n,
        lastModified: d,
        type: t
      };
    }
    get name() {
      webidl.brandCheck(this, File);
      return this[kState].name;
    }
    get lastModified() {
      webidl.brandCheck(this, File);
      return this[kState].lastModified;
    }
    get type() {
      webidl.brandCheck(this, File);
      return this[kState].type;
    }
  }
  class FileLike {
    constructor(blobLike, fileName, options2 = {}) {
      const n = fileName;
      const t = options2.type;
      const d = options2.lastModified ?? Date.now();
      this[kState] = {
        blobLike,
        name: n,
        type: t,
        lastModified: d
      };
    }
    stream(...args) {
      webidl.brandCheck(this, FileLike);
      return this[kState].blobLike.stream(...args);
    }
    arrayBuffer(...args) {
      webidl.brandCheck(this, FileLike);
      return this[kState].blobLike.arrayBuffer(...args);
    }
    slice(...args) {
      webidl.brandCheck(this, FileLike);
      return this[kState].blobLike.slice(...args);
    }
    text(...args) {
      webidl.brandCheck(this, FileLike);
      return this[kState].blobLike.text(...args);
    }
    get size() {
      webidl.brandCheck(this, FileLike);
      return this[kState].blobLike.size;
    }
    get type() {
      webidl.brandCheck(this, FileLike);
      return this[kState].blobLike.type;
    }
    get name() {
      webidl.brandCheck(this, FileLike);
      return this[kState].name;
    }
    get lastModified() {
      webidl.brandCheck(this, FileLike);
      return this[kState].lastModified;
    }
    get [Symbol.toStringTag]() {
      return "File";
    }
  }
  Object.defineProperties(File.prototype, {
    [Symbol.toStringTag]: {
      value: "File",
      configurable: true
    },
    name: kEnumerableProperty2,
    lastModified: kEnumerableProperty2
  });
  webidl.converters.Blob = webidl.interfaceConverter(Blob3);
  webidl.converters.BlobPart = function(V, opts) {
    if (webidl.util.Type(V) === "Object") {
      if (isBlobLike2(V)) {
        return webidl.converters.Blob(V, { strict: false });
      }
      if (ArrayBuffer.isView(V) || types.isAnyArrayBuffer(V)) {
        return webidl.converters.BufferSource(V, opts);
      }
    }
    return webidl.converters.USVString(V, opts);
  };
  webidl.converters["sequence<BlobPart>"] = webidl.sequenceConverter(webidl.converters.BlobPart);
  webidl.converters.FilePropertyBag = webidl.dictionaryConverter([
    {
      key: "lastModified",
      converter: webidl.converters["long long"],
      get defaultValue() {
        return Date.now();
      }
    },
    {
      key: "type",
      converter: webidl.converters.DOMString,
      defaultValue: ""
    },
    {
      key: "endings",
      converter: (value) => {
        value = webidl.converters.DOMString(value);
        value = value.toLowerCase();
        if (value !== "native") {
          value = "transparent";
        }
        return value;
      },
      defaultValue: "transparent"
    }
  ]);
  function processBlobParts(parts, options2) {
    const bytes = [];
    for (const element of parts) {
      if (typeof element === "string") {
        let s2 = element;
        if (options2.endings === "native") {
          s2 = convertLineEndingsNative(s2);
        }
        bytes.push(new TextEncoder().encode(s2));
      } else if (types.isAnyArrayBuffer(element) || types.isTypedArray(element)) {
        if (!element.buffer) {
          bytes.push(new Uint8Array(element));
        } else {
          bytes.push(new Uint8Array(element.buffer, element.byteOffset, element.byteLength));
        }
      } else if (isBlobLike2(element)) {
        bytes.push(element);
      }
    }
    return bytes;
  }
  function convertLineEndingsNative(s2) {
    let nativeLineEnding = "\n";
    if (process.platform === "win32") {
      nativeLineEnding = "\r\n";
    }
    return s2.replace(/\r?\n/g, nativeLineEnding);
  }
  function isFileLike(object) {
    return NativeFile && object instanceof NativeFile || object instanceof File || object && (typeof object.stream === "function" || typeof object.arrayBuffer === "function") && object[Symbol.toStringTag] === "File";
  }
  file = { File, FileLike, isFileLike };
  return file;
}
var formdata;
var hasRequiredFormdata;
function requireFormdata() {
  if (hasRequiredFormdata)
    return formdata;
  hasRequiredFormdata = 1;
  const { isBlobLike: isBlobLike2, toUSVString: toUSVString2, makeIterator } = requireUtil$1();
  const { kState } = requireSymbols$1();
  const { File: UndiciFile, FileLike, isFileLike } = requireFile();
  const { webidl } = requireWebidl();
  const { Blob: Blob3, File: NativeFile } = import_buffer.default;
  const File = NativeFile ?? UndiciFile;
  class FormData2 {
    constructor(form) {
      if (form !== void 0) {
        throw webidl.errors.conversionFailed({
          prefix: "FormData constructor",
          argument: "Argument 1",
          types: ["undefined"]
        });
      }
      this[kState] = [];
    }
    append(name, value, filename = void 0) {
      webidl.brandCheck(this, FormData2);
      webidl.argumentLengthCheck(arguments, 2, { header: "FormData.append" });
      if (arguments.length === 3 && !isBlobLike2(value)) {
        throw new TypeError("Failed to execute 'append' on 'FormData': parameter 2 is not of type 'Blob'");
      }
      name = webidl.converters.USVString(name);
      value = isBlobLike2(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);
      filename = arguments.length === 3 ? webidl.converters.USVString(filename) : void 0;
      const entry = makeEntry(name, value, filename);
      this[kState].push(entry);
    }
    delete(name) {
      webidl.brandCheck(this, FormData2);
      webidl.argumentLengthCheck(arguments, 1, { header: "FormData.delete" });
      name = webidl.converters.USVString(name);
      const next = [];
      for (const entry of this[kState]) {
        if (entry.name !== name) {
          next.push(entry);
        }
      }
      this[kState] = next;
    }
    get(name) {
      webidl.brandCheck(this, FormData2);
      webidl.argumentLengthCheck(arguments, 1, { header: "FormData.get" });
      name = webidl.converters.USVString(name);
      const idx = this[kState].findIndex((entry) => entry.name === name);
      if (idx === -1) {
        return null;
      }
      return this[kState][idx].value;
    }
    getAll(name) {
      webidl.brandCheck(this, FormData2);
      webidl.argumentLengthCheck(arguments, 1, { header: "FormData.getAll" });
      name = webidl.converters.USVString(name);
      return this[kState].filter((entry) => entry.name === name).map((entry) => entry.value);
    }
    has(name) {
      webidl.brandCheck(this, FormData2);
      webidl.argumentLengthCheck(arguments, 1, { header: "FormData.has" });
      name = webidl.converters.USVString(name);
      return this[kState].findIndex((entry) => entry.name === name) !== -1;
    }
    set(name, value, filename = void 0) {
      webidl.brandCheck(this, FormData2);
      webidl.argumentLengthCheck(arguments, 2, { header: "FormData.set" });
      if (arguments.length === 3 && !isBlobLike2(value)) {
        throw new TypeError("Failed to execute 'set' on 'FormData': parameter 2 is not of type 'Blob'");
      }
      name = webidl.converters.USVString(name);
      value = isBlobLike2(value) ? webidl.converters.Blob(value, { strict: false }) : webidl.converters.USVString(value);
      filename = arguments.length === 3 ? toUSVString2(filename) : void 0;
      const entry = makeEntry(name, value, filename);
      const idx = this[kState].findIndex((entry2) => entry2.name === name);
      if (idx !== -1) {
        this[kState] = [
          ...this[kState].slice(0, idx),
          entry,
          ...this[kState].slice(idx + 1).filter((entry2) => entry2.name !== name)
        ];
      } else {
        this[kState].push(entry);
      }
    }
    entries() {
      webidl.brandCheck(this, FormData2);
      return makeIterator(() => this[kState].map((pair) => [pair.name, pair.value]), "FormData", "key+value");
    }
    keys() {
      webidl.brandCheck(this, FormData2);
      return makeIterator(() => this[kState].map((pair) => [pair.name, pair.value]), "FormData", "key");
    }
    values() {
      webidl.brandCheck(this, FormData2);
      return makeIterator(() => this[kState].map((pair) => [pair.name, pair.value]), "FormData", "value");
    }
    forEach(callbackFn, thisArg = globalThis) {
      webidl.brandCheck(this, FormData2);
      webidl.argumentLengthCheck(arguments, 1, { header: "FormData.forEach" });
      if (typeof callbackFn !== "function") {
        throw new TypeError("Failed to execute 'forEach' on 'FormData': parameter 1 is not of type 'Function'.");
      }
      for (const [key2, value] of this) {
        callbackFn.apply(thisArg, [value, key2, this]);
      }
    }
  }
  FormData2.prototype[Symbol.iterator] = FormData2.prototype.entries;
  Object.defineProperties(FormData2.prototype, {
    [Symbol.toStringTag]: {
      value: "FormData",
      configurable: true
    }
  });
  function makeEntry(name, value, filename) {
    name = Buffer.from(name).toString("utf8");
    if (typeof value === "string") {
      value = Buffer.from(value).toString("utf8");
    } else {
      if (!isFileLike(value)) {
        value = value instanceof Blob3 ? new File([value], "blob", { type: value.type }) : new FileLike(value, "blob", { type: value.type });
      }
      if (filename !== void 0) {
        const options2 = {
          type: value.type,
          lastModified: value.lastModified
        };
        value = value instanceof File ? new File([value], filename, options2) : new FileLike(value, filename, options2);
      }
    }
    return { name, value };
  }
  formdata = { FormData: FormData2 };
  return formdata;
}
var body;
var hasRequiredBody;
function requireBody() {
  if (hasRequiredBody)
    return body;
  hasRequiredBody = 1;
  const Busboy = requireLib();
  const util2 = util$e;
  const { ReadableStreamFrom: ReadableStreamFrom2, isBlobLike: isBlobLike2, isReadableStreamLike, readableStreamClose } = requireUtil$1();
  const { FormData: FormData2 } = requireFormdata();
  const { kState } = requireSymbols$1();
  const { webidl } = requireWebidl();
  const { DOMException, structuredClone } = requireConstants$1();
  const { Blob: Blob3, File: NativeFile } = import_buffer.default;
  const { kBodyUsed: kBodyUsed2 } = symbols$2;
  const assert2 = import_assert.default;
  const { isErrored: isErrored2 } = util$e;
  const { isUint8Array, isArrayBuffer } = import_types.default;
  const { File: UndiciFile } = requireFile();
  const { StringDecoder } = import_string_decoder.default;
  const { parseMIMEType, serializeAMimeType } = requireDataURL();
  let ReadableStream3 = globalThis.ReadableStream;
  const File = NativeFile ?? UndiciFile;
  function extractBody2(object, keepalive = false) {
    if (!ReadableStream3) {
      ReadableStream3 = import_web.default.ReadableStream;
    }
    let stream2 = null;
    if (object instanceof ReadableStream3) {
      stream2 = object;
    } else if (isBlobLike2(object)) {
      stream2 = object.stream();
    } else {
      stream2 = new ReadableStream3({
        async pull(controller) {
          controller.enqueue(typeof source === "string" ? new TextEncoder().encode(source) : source);
          queueMicrotask(() => readableStreamClose(controller));
        },
        start() {
        },
        type: void 0
      });
    }
    assert2(isReadableStreamLike(stream2));
    let action = null;
    let source = null;
    let length = null;
    let type = null;
    if (typeof object === "string") {
      source = object;
      type = "text/plain;charset=UTF-8";
    } else if (object instanceof URLSearchParams) {
      source = object.toString();
      type = "application/x-www-form-urlencoded;charset=UTF-8";
    } else if (isArrayBuffer(object)) {
      source = new Uint8Array(object.slice());
    } else if (ArrayBuffer.isView(object)) {
      source = new Uint8Array(object.buffer.slice(object.byteOffset, object.byteOffset + object.byteLength));
    } else if (util2.isFormDataLike(object)) {
      const boundary = "----formdata-undici-" + Math.random();
      const prefix = `--${boundary}\r
Content-Disposition: form-data`;
      const escape2 = (str) => str.replace(/\n/g, "%0A").replace(/\r/g, "%0D").replace(/"/g, "%22");
      const normalizeLinefeeds = (value) => value.replace(/\r?\n|\r/g, "\r\n");
      action = async function* (object2) {
        const enc = new TextEncoder();
        for (const [name, value] of object2) {
          if (typeof value === "string") {
            yield enc.encode(prefix + `; name="${escape2(normalizeLinefeeds(name))}"\r
\r
${normalizeLinefeeds(value)}\r
`);
          } else {
            yield enc.encode(prefix + `; name="${escape2(normalizeLinefeeds(name))}"` + (value.name ? `; filename="${escape2(value.name)}"` : "") + `\r
Content-Type: ${value.type || "application/octet-stream"}\r
\r
`);
            yield* value.stream();
            yield new Uint8Array([13, 10]);
          }
        }
        yield enc.encode(`--${boundary}--`);
      };
      source = object;
      length = (() => {
        const prefixLength = prefix.length;
        const boundaryLength = boundary.length;
        let bodyLength2 = 0;
        for (const [name, value] of object) {
          if (typeof value === "string") {
            bodyLength2 += prefixLength + Buffer.byteLength(`; name="${escape2(normalizeLinefeeds(name))}"\r
\r
${normalizeLinefeeds(value)}\r
`);
          } else {
            bodyLength2 += prefixLength + Buffer.byteLength(`; name="${escape2(normalizeLinefeeds(name))}"` + (value.name ? `; filename="${escape2(value.name)}"` : "")) + 2 + `Content-Type: ${value.type || "application/octet-stream"}\r
\r
`.length;
            bodyLength2 += value.size + 2;
          }
        }
        bodyLength2 += boundaryLength + 4;
        return bodyLength2;
      })();
      type = "multipart/form-data; boundary=" + boundary;
    } else if (isBlobLike2(object)) {
      source = object;
      length = object.size;
      if (object.type) {
        type = object.type;
      }
    } else if (object instanceof Uint8Array) {
      source = object;
    } else if (typeof object[Symbol.asyncIterator] === "function") {
      if (keepalive) {
        throw new TypeError("keepalive");
      }
      if (util2.isDisturbed(object) || object.locked) {
        throw new TypeError("Response body object should not be disturbed or locked");
      }
      stream2 = object instanceof ReadableStream3 ? object : ReadableStreamFrom2(object);
    }
    if (typeof source === "string" || util2.isBuffer(source)) {
      length = Buffer.byteLength(source);
    }
    if (action != null) {
      let iterator;
      stream2 = new ReadableStream3({
        async start() {
          iterator = action(object)[Symbol.asyncIterator]();
        },
        async pull(controller) {
          const { value, done } = await iterator.next();
          if (done) {
            queueMicrotask(() => {
              controller.close();
            });
          } else {
            if (!isErrored2(stream2)) {
              controller.enqueue(new Uint8Array(value));
            }
          }
          return controller.desiredSize > 0;
        },
        async cancel(reason) {
          await iterator.return();
        },
        type: void 0
      });
    }
    const body2 = { stream: stream2, source, length };
    return [body2, type];
  }
  function safelyExtractBody(object, keepalive = false) {
    if (!ReadableStream3) {
      ReadableStream3 = import_web.default.ReadableStream;
    }
    if (object instanceof ReadableStream3) {
      assert2(!util2.isDisturbed(object), "The body has already been consumed.");
      assert2(!object.locked, "The stream is locked.");
    }
    return extractBody2(object, keepalive);
  }
  function cloneBody(body2) {
    const [out1, out2] = body2.stream.tee();
    const out2Clone = structuredClone(out2, { transfer: [out2] });
    const [, finalClone] = out2Clone.tee();
    body2.stream = out1;
    return {
      stream: finalClone,
      length: body2.length,
      source: body2.source
    };
  }
  async function* consumeBody(body2) {
    if (body2) {
      if (isUint8Array(body2)) {
        yield body2;
      } else {
        const stream2 = body2.stream;
        if (util2.isDisturbed(stream2)) {
          throw new TypeError("The body has already been consumed.");
        }
        if (stream2.locked) {
          throw new TypeError("The stream is locked.");
        }
        stream2[kBodyUsed2] = true;
        yield* stream2;
      }
    }
  }
  function throwIfAborted(state) {
    if (state.aborted) {
      throw new DOMException("The operation was aborted.", "AbortError");
    }
  }
  function bodyMixinMethods(instance) {
    const methods = {
      blob() {
        return specConsumeBody(this, "Blob", instance);
      },
      arrayBuffer() {
        return specConsumeBody(this, "ArrayBuffer", instance);
      },
      text() {
        return specConsumeBody(this, "text", instance);
      },
      json() {
        return specConsumeBody(this, "JSON", instance);
      },
      async formData() {
        webidl.brandCheck(this, instance);
        throwIfAborted(this[kState]);
        const contentType = this.headers.get("Content-Type");
        if (/multipart\/form-data/.test(contentType)) {
          const headers2 = {};
          for (const [key2, value] of this.headers)
            headers2[key2.toLowerCase()] = value;
          const responseFormData = new FormData2();
          let busboy;
          try {
            busboy = Busboy({
              headers: headers2,
              defParamCharset: "utf8"
            });
          } catch (err) {
            throw Object.assign(new TypeError(), { cause: err });
          }
          busboy.on("field", (name, value) => {
            responseFormData.append(name, value);
          });
          busboy.on("file", (name, value, info) => {
            const { filename, encoding: encoding2, mimeType } = info;
            const chunks = [];
            if (encoding2 === "base64" || encoding2.toLowerCase() === "base64") {
              let base64chunk = "";
              value.on("data", (chunk) => {
                base64chunk += chunk.toString().replace(/[\r\n]/gm, "");
                const end = base64chunk.length - base64chunk.length % 4;
                chunks.push(Buffer.from(base64chunk.slice(0, end), "base64"));
                base64chunk = base64chunk.slice(end);
              });
              value.on("end", () => {
                chunks.push(Buffer.from(base64chunk, "base64"));
                responseFormData.append(name, new File(chunks, filename, { type: mimeType }));
              });
            } else {
              value.on("data", (chunk) => {
                chunks.push(chunk);
              });
              value.on("end", () => {
                responseFormData.append(name, new File(chunks, filename, { type: mimeType }));
              });
            }
          });
          const busboyResolve = new Promise((resolve, reject) => {
            busboy.on("finish", resolve);
            busboy.on("error", (err) => reject(new TypeError(err)));
          });
          if (this.body !== null)
            for await (const chunk of consumeBody(this[kState].body))
              busboy.write(chunk);
          busboy.end();
          await busboyResolve;
          return responseFormData;
        } else if (/application\/x-www-form-urlencoded/.test(contentType)) {
          let entries;
          try {
            let text2 = "";
            const textDecoder = new TextDecoder("utf-8", { ignoreBOM: true });
            for await (const chunk of consumeBody(this[kState].body)) {
              if (!isUint8Array(chunk)) {
                throw new TypeError("Expected Uint8Array chunk");
              }
              text2 += textDecoder.decode(chunk, { stream: true });
            }
            text2 += textDecoder.decode();
            entries = new URLSearchParams(text2);
          } catch (err) {
            throw Object.assign(new TypeError(), { cause: err });
          }
          const formData = new FormData2();
          for (const [name, value] of entries) {
            formData.append(name, value);
          }
          return formData;
        } else {
          await Promise.resolve();
          throwIfAborted(this[kState]);
          throw webidl.errors.exception({
            header: `${instance.name}.formData`,
            message: "Could not parse content as FormData."
          });
        }
      }
    };
    return methods;
  }
  function mixinBody(prototype) {
    Object.assign(prototype.prototype, bodyMixinMethods(prototype));
  }
  async function specConsumeBody(object, type, instance) {
    webidl.brandCheck(object, instance);
    throwIfAborted(object[kState]);
    if (bodyUnusable(object[kState].body)) {
      throw new TypeError("Body is unusable");
    }
    let promise;
    if (object[kState].body != null) {
      promise = await fullyReadBodyAsPromise(object[kState].body);
    } else {
      promise = { size: 0, bytes: [new Uint8Array()] };
    }
    const mimeType = type === "Blob" || type === "FormData" ? bodyMimeType(object) : void 0;
    return packageData(promise, type, mimeType);
  }
  function packageData({ bytes, size }, type, mimeType) {
    switch (type) {
      case "ArrayBuffer": {
        const uint8 = new Uint8Array(size);
        let offset = 0;
        for (const chunk of bytes) {
          uint8.set(chunk, offset);
          offset += chunk.byteLength;
        }
        return uint8.buffer;
      }
      case "Blob": {
        if (mimeType === "failure") {
          mimeType = "";
        } else if (mimeType) {
          mimeType = serializeAMimeType(mimeType);
        }
        return new Blob3(bytes, { type: mimeType });
      }
      case "JSON": {
        return JSON.parse(utf8DecodeBytes(bytes));
      }
      case "text": {
        return utf8DecodeBytes(bytes);
      }
    }
  }
  function bodyUnusable(body2) {
    return body2 != null && (body2.stream.locked || util2.isDisturbed(body2.stream));
  }
  async function fullyReadBodyAsPromise(body2) {
    const reader = body2.stream.getReader();
    const bytes = [];
    let size = 0;
    while (true) {
      const { done, value } = await reader.read();
      if (done) {
        break;
      }
      if (!isUint8Array(value)) {
        throw new TypeError("Value is not a Uint8Array.");
      }
      bytes.push(value);
      size += value.byteLength;
    }
    return { size, bytes };
  }
  function utf8DecodeBytes(ioQueue) {
    if (ioQueue.length === 0) {
      return "";
    }
    const buffer = ioQueue[0];
    if (buffer[0] === 239 && buffer[1] === 187 && buffer[2] === 191) {
      ioQueue[0] = ioQueue[0].subarray(3);
    }
    const decoder = new StringDecoder("utf-8");
    let output = "";
    for (const chunk of ioQueue) {
      output += decoder.write(chunk);
    }
    output += decoder.end();
    return output;
  }
  function bodyMimeType(object) {
    const { headersList } = object[kState];
    const contentType = headersList.get("content-type");
    if (contentType === null) {
      return "failure";
    }
    return parseMIMEType(contentType);
  }
  body = {
    extractBody: extractBody2,
    safelyExtractBody,
    cloneBody,
    mixinBody
  };
  return body;
}
var {
  InvalidArgumentError: InvalidArgumentError$i,
  NotSupportedError: NotSupportedError$1
} = errors;
var assert$6 = import_assert.default;
var util$c = util$e;
var tokenRegExp = /^[\^_`a-zA-Z\-0-9!#$%&'*+.|~]+$/;
var headerCharRegex = /[^\t\x20-\x7e\x80-\xff]/;
var invalidPathRegex = /[^\u0021-\u00ff]/;
var kHandler = Symbol("handler");
var channels$1 = {};
var extractBody;
var nodeVersion = process.versions.node.split(".");
var nodeMajor = Number(nodeVersion[0]);
var nodeMinor = Number(nodeVersion[1]);
try {
  const diagnosticsChannel = require("diagnostics_channel");
  channels$1.create = diagnosticsChannel.channel("undici:request:create");
  channels$1.bodySent = diagnosticsChannel.channel("undici:request:bodySent");
  channels$1.headers = diagnosticsChannel.channel("undici:request:headers");
  channels$1.trailers = diagnosticsChannel.channel("undici:request:trailers");
  channels$1.error = diagnosticsChannel.channel("undici:request:error");
} catch {
  channels$1.create = { hasSubscribers: false };
  channels$1.bodySent = { hasSubscribers: false };
  channels$1.headers = { hasSubscribers: false };
  channels$1.trailers = { hasSubscribers: false };
  channels$1.error = { hasSubscribers: false };
}
var Request$1 = class Request2 {
  constructor(origin, {
    path,
    method,
    body: body2,
    headers: headers2,
    query,
    idempotent,
    blocking,
    upgrade: upgrade2,
    headersTimeout,
    bodyTimeout,
    throwOnError
  }, handler2) {
    if (typeof path !== "string") {
      throw new InvalidArgumentError$i("path must be a string");
    } else if (path[0] !== "/" && !(path.startsWith("http://") || path.startsWith("https://")) && method !== "CONNECT") {
      throw new InvalidArgumentError$i("path must be an absolute URL or start with a slash");
    } else if (invalidPathRegex.exec(path) !== null) {
      throw new InvalidArgumentError$i("invalid request path");
    }
    if (typeof method !== "string") {
      throw new InvalidArgumentError$i("method must be a string");
    } else if (tokenRegExp.exec(method) === null) {
      throw new InvalidArgumentError$i("invalid request method");
    }
    if (upgrade2 && typeof upgrade2 !== "string") {
      throw new InvalidArgumentError$i("upgrade must be a string");
    }
    if (headersTimeout != null && (!Number.isFinite(headersTimeout) || headersTimeout < 0)) {
      throw new InvalidArgumentError$i("invalid headersTimeout");
    }
    if (bodyTimeout != null && (!Number.isFinite(bodyTimeout) || bodyTimeout < 0)) {
      throw new InvalidArgumentError$i("invalid bodyTimeout");
    }
    this.headersTimeout = headersTimeout;
    this.bodyTimeout = bodyTimeout;
    this.throwOnError = throwOnError === true;
    this.method = method;
    if (body2 == null) {
      this.body = null;
    } else if (util$c.isStream(body2)) {
      this.body = body2;
    } else if (util$c.isBuffer(body2)) {
      this.body = body2.byteLength ? body2 : null;
    } else if (ArrayBuffer.isView(body2)) {
      this.body = body2.buffer.byteLength ? Buffer.from(body2.buffer, body2.byteOffset, body2.byteLength) : null;
    } else if (body2 instanceof ArrayBuffer) {
      this.body = body2.byteLength ? Buffer.from(body2) : null;
    } else if (typeof body2 === "string") {
      this.body = body2.length ? Buffer.from(body2) : null;
    } else if (util$c.isFormDataLike(body2) || util$c.isIterable(body2) || util$c.isBlobLike(body2)) {
      this.body = body2;
    } else {
      throw new InvalidArgumentError$i("body must be a string, a Buffer, a Readable stream, an iterable, or an async iterable");
    }
    this.completed = false;
    this.aborted = false;
    this.upgrade = upgrade2 || null;
    this.path = query ? util$c.buildURL(path, query) : path;
    this.origin = origin;
    this.idempotent = idempotent == null ? method === "HEAD" || method === "GET" : idempotent;
    this.blocking = blocking == null ? false : blocking;
    this.host = null;
    this.contentLength = null;
    this.contentType = null;
    this.headers = "";
    if (Array.isArray(headers2)) {
      if (headers2.length % 2 !== 0) {
        throw new InvalidArgumentError$i("headers array must be even");
      }
      for (let i = 0; i < headers2.length; i += 2) {
        processHeader(this, headers2[i], headers2[i + 1]);
      }
    } else if (headers2 && typeof headers2 === "object") {
      const keys = Object.keys(headers2);
      for (let i = 0; i < keys.length; i++) {
        const key2 = keys[i];
        processHeader(this, key2, headers2[key2]);
      }
    } else if (headers2 != null) {
      throw new InvalidArgumentError$i("headers must be an object or an array");
    }
    if (util$c.isFormDataLike(this.body)) {
      if (nodeMajor < 16 || nodeMajor === 16 && nodeMinor < 8) {
        throw new InvalidArgumentError$i("Form-Data bodies are only supported in node v16.8 and newer.");
      }
      if (!extractBody) {
        extractBody = requireBody().extractBody;
      }
      const [bodyStream, contentType] = extractBody(body2);
      if (this.contentType == null) {
        this.contentType = contentType;
        this.headers += `content-type: ${contentType}\r
`;
      }
      this.body = bodyStream.stream;
    } else if (util$c.isBlobLike(body2) && this.contentType == null && body2.type) {
      this.contentType = body2.type;
      this.headers += `content-type: ${body2.type}\r
`;
    }
    util$c.validateHandler(handler2, method, upgrade2);
    this.servername = util$c.getServerName(this.host);
    this[kHandler] = handler2;
    if (channels$1.create.hasSubscribers) {
      channels$1.create.publish({ request: this });
    }
  }
  onBodySent(chunk) {
    if (this[kHandler].onBodySent) {
      try {
        this[kHandler].onBodySent(chunk);
      } catch (err) {
        this.onError(err);
      }
    }
  }
  onRequestSent() {
    if (channels$1.bodySent.hasSubscribers) {
      channels$1.bodySent.publish({ request: this });
    }
  }
  onConnect(abort2) {
    assert$6(!this.aborted);
    assert$6(!this.completed);
    return this[kHandler].onConnect(abort2);
  }
  onHeaders(statusCode, headers2, resume2, statusText) {
    assert$6(!this.aborted);
    assert$6(!this.completed);
    if (channels$1.headers.hasSubscribers) {
      channels$1.headers.publish({ request: this, response: { statusCode, headers: headers2, statusText } });
    }
    return this[kHandler].onHeaders(statusCode, headers2, resume2, statusText);
  }
  onData(chunk) {
    assert$6(!this.aborted);
    assert$6(!this.completed);
    return this[kHandler].onData(chunk);
  }
  onUpgrade(statusCode, headers2, socket) {
    assert$6(!this.aborted);
    assert$6(!this.completed);
    return this[kHandler].onUpgrade(statusCode, headers2, socket);
  }
  onComplete(trailers) {
    assert$6(!this.aborted);
    this.completed = true;
    if (channels$1.trailers.hasSubscribers) {
      channels$1.trailers.publish({ request: this, trailers });
    }
    return this[kHandler].onComplete(trailers);
  }
  onError(error2) {
    if (channels$1.error.hasSubscribers) {
      channels$1.error.publish({ request: this, error: error2 });
    }
    if (this.aborted) {
      return;
    }
    this.aborted = true;
    return this[kHandler].onError(error2);
  }
  addHeader(key2, value) {
    processHeader(this, key2, value);
    return this;
  }
};
function processHeader(request2, key2, val) {
  if (val && typeof val === "object") {
    throw new InvalidArgumentError$i(`invalid ${key2} header`);
  } else if (val === void 0) {
    return;
  }
  if (request2.host === null && key2.length === 4 && key2.toLowerCase() === "host") {
    request2.host = val;
  } else if (request2.contentLength === null && key2.length === 14 && key2.toLowerCase() === "content-length") {
    request2.contentLength = parseInt(val, 10);
    if (!Number.isFinite(request2.contentLength)) {
      throw new InvalidArgumentError$i("invalid content-length header");
    }
  } else if (request2.contentType === null && key2.length === 12 && key2.toLowerCase() === "content-type" && headerCharRegex.exec(val) === null) {
    request2.contentType = val;
    request2.headers += `${key2}: ${val}\r
`;
  } else if (key2.length === 17 && key2.toLowerCase() === "transfer-encoding") {
    throw new InvalidArgumentError$i("invalid transfer-encoding header");
  } else if (key2.length === 10 && key2.toLowerCase() === "connection") {
    throw new InvalidArgumentError$i("invalid connection header");
  } else if (key2.length === 10 && key2.toLowerCase() === "keep-alive") {
    throw new InvalidArgumentError$i("invalid keep-alive header");
  } else if (key2.length === 7 && key2.toLowerCase() === "upgrade") {
    throw new InvalidArgumentError$i("invalid upgrade header");
  } else if (key2.length === 6 && key2.toLowerCase() === "expect") {
    throw new NotSupportedError$1("expect header not supported");
  } else if (tokenRegExp.exec(key2) === null) {
    throw new InvalidArgumentError$i("invalid header key");
  } else if (headerCharRegex.exec(val) !== null) {
    throw new InvalidArgumentError$i(`invalid ${key2} header`);
  } else {
    request2.headers += `${key2}: ${val}\r
`;
  }
}
var request$2 = Request$1;
var EventEmitter = import_events.default;
var Dispatcher$2 = class Dispatcher extends EventEmitter {
  dispatch() {
    throw new Error("not implemented");
  }
  close() {
    throw new Error("not implemented");
  }
  destroy() {
    throw new Error("not implemented");
  }
};
var dispatcher = Dispatcher$2;
var Dispatcher$1 = dispatcher;
var {
  ClientDestroyedError: ClientDestroyedError2,
  ClientClosedError: ClientClosedError2,
  InvalidArgumentError: InvalidArgumentError$h
} = errors;
var { kDestroy: kDestroy$4, kClose: kClose$6, kDispatch: kDispatch$3, kInterceptors: kInterceptors$5 } = symbols$2;
var kDestroyed = Symbol("destroyed");
var kClosed = Symbol("closed");
var kOnDestroyed = Symbol("onDestroyed");
var kOnClosed = Symbol("onClosed");
var kInterceptedDispatch = Symbol("Intercepted Dispatch");
var DispatcherBase$4 = class DispatcherBase extends Dispatcher$1 {
  constructor() {
    super();
    this[kDestroyed] = false;
    this[kOnDestroyed] = [];
    this[kClosed] = false;
    this[kOnClosed] = [];
  }
  get destroyed() {
    return this[kDestroyed];
  }
  get closed() {
    return this[kClosed];
  }
  get interceptors() {
    return this[kInterceptors$5];
  }
  set interceptors(newInterceptors) {
    if (newInterceptors) {
      for (let i = newInterceptors.length - 1; i >= 0; i--) {
        const interceptor = this[kInterceptors$5][i];
        if (typeof interceptor !== "function") {
          throw new InvalidArgumentError$h("interceptor must be an function");
        }
      }
    }
    this[kInterceptors$5] = newInterceptors;
  }
  close(callback) {
    if (callback === void 0) {
      return new Promise((resolve, reject) => {
        this.close((err, data) => {
          return err ? reject(err) : resolve(data);
        });
      });
    }
    if (typeof callback !== "function") {
      throw new InvalidArgumentError$h("invalid callback");
    }
    if (this[kDestroyed]) {
      queueMicrotask(() => callback(new ClientDestroyedError2(), null));
      return;
    }
    if (this[kClosed]) {
      if (this[kOnClosed]) {
        this[kOnClosed].push(callback);
      } else {
        queueMicrotask(() => callback(null, null));
      }
      return;
    }
    this[kClosed] = true;
    this[kOnClosed].push(callback);
    const onClosed = () => {
      const callbacks = this[kOnClosed];
      this[kOnClosed] = null;
      for (let i = 0; i < callbacks.length; i++) {
        callbacks[i](null, null);
      }
    };
    this[kClose$6]().then(() => this.destroy()).then(() => {
      queueMicrotask(onClosed);
    });
  }
  destroy(err, callback) {
    if (typeof err === "function") {
      callback = err;
      err = null;
    }
    if (callback === void 0) {
      return new Promise((resolve, reject) => {
        this.destroy(err, (err2, data) => {
          return err2 ? reject(err2) : resolve(data);
        });
      });
    }
    if (typeof callback !== "function") {
      throw new InvalidArgumentError$h("invalid callback");
    }
    if (this[kDestroyed]) {
      if (this[kOnDestroyed]) {
        this[kOnDestroyed].push(callback);
      } else {
        queueMicrotask(() => callback(null, null));
      }
      return;
    }
    if (!err) {
      err = new ClientDestroyedError2();
    }
    this[kDestroyed] = true;
    this[kOnDestroyed].push(callback);
    const onDestroyed = () => {
      const callbacks = this[kOnDestroyed];
      this[kOnDestroyed] = null;
      for (let i = 0; i < callbacks.length; i++) {
        callbacks[i](null, null);
      }
    };
    this[kDestroy$4](err).then(() => {
      queueMicrotask(onDestroyed);
    });
  }
  [kInterceptedDispatch](opts, handler2) {
    if (!this[kInterceptors$5] || this[kInterceptors$5].length === 0) {
      this[kInterceptedDispatch] = this[kDispatch$3];
      return this[kDispatch$3](opts, handler2);
    }
    let dispatch = this[kDispatch$3].bind(this);
    for (let i = this[kInterceptors$5].length - 1; i >= 0; i--) {
      dispatch = this[kInterceptors$5][i](dispatch);
    }
    this[kInterceptedDispatch] = dispatch;
    return dispatch(opts, handler2);
  }
  dispatch(opts, handler2) {
    if (!handler2 || typeof handler2 !== "object") {
      throw new InvalidArgumentError$h("handler must be an object");
    }
    try {
      if (!opts || typeof opts !== "object") {
        throw new InvalidArgumentError$h("opts must be an object.");
      }
      if (this[kDestroyed]) {
        throw new ClientDestroyedError2();
      }
      if (this[kClosed]) {
        throw new ClientClosedError2();
      }
      return this[kInterceptedDispatch](opts, handler2);
    } catch (err) {
      if (typeof handler2.onError !== "function") {
        throw new InvalidArgumentError$h("invalid onError method");
      }
      handler2.onError(err);
      return false;
    }
  }
};
var dispatcherBase = DispatcherBase$4;
var net$1 = import_net.default;
var assert$5 = import_assert.default;
var util$b = util$e;
var { InvalidArgumentError: InvalidArgumentError$g, ConnectTimeoutError: ConnectTimeoutError2 } = errors;
var tls;
var SessionCache;
if (commonjsGlobal.FinalizationRegistry) {
  SessionCache = class WeakSessionCache {
    constructor(maxCachedSessions) {
      this._maxCachedSessions = maxCachedSessions;
      this._sessionCache = /* @__PURE__ */ new Map();
      this._sessionRegistry = new commonjsGlobal.FinalizationRegistry((key2) => {
        if (this._sessionCache.size < this._maxCachedSessions) {
          return;
        }
        const ref = this._sessionCache.get(key2);
        if (ref !== void 0 && ref.deref() === void 0) {
          this._sessionCache.delete(key2);
        }
      });
    }
    get(sessionKey) {
      const ref = this._sessionCache.get(sessionKey);
      return ref ? ref.deref() : null;
    }
    set(sessionKey, session) {
      if (this._maxCachedSessions === 0) {
        return;
      }
      this._sessionCache.set(sessionKey, new WeakRef(session));
      this._sessionRegistry.register(session, sessionKey);
    }
  };
} else {
  SessionCache = class SimpleSessionCache {
    constructor(maxCachedSessions) {
      this._maxCachedSessions = maxCachedSessions;
      this._sessionCache = /* @__PURE__ */ new Map();
    }
    get(sessionKey) {
      return this._sessionCache.get(sessionKey);
    }
    set(sessionKey, session) {
      if (this._maxCachedSessions === 0) {
        return;
      }
      if (this._sessionCache.size >= this._maxCachedSessions) {
        const { value: oldestKey } = this._sessionCache.keys().next();
        this._sessionCache.delete(oldestKey);
      }
      this._sessionCache.set(sessionKey, session);
    }
  };
}
function buildConnector$3(_a) {
  var _b = _a, { maxCachedSessions, socketPath, timeout } = _b, opts = __objRest(_b, ["maxCachedSessions", "socketPath", "timeout"]);
  if (maxCachedSessions != null && (!Number.isInteger(maxCachedSessions) || maxCachedSessions < 0)) {
    throw new InvalidArgumentError$g("maxCachedSessions must be a positive integer or zero");
  }
  const options2 = __spreadValues({ path: socketPath }, opts);
  const sessionCache = new SessionCache(maxCachedSessions == null ? 100 : maxCachedSessions);
  timeout = timeout == null ? 1e4 : timeout;
  return function connect2({ hostname, host, protocol, port, servername, localAddress, httpSocket }, callback) {
    let socket;
    if (protocol === "https:") {
      if (!tls) {
        tls = import_tls.default;
      }
      servername = servername || options2.servername || util$b.getServerName(host) || null;
      const sessionKey = servername || hostname;
      const session = sessionCache.get(sessionKey) || null;
      assert$5(sessionKey);
      socket = tls.connect(__spreadProps(__spreadValues({
        highWaterMark: 16384
      }, options2), {
        servername,
        session,
        localAddress,
        socket: httpSocket,
        port: port || 443,
        host: hostname
      }));
      socket.on("session", function(session2) {
        sessionCache.set(sessionKey, session2);
      });
    } else {
      assert$5(!httpSocket, "httpSocket can only be sent on TLS update");
      socket = net$1.connect(__spreadProps(__spreadValues({
        highWaterMark: 64 * 1024
      }, options2), {
        localAddress,
        port: port || 80,
        host: hostname
      }));
    }
    const cancelTimeout = setupTimeout(() => onConnectTimeout(socket), timeout);
    socket.setNoDelay(true).once(protocol === "https:" ? "secureConnect" : "connect", function() {
      cancelTimeout();
      if (callback) {
        const cb = callback;
        callback = null;
        cb(null, this);
      }
    }).on("error", function(err) {
      cancelTimeout();
      if (callback) {
        const cb = callback;
        callback = null;
        cb(err);
      }
    });
    return socket;
  };
}
function setupTimeout(onConnectTimeout2, timeout) {
  if (!timeout) {
    return () => {
    };
  }
  let s1 = null;
  let s2 = null;
  const timeoutId = setTimeout(() => {
    s1 = setImmediate(() => {
      if (process.platform === "win32") {
        s2 = setImmediate(() => onConnectTimeout2());
      } else {
        onConnectTimeout2();
      }
    });
  }, timeout);
  return () => {
    clearTimeout(timeoutId);
    clearImmediate(s1);
    clearImmediate(s2);
  };
}
function onConnectTimeout(socket) {
  util$b.destroy(socket, new ConnectTimeoutError2());
}
var connect$2 = buildConnector$3;
var constants$1 = {};
var utils = {};
var hasRequiredUtils;
function requireUtils() {
  if (hasRequiredUtils)
    return utils;
  hasRequiredUtils = 1;
  Object.defineProperty(utils, "__esModule", { value: true });
  utils.enumToMap = void 0;
  function enumToMap(obj) {
    const res = {};
    Object.keys(obj).forEach((key2) => {
      const value = obj[key2];
      if (typeof value === "number") {
        res[key2] = value;
      }
    });
    return res;
  }
  utils.enumToMap = enumToMap;
  return utils;
}
var hasRequiredConstants;
function requireConstants() {
  if (hasRequiredConstants)
    return constants$1;
  hasRequiredConstants = 1;
  (function(exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SPECIAL_HEADERS = exports.HEADER_STATE = exports.MINOR = exports.MAJOR = exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS = exports.TOKEN = exports.STRICT_TOKEN = exports.HEX = exports.URL_CHAR = exports.STRICT_URL_CHAR = exports.USERINFO_CHARS = exports.MARK = exports.ALPHANUM = exports.NUM = exports.HEX_MAP = exports.NUM_MAP = exports.ALPHA = exports.FINISH = exports.H_METHOD_MAP = exports.METHOD_MAP = exports.METHODS_RTSP = exports.METHODS_ICE = exports.METHODS_HTTP = exports.METHODS = exports.LENIENT_FLAGS = exports.FLAGS = exports.TYPE = exports.ERROR = void 0;
    const utils_1 = requireUtils();
    (function(ERROR) {
      ERROR[ERROR["OK"] = 0] = "OK";
      ERROR[ERROR["INTERNAL"] = 1] = "INTERNAL";
      ERROR[ERROR["STRICT"] = 2] = "STRICT";
      ERROR[ERROR["LF_EXPECTED"] = 3] = "LF_EXPECTED";
      ERROR[ERROR["UNEXPECTED_CONTENT_LENGTH"] = 4] = "UNEXPECTED_CONTENT_LENGTH";
      ERROR[ERROR["CLOSED_CONNECTION"] = 5] = "CLOSED_CONNECTION";
      ERROR[ERROR["INVALID_METHOD"] = 6] = "INVALID_METHOD";
      ERROR[ERROR["INVALID_URL"] = 7] = "INVALID_URL";
      ERROR[ERROR["INVALID_CONSTANT"] = 8] = "INVALID_CONSTANT";
      ERROR[ERROR["INVALID_VERSION"] = 9] = "INVALID_VERSION";
      ERROR[ERROR["INVALID_HEADER_TOKEN"] = 10] = "INVALID_HEADER_TOKEN";
      ERROR[ERROR["INVALID_CONTENT_LENGTH"] = 11] = "INVALID_CONTENT_LENGTH";
      ERROR[ERROR["INVALID_CHUNK_SIZE"] = 12] = "INVALID_CHUNK_SIZE";
      ERROR[ERROR["INVALID_STATUS"] = 13] = "INVALID_STATUS";
      ERROR[ERROR["INVALID_EOF_STATE"] = 14] = "INVALID_EOF_STATE";
      ERROR[ERROR["INVALID_TRANSFER_ENCODING"] = 15] = "INVALID_TRANSFER_ENCODING";
      ERROR[ERROR["CB_MESSAGE_BEGIN"] = 16] = "CB_MESSAGE_BEGIN";
      ERROR[ERROR["CB_HEADERS_COMPLETE"] = 17] = "CB_HEADERS_COMPLETE";
      ERROR[ERROR["CB_MESSAGE_COMPLETE"] = 18] = "CB_MESSAGE_COMPLETE";
      ERROR[ERROR["CB_CHUNK_HEADER"] = 19] = "CB_CHUNK_HEADER";
      ERROR[ERROR["CB_CHUNK_COMPLETE"] = 20] = "CB_CHUNK_COMPLETE";
      ERROR[ERROR["PAUSED"] = 21] = "PAUSED";
      ERROR[ERROR["PAUSED_UPGRADE"] = 22] = "PAUSED_UPGRADE";
      ERROR[ERROR["PAUSED_H2_UPGRADE"] = 23] = "PAUSED_H2_UPGRADE";
      ERROR[ERROR["USER"] = 24] = "USER";
    })(exports.ERROR || (exports.ERROR = {}));
    (function(TYPE) {
      TYPE[TYPE["BOTH"] = 0] = "BOTH";
      TYPE[TYPE["REQUEST"] = 1] = "REQUEST";
      TYPE[TYPE["RESPONSE"] = 2] = "RESPONSE";
    })(exports.TYPE || (exports.TYPE = {}));
    (function(FLAGS) {
      FLAGS[FLAGS["CONNECTION_KEEP_ALIVE"] = 1] = "CONNECTION_KEEP_ALIVE";
      FLAGS[FLAGS["CONNECTION_CLOSE"] = 2] = "CONNECTION_CLOSE";
      FLAGS[FLAGS["CONNECTION_UPGRADE"] = 4] = "CONNECTION_UPGRADE";
      FLAGS[FLAGS["CHUNKED"] = 8] = "CHUNKED";
      FLAGS[FLAGS["UPGRADE"] = 16] = "UPGRADE";
      FLAGS[FLAGS["CONTENT_LENGTH"] = 32] = "CONTENT_LENGTH";
      FLAGS[FLAGS["SKIPBODY"] = 64] = "SKIPBODY";
      FLAGS[FLAGS["TRAILING"] = 128] = "TRAILING";
      FLAGS[FLAGS["TRANSFER_ENCODING"] = 512] = "TRANSFER_ENCODING";
    })(exports.FLAGS || (exports.FLAGS = {}));
    (function(LENIENT_FLAGS) {
      LENIENT_FLAGS[LENIENT_FLAGS["HEADERS"] = 1] = "HEADERS";
      LENIENT_FLAGS[LENIENT_FLAGS["CHUNKED_LENGTH"] = 2] = "CHUNKED_LENGTH";
      LENIENT_FLAGS[LENIENT_FLAGS["KEEP_ALIVE"] = 4] = "KEEP_ALIVE";
    })(exports.LENIENT_FLAGS || (exports.LENIENT_FLAGS = {}));
    var METHODS;
    (function(METHODS2) {
      METHODS2[METHODS2["DELETE"] = 0] = "DELETE";
      METHODS2[METHODS2["GET"] = 1] = "GET";
      METHODS2[METHODS2["HEAD"] = 2] = "HEAD";
      METHODS2[METHODS2["POST"] = 3] = "POST";
      METHODS2[METHODS2["PUT"] = 4] = "PUT";
      METHODS2[METHODS2["CONNECT"] = 5] = "CONNECT";
      METHODS2[METHODS2["OPTIONS"] = 6] = "OPTIONS";
      METHODS2[METHODS2["TRACE"] = 7] = "TRACE";
      METHODS2[METHODS2["COPY"] = 8] = "COPY";
      METHODS2[METHODS2["LOCK"] = 9] = "LOCK";
      METHODS2[METHODS2["MKCOL"] = 10] = "MKCOL";
      METHODS2[METHODS2["MOVE"] = 11] = "MOVE";
      METHODS2[METHODS2["PROPFIND"] = 12] = "PROPFIND";
      METHODS2[METHODS2["PROPPATCH"] = 13] = "PROPPATCH";
      METHODS2[METHODS2["SEARCH"] = 14] = "SEARCH";
      METHODS2[METHODS2["UNLOCK"] = 15] = "UNLOCK";
      METHODS2[METHODS2["BIND"] = 16] = "BIND";
      METHODS2[METHODS2["REBIND"] = 17] = "REBIND";
      METHODS2[METHODS2["UNBIND"] = 18] = "UNBIND";
      METHODS2[METHODS2["ACL"] = 19] = "ACL";
      METHODS2[METHODS2["REPORT"] = 20] = "REPORT";
      METHODS2[METHODS2["MKACTIVITY"] = 21] = "MKACTIVITY";
      METHODS2[METHODS2["CHECKOUT"] = 22] = "CHECKOUT";
      METHODS2[METHODS2["MERGE"] = 23] = "MERGE";
      METHODS2[METHODS2["M-SEARCH"] = 24] = "M-SEARCH";
      METHODS2[METHODS2["NOTIFY"] = 25] = "NOTIFY";
      METHODS2[METHODS2["SUBSCRIBE"] = 26] = "SUBSCRIBE";
      METHODS2[METHODS2["UNSUBSCRIBE"] = 27] = "UNSUBSCRIBE";
      METHODS2[METHODS2["PATCH"] = 28] = "PATCH";
      METHODS2[METHODS2["PURGE"] = 29] = "PURGE";
      METHODS2[METHODS2["MKCALENDAR"] = 30] = "MKCALENDAR";
      METHODS2[METHODS2["LINK"] = 31] = "LINK";
      METHODS2[METHODS2["UNLINK"] = 32] = "UNLINK";
      METHODS2[METHODS2["SOURCE"] = 33] = "SOURCE";
      METHODS2[METHODS2["PRI"] = 34] = "PRI";
      METHODS2[METHODS2["DESCRIBE"] = 35] = "DESCRIBE";
      METHODS2[METHODS2["ANNOUNCE"] = 36] = "ANNOUNCE";
      METHODS2[METHODS2["SETUP"] = 37] = "SETUP";
      METHODS2[METHODS2["PLAY"] = 38] = "PLAY";
      METHODS2[METHODS2["PAUSE"] = 39] = "PAUSE";
      METHODS2[METHODS2["TEARDOWN"] = 40] = "TEARDOWN";
      METHODS2[METHODS2["GET_PARAMETER"] = 41] = "GET_PARAMETER";
      METHODS2[METHODS2["SET_PARAMETER"] = 42] = "SET_PARAMETER";
      METHODS2[METHODS2["REDIRECT"] = 43] = "REDIRECT";
      METHODS2[METHODS2["RECORD"] = 44] = "RECORD";
      METHODS2[METHODS2["FLUSH"] = 45] = "FLUSH";
    })(METHODS = exports.METHODS || (exports.METHODS = {}));
    exports.METHODS_HTTP = [
      METHODS.DELETE,
      METHODS.GET,
      METHODS.HEAD,
      METHODS.POST,
      METHODS.PUT,
      METHODS.CONNECT,
      METHODS.OPTIONS,
      METHODS.TRACE,
      METHODS.COPY,
      METHODS.LOCK,
      METHODS.MKCOL,
      METHODS.MOVE,
      METHODS.PROPFIND,
      METHODS.PROPPATCH,
      METHODS.SEARCH,
      METHODS.UNLOCK,
      METHODS.BIND,
      METHODS.REBIND,
      METHODS.UNBIND,
      METHODS.ACL,
      METHODS.REPORT,
      METHODS.MKACTIVITY,
      METHODS.CHECKOUT,
      METHODS.MERGE,
      METHODS["M-SEARCH"],
      METHODS.NOTIFY,
      METHODS.SUBSCRIBE,
      METHODS.UNSUBSCRIBE,
      METHODS.PATCH,
      METHODS.PURGE,
      METHODS.MKCALENDAR,
      METHODS.LINK,
      METHODS.UNLINK,
      METHODS.PRI,
      METHODS.SOURCE
    ];
    exports.METHODS_ICE = [
      METHODS.SOURCE
    ];
    exports.METHODS_RTSP = [
      METHODS.OPTIONS,
      METHODS.DESCRIBE,
      METHODS.ANNOUNCE,
      METHODS.SETUP,
      METHODS.PLAY,
      METHODS.PAUSE,
      METHODS.TEARDOWN,
      METHODS.GET_PARAMETER,
      METHODS.SET_PARAMETER,
      METHODS.REDIRECT,
      METHODS.RECORD,
      METHODS.FLUSH,
      METHODS.GET,
      METHODS.POST
    ];
    exports.METHOD_MAP = utils_1.enumToMap(METHODS);
    exports.H_METHOD_MAP = {};
    Object.keys(exports.METHOD_MAP).forEach((key2) => {
      if (/^H/.test(key2)) {
        exports.H_METHOD_MAP[key2] = exports.METHOD_MAP[key2];
      }
    });
    (function(FINISH) {
      FINISH[FINISH["SAFE"] = 0] = "SAFE";
      FINISH[FINISH["SAFE_WITH_CB"] = 1] = "SAFE_WITH_CB";
      FINISH[FINISH["UNSAFE"] = 2] = "UNSAFE";
    })(exports.FINISH || (exports.FINISH = {}));
    exports.ALPHA = [];
    for (let i = "A".charCodeAt(0); i <= "Z".charCodeAt(0); i++) {
      exports.ALPHA.push(String.fromCharCode(i));
      exports.ALPHA.push(String.fromCharCode(i + 32));
    }
    exports.NUM_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9
    };
    exports.HEX_MAP = {
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      6: 6,
      7: 7,
      8: 8,
      9: 9,
      A: 10,
      B: 11,
      C: 12,
      D: 13,
      E: 14,
      F: 15,
      a: 10,
      b: 11,
      c: 12,
      d: 13,
      e: 14,
      f: 15
    };
    exports.NUM = [
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9"
    ];
    exports.ALPHANUM = exports.ALPHA.concat(exports.NUM);
    exports.MARK = ["-", "_", ".", "!", "~", "*", "'", "(", ")"];
    exports.USERINFO_CHARS = exports.ALPHANUM.concat(exports.MARK).concat(["%", ";", ":", "&", "=", "+", "$", ","]);
    exports.STRICT_URL_CHAR = [
      "!",
      '"',
      "$",
      "%",
      "&",
      "'",
      "(",
      ")",
      "*",
      "+",
      ",",
      "-",
      ".",
      "/",
      ":",
      ";",
      "<",
      "=",
      ">",
      "@",
      "[",
      "\\",
      "]",
      "^",
      "_",
      "`",
      "{",
      "|",
      "}",
      "~"
    ].concat(exports.ALPHANUM);
    exports.URL_CHAR = exports.STRICT_URL_CHAR.concat(["	", "\f"]);
    for (let i = 128; i <= 255; i++) {
      exports.URL_CHAR.push(i);
    }
    exports.HEX = exports.NUM.concat(["a", "b", "c", "d", "e", "f", "A", "B", "C", "D", "E", "F"]);
    exports.STRICT_TOKEN = [
      "!",
      "#",
      "$",
      "%",
      "&",
      "'",
      "*",
      "+",
      "-",
      ".",
      "^",
      "_",
      "`",
      "|",
      "~"
    ].concat(exports.ALPHANUM);
    exports.TOKEN = exports.STRICT_TOKEN.concat([" "]);
    exports.HEADER_CHARS = ["	"];
    for (let i = 32; i <= 255; i++) {
      if (i !== 127) {
        exports.HEADER_CHARS.push(i);
      }
    }
    exports.CONNECTION_TOKEN_CHARS = exports.HEADER_CHARS.filter((c) => c !== 44);
    exports.MAJOR = exports.NUM_MAP;
    exports.MINOR = exports.MAJOR;
    var HEADER_STATE;
    (function(HEADER_STATE2) {
      HEADER_STATE2[HEADER_STATE2["GENERAL"] = 0] = "GENERAL";
      HEADER_STATE2[HEADER_STATE2["CONNECTION"] = 1] = "CONNECTION";
      HEADER_STATE2[HEADER_STATE2["CONTENT_LENGTH"] = 2] = "CONTENT_LENGTH";
      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING"] = 3] = "TRANSFER_ENCODING";
      HEADER_STATE2[HEADER_STATE2["UPGRADE"] = 4] = "UPGRADE";
      HEADER_STATE2[HEADER_STATE2["CONNECTION_KEEP_ALIVE"] = 5] = "CONNECTION_KEEP_ALIVE";
      HEADER_STATE2[HEADER_STATE2["CONNECTION_CLOSE"] = 6] = "CONNECTION_CLOSE";
      HEADER_STATE2[HEADER_STATE2["CONNECTION_UPGRADE"] = 7] = "CONNECTION_UPGRADE";
      HEADER_STATE2[HEADER_STATE2["TRANSFER_ENCODING_CHUNKED"] = 8] = "TRANSFER_ENCODING_CHUNKED";
    })(HEADER_STATE = exports.HEADER_STATE || (exports.HEADER_STATE = {}));
    exports.SPECIAL_HEADERS = {
      "connection": HEADER_STATE.CONNECTION,
      "content-length": HEADER_STATE.CONTENT_LENGTH,
      "proxy-connection": HEADER_STATE.CONNECTION,
      "transfer-encoding": HEADER_STATE.TRANSFER_ENCODING,
      "upgrade": HEADER_STATE.UPGRADE
    };
  })(constants$1);
  return constants$1;
}
var util$a = util$e;
var { kBodyUsed } = symbols$2;
var assert$4 = import_assert.default;
var { InvalidArgumentError: InvalidArgumentError$f } = errors;
var EE = import_events.default;
var redirectableStatusCodes = [300, 301, 302, 303, 307, 308];
var kBody$1 = Symbol("body");
var BodyAsyncIterable = class {
  constructor(body2) {
    this[kBody$1] = body2;
    this[kBodyUsed] = false;
  }
  async *[Symbol.asyncIterator]() {
    assert$4(!this[kBodyUsed], "disturbed");
    this[kBodyUsed] = true;
    yield* this[kBody$1];
  }
};
var RedirectHandler$1 = class RedirectHandler {
  constructor(dispatch, maxRedirections, opts, handler2) {
    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
      throw new InvalidArgumentError$f("maxRedirections must be a positive number");
    }
    util$a.validateHandler(handler2, opts.method, opts.upgrade);
    this.dispatch = dispatch;
    this.location = null;
    this.abort = null;
    this.opts = __spreadProps(__spreadValues({}, opts), { maxRedirections: 0 });
    this.maxRedirections = maxRedirections;
    this.handler = handler2;
    this.history = [];
    if (util$a.isStream(this.opts.body)) {
      if (util$a.bodyLength(this.opts.body) === 0) {
        this.opts.body.on("data", function() {
          assert$4(false);
        });
      }
      if (typeof this.opts.body.readableDidRead !== "boolean") {
        this.opts.body[kBodyUsed] = false;
        EE.prototype.on.call(this.opts.body, "data", function() {
          this[kBodyUsed] = true;
        });
      }
    } else if (this.opts.body && typeof this.opts.body.pipeTo === "function") {
      this.opts.body = new BodyAsyncIterable(this.opts.body);
    } else if (this.opts.body && typeof this.opts.body !== "string" && !ArrayBuffer.isView(this.opts.body) && util$a.isIterable(this.opts.body)) {
      this.opts.body = new BodyAsyncIterable(this.opts.body);
    }
  }
  onConnect(abort2) {
    this.abort = abort2;
    this.handler.onConnect(abort2, { history: this.history });
  }
  onUpgrade(statusCode, headers2, socket) {
    this.handler.onUpgrade(statusCode, headers2, socket);
  }
  onError(error2) {
    this.handler.onError(error2);
  }
  onHeaders(statusCode, headers2, resume2, statusText) {
    this.location = this.history.length >= this.maxRedirections || util$a.isDisturbed(this.opts.body) ? null : parseLocation(statusCode, headers2);
    if (this.opts.origin) {
      this.history.push(new URL(this.opts.path, this.opts.origin));
    }
    if (!this.location) {
      return this.handler.onHeaders(statusCode, headers2, resume2, statusText);
    }
    const { origin, pathname, search } = util$a.parseURL(new URL(this.location, this.opts.origin && new URL(this.opts.path, this.opts.origin)));
    const path = search ? `${pathname}${search}` : pathname;
    this.opts.headers = cleanRequestHeaders(this.opts.headers, statusCode === 303, this.opts.origin !== origin);
    this.opts.path = path;
    this.opts.origin = origin;
    this.opts.maxRedirections = 0;
    this.opts.query = null;
    if (statusCode === 303 && this.opts.method !== "HEAD") {
      this.opts.method = "GET";
      this.opts.body = null;
    }
  }
  onData(chunk) {
    if (this.location)
      ;
    else {
      return this.handler.onData(chunk);
    }
  }
  onComplete(trailers) {
    if (this.location) {
      this.location = null;
      this.abort = null;
      this.dispatch(this.opts, this);
    } else {
      this.handler.onComplete(trailers);
    }
  }
  onBodySent(chunk) {
    if (this.handler.onBodySent) {
      this.handler.onBodySent(chunk);
    }
  }
};
function parseLocation(statusCode, headers2) {
  if (redirectableStatusCodes.indexOf(statusCode) === -1) {
    return null;
  }
  for (let i = 0; i < headers2.length; i += 2) {
    if (headers2[i].toString().toLowerCase() === "location") {
      return headers2[i + 1];
    }
  }
}
function shouldRemoveHeader(header, removeContent, unknownOrigin) {
  return header.length === 4 && header.toString().toLowerCase() === "host" || removeContent && header.toString().toLowerCase().indexOf("content-") === 0 || unknownOrigin && header.length === 13 && header.toString().toLowerCase() === "authorization" || unknownOrigin && header.length === 6 && header.toString().toLowerCase() === "cookie";
}
function cleanRequestHeaders(headers2, removeContent, unknownOrigin) {
  const ret = [];
  if (Array.isArray(headers2)) {
    for (let i = 0; i < headers2.length; i += 2) {
      if (!shouldRemoveHeader(headers2[i], removeContent, unknownOrigin)) {
        ret.push(headers2[i], headers2[i + 1]);
      }
    }
  } else if (headers2 && typeof headers2 === "object") {
    for (const key2 of Object.keys(headers2)) {
      if (!shouldRemoveHeader(key2, removeContent, unknownOrigin)) {
        ret.push(key2, headers2[key2]);
      }
    }
  } else {
    assert$4(headers2 == null, "headers must be an object or an array");
  }
  return ret;
}
var RedirectHandler_1 = RedirectHandler$1;
var RedirectHandler2 = RedirectHandler_1;
function createRedirectInterceptor$2({ maxRedirections: defaultMaxRedirections }) {
  return (dispatch) => {
    return function Intercept(opts, handler2) {
      const { maxRedirections = defaultMaxRedirections } = opts;
      if (!maxRedirections) {
        return dispatch(opts, handler2);
      }
      const redirectHandler = new RedirectHandler2(dispatch, maxRedirections, opts, handler2);
      opts = __spreadProps(__spreadValues({}, opts), { maxRedirections: 0 });
      return dispatch(opts, redirectHandler);
    };
  };
}
var redirectInterceptor = createRedirectInterceptor$2;
var llhttp_wasm;
var hasRequiredLlhttp_wasm;
function requireLlhttp_wasm() {
  if (hasRequiredLlhttp_wasm)
    return llhttp_wasm;
  hasRequiredLlhttp_wasm = 1;
  llhttp_wasm = "";
  return llhttp_wasm;
}
var llhttp_simd_wasm;
var hasRequiredLlhttp_simd_wasm;
function requireLlhttp_simd_wasm() {
  if (hasRequiredLlhttp_simd_wasm)
    return llhttp_simd_wasm;
  hasRequiredLlhttp_simd_wasm = 1;
  llhttp_simd_wasm = "";
  return llhttp_simd_wasm;
}
var assert$3 = import_assert.default;
var net = import_net.default;
var util$9 = util$e;
var Request3 = request$2;
var DispatcherBase$3 = dispatcherBase;
var {
  RequestContentLengthMismatchError: RequestContentLengthMismatchError2,
  ResponseContentLengthMismatchError: ResponseContentLengthMismatchError2,
  InvalidArgumentError: InvalidArgumentError$e,
  RequestAbortedError: RequestAbortedError$8,
  HeadersTimeoutError: HeadersTimeoutError2,
  HeadersOverflowError: HeadersOverflowError2,
  SocketError: SocketError$2,
  InformationalError: InformationalError2,
  BodyTimeoutError: BodyTimeoutError2,
  HTTPParserError: HTTPParserError2,
  ResponseExceededMaxSizeError: ResponseExceededMaxSizeError2
} = errors;
var buildConnector$2 = connect$2;
var {
  kUrl: kUrl$3,
  kReset,
  kServerName,
  kClient: kClient$1,
  kBusy: kBusy$1,
  kParser,
  kConnect,
  kBlocking,
  kResuming,
  kRunning: kRunning$3,
  kPending: kPending$2,
  kSize: kSize$4,
  kWriting,
  kQueue: kQueue$1,
  kConnected: kConnected$5,
  kConnecting,
  kNeedDrain: kNeedDrain$3,
  kNoRef,
  kKeepAliveDefaultTimeout,
  kHostHeader,
  kPendingIdx,
  kRunningIdx,
  kError,
  kPipelining,
  kSocket,
  kKeepAliveTimeoutValue,
  kMaxHeadersSize,
  kKeepAliveMaxTimeout,
  kKeepAliveTimeoutThreshold,
  kHeadersTimeout,
  kBodyTimeout,
  kStrictContentLength,
  kConnector,
  kMaxRedirections: kMaxRedirections$1,
  kMaxRequests,
  kCounter,
  kClose: kClose$5,
  kDestroy: kDestroy$3,
  kDispatch: kDispatch$2,
  kInterceptors: kInterceptors$4,
  kLocalAddress,
  kMaxResponseSize
} = symbols$2;
var kClosedResolve$1 = Symbol("kClosedResolve");
var channels = {};
try {
  const diagnosticsChannel = require("diagnostics_channel");
  channels.sendHeaders = diagnosticsChannel.channel("undici:client:sendHeaders");
  channels.beforeConnect = diagnosticsChannel.channel("undici:client:beforeConnect");
  channels.connectError = diagnosticsChannel.channel("undici:client:connectError");
  channels.connected = diagnosticsChannel.channel("undici:client:connected");
} catch {
  channels.sendHeaders = { hasSubscribers: false };
  channels.beforeConnect = { hasSubscribers: false };
  channels.connectError = { hasSubscribers: false };
  channels.connected = { hasSubscribers: false };
}
var Client$4 = class Client extends DispatcherBase$3 {
  constructor(url, {
    interceptors,
    maxHeaderSize,
    headersTimeout,
    socketTimeout,
    requestTimeout,
    connectTimeout,
    bodyTimeout,
    idleTimeout,
    keepAlive,
    keepAliveTimeout,
    maxKeepAliveTimeout,
    keepAliveMaxTimeout,
    keepAliveTimeoutThreshold,
    socketPath,
    pipelining,
    tls: tls2,
    strictContentLength,
    maxCachedSessions,
    maxRedirections,
    connect: connect2,
    maxRequestsPerClient,
    localAddress,
    maxResponseSize
  } = {}) {
    super();
    if (keepAlive !== void 0) {
      throw new InvalidArgumentError$e("unsupported keepAlive, use pipelining=0 instead");
    }
    if (socketTimeout !== void 0) {
      throw new InvalidArgumentError$e("unsupported socketTimeout, use headersTimeout & bodyTimeout instead");
    }
    if (requestTimeout !== void 0) {
      throw new InvalidArgumentError$e("unsupported requestTimeout, use headersTimeout & bodyTimeout instead");
    }
    if (idleTimeout !== void 0) {
      throw new InvalidArgumentError$e("unsupported idleTimeout, use keepAliveTimeout instead");
    }
    if (maxKeepAliveTimeout !== void 0) {
      throw new InvalidArgumentError$e("unsupported maxKeepAliveTimeout, use keepAliveMaxTimeout instead");
    }
    if (maxHeaderSize != null && !Number.isFinite(maxHeaderSize)) {
      throw new InvalidArgumentError$e("invalid maxHeaderSize");
    }
    if (socketPath != null && typeof socketPath !== "string") {
      throw new InvalidArgumentError$e("invalid socketPath");
    }
    if (connectTimeout != null && (!Number.isFinite(connectTimeout) || connectTimeout < 0)) {
      throw new InvalidArgumentError$e("invalid connectTimeout");
    }
    if (keepAliveTimeout != null && (!Number.isFinite(keepAliveTimeout) || keepAliveTimeout <= 0)) {
      throw new InvalidArgumentError$e("invalid keepAliveTimeout");
    }
    if (keepAliveMaxTimeout != null && (!Number.isFinite(keepAliveMaxTimeout) || keepAliveMaxTimeout <= 0)) {
      throw new InvalidArgumentError$e("invalid keepAliveMaxTimeout");
    }
    if (keepAliveTimeoutThreshold != null && !Number.isFinite(keepAliveTimeoutThreshold)) {
      throw new InvalidArgumentError$e("invalid keepAliveTimeoutThreshold");
    }
    if (headersTimeout != null && (!Number.isInteger(headersTimeout) || headersTimeout < 0)) {
      throw new InvalidArgumentError$e("headersTimeout must be a positive integer or zero");
    }
    if (bodyTimeout != null && (!Number.isInteger(bodyTimeout) || bodyTimeout < 0)) {
      throw new InvalidArgumentError$e("bodyTimeout must be a positive integer or zero");
    }
    if (connect2 != null && typeof connect2 !== "function" && typeof connect2 !== "object") {
      throw new InvalidArgumentError$e("connect must be a function or an object");
    }
    if (maxRedirections != null && (!Number.isInteger(maxRedirections) || maxRedirections < 0)) {
      throw new InvalidArgumentError$e("maxRedirections must be a positive number");
    }
    if (maxRequestsPerClient != null && (!Number.isInteger(maxRequestsPerClient) || maxRequestsPerClient < 0)) {
      throw new InvalidArgumentError$e("maxRequestsPerClient must be a positive number");
    }
    if (localAddress != null && (typeof localAddress !== "string" || net.isIP(localAddress) === 0)) {
      throw new InvalidArgumentError$e("localAddress must be valid string IP address");
    }
    if (maxResponseSize != null && (!Number.isInteger(maxResponseSize) || maxResponseSize < -1)) {
      throw new InvalidArgumentError$e("maxResponseSize must be a positive number");
    }
    if (typeof connect2 !== "function") {
      connect2 = buildConnector$2(__spreadValues(__spreadProps(__spreadValues({}, tls2), {
        maxCachedSessions,
        socketPath,
        timeout: connectTimeout
      }), connect2));
    }
    this[kInterceptors$4] = interceptors && interceptors.Client && Array.isArray(interceptors.Client) ? interceptors.Client : [createRedirectInterceptor$1({ maxRedirections })];
    this[kUrl$3] = util$9.parseOrigin(url);
    this[kConnector] = connect2;
    this[kSocket] = null;
    this[kPipelining] = pipelining != null ? pipelining : 1;
    this[kMaxHeadersSize] = maxHeaderSize || 16384;
    this[kKeepAliveDefaultTimeout] = keepAliveTimeout == null ? 4e3 : keepAliveTimeout;
    this[kKeepAliveMaxTimeout] = keepAliveMaxTimeout == null ? 6e5 : keepAliveMaxTimeout;
    this[kKeepAliveTimeoutThreshold] = keepAliveTimeoutThreshold == null ? 1e3 : keepAliveTimeoutThreshold;
    this[kKeepAliveTimeoutValue] = this[kKeepAliveDefaultTimeout];
    this[kServerName] = null;
    this[kLocalAddress] = localAddress != null ? localAddress : null;
    this[kResuming] = 0;
    this[kNeedDrain$3] = 0;
    this[kHostHeader] = `host: ${this[kUrl$3].hostname}${this[kUrl$3].port ? `:${this[kUrl$3].port}` : ""}\r
`;
    this[kBodyTimeout] = bodyTimeout != null ? bodyTimeout : 3e4;
    this[kHeadersTimeout] = headersTimeout != null ? headersTimeout : 3e4;
    this[kStrictContentLength] = strictContentLength == null ? true : strictContentLength;
    this[kMaxRedirections$1] = maxRedirections;
    this[kMaxRequests] = maxRequestsPerClient;
    this[kClosedResolve$1] = null;
    this[kMaxResponseSize] = maxResponseSize > -1 ? maxResponseSize : -1;
    this[kQueue$1] = [];
    this[kRunningIdx] = 0;
    this[kPendingIdx] = 0;
  }
  get pipelining() {
    return this[kPipelining];
  }
  set pipelining(value) {
    this[kPipelining] = value;
    resume(this, true);
  }
  get [kPending$2]() {
    return this[kQueue$1].length - this[kPendingIdx];
  }
  get [kRunning$3]() {
    return this[kPendingIdx] - this[kRunningIdx];
  }
  get [kSize$4]() {
    return this[kQueue$1].length - this[kRunningIdx];
  }
  get [kConnected$5]() {
    return !!this[kSocket] && !this[kConnecting] && !this[kSocket].destroyed;
  }
  get [kBusy$1]() {
    const socket = this[kSocket];
    return socket && (socket[kReset] || socket[kWriting] || socket[kBlocking]) || this[kSize$4] >= (this[kPipelining] || 1) || this[kPending$2] > 0;
  }
  [kConnect](cb) {
    connect$1(this);
    this.once("connect", cb);
  }
  [kDispatch$2](opts, handler2) {
    const origin = opts.origin || this[kUrl$3].origin;
    const request2 = new Request3(origin, opts, handler2);
    this[kQueue$1].push(request2);
    if (this[kResuming])
      ;
    else if (util$9.bodyLength(request2.body) == null && util$9.isIterable(request2.body)) {
      this[kResuming] = 1;
      process.nextTick(resume, this);
    } else {
      resume(this, true);
    }
    if (this[kResuming] && this[kNeedDrain$3] !== 2 && this[kBusy$1]) {
      this[kNeedDrain$3] = 2;
    }
    return this[kNeedDrain$3] < 2;
  }
  async [kClose$5]() {
    return new Promise((resolve) => {
      if (!this[kSize$4]) {
        this.destroy(resolve);
      } else {
        this[kClosedResolve$1] = resolve;
      }
    });
  }
  async [kDestroy$3](err) {
    return new Promise((resolve) => {
      const requests = this[kQueue$1].splice(this[kPendingIdx]);
      for (let i = 0; i < requests.length; i++) {
        const request2 = requests[i];
        errorRequest(this, request2, err);
      }
      const callback = () => {
        if (this[kClosedResolve$1]) {
          this[kClosedResolve$1]();
          this[kClosedResolve$1] = null;
        }
        resolve();
      };
      if (!this[kSocket]) {
        queueMicrotask(callback);
      } else {
        util$9.destroy(this[kSocket].on("close", callback), err);
      }
      resume(this);
    });
  }
};
var constants = requireConstants();
var createRedirectInterceptor$1 = redirectInterceptor;
var EMPTY_BUF = Buffer.alloc(0);
async function lazyllhttp() {
  const llhttpWasmData = process.env.JEST_WORKER_ID ? requireLlhttp_wasm() : void 0;
  let mod;
  try {
    mod = await WebAssembly.compile(Buffer.from(requireLlhttp_simd_wasm(), "base64"));
  } catch (e) {
    mod = await WebAssembly.compile(Buffer.from(llhttpWasmData || requireLlhttp_wasm(), "base64"));
  }
  return await WebAssembly.instantiate(mod, {
    env: {
      wasm_on_url: (p, at, len) => {
        return 0;
      },
      wasm_on_status: (p, at, len) => {
        assert$3.strictEqual(currentParser.ptr, p);
        const start = at - currentBufferPtr;
        const end = start + len;
        return currentParser.onStatus(currentBufferRef.slice(start, end)) || 0;
      },
      wasm_on_message_begin: (p) => {
        assert$3.strictEqual(currentParser.ptr, p);
        return currentParser.onMessageBegin() || 0;
      },
      wasm_on_header_field: (p, at, len) => {
        assert$3.strictEqual(currentParser.ptr, p);
        const start = at - currentBufferPtr;
        const end = start + len;
        return currentParser.onHeaderField(currentBufferRef.slice(start, end)) || 0;
      },
      wasm_on_header_value: (p, at, len) => {
        assert$3.strictEqual(currentParser.ptr, p);
        const start = at - currentBufferPtr;
        const end = start + len;
        return currentParser.onHeaderValue(currentBufferRef.slice(start, end)) || 0;
      },
      wasm_on_headers_complete: (p, statusCode, upgrade2, shouldKeepAlive) => {
        assert$3.strictEqual(currentParser.ptr, p);
        return currentParser.onHeadersComplete(statusCode, Boolean(upgrade2), Boolean(shouldKeepAlive)) || 0;
      },
      wasm_on_body: (p, at, len) => {
        assert$3.strictEqual(currentParser.ptr, p);
        const start = at - currentBufferPtr;
        const end = start + len;
        return currentParser.onBody(currentBufferRef.slice(start, end)) || 0;
      },
      wasm_on_message_complete: (p) => {
        assert$3.strictEqual(currentParser.ptr, p);
        return currentParser.onMessageComplete() || 0;
      }
    }
  });
}
var llhttpInstance = null;
var llhttpPromise = lazyllhttp().catch(() => {
});
var currentParser = null;
var currentBufferRef = null;
var currentBufferSize = 0;
var currentBufferPtr = null;
var TIMEOUT_HEADERS = 1;
var TIMEOUT_BODY = 2;
var TIMEOUT_IDLE = 3;
var Parser = class {
  constructor(client3, socket, { exports }) {
    assert$3(Number.isFinite(client3[kMaxHeadersSize]) && client3[kMaxHeadersSize] > 0);
    this.llhttp = exports;
    this.ptr = this.llhttp.llhttp_alloc(constants.TYPE.RESPONSE);
    this.client = client3;
    this.socket = socket;
    this.timeout = null;
    this.timeoutValue = null;
    this.timeoutType = null;
    this.statusCode = null;
    this.statusText = "";
    this.upgrade = false;
    this.headers = [];
    this.headersSize = 0;
    this.headersMaxSize = client3[kMaxHeadersSize];
    this.shouldKeepAlive = false;
    this.paused = false;
    this.resume = this.resume.bind(this);
    this.bytesRead = 0;
    this.keepAlive = "";
    this.contentLength = "";
    this.maxResponseSize = client3[kMaxResponseSize];
  }
  setTimeout(value, type) {
    this.timeoutType = type;
    if (value !== this.timeoutValue) {
      clearTimeout(this.timeout);
      if (value) {
        this.timeout = setTimeout(onParserTimeout, value, this);
        if (this.timeout.unref) {
          this.timeout.unref();
        }
      } else {
        this.timeout = null;
      }
      this.timeoutValue = value;
    } else if (this.timeout) {
      if (this.timeout.refresh) {
        this.timeout.refresh();
      }
    }
  }
  resume() {
    if (this.socket.destroyed || !this.paused) {
      return;
    }
    assert$3(this.ptr != null);
    assert$3(currentParser == null);
    this.llhttp.llhttp_resume(this.ptr);
    assert$3(this.timeoutType === TIMEOUT_BODY);
    if (this.timeout) {
      if (this.timeout.refresh) {
        this.timeout.refresh();
      }
    }
    this.paused = false;
    this.execute(this.socket.read() || EMPTY_BUF);
    this.readMore();
  }
  readMore() {
    while (!this.paused && this.ptr) {
      const chunk = this.socket.read();
      if (chunk === null) {
        break;
      }
      this.execute(chunk);
    }
  }
  execute(data) {
    assert$3(this.ptr != null);
    assert$3(currentParser == null);
    assert$3(!this.paused);
    const { socket, llhttp } = this;
    if (data.length > currentBufferSize) {
      if (currentBufferPtr) {
        llhttp.free(currentBufferPtr);
      }
      currentBufferSize = Math.ceil(data.length / 4096) * 4096;
      currentBufferPtr = llhttp.malloc(currentBufferSize);
    }
    new Uint8Array(llhttp.memory.buffer, currentBufferPtr, currentBufferSize).set(data);
    try {
      let ret;
      try {
        currentBufferRef = data;
        currentParser = this;
        ret = llhttp.llhttp_execute(this.ptr, currentBufferPtr, data.length);
      } catch (err) {
        throw err;
      } finally {
        currentParser = null;
        currentBufferRef = null;
      }
      const offset = llhttp.llhttp_get_error_pos(this.ptr) - currentBufferPtr;
      if (ret === constants.ERROR.PAUSED_UPGRADE) {
        this.onUpgrade(data.slice(offset));
      } else if (ret === constants.ERROR.PAUSED) {
        this.paused = true;
        socket.unshift(data.slice(offset));
      } else if (ret !== constants.ERROR.OK) {
        const ptr = llhttp.llhttp_get_error_reason(this.ptr);
        let message = "";
        if (ptr) {
          const len = new Uint8Array(llhttp.memory.buffer, ptr).indexOf(0);
          message = Buffer.from(llhttp.memory.buffer, ptr, len).toString();
        }
        throw new HTTPParserError2(message, constants.ERROR[ret], data.slice(offset));
      }
    } catch (err) {
      util$9.destroy(socket, err);
    }
  }
  destroy() {
    assert$3(this.ptr != null);
    assert$3(currentParser == null);
    this.llhttp.llhttp_free(this.ptr);
    this.ptr = null;
    clearTimeout(this.timeout);
    this.timeout = null;
    this.timeoutValue = null;
    this.timeoutType = null;
    this.paused = false;
  }
  onStatus(buf) {
    this.statusText = buf.toString();
  }
  onMessageBegin() {
    const { socket, client: client3 } = this;
    if (socket.destroyed) {
      return -1;
    }
    const request2 = client3[kQueue$1][client3[kRunningIdx]];
    if (!request2) {
      return -1;
    }
  }
  onHeaderField(buf) {
    const len = this.headers.length;
    if ((len & 1) === 0) {
      this.headers.push(buf);
    } else {
      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);
    }
    this.trackHeader(buf.length);
  }
  onHeaderValue(buf) {
    let len = this.headers.length;
    if ((len & 1) === 1) {
      this.headers.push(buf);
      len += 1;
    } else {
      this.headers[len - 1] = Buffer.concat([this.headers[len - 1], buf]);
    }
    const key2 = this.headers[len - 2];
    if (key2.length === 10 && key2.toString().toLowerCase() === "keep-alive") {
      this.keepAlive += buf.toString();
    } else if (key2.length === 14 && key2.toString().toLowerCase() === "content-length") {
      this.contentLength += buf.toString();
    }
    this.trackHeader(buf.length);
  }
  trackHeader(len) {
    this.headersSize += len;
    if (this.headersSize >= this.headersMaxSize) {
      util$9.destroy(this.socket, new HeadersOverflowError2());
    }
  }
  onUpgrade(head) {
    const { upgrade: upgrade2, client: client3, socket, headers: headers2, statusCode } = this;
    assert$3(upgrade2);
    const request2 = client3[kQueue$1][client3[kRunningIdx]];
    assert$3(request2);
    assert$3(!socket.destroyed);
    assert$3(socket === client3[kSocket]);
    assert$3(!this.paused);
    assert$3(request2.upgrade || request2.method === "CONNECT");
    this.statusCode = null;
    this.statusText = "";
    this.shouldKeepAlive = null;
    assert$3(this.headers.length % 2 === 0);
    this.headers = [];
    this.headersSize = 0;
    socket.unshift(head);
    socket[kParser].destroy();
    socket[kParser] = null;
    socket[kClient$1] = null;
    socket[kError] = null;
    socket.removeListener("error", onSocketError).removeListener("readable", onSocketReadable).removeListener("end", onSocketEnd).removeListener("close", onSocketClose);
    client3[kSocket] = null;
    client3[kQueue$1][client3[kRunningIdx]++] = null;
    client3.emit("disconnect", client3[kUrl$3], [client3], new InformationalError2("upgrade"));
    try {
      request2.onUpgrade(statusCode, headers2, socket);
    } catch (err) {
      util$9.destroy(socket, err);
    }
    resume(client3);
  }
  onHeadersComplete(statusCode, upgrade2, shouldKeepAlive) {
    const { client: client3, socket, headers: headers2, statusText } = this;
    if (socket.destroyed) {
      return -1;
    }
    const request2 = client3[kQueue$1][client3[kRunningIdx]];
    if (!request2) {
      return -1;
    }
    assert$3(!this.upgrade);
    assert$3(this.statusCode < 200);
    if (statusCode === 100) {
      util$9.destroy(socket, new SocketError$2("bad response", util$9.getSocketInfo(socket)));
      return -1;
    }
    if (upgrade2 && !request2.upgrade) {
      util$9.destroy(socket, new SocketError$2("bad upgrade", util$9.getSocketInfo(socket)));
      return -1;
    }
    assert$3.strictEqual(this.timeoutType, TIMEOUT_HEADERS);
    this.statusCode = statusCode;
    this.shouldKeepAlive = shouldKeepAlive;
    if (this.statusCode >= 200) {
      const bodyTimeout = request2.bodyTimeout != null ? request2.bodyTimeout : client3[kBodyTimeout];
      this.setTimeout(bodyTimeout, TIMEOUT_BODY);
    } else if (this.timeout) {
      if (this.timeout.refresh) {
        this.timeout.refresh();
      }
    }
    if (request2.method === "CONNECT") {
      assert$3(client3[kRunning$3] === 1);
      this.upgrade = true;
      return 2;
    }
    if (upgrade2) {
      assert$3(client3[kRunning$3] === 1);
      this.upgrade = true;
      return 2;
    }
    assert$3(this.headers.length % 2 === 0);
    this.headers = [];
    this.headersSize = 0;
    if (shouldKeepAlive && client3[kPipelining]) {
      const keepAliveTimeout = this.keepAlive ? util$9.parseKeepAliveTimeout(this.keepAlive) : null;
      if (keepAliveTimeout != null) {
        const timeout = Math.min(keepAliveTimeout - client3[kKeepAliveTimeoutThreshold], client3[kKeepAliveMaxTimeout]);
        if (timeout <= 0) {
          socket[kReset] = true;
        } else {
          client3[kKeepAliveTimeoutValue] = timeout;
        }
      } else {
        client3[kKeepAliveTimeoutValue] = client3[kKeepAliveDefaultTimeout];
      }
    } else {
      socket[kReset] = true;
    }
    let pause;
    try {
      pause = request2.onHeaders(statusCode, headers2, this.resume, statusText) === false;
    } catch (err) {
      util$9.destroy(socket, err);
      return -1;
    }
    if (request2.method === "HEAD") {
      assert$3(socket[kReset]);
      return 1;
    }
    if (statusCode < 200) {
      return 1;
    }
    if (socket[kBlocking]) {
      socket[kBlocking] = false;
      resume(client3);
    }
    return pause ? constants.ERROR.PAUSED : 0;
  }
  onBody(buf) {
    const { client: client3, socket, statusCode, maxResponseSize } = this;
    if (socket.destroyed) {
      return -1;
    }
    const request2 = client3[kQueue$1][client3[kRunningIdx]];
    assert$3(request2);
    assert$3.strictEqual(this.timeoutType, TIMEOUT_BODY);
    if (this.timeout) {
      if (this.timeout.refresh) {
        this.timeout.refresh();
      }
    }
    assert$3(statusCode >= 200);
    if (maxResponseSize > -1 && this.bytesRead + buf.length > maxResponseSize) {
      util$9.destroy(socket, new ResponseExceededMaxSizeError2());
      return -1;
    }
    this.bytesRead += buf.length;
    try {
      if (request2.onData(buf) === false) {
        return constants.ERROR.PAUSED;
      }
    } catch (err) {
      util$9.destroy(socket, err);
      return -1;
    }
  }
  onMessageComplete() {
    const { client: client3, socket, statusCode, upgrade: upgrade2, headers: headers2, contentLength, bytesRead, shouldKeepAlive } = this;
    if (socket.destroyed && (!statusCode || shouldKeepAlive)) {
      return -1;
    }
    if (upgrade2) {
      return;
    }
    const request2 = client3[kQueue$1][client3[kRunningIdx]];
    assert$3(request2);
    assert$3(statusCode >= 100);
    this.statusCode = null;
    this.statusText = "";
    this.bytesRead = 0;
    this.contentLength = "";
    this.keepAlive = "";
    assert$3(this.headers.length % 2 === 0);
    this.headers = [];
    this.headersSize = 0;
    if (statusCode < 200) {
      return;
    }
    if (request2.method !== "HEAD" && contentLength && bytesRead !== parseInt(contentLength, 10)) {
      util$9.destroy(socket, new ResponseContentLengthMismatchError2());
      return -1;
    }
    try {
      request2.onComplete(headers2);
    } catch (err) {
      errorRequest(client3, request2, err);
    }
    client3[kQueue$1][client3[kRunningIdx]++] = null;
    if (socket[kWriting]) {
      assert$3.strictEqual(client3[kRunning$3], 0);
      util$9.destroy(socket, new InformationalError2("reset"));
      return constants.ERROR.PAUSED;
    } else if (!shouldKeepAlive) {
      util$9.destroy(socket, new InformationalError2("reset"));
      return constants.ERROR.PAUSED;
    } else if (socket[kReset] && client3[kRunning$3] === 0) {
      util$9.destroy(socket, new InformationalError2("reset"));
      return constants.ERROR.PAUSED;
    } else if (client3[kPipelining] === 1) {
      setImmediate(resume, client3);
    } else {
      resume(client3);
    }
  }
};
function onParserTimeout(parser) {
  const { socket, timeoutType, client: client3 } = parser;
  if (timeoutType === TIMEOUT_HEADERS) {
    if (!socket[kWriting] || socket.writableNeedDrain || client3[kRunning$3] > 1) {
      assert$3(!parser.paused, "cannot be paused while waiting for headers");
      util$9.destroy(socket, new HeadersTimeoutError2());
    }
  } else if (timeoutType === TIMEOUT_BODY) {
    if (!parser.paused) {
      util$9.destroy(socket, new BodyTimeoutError2());
    }
  } else if (timeoutType === TIMEOUT_IDLE) {
    assert$3(client3[kRunning$3] === 0 && client3[kKeepAliveTimeoutValue]);
    util$9.destroy(socket, new InformationalError2("socket idle timeout"));
  }
}
function onSocketReadable() {
  const { [kParser]: parser } = this;
  parser.readMore();
}
function onSocketError(err) {
  const { [kParser]: parser } = this;
  assert$3(err.code !== "ERR_TLS_CERT_ALTNAME_INVALID");
  if (err.code === "ECONNRESET" && parser.statusCode && !parser.shouldKeepAlive) {
    parser.onMessageComplete();
    return;
  }
  this[kError] = err;
  onError(this[kClient$1], err);
}
function onError(client3, err) {
  if (client3[kRunning$3] === 0 && err.code !== "UND_ERR_INFO" && err.code !== "UND_ERR_SOCKET") {
    assert$3(client3[kPendingIdx] === client3[kRunningIdx]);
    const requests = client3[kQueue$1].splice(client3[kRunningIdx]);
    for (let i = 0; i < requests.length; i++) {
      const request2 = requests[i];
      errorRequest(client3, request2, err);
    }
    assert$3(client3[kSize$4] === 0);
  }
}
function onSocketEnd() {
  const { [kParser]: parser } = this;
  if (parser.statusCode && !parser.shouldKeepAlive) {
    parser.onMessageComplete();
    return;
  }
  util$9.destroy(this, new SocketError$2("other side closed", util$9.getSocketInfo(this)));
}
function onSocketClose() {
  const { [kClient$1]: client3 } = this;
  if (!this[kError] && this[kParser].statusCode && !this[kParser].shouldKeepAlive) {
    this[kParser].onMessageComplete();
  }
  this[kParser].destroy();
  this[kParser] = null;
  const err = this[kError] || new SocketError$2("closed", util$9.getSocketInfo(this));
  client3[kSocket] = null;
  if (client3.destroyed) {
    assert$3(client3[kPending$2] === 0);
    const requests = client3[kQueue$1].splice(client3[kRunningIdx]);
    for (let i = 0; i < requests.length; i++) {
      const request2 = requests[i];
      errorRequest(client3, request2, err);
    }
  } else if (client3[kRunning$3] > 0 && err.code !== "UND_ERR_INFO") {
    const request2 = client3[kQueue$1][client3[kRunningIdx]];
    client3[kQueue$1][client3[kRunningIdx]++] = null;
    errorRequest(client3, request2, err);
  }
  client3[kPendingIdx] = client3[kRunningIdx];
  assert$3(client3[kRunning$3] === 0);
  client3.emit("disconnect", client3[kUrl$3], [client3], err);
  resume(client3);
}
async function connect$1(client3) {
  assert$3(!client3[kConnecting]);
  assert$3(!client3[kSocket]);
  let { host, hostname, protocol, port } = client3[kUrl$3];
  if (hostname[0] === "[") {
    const idx = hostname.indexOf("]");
    assert$3(idx !== -1);
    const ip = hostname.substr(1, idx - 1);
    assert$3(net.isIP(ip));
    hostname = ip;
  }
  client3[kConnecting] = true;
  if (channels.beforeConnect.hasSubscribers) {
    channels.beforeConnect.publish({
      connectParams: {
        host,
        hostname,
        protocol,
        port,
        servername: client3[kServerName],
        localAddress: client3[kLocalAddress]
      },
      connector: client3[kConnector]
    });
  }
  try {
    const socket = await new Promise((resolve, reject) => {
      client3[kConnector]({
        host,
        hostname,
        protocol,
        port,
        servername: client3[kServerName],
        localAddress: client3[kLocalAddress]
      }, (err, socket2) => {
        if (err) {
          reject(err);
        } else {
          resolve(socket2);
        }
      });
    });
    if (!llhttpInstance) {
      llhttpInstance = await llhttpPromise;
      llhttpPromise = null;
    }
    client3[kConnecting] = false;
    assert$3(socket);
    client3[kSocket] = socket;
    socket[kNoRef] = false;
    socket[kWriting] = false;
    socket[kReset] = false;
    socket[kBlocking] = false;
    socket[kError] = null;
    socket[kParser] = new Parser(client3, socket, llhttpInstance);
    socket[kClient$1] = client3;
    socket[kCounter] = 0;
    socket[kMaxRequests] = client3[kMaxRequests];
    socket.on("error", onSocketError).on("readable", onSocketReadable).on("end", onSocketEnd).on("close", onSocketClose);
    if (channels.connected.hasSubscribers) {
      channels.connected.publish({
        connectParams: {
          host,
          hostname,
          protocol,
          port,
          servername: client3[kServerName],
          localAddress: client3[kLocalAddress]
        },
        connector: client3[kConnector],
        socket
      });
    }
    client3.emit("connect", client3[kUrl$3], [client3]);
  } catch (err) {
    client3[kConnecting] = false;
    if (channels.connectError.hasSubscribers) {
      channels.connectError.publish({
        connectParams: {
          host,
          hostname,
          protocol,
          port,
          servername: client3[kServerName],
          localAddress: client3[kLocalAddress]
        },
        connector: client3[kConnector],
        error: err
      });
    }
    if (err.code === "ERR_TLS_CERT_ALTNAME_INVALID") {
      assert$3(client3[kRunning$3] === 0);
      while (client3[kPending$2] > 0 && client3[kQueue$1][client3[kPendingIdx]].servername === client3[kServerName]) {
        const request2 = client3[kQueue$1][client3[kPendingIdx]++];
        errorRequest(client3, request2, err);
      }
    } else {
      onError(client3, err);
    }
    client3.emit("connectionError", client3[kUrl$3], [client3], err);
  }
  resume(client3);
}
function emitDrain(client3) {
  client3[kNeedDrain$3] = 0;
  client3.emit("drain", client3[kUrl$3], [client3]);
}
function resume(client3, sync) {
  if (client3[kResuming] === 2) {
    return;
  }
  client3[kResuming] = 2;
  _resume(client3, sync);
  client3[kResuming] = 0;
  if (client3[kRunningIdx] > 256) {
    client3[kQueue$1].splice(0, client3[kRunningIdx]);
    client3[kPendingIdx] -= client3[kRunningIdx];
    client3[kRunningIdx] = 0;
  }
}
function _resume(client3, sync) {
  while (true) {
    if (client3.destroyed) {
      assert$3(client3[kPending$2] === 0);
      return;
    }
    if (client3.closed && !client3[kSize$4]) {
      client3.destroy();
      return;
    }
    const socket = client3[kSocket];
    if (socket) {
      if (client3[kSize$4] === 0) {
        if (!socket[kNoRef] && socket.unref) {
          socket.unref();
          socket[kNoRef] = true;
        }
      } else if (socket[kNoRef] && socket.ref) {
        socket.ref();
        socket[kNoRef] = false;
      }
      if (client3[kSize$4] === 0) {
        if (socket[kParser].timeoutType !== TIMEOUT_IDLE) {
          socket[kParser].setTimeout(client3[kKeepAliveTimeoutValue], TIMEOUT_IDLE);
        }
      } else if (client3[kRunning$3] > 0 && socket[kParser].statusCode < 200) {
        if (socket[kParser].timeoutType !== TIMEOUT_HEADERS) {
          const request3 = client3[kQueue$1][client3[kRunningIdx]];
          const headersTimeout = request3.headersTimeout != null ? request3.headersTimeout : client3[kHeadersTimeout];
          socket[kParser].setTimeout(headersTimeout, TIMEOUT_HEADERS);
        }
      }
    }
    if (client3[kBusy$1]) {
      client3[kNeedDrain$3] = 2;
    } else if (client3[kNeedDrain$3] === 2) {
      if (sync) {
        client3[kNeedDrain$3] = 1;
        process.nextTick(emitDrain, client3);
      } else {
        emitDrain(client3);
      }
      continue;
    }
    if (client3[kPending$2] === 0) {
      return;
    }
    if (client3[kRunning$3] >= (client3[kPipelining] || 1)) {
      return;
    }
    const request2 = client3[kQueue$1][client3[kPendingIdx]];
    if (client3[kUrl$3].protocol === "https:" && client3[kServerName] !== request2.servername) {
      if (client3[kRunning$3] > 0) {
        return;
      }
      client3[kServerName] = request2.servername;
      if (socket && socket.servername !== request2.servername) {
        util$9.destroy(socket, new InformationalError2("servername changed"));
        return;
      }
    }
    if (client3[kConnecting]) {
      return;
    }
    if (!socket) {
      connect$1(client3);
      continue;
    }
    if (socket.destroyed || socket[kWriting] || socket[kReset] || socket[kBlocking]) {
      return;
    }
    if (client3[kRunning$3] > 0 && !request2.idempotent) {
      return;
    }
    if (client3[kRunning$3] > 0 && (request2.upgrade || request2.method === "CONNECT")) {
      return;
    }
    if (util$9.isStream(request2.body) && util$9.bodyLength(request2.body) === 0) {
      request2.body.on("data", function() {
        assert$3(false);
      }).on("error", function(err) {
        errorRequest(client3, request2, err);
      }).on("end", function() {
        util$9.destroy(this);
      });
      request2.body = null;
    }
    if (client3[kRunning$3] > 0 && (util$9.isStream(request2.body) || util$9.isAsyncIterable(request2.body))) {
      return;
    }
    if (!request2.aborted && write(client3, request2)) {
      client3[kPendingIdx]++;
    } else {
      client3[kQueue$1].splice(client3[kPendingIdx], 1);
    }
  }
}
function write(client3, request2) {
  const { body: body2, method, path, host, upgrade: upgrade2, headers: headers2, blocking } = request2;
  const expectsPayload = method === "PUT" || method === "POST" || method === "PATCH";
  if (body2 && typeof body2.read === "function") {
    body2.read(0);
  }
  let contentLength = util$9.bodyLength(body2);
  if (contentLength === null) {
    contentLength = request2.contentLength;
  }
  if (contentLength === 0 && !expectsPayload) {
    contentLength = null;
  }
  if (request2.contentLength !== null && request2.contentLength !== contentLength) {
    if (client3[kStrictContentLength]) {
      errorRequest(client3, request2, new RequestContentLengthMismatchError2());
      return false;
    }
    process.emitWarning(new RequestContentLengthMismatchError2());
  }
  const socket = client3[kSocket];
  try {
    request2.onConnect((err) => {
      if (request2.aborted || request2.completed) {
        return;
      }
      errorRequest(client3, request2, err || new RequestAbortedError$8());
      util$9.destroy(socket, new InformationalError2("aborted"));
    });
  } catch (err) {
    errorRequest(client3, request2, err);
  }
  if (request2.aborted) {
    return false;
  }
  if (method === "HEAD") {
    socket[kReset] = true;
  }
  if (upgrade2 || method === "CONNECT") {
    socket[kReset] = true;
  }
  if (client3[kMaxRequests] && socket[kCounter]++ >= client3[kMaxRequests]) {
    socket[kReset] = true;
  }
  if (blocking) {
    socket[kBlocking] = true;
  }
  let header = `${method} ${path} HTTP/1.1\r
`;
  if (typeof host === "string") {
    header += `host: ${host}\r
`;
  } else {
    header += client3[kHostHeader];
  }
  if (upgrade2) {
    header += `connection: upgrade\r
upgrade: ${upgrade2}\r
`;
  } else if (client3[kPipelining]) {
    header += "connection: keep-alive\r\n";
  } else {
    header += "connection: close\r\n";
  }
  if (headers2) {
    header += headers2;
  }
  if (channels.sendHeaders.hasSubscribers) {
    channels.sendHeaders.publish({ request: request2, headers: header, socket });
  }
  if (!body2) {
    if (contentLength === 0) {
      socket.write(`${header}content-length: 0\r
\r
`, "ascii");
    } else {
      assert$3(contentLength === null, "no body must not have content length");
      socket.write(`${header}\r
`, "ascii");
    }
    request2.onRequestSent();
  } else if (util$9.isBuffer(body2)) {
    assert$3(contentLength === body2.byteLength, "buffer body must have content length");
    socket.cork();
    socket.write(`${header}content-length: ${contentLength}\r
\r
`, "ascii");
    socket.write(body2);
    socket.uncork();
    request2.onBodySent(body2);
    request2.onRequestSent();
    if (!expectsPayload) {
      socket[kReset] = true;
    }
  } else if (util$9.isBlobLike(body2)) {
    if (typeof body2.stream === "function") {
      writeIterable({ body: body2.stream(), client: client3, request: request2, socket, contentLength, header, expectsPayload });
    } else {
      writeBlob({ body: body2, client: client3, request: request2, socket, contentLength, header, expectsPayload });
    }
  } else if (util$9.isStream(body2)) {
    writeStream({ body: body2, client: client3, request: request2, socket, contentLength, header, expectsPayload });
  } else if (util$9.isIterable(body2)) {
    writeIterable({ body: body2, client: client3, request: request2, socket, contentLength, header, expectsPayload });
  } else {
    assert$3(false);
  }
  return true;
}
function writeStream({ body: body2, client: client3, request: request2, socket, contentLength, header, expectsPayload }) {
  assert$3(contentLength !== 0 || client3[kRunning$3] === 0, "stream body cannot be pipelined");
  let finished2 = false;
  const writer = new AsyncWriter({ socket, request: request2, contentLength, client: client3, expectsPayload, header });
  const onData = function(chunk) {
    try {
      assert$3(!finished2);
      if (!writer.write(chunk) && this.pause) {
        this.pause();
      }
    } catch (err) {
      util$9.destroy(this, err);
    }
  };
  const onDrain = function() {
    assert$3(!finished2);
    if (body2.resume) {
      body2.resume();
    }
  };
  const onAbort = function() {
    onFinished(new RequestAbortedError$8());
  };
  const onFinished = function(err) {
    if (finished2) {
      return;
    }
    finished2 = true;
    assert$3(socket.destroyed || socket[kWriting] && client3[kRunning$3] <= 1);
    socket.off("drain", onDrain).off("error", onFinished);
    body2.removeListener("data", onData).removeListener("end", onFinished).removeListener("error", onFinished).removeListener("close", onAbort);
    if (!err) {
      try {
        writer.end();
      } catch (er) {
        err = er;
      }
    }
    writer.destroy(err);
    if (err && (err.code !== "UND_ERR_INFO" || err.message !== "reset")) {
      util$9.destroy(body2, err);
    } else {
      util$9.destroy(body2);
    }
  };
  body2.on("data", onData).on("end", onFinished).on("error", onFinished).on("close", onAbort);
  if (body2.resume) {
    body2.resume();
  }
  socket.on("drain", onDrain).on("error", onFinished);
}
async function writeBlob({ body: body2, client: client3, request: request2, socket, contentLength, header, expectsPayload }) {
  assert$3(contentLength === body2.size, "blob body must have content length");
  try {
    if (contentLength != null && contentLength !== body2.size) {
      throw new RequestContentLengthMismatchError2();
    }
    const buffer = Buffer.from(await body2.arrayBuffer());
    socket.cork();
    socket.write(`${header}content-length: ${contentLength}\r
\r
`, "ascii");
    socket.write(buffer);
    socket.uncork();
    request2.onBodySent(buffer);
    request2.onRequestSent();
    if (!expectsPayload) {
      socket[kReset] = true;
    }
    resume(client3);
  } catch (err) {
    util$9.destroy(socket, err);
  }
}
async function writeIterable({ body: body2, client: client3, request: request2, socket, contentLength, header, expectsPayload }) {
  assert$3(contentLength !== 0 || client3[kRunning$3] === 0, "iterator body cannot be pipelined");
  let callback = null;
  function onDrain() {
    if (callback) {
      const cb = callback;
      callback = null;
      cb();
    }
  }
  const waitForDrain = () => new Promise((resolve, reject) => {
    assert$3(callback === null);
    if (socket[kError]) {
      reject(socket[kError]);
    } else {
      callback = resolve;
    }
  });
  socket.on("close", onDrain).on("drain", onDrain);
  const writer = new AsyncWriter({ socket, request: request2, contentLength, client: client3, expectsPayload, header });
  try {
    for await (const chunk of body2) {
      if (socket[kError]) {
        throw socket[kError];
      }
      if (!writer.write(chunk)) {
        await waitForDrain();
      }
    }
    writer.end();
  } catch (err) {
    writer.destroy(err);
  } finally {
    socket.off("close", onDrain).off("drain", onDrain);
  }
}
var AsyncWriter = class {
  constructor({ socket, request: request2, contentLength, client: client3, expectsPayload, header }) {
    this.socket = socket;
    this.request = request2;
    this.contentLength = contentLength;
    this.client = client3;
    this.bytesWritten = 0;
    this.expectsPayload = expectsPayload;
    this.header = header;
    socket[kWriting] = true;
  }
  write(chunk) {
    const { socket, request: request2, contentLength, client: client3, bytesWritten, expectsPayload, header } = this;
    if (socket[kError]) {
      throw socket[kError];
    }
    if (socket.destroyed) {
      return false;
    }
    const len = Buffer.byteLength(chunk);
    if (!len) {
      return true;
    }
    if (contentLength !== null && bytesWritten + len > contentLength) {
      if (client3[kStrictContentLength]) {
        throw new RequestContentLengthMismatchError2();
      }
      process.emitWarning(new RequestContentLengthMismatchError2());
    }
    if (bytesWritten === 0) {
      if (!expectsPayload) {
        socket[kReset] = true;
      }
      if (contentLength === null) {
        socket.write(`${header}transfer-encoding: chunked\r
`, "ascii");
      } else {
        socket.write(`${header}content-length: ${contentLength}\r
\r
`, "ascii");
      }
    }
    if (contentLength === null) {
      socket.write(`\r
${len.toString(16)}\r
`, "ascii");
    }
    this.bytesWritten += len;
    const ret = socket.write(chunk);
    request2.onBodySent(chunk);
    if (!ret) {
      if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
        if (socket[kParser].timeout.refresh) {
          socket[kParser].timeout.refresh();
        }
      }
    }
    return ret;
  }
  end() {
    const { socket, contentLength, client: client3, bytesWritten, expectsPayload, header, request: request2 } = this;
    request2.onRequestSent();
    socket[kWriting] = false;
    if (socket[kError]) {
      throw socket[kError];
    }
    if (socket.destroyed) {
      return;
    }
    if (bytesWritten === 0) {
      if (expectsPayload) {
        socket.write(`${header}content-length: 0\r
\r
`, "ascii");
      } else {
        socket.write(`${header}\r
`, "ascii");
      }
    } else if (contentLength === null) {
      socket.write("\r\n0\r\n\r\n", "ascii");
    }
    if (contentLength !== null && bytesWritten !== contentLength) {
      if (client3[kStrictContentLength]) {
        throw new RequestContentLengthMismatchError2();
      } else {
        process.emitWarning(new RequestContentLengthMismatchError2());
      }
    }
    if (socket[kParser].timeout && socket[kParser].timeoutType === TIMEOUT_HEADERS) {
      if (socket[kParser].timeout.refresh) {
        socket[kParser].timeout.refresh();
      }
    }
    resume(client3);
  }
  destroy(err) {
    const { socket, client: client3 } = this;
    socket[kWriting] = false;
    if (err) {
      assert$3(client3[kRunning$3] <= 1, "pipeline should only contain this request");
      util$9.destroy(socket, err);
    }
  }
};
function errorRequest(client3, request2, err) {
  try {
    request2.onError(err);
    assert$3(request2.aborted);
  } catch (err2) {
    client3.emit("error", err2);
  }
}
var client = Client$4;
var kSize$3 = 2048;
var kMask = kSize$3 - 1;
var FixedCircularBuffer = class {
  constructor() {
    this.bottom = 0;
    this.top = 0;
    this.list = new Array(kSize$3);
    this.next = null;
  }
  isEmpty() {
    return this.top === this.bottom;
  }
  isFull() {
    return (this.top + 1 & kMask) === this.bottom;
  }
  push(data) {
    this.list[this.top] = data;
    this.top = this.top + 1 & kMask;
  }
  shift() {
    const nextItem = this.list[this.bottom];
    if (nextItem === void 0)
      return null;
    this.list[this.bottom] = void 0;
    this.bottom = this.bottom + 1 & kMask;
    return nextItem;
  }
};
var fixedQueue = class FixedQueue {
  constructor() {
    this.head = this.tail = new FixedCircularBuffer();
  }
  isEmpty() {
    return this.head.isEmpty();
  }
  push(data) {
    if (this.head.isFull()) {
      this.head = this.head.next = new FixedCircularBuffer();
    }
    this.head.push(data);
  }
  shift() {
    const tail = this.tail;
    const next = tail.shift();
    if (tail.isEmpty() && tail.next !== null) {
      this.tail = tail.next;
    }
    return next;
  }
};
var { kFree: kFree$1, kConnected: kConnected$4, kPending: kPending$1, kQueued: kQueued$1, kRunning: kRunning$2, kSize: kSize$2 } = symbols$2;
var kPool = Symbol("pool");
var PoolStats$1 = class PoolStats {
  constructor(pool2) {
    this[kPool] = pool2;
  }
  get connected() {
    return this[kPool][kConnected$4];
  }
  get free() {
    return this[kPool][kFree$1];
  }
  get pending() {
    return this[kPool][kPending$1];
  }
  get queued() {
    return this[kPool][kQueued$1];
  }
  get running() {
    return this[kPool][kRunning$2];
  }
  get size() {
    return this[kPool][kSize$2];
  }
};
var poolStats = PoolStats$1;
var DispatcherBase$2 = dispatcherBase;
var FixedQueue2 = fixedQueue;
var { kConnected: kConnected$3, kSize: kSize$1, kRunning: kRunning$1, kPending, kQueued, kBusy, kFree, kUrl: kUrl$2, kClose: kClose$4, kDestroy: kDestroy$2, kDispatch: kDispatch$1 } = symbols$2;
var PoolStats2 = poolStats;
var kClients$4 = Symbol("clients");
var kNeedDrain$2 = Symbol("needDrain");
var kQueue = Symbol("queue");
var kClosedResolve = Symbol("closed resolve");
var kOnDrain$1 = Symbol("onDrain");
var kOnConnect$1 = Symbol("onConnect");
var kOnDisconnect$1 = Symbol("onDisconnect");
var kOnConnectionError$1 = Symbol("onConnectionError");
var kGetDispatcher$2 = Symbol("get dispatcher");
var kAddClient$2 = Symbol("add client");
var kRemoveClient$1 = Symbol("remove client");
var kStats = Symbol("stats");
var PoolBase$2 = class PoolBase extends DispatcherBase$2 {
  constructor() {
    super();
    this[kQueue] = new FixedQueue2();
    this[kClients$4] = [];
    this[kQueued] = 0;
    const pool2 = this;
    this[kOnDrain$1] = function onDrain(origin, targets) {
      const queue = pool2[kQueue];
      let needDrain = false;
      while (!needDrain) {
        const item = queue.shift();
        if (!item) {
          break;
        }
        pool2[kQueued]--;
        needDrain = !this.dispatch(item.opts, item.handler);
      }
      this[kNeedDrain$2] = needDrain;
      if (!this[kNeedDrain$2] && pool2[kNeedDrain$2]) {
        pool2[kNeedDrain$2] = false;
        pool2.emit("drain", origin, [pool2, ...targets]);
      }
      if (pool2[kClosedResolve] && queue.isEmpty()) {
        Promise.all(pool2[kClients$4].map((c) => c.close())).then(pool2[kClosedResolve]);
      }
    };
    this[kOnConnect$1] = (origin, targets) => {
      pool2.emit("connect", origin, [pool2, ...targets]);
    };
    this[kOnDisconnect$1] = (origin, targets, err) => {
      pool2.emit("disconnect", origin, [pool2, ...targets], err);
    };
    this[kOnConnectionError$1] = (origin, targets, err) => {
      pool2.emit("connectionError", origin, [pool2, ...targets], err);
    };
    this[kStats] = new PoolStats2(this);
  }
  get [kBusy]() {
    return this[kNeedDrain$2];
  }
  get [kConnected$3]() {
    return this[kClients$4].filter((client3) => client3[kConnected$3]).length;
  }
  get [kFree]() {
    return this[kClients$4].filter((client3) => client3[kConnected$3] && !client3[kNeedDrain$2]).length;
  }
  get [kPending]() {
    let ret = this[kQueued];
    for (const { [kPending]: pending } of this[kClients$4]) {
      ret += pending;
    }
    return ret;
  }
  get [kRunning$1]() {
    let ret = 0;
    for (const { [kRunning$1]: running } of this[kClients$4]) {
      ret += running;
    }
    return ret;
  }
  get [kSize$1]() {
    let ret = this[kQueued];
    for (const { [kSize$1]: size } of this[kClients$4]) {
      ret += size;
    }
    return ret;
  }
  get stats() {
    return this[kStats];
  }
  async [kClose$4]() {
    if (this[kQueue].isEmpty()) {
      return Promise.all(this[kClients$4].map((c) => c.close()));
    } else {
      return new Promise((resolve) => {
        this[kClosedResolve] = resolve;
      });
    }
  }
  async [kDestroy$2](err) {
    while (true) {
      const item = this[kQueue].shift();
      if (!item) {
        break;
      }
      item.handler.onError(err);
    }
    return Promise.all(this[kClients$4].map((c) => c.destroy(err)));
  }
  [kDispatch$1](opts, handler2) {
    const dispatcher2 = this[kGetDispatcher$2]();
    if (!dispatcher2) {
      this[kNeedDrain$2] = true;
      this[kQueue].push({ opts, handler: handler2 });
      this[kQueued]++;
    } else if (!dispatcher2.dispatch(opts, handler2)) {
      dispatcher2[kNeedDrain$2] = true;
      this[kNeedDrain$2] = !this[kGetDispatcher$2]();
    }
    return !this[kNeedDrain$2];
  }
  [kAddClient$2](client3) {
    client3.on("drain", this[kOnDrain$1]).on("connect", this[kOnConnect$1]).on("disconnect", this[kOnDisconnect$1]).on("connectionError", this[kOnConnectionError$1]);
    this[kClients$4].push(client3);
    if (this[kNeedDrain$2]) {
      process.nextTick(() => {
        if (this[kNeedDrain$2]) {
          this[kOnDrain$1](client3[kUrl$2], [this, client3]);
        }
      });
    }
    return this;
  }
  [kRemoveClient$1](client3) {
    client3.close(() => {
      const idx = this[kClients$4].indexOf(client3);
      if (idx !== -1) {
        this[kClients$4].splice(idx, 1);
      }
    });
    this[kNeedDrain$2] = this[kClients$4].some((dispatcher2) => !dispatcher2[kNeedDrain$2] && dispatcher2.closed !== true && dispatcher2.destroyed !== true);
  }
};
var poolBase = {
  PoolBase: PoolBase$2,
  kClients: kClients$4,
  kNeedDrain: kNeedDrain$2,
  kAddClient: kAddClient$2,
  kRemoveClient: kRemoveClient$1,
  kGetDispatcher: kGetDispatcher$2
};
var {
  PoolBase: PoolBase$1,
  kClients: kClients$3,
  kNeedDrain: kNeedDrain$1,
  kAddClient: kAddClient$1,
  kGetDispatcher: kGetDispatcher$1
} = poolBase;
var Client$3 = client;
var {
  InvalidArgumentError: InvalidArgumentError$d
} = errors;
var util$8 = util$e;
var { kUrl: kUrl$1, kInterceptors: kInterceptors$3 } = symbols$2;
var buildConnector$1 = connect$2;
var kOptions$3 = Symbol("options");
var kConnections = Symbol("connections");
var kFactory$3 = Symbol("factory");
function defaultFactory$2(origin, opts) {
  return new Client$3(origin, opts);
}
var Pool$3 = class Pool extends PoolBase$1 {
  constructor(origin, _a = {}) {
    var _b = _a, {
      connections,
      factory = defaultFactory$2,
      connect: connect2,
      connectTimeout,
      tls: tls2,
      maxCachedSessions,
      socketPath
    } = _b, options2 = __objRest(_b, [
      "connections",
      "factory",
      "connect",
      "connectTimeout",
      "tls",
      "maxCachedSessions",
      "socketPath"
    ]);
    super();
    if (connections != null && (!Number.isFinite(connections) || connections < 0)) {
      throw new InvalidArgumentError$d("invalid connections");
    }
    if (typeof factory !== "function") {
      throw new InvalidArgumentError$d("factory must be a function.");
    }
    if (connect2 != null && typeof connect2 !== "function" && typeof connect2 !== "object") {
      throw new InvalidArgumentError$d("connect must be a function or an object");
    }
    if (typeof connect2 !== "function") {
      connect2 = buildConnector$1(__spreadValues(__spreadProps(__spreadValues({}, tls2), {
        maxCachedSessions,
        socketPath,
        timeout: connectTimeout == null ? 1e4 : connectTimeout
      }), connect2));
    }
    this[kInterceptors$3] = options2.interceptors && options2.interceptors.Pool && Array.isArray(options2.interceptors.Pool) ? options2.interceptors.Pool : [];
    this[kConnections] = connections || null;
    this[kUrl$1] = util$8.parseOrigin(origin);
    this[kOptions$3] = __spreadProps(__spreadValues({}, util$8.deepClone(options2)), { connect: connect2 });
    this[kOptions$3].interceptors = options2.interceptors ? __spreadValues({}, options2.interceptors) : void 0;
    this[kFactory$3] = factory;
  }
  [kGetDispatcher$1]() {
    let dispatcher2 = this[kClients$3].find((dispatcher3) => !dispatcher3[kNeedDrain$1]);
    if (dispatcher2) {
      return dispatcher2;
    }
    if (!this[kConnections] || this[kClients$3].length < this[kConnections]) {
      dispatcher2 = this[kFactory$3](this[kUrl$1], this[kOptions$3]);
      this[kAddClient$1](dispatcher2);
    }
    return dispatcher2;
  }
};
var pool = Pool$3;
var {
  BalancedPoolMissingUpstreamError: BalancedPoolMissingUpstreamError2,
  InvalidArgumentError: InvalidArgumentError$c
} = errors;
var {
  PoolBase: PoolBase2,
  kClients: kClients$2,
  kNeedDrain,
  kAddClient,
  kRemoveClient,
  kGetDispatcher
} = poolBase;
var Pool$2 = pool;
var { kUrl, kInterceptors: kInterceptors$2 } = symbols$2;
var { parseOrigin } = util$e;
var kFactory$2 = Symbol("factory");
var kOptions$2 = Symbol("options");
var kGreatestCommonDivisor = Symbol("kGreatestCommonDivisor");
var kCurrentWeight = Symbol("kCurrentWeight");
var kIndex = Symbol("kIndex");
var kWeight = Symbol("kWeight");
var kMaxWeightPerServer = Symbol("kMaxWeightPerServer");
var kErrorPenalty = Symbol("kErrorPenalty");
function getGreatestCommonDivisor(a, b) {
  if (b === 0)
    return a;
  return getGreatestCommonDivisor(b, a % b);
}
function defaultFactory$1(origin, opts) {
  return new Pool$2(origin, opts);
}
var BalancedPool = class extends PoolBase2 {
  constructor(upstreams = [], _a = {}) {
    var _b = _a, { factory = defaultFactory$1 } = _b, opts = __objRest(_b, ["factory"]);
    super();
    this[kOptions$2] = opts;
    this[kIndex] = -1;
    this[kCurrentWeight] = 0;
    this[kMaxWeightPerServer] = this[kOptions$2].maxWeightPerServer || 100;
    this[kErrorPenalty] = this[kOptions$2].errorPenalty || 15;
    if (!Array.isArray(upstreams)) {
      upstreams = [upstreams];
    }
    if (typeof factory !== "function") {
      throw new InvalidArgumentError$c("factory must be a function.");
    }
    this[kInterceptors$2] = opts.interceptors && opts.interceptors.BalancedPool && Array.isArray(opts.interceptors.BalancedPool) ? opts.interceptors.BalancedPool : [];
    this[kFactory$2] = factory;
    for (const upstream of upstreams) {
      this.addUpstream(upstream);
    }
    this._updateBalancedPoolStats();
  }
  addUpstream(upstream) {
    const upstreamOrigin = parseOrigin(upstream).origin;
    if (this[kClients$2].find((pool3) => pool3[kUrl].origin === upstreamOrigin && pool3.closed !== true && pool3.destroyed !== true)) {
      return this;
    }
    const pool2 = this[kFactory$2](upstreamOrigin, Object.assign({}, this[kOptions$2]));
    this[kAddClient](pool2);
    pool2.on("connect", () => {
      pool2[kWeight] = Math.min(this[kMaxWeightPerServer], pool2[kWeight] + this[kErrorPenalty]);
    });
    pool2.on("connectionError", () => {
      pool2[kWeight] = Math.max(1, pool2[kWeight] - this[kErrorPenalty]);
      this._updateBalancedPoolStats();
    });
    pool2.on("disconnect", (...args) => {
      const err = args[2];
      if (err && err.code === "UND_ERR_SOCKET") {
        pool2[kWeight] = Math.max(1, pool2[kWeight] - this[kErrorPenalty]);
        this._updateBalancedPoolStats();
      }
    });
    for (const client3 of this[kClients$2]) {
      client3[kWeight] = this[kMaxWeightPerServer];
    }
    this._updateBalancedPoolStats();
    return this;
  }
  _updateBalancedPoolStats() {
    this[kGreatestCommonDivisor] = this[kClients$2].map((p) => p[kWeight]).reduce(getGreatestCommonDivisor, 0);
  }
  removeUpstream(upstream) {
    const upstreamOrigin = parseOrigin(upstream).origin;
    const pool2 = this[kClients$2].find((pool3) => pool3[kUrl].origin === upstreamOrigin && pool3.closed !== true && pool3.destroyed !== true);
    if (pool2) {
      this[kRemoveClient](pool2);
    }
    return this;
  }
  get upstreams() {
    return this[kClients$2].filter((dispatcher2) => dispatcher2.closed !== true && dispatcher2.destroyed !== true).map((p) => p[kUrl].origin);
  }
  [kGetDispatcher]() {
    if (this[kClients$2].length === 0) {
      throw new BalancedPoolMissingUpstreamError2();
    }
    const dispatcher2 = this[kClients$2].find((dispatcher3) => !dispatcher3[kNeedDrain] && dispatcher3.closed !== true && dispatcher3.destroyed !== true);
    if (!dispatcher2) {
      return;
    }
    const allClientsBusy = this[kClients$2].map((pool2) => pool2[kNeedDrain]).reduce((a, b) => a && b, true);
    if (allClientsBusy) {
      return;
    }
    let counter = 0;
    let maxWeightIndex = this[kClients$2].findIndex((pool2) => !pool2[kNeedDrain]);
    while (counter++ < this[kClients$2].length) {
      this[kIndex] = (this[kIndex] + 1) % this[kClients$2].length;
      const pool2 = this[kClients$2][this[kIndex]];
      if (pool2[kWeight] > this[kClients$2][maxWeightIndex][kWeight] && !pool2[kNeedDrain]) {
        maxWeightIndex = this[kIndex];
      }
      if (this[kIndex] === 0) {
        this[kCurrentWeight] = this[kCurrentWeight] - this[kGreatestCommonDivisor];
        if (this[kCurrentWeight] <= 0) {
          this[kCurrentWeight] = this[kMaxWeightPerServer];
        }
      }
      if (pool2[kWeight] >= this[kCurrentWeight] && !pool2[kNeedDrain]) {
        return pool2;
      }
    }
    this[kCurrentWeight] = this[kClients$2][maxWeightIndex][kWeight];
    this[kIndex] = maxWeightIndex;
    return this[kClients$2][maxWeightIndex];
  }
};
var balancedPool = BalancedPool;
var { kConnected: kConnected$2, kSize } = symbols$2;
var CompatWeakRef = class {
  constructor(value) {
    this.value = value;
  }
  deref() {
    return this.value[kConnected$2] === 0 && this.value[kSize] === 0 ? void 0 : this.value;
  }
};
var CompatFinalizer = class {
  constructor(finalizer) {
    this.finalizer = finalizer;
  }
  register(dispatcher2, key2) {
    dispatcher2.on("disconnect", () => {
      if (dispatcher2[kConnected$2] === 0 && dispatcher2[kSize] === 0) {
        this.finalizer(key2);
      }
    });
  }
};
var dispatcherWeakref = function() {
  return {
    WeakRef: commonjsGlobal.WeakRef || CompatWeakRef,
    FinalizationRegistry: commonjsGlobal.FinalizationRegistry || CompatFinalizer
  };
};
var { InvalidArgumentError: InvalidArgumentError$b } = errors;
var { kClients: kClients$1, kRunning, kClose: kClose$3, kDestroy: kDestroy$1, kDispatch, kInterceptors: kInterceptors$1 } = symbols$2;
var DispatcherBase$1 = dispatcherBase;
var Pool$1 = pool;
var Client$2 = client;
var util$7 = util$e;
var createRedirectInterceptor = redirectInterceptor;
var { WeakRef: WeakRef$1, FinalizationRegistry } = dispatcherWeakref();
var kOnConnect = Symbol("onConnect");
var kOnDisconnect = Symbol("onDisconnect");
var kOnConnectionError = Symbol("onConnectionError");
var kMaxRedirections = Symbol("maxRedirections");
var kOnDrain = Symbol("onDrain");
var kFactory$1 = Symbol("factory");
var kFinalizer = Symbol("finalizer");
var kOptions$1 = Symbol("options");
function defaultFactory(origin, opts) {
  return opts && opts.connections === 1 ? new Client$2(origin, opts) : new Pool$1(origin, opts);
}
var Agent$3 = class Agent extends DispatcherBase$1 {
  constructor(_a = {}) {
    var _b = _a, { factory = defaultFactory, maxRedirections = 0, connect: connect2 } = _b, options2 = __objRest(_b, ["factory", "maxRedirections", "connect"]);
    super();
    if (typeof factory !== "function") {
      throw new InvalidArgumentError$b("factory must be a function.");
    }
    if (connect2 != null && typeof connect2 !== "function" && typeof connect2 !== "object") {
      throw new InvalidArgumentError$b("connect must be a function or an object");
    }
    if (!Number.isInteger(maxRedirections) || maxRedirections < 0) {
      throw new InvalidArgumentError$b("maxRedirections must be a positive number");
    }
    if (connect2 && typeof connect2 !== "function") {
      connect2 = __spreadValues({}, connect2);
    }
    this[kInterceptors$1] = options2.interceptors && options2.interceptors.Agent && Array.isArray(options2.interceptors.Agent) ? options2.interceptors.Agent : [createRedirectInterceptor({ maxRedirections })];
    this[kOptions$1] = __spreadProps(__spreadValues({}, util$7.deepClone(options2)), { connect: connect2 });
    this[kOptions$1].interceptors = options2.interceptors ? __spreadValues({}, options2.interceptors) : void 0;
    this[kMaxRedirections] = maxRedirections;
    this[kFactory$1] = factory;
    this[kClients$1] = /* @__PURE__ */ new Map();
    this[kFinalizer] = new FinalizationRegistry((key2) => {
      const ref = this[kClients$1].get(key2);
      if (ref !== void 0 && ref.deref() === void 0) {
        this[kClients$1].delete(key2);
      }
    });
    const agent2 = this;
    this[kOnDrain] = (origin, targets) => {
      agent2.emit("drain", origin, [agent2, ...targets]);
    };
    this[kOnConnect] = (origin, targets) => {
      agent2.emit("connect", origin, [agent2, ...targets]);
    };
    this[kOnDisconnect] = (origin, targets, err) => {
      agent2.emit("disconnect", origin, [agent2, ...targets], err);
    };
    this[kOnConnectionError] = (origin, targets, err) => {
      agent2.emit("connectionError", origin, [agent2, ...targets], err);
    };
  }
  get [kRunning]() {
    let ret = 0;
    for (const ref of this[kClients$1].values()) {
      const client3 = ref.deref();
      if (client3) {
        ret += client3[kRunning];
      }
    }
    return ret;
  }
  [kDispatch](opts, handler2) {
    let key2;
    if (opts.origin && (typeof opts.origin === "string" || opts.origin instanceof URL)) {
      key2 = String(opts.origin);
    } else {
      throw new InvalidArgumentError$b("opts.origin must be a non-empty string or URL.");
    }
    const ref = this[kClients$1].get(key2);
    let dispatcher2 = ref ? ref.deref() : null;
    if (!dispatcher2) {
      dispatcher2 = this[kFactory$1](opts.origin, this[kOptions$1]).on("drain", this[kOnDrain]).on("connect", this[kOnConnect]).on("disconnect", this[kOnDisconnect]).on("connectionError", this[kOnConnectionError]);
      this[kClients$1].set(key2, new WeakRef$1(dispatcher2));
      this[kFinalizer].register(dispatcher2, key2);
    }
    return dispatcher2.dispatch(opts, handler2);
  }
  async [kClose$3]() {
    const closePromises = [];
    for (const ref of this[kClients$1].values()) {
      const client3 = ref.deref();
      if (client3) {
        closePromises.push(client3.close());
      }
    }
    await Promise.all(closePromises);
  }
  async [kDestroy$1](err) {
    const destroyPromises = [];
    for (const ref of this[kClients$1].values()) {
      const client3 = ref.deref();
      if (client3) {
        destroyPromises.push(client3.destroy(err));
      }
    }
    await Promise.all(destroyPromises);
  }
};
var agent = Agent$3;
var api = {};
var assert$2 = import_assert.default;
var { Readable: Readable$2 } = import_stream.default;
var { RequestAbortedError: RequestAbortedError$7, NotSupportedError: NotSupportedError2 } = errors;
var util$6 = util$e;
var { ReadableStreamFrom, toUSVString } = util$e;
var Blob2;
var kConsume = Symbol("kConsume");
var kReading = Symbol("kReading");
var kBody = Symbol("kBody");
var kAbort = Symbol("abort");
var kContentType = Symbol("kContentType");
var readable = class BodyReadable extends Readable$2 {
  constructor(resume2, abort2, contentType = "") {
    super({
      autoDestroy: true,
      read: resume2,
      highWaterMark: 64 * 1024
    });
    this._readableState.dataEmitted = false;
    this[kAbort] = abort2;
    this[kConsume] = null;
    this[kBody] = null;
    this[kContentType] = contentType;
    this[kReading] = false;
  }
  destroy(err) {
    if (this.destroyed) {
      return this;
    }
    if (!err && !this._readableState.endEmitted) {
      err = new RequestAbortedError$7();
    }
    if (err) {
      this[kAbort]();
    }
    return super.destroy(err);
  }
  emit(ev, ...args) {
    if (ev === "data") {
      this._readableState.dataEmitted = true;
    } else if (ev === "error") {
      this._readableState.errorEmitted = true;
    }
    return super.emit(ev, ...args);
  }
  on(ev, ...args) {
    if (ev === "data" || ev === "readable") {
      this[kReading] = true;
    }
    return super.on(ev, ...args);
  }
  addListener(ev, ...args) {
    return this.on(ev, ...args);
  }
  off(ev, ...args) {
    const ret = super.off(ev, ...args);
    if (ev === "data" || ev === "readable") {
      this[kReading] = this.listenerCount("data") > 0 || this.listenerCount("readable") > 0;
    }
    return ret;
  }
  removeListener(ev, ...args) {
    return this.off(ev, ...args);
  }
  push(chunk) {
    if (this[kConsume] && chunk !== null && this.readableLength === 0) {
      consumePush(this[kConsume], chunk);
      return this[kReading] ? super.push(chunk) : true;
    }
    return super.push(chunk);
  }
  async text() {
    return consume(this, "text");
  }
  async json() {
    return consume(this, "json");
  }
  async blob() {
    return consume(this, "blob");
  }
  async arrayBuffer() {
    return consume(this, "arrayBuffer");
  }
  async formData() {
    throw new NotSupportedError2();
  }
  get bodyUsed() {
    return util$6.isDisturbed(this);
  }
  get body() {
    if (!this[kBody]) {
      this[kBody] = ReadableStreamFrom(this);
      if (this[kConsume]) {
        this[kBody].getReader();
        assert$2(this[kBody].locked);
      }
    }
    return this[kBody];
  }
  async dump(opts) {
    let limit = opts && Number.isFinite(opts.limit) ? opts.limit : 262144;
    try {
      for await (const chunk of this) {
        limit -= Buffer.byteLength(chunk);
        if (limit < 0) {
          return;
        }
      }
    } catch {
    }
  }
};
function isLocked(self2) {
  return self2[kBody] && self2[kBody].locked === true || self2[kConsume];
}
function isUnusable(self2) {
  return util$6.isDisturbed(self2) || isLocked(self2);
}
async function consume(stream2, type) {
  if (isUnusable(stream2)) {
    throw new TypeError("unusable");
  }
  assert$2(!stream2[kConsume]);
  return new Promise((resolve, reject) => {
    stream2[kConsume] = {
      type,
      stream: stream2,
      resolve,
      reject,
      length: 0,
      body: []
    };
    stream2.on("error", function(err) {
      consumeFinish(this[kConsume], err);
    }).on("close", function() {
      if (this[kConsume].body !== null) {
        consumeFinish(this[kConsume], new RequestAbortedError$7());
      }
    });
    process.nextTick(consumeStart, stream2[kConsume]);
  });
}
function consumeStart(consume2) {
  if (consume2.body === null) {
    return;
  }
  const { _readableState: state } = consume2.stream;
  for (const chunk of state.buffer) {
    consumePush(consume2, chunk);
  }
  if (state.endEmitted) {
    consumeEnd(this[kConsume]);
  } else {
    consume2.stream.on("end", function() {
      consumeEnd(this[kConsume]);
    });
  }
  consume2.stream.resume();
  while (consume2.stream.read() != null) {
  }
}
function consumeEnd(consume2) {
  const { type, body: body2, resolve, stream: stream2, length } = consume2;
  try {
    if (type === "text") {
      resolve(toUSVString(Buffer.concat(body2)));
    } else if (type === "json") {
      resolve(JSON.parse(Buffer.concat(body2)));
    } else if (type === "arrayBuffer") {
      const dst = new Uint8Array(length);
      let pos = 0;
      for (const buf of body2) {
        dst.set(buf, pos);
        pos += buf.byteLength;
      }
      resolve(dst);
    } else if (type === "blob") {
      if (!Blob2) {
        Blob2 = require("buffer").Blob;
      }
      resolve(new Blob2(body2, { type: stream2[kContentType] }));
    }
    consumeFinish(consume2);
  } catch (err) {
    stream2.destroy(err);
  }
}
function consumePush(consume2, chunk) {
  consume2.length += chunk.length;
  consume2.body.push(chunk);
}
function consumeFinish(consume2, err) {
  if (consume2.body === null) {
    return;
  }
  if (err) {
    consume2.reject(err);
  } else {
    consume2.resolve();
  }
  consume2.type = null;
  consume2.stream = null;
  consume2.resolve = null;
  consume2.reject = null;
  consume2.length = 0;
  consume2.body = null;
}
var { RequestAbortedError: RequestAbortedError$6 } = errors;
var kListener = Symbol("kListener");
var kSignal = Symbol("kSignal");
function abort(self2) {
  if (self2.abort) {
    self2.abort();
  } else {
    self2.onError(new RequestAbortedError$6());
  }
}
function addSignal$5(self2, signal) {
  self2[kSignal] = null;
  self2[kListener] = null;
  if (!signal) {
    return;
  }
  if (signal.aborted) {
    abort(self2);
    return;
  }
  self2[kSignal] = signal;
  self2[kListener] = () => {
    abort(self2);
  };
  if ("addEventListener" in self2[kSignal]) {
    self2[kSignal].addEventListener("abort", self2[kListener]);
  } else {
    self2[kSignal].addListener("abort", self2[kListener]);
  }
}
function removeSignal$5(self2) {
  if (!self2[kSignal]) {
    return;
  }
  if ("removeEventListener" in self2[kSignal]) {
    self2[kSignal].removeEventListener("abort", self2[kListener]);
  } else {
    self2[kSignal].removeListener("abort", self2[kListener]);
  }
  self2[kSignal] = null;
  self2[kListener] = null;
}
var abortSignal = {
  addSignal: addSignal$5,
  removeSignal: removeSignal$5
};
var Readable$1 = readable;
var {
  InvalidArgumentError: InvalidArgumentError$a,
  RequestAbortedError: RequestAbortedError$5,
  ResponseStatusCodeError: ResponseStatusCodeError2
} = errors;
var util$5 = util$e;
var { AsyncResource: AsyncResource$4 } = import_async_hooks.default;
var { addSignal: addSignal$4, removeSignal: removeSignal$4 } = abortSignal;
var RequestHandler = class extends AsyncResource$4 {
  constructor(opts, callback) {
    if (!opts || typeof opts !== "object") {
      throw new InvalidArgumentError$a("invalid opts");
    }
    const { signal, method, opaque, body: body2, onInfo, responseHeaders, throwOnError } = opts;
    try {
      if (typeof callback !== "function") {
        throw new InvalidArgumentError$a("invalid callback");
      }
      if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
        throw new InvalidArgumentError$a("signal must be an EventEmitter or EventTarget");
      }
      if (method === "CONNECT") {
        throw new InvalidArgumentError$a("invalid method");
      }
      if (onInfo && typeof onInfo !== "function") {
        throw new InvalidArgumentError$a("invalid onInfo callback");
      }
      super("UNDICI_REQUEST");
    } catch (err) {
      if (util$5.isStream(body2)) {
        util$5.destroy(body2.on("error", util$5.nop), err);
      }
      throw err;
    }
    this.responseHeaders = responseHeaders || null;
    this.opaque = opaque || null;
    this.callback = callback;
    this.res = null;
    this.abort = null;
    this.body = body2;
    this.trailers = {};
    this.context = null;
    this.onInfo = onInfo || null;
    this.throwOnError = throwOnError;
    if (util$5.isStream(body2)) {
      body2.on("error", (err) => {
        this.onError(err);
      });
    }
    addSignal$4(this, signal);
  }
  onConnect(abort2, context) {
    if (!this.callback) {
      throw new RequestAbortedError$5();
    }
    this.abort = abort2;
    this.context = context;
  }
  onHeaders(statusCode, rawHeaders, resume2, statusMessage) {
    const { callback, opaque, abort: abort2, context } = this;
    if (statusCode < 200) {
      if (this.onInfo) {
        const headers3 = this.responseHeaders === "raw" ? util$5.parseRawHeaders(rawHeaders) : util$5.parseHeaders(rawHeaders);
        this.onInfo({ statusCode, headers: headers3 });
      }
      return;
    }
    const parsedHeaders = util$5.parseHeaders(rawHeaders);
    const contentType = parsedHeaders["content-type"];
    const body2 = new Readable$1(resume2, abort2, contentType);
    this.callback = null;
    this.res = body2;
    const headers2 = this.responseHeaders === "raw" ? util$5.parseRawHeaders(rawHeaders) : util$5.parseHeaders(rawHeaders);
    if (callback !== null) {
      if (this.throwOnError && statusCode >= 400) {
        this.runInAsyncScope(getResolveErrorBodyCallback, null, { callback, body: body2, contentType, statusCode, statusMessage, headers: headers2 });
        return;
      }
      this.runInAsyncScope(callback, null, null, {
        statusCode,
        headers: headers2,
        trailers: this.trailers,
        opaque,
        body: body2,
        context
      });
    }
  }
  onData(chunk) {
    const { res } = this;
    return res.push(chunk);
  }
  onComplete(trailers) {
    const { res } = this;
    removeSignal$4(this);
    util$5.parseHeaders(trailers, this.trailers);
    res.push(null);
  }
  onError(err) {
    const { res, callback, body: body2, opaque } = this;
    removeSignal$4(this);
    if (callback) {
      this.callback = null;
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque });
      });
    }
    if (res) {
      this.res = null;
      queueMicrotask(() => {
        util$5.destroy(res, err);
      });
    }
    if (body2) {
      this.body = null;
      util$5.destroy(body2, err);
    }
  }
};
async function getResolveErrorBodyCallback({ callback, body: body2, contentType, statusCode, statusMessage, headers: headers2 }) {
  if (statusCode === 204 || !contentType) {
    body2.dump();
    process.nextTick(callback, new ResponseStatusCodeError2(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers2));
    return;
  }
  try {
    if (contentType.startsWith("application/json")) {
      const payload = await body2.json();
      process.nextTick(callback, new ResponseStatusCodeError2(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers2, payload));
      return;
    }
    if (contentType.startsWith("text/")) {
      const payload = await body2.text();
      process.nextTick(callback, new ResponseStatusCodeError2(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers2, payload));
      return;
    }
  } catch (err) {
  }
  body2.dump();
  process.nextTick(callback, new ResponseStatusCodeError2(`Response status code ${statusCode}${statusMessage ? `: ${statusMessage}` : ""}`, statusCode, headers2));
}
function request$1(opts, callback) {
  if (callback === void 0) {
    return new Promise((resolve, reject) => {
      request$1.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data);
      });
    });
  }
  try {
    this.dispatch(opts, new RequestHandler(opts, callback));
  } catch (err) {
    if (typeof callback !== "function") {
      throw err;
    }
    const opaque = opts && opts.opaque;
    queueMicrotask(() => callback(err, { opaque }));
  }
}
var apiRequest = request$1;
var { finished } = import_stream.default;
var {
  InvalidArgumentError: InvalidArgumentError$9,
  InvalidReturnValueError: InvalidReturnValueError$1,
  RequestAbortedError: RequestAbortedError$4
} = errors;
var util$4 = util$e;
var { AsyncResource: AsyncResource$3 } = import_async_hooks.default;
var { addSignal: addSignal$3, removeSignal: removeSignal$3 } = abortSignal;
var StreamHandler = class extends AsyncResource$3 {
  constructor(opts, factory, callback) {
    if (!opts || typeof opts !== "object") {
      throw new InvalidArgumentError$9("invalid opts");
    }
    const { signal, method, opaque, body: body2, onInfo, responseHeaders } = opts;
    try {
      if (typeof callback !== "function") {
        throw new InvalidArgumentError$9("invalid callback");
      }
      if (typeof factory !== "function") {
        throw new InvalidArgumentError$9("invalid factory");
      }
      if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
        throw new InvalidArgumentError$9("signal must be an EventEmitter or EventTarget");
      }
      if (method === "CONNECT") {
        throw new InvalidArgumentError$9("invalid method");
      }
      if (onInfo && typeof onInfo !== "function") {
        throw new InvalidArgumentError$9("invalid onInfo callback");
      }
      super("UNDICI_STREAM");
    } catch (err) {
      if (util$4.isStream(body2)) {
        util$4.destroy(body2.on("error", util$4.nop), err);
      }
      throw err;
    }
    this.responseHeaders = responseHeaders || null;
    this.opaque = opaque || null;
    this.factory = factory;
    this.callback = callback;
    this.res = null;
    this.abort = null;
    this.context = null;
    this.trailers = null;
    this.body = body2;
    this.onInfo = onInfo || null;
    if (util$4.isStream(body2)) {
      body2.on("error", (err) => {
        this.onError(err);
      });
    }
    addSignal$3(this, signal);
  }
  onConnect(abort2, context) {
    if (!this.callback) {
      throw new RequestAbortedError$4();
    }
    this.abort = abort2;
    this.context = context;
  }
  onHeaders(statusCode, rawHeaders, resume2) {
    const { factory, opaque, context } = this;
    if (statusCode < 200) {
      if (this.onInfo) {
        const headers3 = this.responseHeaders === "raw" ? util$4.parseRawHeaders(rawHeaders) : util$4.parseHeaders(rawHeaders);
        this.onInfo({ statusCode, headers: headers3 });
      }
      return;
    }
    this.factory = null;
    const headers2 = this.responseHeaders === "raw" ? util$4.parseRawHeaders(rawHeaders) : util$4.parseHeaders(rawHeaders);
    const res = this.runInAsyncScope(factory, null, {
      statusCode,
      headers: headers2,
      opaque,
      context
    });
    if (!res || typeof res.write !== "function" || typeof res.end !== "function" || typeof res.on !== "function") {
      throw new InvalidReturnValueError$1("expected Writable");
    }
    res.on("drain", resume2);
    finished(res, { readable: false }, (err) => {
      const { callback, res: res2, opaque: opaque2, trailers, abort: abort2 } = this;
      this.res = null;
      if (err || !res2.readable) {
        util$4.destroy(res2, err);
      }
      this.callback = null;
      this.runInAsyncScope(callback, null, err || null, { opaque: opaque2, trailers });
      if (err) {
        abort2();
      }
    });
    this.res = res;
    const needDrain = res.writableNeedDrain !== void 0 ? res.writableNeedDrain : res._writableState && res._writableState.needDrain;
    return needDrain !== true;
  }
  onData(chunk) {
    const { res } = this;
    return res.write(chunk);
  }
  onComplete(trailers) {
    const { res } = this;
    removeSignal$3(this);
    this.trailers = util$4.parseHeaders(trailers);
    res.end();
  }
  onError(err) {
    const { res, callback, opaque, body: body2 } = this;
    removeSignal$3(this);
    this.factory = null;
    if (res) {
      this.res = null;
      util$4.destroy(res, err);
    } else if (callback) {
      this.callback = null;
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque });
      });
    }
    if (body2) {
      this.body = null;
      util$4.destroy(body2, err);
    }
  }
};
function stream(opts, factory, callback) {
  if (callback === void 0) {
    return new Promise((resolve, reject) => {
      stream.call(this, opts, factory, (err, data) => {
        return err ? reject(err) : resolve(data);
      });
    });
  }
  try {
    this.dispatch(opts, new StreamHandler(opts, factory, callback));
  } catch (err) {
    if (typeof callback !== "function") {
      throw err;
    }
    const opaque = opts && opts.opaque;
    queueMicrotask(() => callback(err, { opaque }));
  }
}
var apiStream = stream;
var {
  Readable,
  Duplex,
  PassThrough
} = import_stream.default;
var {
  InvalidArgumentError: InvalidArgumentError$8,
  InvalidReturnValueError: InvalidReturnValueError2,
  RequestAbortedError: RequestAbortedError$3
} = errors;
var util$3 = util$e;
var { AsyncResource: AsyncResource$2 } = import_async_hooks.default;
var { addSignal: addSignal$2, removeSignal: removeSignal$2 } = abortSignal;
var assert$1 = import_assert.default;
var kResume = Symbol("resume");
var PipelineRequest = class extends Readable {
  constructor() {
    super({ autoDestroy: true });
    this[kResume] = null;
  }
  _read() {
    const { [kResume]: resume2 } = this;
    if (resume2) {
      this[kResume] = null;
      resume2();
    }
  }
  _destroy(err, callback) {
    this._read();
    callback(err);
  }
};
var PipelineResponse = class extends Readable {
  constructor(resume2) {
    super({ autoDestroy: true });
    this[kResume] = resume2;
  }
  _read() {
    this[kResume]();
  }
  _destroy(err, callback) {
    if (!err && !this._readableState.endEmitted) {
      err = new RequestAbortedError$3();
    }
    callback(err);
  }
};
var PipelineHandler = class extends AsyncResource$2 {
  constructor(opts, handler2) {
    if (!opts || typeof opts !== "object") {
      throw new InvalidArgumentError$8("invalid opts");
    }
    if (typeof handler2 !== "function") {
      throw new InvalidArgumentError$8("invalid handler");
    }
    const { signal, method, opaque, onInfo, responseHeaders } = opts;
    if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
      throw new InvalidArgumentError$8("signal must be an EventEmitter or EventTarget");
    }
    if (method === "CONNECT") {
      throw new InvalidArgumentError$8("invalid method");
    }
    if (onInfo && typeof onInfo !== "function") {
      throw new InvalidArgumentError$8("invalid onInfo callback");
    }
    super("UNDICI_PIPELINE");
    this.opaque = opaque || null;
    this.responseHeaders = responseHeaders || null;
    this.handler = handler2;
    this.abort = null;
    this.context = null;
    this.onInfo = onInfo || null;
    this.req = new PipelineRequest().on("error", util$3.nop);
    this.ret = new Duplex({
      readableObjectMode: opts.objectMode,
      autoDestroy: true,
      read: () => {
        const { body: body2 } = this;
        if (body2 && body2.resume) {
          body2.resume();
        }
      },
      write: (chunk, encoding2, callback) => {
        const { req } = this;
        if (req.push(chunk, encoding2) || req._readableState.destroyed) {
          callback();
        } else {
          req[kResume] = callback;
        }
      },
      destroy: (err, callback) => {
        const { body: body2, req, res, ret, abort: abort2 } = this;
        if (!err && !ret._readableState.endEmitted) {
          err = new RequestAbortedError$3();
        }
        if (abort2 && err) {
          abort2();
        }
        util$3.destroy(body2, err);
        util$3.destroy(req, err);
        util$3.destroy(res, err);
        removeSignal$2(this);
        callback(err);
      }
    }).on("prefinish", () => {
      const { req } = this;
      req.push(null);
    });
    this.res = null;
    addSignal$2(this, signal);
  }
  onConnect(abort2, context) {
    const { ret, res } = this;
    assert$1(!res, "pipeline cannot be retried");
    if (ret.destroyed) {
      throw new RequestAbortedError$3();
    }
    this.abort = abort2;
    this.context = context;
  }
  onHeaders(statusCode, rawHeaders, resume2) {
    const { opaque, handler: handler2, context } = this;
    if (statusCode < 200) {
      if (this.onInfo) {
        const headers2 = this.responseHeaders === "raw" ? util$3.parseRawHeaders(rawHeaders) : util$3.parseHeaders(rawHeaders);
        this.onInfo({ statusCode, headers: headers2 });
      }
      return;
    }
    this.res = new PipelineResponse(resume2);
    let body2;
    try {
      this.handler = null;
      const headers2 = this.responseHeaders === "raw" ? util$3.parseRawHeaders(rawHeaders) : util$3.parseHeaders(rawHeaders);
      body2 = this.runInAsyncScope(handler2, null, {
        statusCode,
        headers: headers2,
        opaque,
        body: this.res,
        context
      });
    } catch (err) {
      this.res.on("error", util$3.nop);
      throw err;
    }
    if (!body2 || typeof body2.on !== "function") {
      throw new InvalidReturnValueError2("expected Readable");
    }
    body2.on("data", (chunk) => {
      const { ret, body: body3 } = this;
      if (!ret.push(chunk) && body3.pause) {
        body3.pause();
      }
    }).on("error", (err) => {
      const { ret } = this;
      util$3.destroy(ret, err);
    }).on("end", () => {
      const { ret } = this;
      ret.push(null);
    }).on("close", () => {
      const { ret } = this;
      if (!ret._readableState.ended) {
        util$3.destroy(ret, new RequestAbortedError$3());
      }
    });
    this.body = body2;
  }
  onData(chunk) {
    const { res } = this;
    return res.push(chunk);
  }
  onComplete(trailers) {
    const { res } = this;
    res.push(null);
  }
  onError(err) {
    const { ret } = this;
    this.handler = null;
    util$3.destroy(ret, err);
  }
};
function pipeline(opts, handler2) {
  try {
    const pipelineHandler = new PipelineHandler(opts, handler2);
    this.dispatch(__spreadProps(__spreadValues({}, opts), { body: pipelineHandler.req }), pipelineHandler);
    return pipelineHandler.ret;
  } catch (err) {
    return new PassThrough().destroy(err);
  }
}
var apiPipeline = pipeline;
var { InvalidArgumentError: InvalidArgumentError$7, RequestAbortedError: RequestAbortedError$2, SocketError: SocketError$1 } = errors;
var { AsyncResource: AsyncResource$1 } = import_async_hooks.default;
var util$2 = util$e;
var { addSignal: addSignal$1, removeSignal: removeSignal$1 } = abortSignal;
var assert = import_assert.default;
var UpgradeHandler = class extends AsyncResource$1 {
  constructor(opts, callback) {
    if (!opts || typeof opts !== "object") {
      throw new InvalidArgumentError$7("invalid opts");
    }
    if (typeof callback !== "function") {
      throw new InvalidArgumentError$7("invalid callback");
    }
    const { signal, opaque, responseHeaders } = opts;
    if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
      throw new InvalidArgumentError$7("signal must be an EventEmitter or EventTarget");
    }
    super("UNDICI_UPGRADE");
    this.responseHeaders = responseHeaders || null;
    this.opaque = opaque || null;
    this.callback = callback;
    this.abort = null;
    this.context = null;
    addSignal$1(this, signal);
  }
  onConnect(abort2, context) {
    if (!this.callback) {
      throw new RequestAbortedError$2();
    }
    this.abort = abort2;
    this.context = null;
  }
  onHeaders() {
    throw new SocketError$1("bad upgrade", null);
  }
  onUpgrade(statusCode, rawHeaders, socket) {
    const { callback, opaque, context } = this;
    assert.strictEqual(statusCode, 101);
    removeSignal$1(this);
    this.callback = null;
    const headers2 = this.responseHeaders === "raw" ? util$2.parseRawHeaders(rawHeaders) : util$2.parseHeaders(rawHeaders);
    this.runInAsyncScope(callback, null, null, {
      headers: headers2,
      socket,
      opaque,
      context
    });
  }
  onError(err) {
    const { callback, opaque } = this;
    removeSignal$1(this);
    if (callback) {
      this.callback = null;
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque });
      });
    }
  }
};
function upgrade(opts, callback) {
  if (callback === void 0) {
    return new Promise((resolve, reject) => {
      upgrade.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data);
      });
    });
  }
  try {
    const upgradeHandler = new UpgradeHandler(opts, callback);
    this.dispatch(__spreadProps(__spreadValues({}, opts), {
      method: opts.method || "GET",
      upgrade: opts.protocol || "Websocket"
    }), upgradeHandler);
  } catch (err) {
    if (typeof callback !== "function") {
      throw err;
    }
    const opaque = opts && opts.opaque;
    queueMicrotask(() => callback(err, { opaque }));
  }
}
var apiUpgrade = upgrade;
var { InvalidArgumentError: InvalidArgumentError$6, RequestAbortedError: RequestAbortedError$1, SocketError: SocketError2 } = errors;
var { AsyncResource } = import_async_hooks.default;
var util$1 = util$e;
var { addSignal, removeSignal } = abortSignal;
var ConnectHandler = class extends AsyncResource {
  constructor(opts, callback) {
    if (!opts || typeof opts !== "object") {
      throw new InvalidArgumentError$6("invalid opts");
    }
    if (typeof callback !== "function") {
      throw new InvalidArgumentError$6("invalid callback");
    }
    const { signal, opaque, responseHeaders } = opts;
    if (signal && typeof signal.on !== "function" && typeof signal.addEventListener !== "function") {
      throw new InvalidArgumentError$6("signal must be an EventEmitter or EventTarget");
    }
    super("UNDICI_CONNECT");
    this.opaque = opaque || null;
    this.responseHeaders = responseHeaders || null;
    this.callback = callback;
    this.abort = null;
    addSignal(this, signal);
  }
  onConnect(abort2, context) {
    if (!this.callback) {
      throw new RequestAbortedError$1();
    }
    this.abort = abort2;
    this.context = context;
  }
  onHeaders() {
    throw new SocketError2("bad connect", null);
  }
  onUpgrade(statusCode, rawHeaders, socket) {
    const { callback, opaque, context } = this;
    removeSignal(this);
    this.callback = null;
    const headers2 = this.responseHeaders === "raw" ? util$1.parseRawHeaders(rawHeaders) : util$1.parseHeaders(rawHeaders);
    this.runInAsyncScope(callback, null, null, {
      statusCode,
      headers: headers2,
      socket,
      opaque,
      context
    });
  }
  onError(err) {
    const { callback, opaque } = this;
    removeSignal(this);
    if (callback) {
      this.callback = null;
      queueMicrotask(() => {
        this.runInAsyncScope(callback, null, err, { opaque });
      });
    }
  }
};
function connect(opts, callback) {
  if (callback === void 0) {
    return new Promise((resolve, reject) => {
      connect.call(this, opts, (err, data) => {
        return err ? reject(err) : resolve(data);
      });
    });
  }
  try {
    const connectHandler = new ConnectHandler(opts, callback);
    this.dispatch(__spreadProps(__spreadValues({}, opts), { method: "CONNECT" }), connectHandler);
  } catch (err) {
    if (typeof callback !== "function") {
      throw err;
    }
    const opaque = opts && opts.opaque;
    queueMicrotask(() => callback(err, { opaque }));
  }
}
var apiConnect = connect;
api.request = apiRequest;
api.stream = apiStream;
api.pipeline = apiPipeline;
api.upgrade = apiUpgrade;
api.connect = apiConnect;
var { UndiciError: UndiciError$1 } = errors;
var MockNotMatchedError$1 = class MockNotMatchedError extends UndiciError$1 {
  constructor(message) {
    super(message);
    Error.captureStackTrace(this, MockNotMatchedError$1);
    this.name = "MockNotMatchedError";
    this.message = message || "The request does not match any registered mock dispatches";
    this.code = "UND_MOCK_ERR_MOCK_NOT_MATCHED";
  }
};
var mockErrors = {
  MockNotMatchedError: MockNotMatchedError$1
};
var mockSymbols = {
  kAgent: Symbol("agent"),
  kOptions: Symbol("options"),
  kFactory: Symbol("factory"),
  kDispatches: Symbol("dispatches"),
  kDispatchKey: Symbol("dispatch key"),
  kDefaultHeaders: Symbol("default headers"),
  kDefaultTrailers: Symbol("default trailers"),
  kContentLength: Symbol("content length"),
  kMockAgent: Symbol("mock agent"),
  kMockAgentSet: Symbol("mock agent set"),
  kMockAgentGet: Symbol("mock agent get"),
  kMockDispatch: Symbol("mock dispatch"),
  kClose: Symbol("close"),
  kOriginalClose: Symbol("original agent close"),
  kOrigin: Symbol("origin"),
  kIsMockActive: Symbol("is mock active"),
  kNetConnect: Symbol("net connect"),
  kGetNetConnect: Symbol("get net connect"),
  kConnected: Symbol("connected")
};
var { MockNotMatchedError: MockNotMatchedError2 } = mockErrors;
var {
  kDispatches: kDispatches$4,
  kMockAgent: kMockAgent$2,
  kOriginalDispatch: kOriginalDispatch$2,
  kOrigin: kOrigin$2,
  kGetNetConnect: kGetNetConnect$1
} = mockSymbols;
var { buildURL: buildURL$1, nop } = util$e;
var { STATUS_CODES } = import_http.default;
var {
  types: {
    isPromise
  }
} = import_util.default;
function matchValue$1(match, value) {
  if (typeof match === "string") {
    return match === value;
  }
  if (match instanceof RegExp) {
    return match.test(value);
  }
  if (typeof match === "function") {
    return match(value) === true;
  }
  return false;
}
function lowerCaseEntries(headers2) {
  return Object.fromEntries(Object.entries(headers2).map(([headerName, headerValue]) => {
    return [headerName.toLocaleLowerCase(), headerValue];
  }));
}
function getHeaderByName(headers2, key2) {
  if (Array.isArray(headers2)) {
    for (let i = 0; i < headers2.length; i += 2) {
      if (headers2[i].toLocaleLowerCase() === key2.toLocaleLowerCase()) {
        return headers2[i + 1];
      }
    }
    return void 0;
  } else if (typeof headers2.get === "function") {
    return headers2.get(key2);
  } else {
    return lowerCaseEntries(headers2)[key2.toLocaleLowerCase()];
  }
}
function buildHeadersFromArray(headers2) {
  const clone = headers2.slice();
  const entries = [];
  for (let index5 = 0; index5 < clone.length; index5 += 2) {
    entries.push([clone[index5], clone[index5 + 1]]);
  }
  return Object.fromEntries(entries);
}
function matchHeaders(mockDispatch2, headers2) {
  if (typeof mockDispatch2.headers === "function") {
    if (Array.isArray(headers2)) {
      headers2 = buildHeadersFromArray(headers2);
    }
    return mockDispatch2.headers(headers2 ? lowerCaseEntries(headers2) : {});
  }
  if (typeof mockDispatch2.headers === "undefined") {
    return true;
  }
  if (typeof headers2 !== "object" || typeof mockDispatch2.headers !== "object") {
    return false;
  }
  for (const [matchHeaderName, matchHeaderValue] of Object.entries(mockDispatch2.headers)) {
    const headerValue = getHeaderByName(headers2, matchHeaderName);
    if (!matchValue$1(matchHeaderValue, headerValue)) {
      return false;
    }
  }
  return true;
}
function safeUrl(path) {
  if (typeof path !== "string") {
    return path;
  }
  const pathSegments = path.split("?");
  if (pathSegments.length !== 2) {
    return path;
  }
  const qp = new URLSearchParams(pathSegments.pop());
  qp.sort();
  return [...pathSegments, qp.toString()].join("?");
}
function matchKey(mockDispatch2, { path, method, body: body2, headers: headers2 }) {
  const pathMatch = matchValue$1(mockDispatch2.path, path);
  const methodMatch = matchValue$1(mockDispatch2.method, method);
  const bodyMatch = typeof mockDispatch2.body !== "undefined" ? matchValue$1(mockDispatch2.body, body2) : true;
  const headersMatch = matchHeaders(mockDispatch2, headers2);
  return pathMatch && methodMatch && bodyMatch && headersMatch;
}
function getResponseData$1(data) {
  if (Buffer.isBuffer(data)) {
    return data;
  } else if (typeof data === "object") {
    return JSON.stringify(data);
  } else {
    return data.toString();
  }
}
function getMockDispatch(mockDispatches, key2) {
  const basePath = key2.query ? buildURL$1(key2.path, key2.query) : key2.path;
  const resolvedPath = typeof basePath === "string" ? safeUrl(basePath) : basePath;
  let matchedMockDispatches = mockDispatches.filter(({ consumed }) => !consumed).filter(({ path }) => matchValue$1(safeUrl(path), resolvedPath));
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError2(`Mock dispatch not matched for path '${resolvedPath}'`);
  }
  matchedMockDispatches = matchedMockDispatches.filter(({ method }) => matchValue$1(method, key2.method));
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError2(`Mock dispatch not matched for method '${key2.method}'`);
  }
  matchedMockDispatches = matchedMockDispatches.filter(({ body: body2 }) => typeof body2 !== "undefined" ? matchValue$1(body2, key2.body) : true);
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError2(`Mock dispatch not matched for body '${key2.body}'`);
  }
  matchedMockDispatches = matchedMockDispatches.filter((mockDispatch2) => matchHeaders(mockDispatch2, key2.headers));
  if (matchedMockDispatches.length === 0) {
    throw new MockNotMatchedError2(`Mock dispatch not matched for headers '${typeof key2.headers === "object" ? JSON.stringify(key2.headers) : key2.headers}'`);
  }
  return matchedMockDispatches[0];
}
function addMockDispatch$1(mockDispatches, key2, data) {
  const baseData = { timesInvoked: 0, times: 1, persist: false, consumed: false };
  const replyData = typeof data === "function" ? { callback: data } : __spreadValues({}, data);
  const newMockDispatch = __spreadProps(__spreadValues(__spreadValues({}, baseData), key2), { pending: true, data: __spreadValues({ error: null }, replyData) });
  mockDispatches.push(newMockDispatch);
  return newMockDispatch;
}
function deleteMockDispatch(mockDispatches, key2) {
  const index5 = mockDispatches.findIndex((dispatch) => {
    if (!dispatch.consumed) {
      return false;
    }
    return matchKey(dispatch, key2);
  });
  if (index5 !== -1) {
    mockDispatches.splice(index5, 1);
  }
}
function buildKey$1(opts) {
  const { path, method, body: body2, headers: headers2, query } = opts;
  return {
    path,
    method,
    body: body2,
    headers: headers2,
    query
  };
}
function generateKeyValues(data) {
  return Object.entries(data).reduce((keyValuePairs, [key2, value]) => [...keyValuePairs, key2, value], []);
}
function getStatusText(statusCode) {
  return STATUS_CODES[statusCode] || "unknown";
}
async function getResponse(body2) {
  const buffers = [];
  for await (const data of body2) {
    buffers.push(data);
  }
  return Buffer.concat(buffers).toString("utf8");
}
function mockDispatch(opts, handler2) {
  const key2 = buildKey$1(opts);
  const mockDispatch2 = getMockDispatch(this[kDispatches$4], key2);
  mockDispatch2.timesInvoked++;
  if (mockDispatch2.data.callback) {
    mockDispatch2.data = __spreadValues(__spreadValues({}, mockDispatch2.data), mockDispatch2.data.callback(opts));
  }
  const { data: { statusCode, data, headers: headers2, trailers, error: error2 }, delay, persist } = mockDispatch2;
  const { timesInvoked, times } = mockDispatch2;
  mockDispatch2.consumed = !persist && timesInvoked >= times;
  mockDispatch2.pending = timesInvoked < times;
  if (error2 !== null) {
    deleteMockDispatch(this[kDispatches$4], key2);
    handler2.onError(error2);
    return true;
  }
  if (typeof delay === "number" && delay > 0) {
    setTimeout(() => {
      handleReply(this[kDispatches$4]);
    }, delay);
  } else {
    handleReply(this[kDispatches$4]);
  }
  function handleReply(mockDispatches, _data = data) {
    const optsHeaders = Array.isArray(opts.headers) ? buildHeadersFromArray(opts.headers) : opts.headers;
    const body2 = typeof _data === "function" ? _data(__spreadProps(__spreadValues({}, opts), { headers: optsHeaders })) : _data;
    if (isPromise(body2)) {
      body2.then((newData) => handleReply(mockDispatches, newData));
      return;
    }
    const responseData = getResponseData$1(body2);
    const responseHeaders = generateKeyValues(headers2);
    const responseTrailers = generateKeyValues(trailers);
    handler2.abort = nop;
    handler2.onHeaders(statusCode, responseHeaders, resume2, getStatusText(statusCode));
    handler2.onData(Buffer.from(responseData));
    handler2.onComplete(responseTrailers);
    deleteMockDispatch(mockDispatches, key2);
  }
  function resume2() {
  }
  return true;
}
function buildMockDispatch$2() {
  const agent2 = this[kMockAgent$2];
  const origin = this[kOrigin$2];
  const originalDispatch = this[kOriginalDispatch$2];
  return function dispatch(opts, handler2) {
    if (agent2.isMockActive) {
      try {
        mockDispatch.call(this, opts, handler2);
      } catch (error2) {
        if (error2 instanceof MockNotMatchedError2) {
          const netConnect = agent2[kGetNetConnect$1]();
          if (netConnect === false) {
            throw new MockNotMatchedError2(`${error2.message}: subsequent request to origin ${origin} was not allowed (net.connect disabled)`);
          }
          if (checkNetConnect(netConnect, origin)) {
            originalDispatch.call(this, opts, handler2);
          } else {
            throw new MockNotMatchedError2(`${error2.message}: subsequent request to origin ${origin} was not allowed (net.connect is not enabled for this origin)`);
          }
        } else {
          throw error2;
        }
      }
    } else {
      originalDispatch.call(this, opts, handler2);
    }
  };
}
function checkNetConnect(netConnect, origin) {
  const url = new URL(origin);
  if (netConnect === true) {
    return true;
  } else if (Array.isArray(netConnect) && netConnect.some((matcher) => matchValue$1(matcher, url.host))) {
    return true;
  }
  return false;
}
function buildMockOptions$1(opts) {
  if (opts) {
    const _a = opts, { agent: agent2 } = _a, mockOptions = __objRest(_a, ["agent"]);
    return mockOptions;
  }
}
var mockUtils = {
  getResponseData: getResponseData$1,
  getMockDispatch,
  addMockDispatch: addMockDispatch$1,
  deleteMockDispatch,
  buildKey: buildKey$1,
  generateKeyValues,
  matchValue: matchValue$1,
  getResponse,
  getStatusText,
  mockDispatch,
  buildMockDispatch: buildMockDispatch$2,
  checkNetConnect,
  buildMockOptions: buildMockOptions$1,
  getHeaderByName
};
var mockInterceptor = {};
var { getResponseData, buildKey, addMockDispatch } = mockUtils;
var {
  kDispatches: kDispatches$3,
  kDispatchKey,
  kDefaultHeaders,
  kDefaultTrailers,
  kContentLength,
  kMockDispatch
} = mockSymbols;
var { InvalidArgumentError: InvalidArgumentError$5 } = errors;
var { buildURL } = util$e;
var MockScope = class {
  constructor(mockDispatch2) {
    this[kMockDispatch] = mockDispatch2;
  }
  delay(waitInMs) {
    if (typeof waitInMs !== "number" || !Number.isInteger(waitInMs) || waitInMs <= 0) {
      throw new InvalidArgumentError$5("waitInMs must be a valid integer > 0");
    }
    this[kMockDispatch].delay = waitInMs;
    return this;
  }
  persist() {
    this[kMockDispatch].persist = true;
    return this;
  }
  times(repeatTimes) {
    if (typeof repeatTimes !== "number" || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {
      throw new InvalidArgumentError$5("repeatTimes must be a valid integer > 0");
    }
    this[kMockDispatch].times = repeatTimes;
    return this;
  }
};
var MockInterceptor$2 = class MockInterceptor {
  constructor(opts, mockDispatches) {
    if (typeof opts !== "object") {
      throw new InvalidArgumentError$5("opts must be an object");
    }
    if (typeof opts.path === "undefined") {
      throw new InvalidArgumentError$5("opts.path must be defined");
    }
    if (typeof opts.method === "undefined") {
      opts.method = "GET";
    }
    if (typeof opts.path === "string") {
      if (opts.query) {
        opts.path = buildURL(opts.path, opts.query);
      } else {
        const parsedURL = new URL(opts.path, "data://");
        opts.path = parsedURL.pathname + parsedURL.search;
      }
    }
    if (typeof opts.method === "string") {
      opts.method = opts.method.toUpperCase();
    }
    this[kDispatchKey] = buildKey(opts);
    this[kDispatches$3] = mockDispatches;
    this[kDefaultHeaders] = {};
    this[kDefaultTrailers] = {};
    this[kContentLength] = false;
  }
  createMockScopeDispatchData(statusCode, data, responseOptions = {}) {
    const responseData = getResponseData(data);
    const contentLength = this[kContentLength] ? { "content-length": responseData.length } : {};
    const headers2 = __spreadValues(__spreadValues(__spreadValues({}, this[kDefaultHeaders]), contentLength), responseOptions.headers);
    const trailers = __spreadValues(__spreadValues({}, this[kDefaultTrailers]), responseOptions.trailers);
    return { statusCode, data, headers: headers2, trailers };
  }
  validateReplyParameters(statusCode, data, responseOptions) {
    if (typeof statusCode === "undefined") {
      throw new InvalidArgumentError$5("statusCode must be defined");
    }
    if (typeof data === "undefined") {
      throw new InvalidArgumentError$5("data must be defined");
    }
    if (typeof responseOptions !== "object") {
      throw new InvalidArgumentError$5("responseOptions must be an object");
    }
  }
  reply(replyData) {
    if (typeof replyData === "function") {
      const wrappedDefaultsCallback = (opts) => {
        const resolvedData = replyData(opts);
        if (typeof resolvedData !== "object") {
          throw new InvalidArgumentError$5("reply options callback must return an object");
        }
        const { statusCode: statusCode2, data: data2 = "", responseOptions: responseOptions2 = {} } = resolvedData;
        this.validateReplyParameters(statusCode2, data2, responseOptions2);
        return __spreadValues({}, this.createMockScopeDispatchData(statusCode2, data2, responseOptions2));
      };
      const newMockDispatch2 = addMockDispatch(this[kDispatches$3], this[kDispatchKey], wrappedDefaultsCallback);
      return new MockScope(newMockDispatch2);
    }
    const [statusCode, data = "", responseOptions = {}] = [...arguments];
    this.validateReplyParameters(statusCode, data, responseOptions);
    const dispatchData = this.createMockScopeDispatchData(statusCode, data, responseOptions);
    const newMockDispatch = addMockDispatch(this[kDispatches$3], this[kDispatchKey], dispatchData);
    return new MockScope(newMockDispatch);
  }
  replyWithError(error2) {
    if (typeof error2 === "undefined") {
      throw new InvalidArgumentError$5("error must be defined");
    }
    const newMockDispatch = addMockDispatch(this[kDispatches$3], this[kDispatchKey], { error: error2 });
    return new MockScope(newMockDispatch);
  }
  defaultReplyHeaders(headers2) {
    if (typeof headers2 === "undefined") {
      throw new InvalidArgumentError$5("headers must be defined");
    }
    this[kDefaultHeaders] = headers2;
    return this;
  }
  defaultReplyTrailers(trailers) {
    if (typeof trailers === "undefined") {
      throw new InvalidArgumentError$5("trailers must be defined");
    }
    this[kDefaultTrailers] = trailers;
    return this;
  }
  replyContentLength() {
    this[kContentLength] = true;
    return this;
  }
};
mockInterceptor.MockInterceptor = MockInterceptor$2;
mockInterceptor.MockScope = MockScope;
var { promisify: promisify$1 } = import_util.default;
var Client$1 = client;
var { buildMockDispatch: buildMockDispatch$1 } = mockUtils;
var {
  kDispatches: kDispatches$2,
  kMockAgent: kMockAgent$1,
  kClose: kClose$2,
  kOriginalClose: kOriginalClose$1,
  kOrigin: kOrigin$1,
  kOriginalDispatch: kOriginalDispatch$1,
  kConnected: kConnected$1
} = mockSymbols;
var { MockInterceptor: MockInterceptor$1 } = mockInterceptor;
var Symbols$1 = symbols$2;
var { InvalidArgumentError: InvalidArgumentError$4 } = errors;
var MockClient$1 = class MockClient extends Client$1 {
  constructor(origin, opts) {
    super(origin, opts);
    if (!opts || !opts.agent || typeof opts.agent.dispatch !== "function") {
      throw new InvalidArgumentError$4("Argument opts.agent must implement Agent");
    }
    this[kMockAgent$1] = opts.agent;
    this[kOrigin$1] = origin;
    this[kDispatches$2] = [];
    this[kConnected$1] = 1;
    this[kOriginalDispatch$1] = this.dispatch;
    this[kOriginalClose$1] = this.close.bind(this);
    this.dispatch = buildMockDispatch$1.call(this);
    this.close = this[kClose$2];
  }
  get [Symbols$1.kConnected]() {
    return this[kConnected$1];
  }
  intercept(opts) {
    return new MockInterceptor$1(opts, this[kDispatches$2]);
  }
  async [kClose$2]() {
    await promisify$1(this[kOriginalClose$1])();
    this[kConnected$1] = 0;
    this[kMockAgent$1][Symbols$1.kClients].delete(this[kOrigin$1]);
  }
};
var mockClient = MockClient$1;
var { promisify } = import_util.default;
var Pool2 = pool;
var { buildMockDispatch } = mockUtils;
var {
  kDispatches: kDispatches$1,
  kMockAgent,
  kClose: kClose$1,
  kOriginalClose,
  kOrigin,
  kOriginalDispatch,
  kConnected
} = mockSymbols;
var { MockInterceptor: MockInterceptor2 } = mockInterceptor;
var Symbols = symbols$2;
var { InvalidArgumentError: InvalidArgumentError$3 } = errors;
var MockPool$1 = class MockPool extends Pool2 {
  constructor(origin, opts) {
    super(origin, opts);
    if (!opts || !opts.agent || typeof opts.agent.dispatch !== "function") {
      throw new InvalidArgumentError$3("Argument opts.agent must implement Agent");
    }
    this[kMockAgent] = opts.agent;
    this[kOrigin] = origin;
    this[kDispatches$1] = [];
    this[kConnected] = 1;
    this[kOriginalDispatch] = this.dispatch;
    this[kOriginalClose] = this.close.bind(this);
    this.dispatch = buildMockDispatch.call(this);
    this.close = this[kClose$1];
  }
  get [Symbols.kConnected]() {
    return this[kConnected];
  }
  intercept(opts) {
    return new MockInterceptor2(opts, this[kDispatches$1]);
  }
  async [kClose$1]() {
    await promisify(this[kOriginalClose])();
    this[kConnected] = 0;
    this[kMockAgent][Symbols.kClients].delete(this[kOrigin]);
  }
};
var mockPool = MockPool$1;
var singulars = {
  pronoun: "it",
  is: "is",
  was: "was",
  this: "this"
};
var plurals = {
  pronoun: "they",
  is: "are",
  was: "were",
  this: "these"
};
var pluralizer = class Pluralizer {
  constructor(singular, plural) {
    this.singular = singular;
    this.plural = plural;
  }
  pluralize(count) {
    const one = count === 1;
    const keys = one ? singulars : plurals;
    const noun = one ? this.singular : this.plural;
    return __spreadProps(__spreadValues({}, keys), { count, noun });
  }
};
var { Transform } = import_stream.default;
var { Console } = import_console.default;
var pendingInterceptorsFormatter = class PendingInterceptorsFormatter {
  constructor({ disableColors } = {}) {
    this.transform = new Transform({
      transform(chunk, _enc, cb) {
        cb(null, chunk);
      }
    });
    this.logger = new Console({
      stdout: this.transform,
      inspectOptions: {
        colors: !disableColors && !process.env.CI
      }
    });
  }
  format(pendingInterceptors) {
    const withPrettyHeaders = pendingInterceptors.map(({ method, path, data: { statusCode }, persist, times, timesInvoked, origin }) => ({
      Method: method,
      Origin: origin,
      Path: path,
      "Status code": statusCode,
      Persistent: persist ? "\u2705" : "\u274C",
      Invocations: timesInvoked,
      Remaining: persist ? Infinity : times - timesInvoked
    }));
    this.logger.table(withPrettyHeaders);
    return this.transform.read().toString();
  }
};
var { kClients } = symbols$2;
var Agent$2 = agent;
var {
  kAgent: kAgent$1,
  kMockAgentSet,
  kMockAgentGet,
  kDispatches,
  kIsMockActive,
  kNetConnect,
  kGetNetConnect,
  kOptions,
  kFactory
} = mockSymbols;
var MockClient2 = mockClient;
var MockPool2 = mockPool;
var { matchValue, buildMockOptions } = mockUtils;
var { InvalidArgumentError: InvalidArgumentError$2, UndiciError: UndiciError2 } = errors;
var Dispatcher2 = dispatcher;
var Pluralizer2 = pluralizer;
var PendingInterceptorsFormatter2 = pendingInterceptorsFormatter;
var FakeWeakRef = class {
  constructor(value) {
    this.value = value;
  }
  deref() {
    return this.value;
  }
};
var MockAgent = class extends Dispatcher2 {
  constructor(opts) {
    super(opts);
    this[kNetConnect] = true;
    this[kIsMockActive] = true;
    if (opts && opts.agent && typeof opts.agent.dispatch !== "function") {
      throw new InvalidArgumentError$2("Argument opts.agent must implement Agent");
    }
    const agent2 = opts && opts.agent ? opts.agent : new Agent$2(opts);
    this[kAgent$1] = agent2;
    this[kClients] = agent2[kClients];
    this[kOptions] = buildMockOptions(opts);
  }
  get(origin) {
    let dispatcher2 = this[kMockAgentGet](origin);
    if (!dispatcher2) {
      dispatcher2 = this[kFactory](origin);
      this[kMockAgentSet](origin, dispatcher2);
    }
    return dispatcher2;
  }
  dispatch(opts, handler2) {
    this.get(opts.origin);
    return this[kAgent$1].dispatch(opts, handler2);
  }
  async close() {
    await this[kAgent$1].close();
    this[kClients].clear();
  }
  deactivate() {
    this[kIsMockActive] = false;
  }
  activate() {
    this[kIsMockActive] = true;
  }
  enableNetConnect(matcher) {
    if (typeof matcher === "string" || typeof matcher === "function" || matcher instanceof RegExp) {
      if (Array.isArray(this[kNetConnect])) {
        this[kNetConnect].push(matcher);
      } else {
        this[kNetConnect] = [matcher];
      }
    } else if (typeof matcher === "undefined") {
      this[kNetConnect] = true;
    } else {
      throw new InvalidArgumentError$2("Unsupported matcher. Must be one of String|Function|RegExp.");
    }
  }
  disableNetConnect() {
    this[kNetConnect] = false;
  }
  get isMockActive() {
    return this[kIsMockActive];
  }
  [kMockAgentSet](origin, dispatcher2) {
    this[kClients].set(origin, new FakeWeakRef(dispatcher2));
  }
  [kFactory](origin) {
    const mockOptions = Object.assign({ agent: this }, this[kOptions]);
    return this[kOptions] && this[kOptions].connections === 1 ? new MockClient2(origin, mockOptions) : new MockPool2(origin, mockOptions);
  }
  [kMockAgentGet](origin) {
    const ref = this[kClients].get(origin);
    if (ref) {
      return ref.deref();
    }
    if (typeof origin !== "string") {
      const dispatcher2 = this[kFactory]("http://localhost:9999");
      this[kMockAgentSet](origin, dispatcher2);
      return dispatcher2;
    }
    for (const [keyMatcher, nonExplicitRef] of Array.from(this[kClients])) {
      const nonExplicitDispatcher = nonExplicitRef.deref();
      if (nonExplicitDispatcher && typeof keyMatcher !== "string" && matchValue(keyMatcher, origin)) {
        const dispatcher2 = this[kFactory](origin);
        this[kMockAgentSet](origin, dispatcher2);
        dispatcher2[kDispatches] = nonExplicitDispatcher[kDispatches];
        return dispatcher2;
      }
    }
  }
  [kGetNetConnect]() {
    return this[kNetConnect];
  }
  pendingInterceptors() {
    const mockAgentClients = this[kClients];
    return Array.from(mockAgentClients.entries()).flatMap(([origin, scope]) => scope.deref()[kDispatches].map((dispatch) => __spreadProps(__spreadValues({}, dispatch), { origin }))).filter(({ pending }) => pending);
  }
  assertNoPendingInterceptors({ pendingInterceptorsFormatter: pendingInterceptorsFormatter2 = new PendingInterceptorsFormatter2() } = {}) {
    const pending = this.pendingInterceptors();
    if (pending.length === 0) {
      return;
    }
    const pluralizer2 = new Pluralizer2("interceptor", "interceptors").pluralize(pending.length);
    throw new UndiciError2(`
${pluralizer2.count} ${pluralizer2.noun} ${pluralizer2.is} pending:

${pendingInterceptorsFormatter2.format(pending)}
`.trim());
  }
};
var mockAgent = MockAgent;
var { kProxy, kClose, kDestroy, kInterceptors } = symbols$2;
var { URL: URL$1 } = import_url.default;
var Agent$1 = agent;
var Client2 = client;
var DispatcherBase2 = dispatcherBase;
var { InvalidArgumentError: InvalidArgumentError$1, RequestAbortedError: RequestAbortedError2 } = errors;
var buildConnector = connect$2;
var kAgent = Symbol("proxy agent");
var kClient = Symbol("proxy client");
var kProxyHeaders = Symbol("proxy headers");
var kRequestTls = Symbol("request tls settings");
var kProxyTls = Symbol("proxy tls settings");
var kConnectEndpoint = Symbol("connect endpoint function");
function defaultProtocolPort(protocol) {
  return protocol === "https:" ? 443 : 80;
}
function buildProxyOptions(opts) {
  if (typeof opts === "string") {
    opts = { uri: opts };
  }
  if (!opts || !opts.uri) {
    throw new InvalidArgumentError$1("Proxy opts.uri is mandatory");
  }
  return {
    uri: opts.uri,
    protocol: opts.protocol || "https"
  };
}
var ProxyAgent = class extends DispatcherBase2 {
  constructor(opts) {
    super(opts);
    this[kProxy] = buildProxyOptions(opts);
    this[kAgent] = new Agent$1(opts);
    this[kInterceptors] = opts.interceptors && opts.interceptors.ProxyAgent && Array.isArray(opts.interceptors.ProxyAgent) ? opts.interceptors.ProxyAgent : [];
    if (typeof opts === "string") {
      opts = { uri: opts };
    }
    if (!opts || !opts.uri) {
      throw new InvalidArgumentError$1("Proxy opts.uri is mandatory");
    }
    this[kRequestTls] = opts.requestTls;
    this[kProxyTls] = opts.proxyTls;
    this[kProxyHeaders] = {};
    if (opts.auth && opts.token) {
      throw new InvalidArgumentError$1("opts.auth cannot be used in combination with opts.token");
    } else if (opts.auth) {
      this[kProxyHeaders]["proxy-authorization"] = `Basic ${opts.auth}`;
    } else if (opts.token) {
      this[kProxyHeaders]["proxy-authorization"] = opts.token;
    }
    const resolvedUrl = new URL$1(opts.uri);
    const { origin, port, host } = resolvedUrl;
    const connect2 = buildConnector(__spreadValues({}, opts.proxyTls));
    this[kConnectEndpoint] = buildConnector(__spreadValues({}, opts.requestTls));
    this[kClient] = new Client2(resolvedUrl, { connect: connect2 });
    this[kAgent] = new Agent$1(__spreadProps(__spreadValues({}, opts), {
      connect: async (opts2, callback) => {
        let requestedHost = opts2.host;
        if (!opts2.port) {
          requestedHost += `:${defaultProtocolPort(opts2.protocol)}`;
        }
        try {
          const { socket, statusCode } = await this[kClient].connect({
            origin,
            port,
            path: requestedHost,
            signal: opts2.signal,
            headers: __spreadProps(__spreadValues({}, this[kProxyHeaders]), {
              host
            })
          });
          if (statusCode !== 200) {
            socket.on("error", () => {
            }).destroy();
            callback(new RequestAbortedError2("Proxy response !== 200 when HTTP Tunneling"));
          }
          if (opts2.protocol !== "https:") {
            callback(null, socket);
            return;
          }
          let servername;
          if (this[kRequestTls]) {
            servername = this[kRequestTls].servername;
          } else {
            servername = opts2.servername;
          }
          this[kConnectEndpoint](__spreadProps(__spreadValues({}, opts2), { servername, httpSocket: socket }), callback);
        } catch (err) {
          callback(err);
        }
      }
    }));
  }
  dispatch(opts, handler2) {
    const { host } = new URL$1(opts.origin);
    const headers2 = buildHeaders(opts.headers);
    throwIfProxyAuthIsSent(headers2);
    return this[kAgent].dispatch(__spreadProps(__spreadValues({}, opts), {
      headers: __spreadProps(__spreadValues({}, headers2), {
        host
      })
    }), handler2);
  }
  async [kClose]() {
    await this[kAgent].close();
    await this[kClient].close();
  }
  async [kDestroy]() {
    await this[kAgent].destroy();
    await this[kClient].destroy();
  }
};
function buildHeaders(headers2) {
  if (Array.isArray(headers2)) {
    const headersPair = {};
    for (let i = 0; i < headers2.length; i += 2) {
      headersPair[headers2[i]] = headers2[i + 1];
    }
    return headersPair;
  }
  return headers2;
}
function throwIfProxyAuthIsSent(headers2) {
  const existProxyAuth = headers2 && Object.keys(headers2).find((key2) => key2.toLowerCase() === "proxy-authorization");
  if (existProxyAuth) {
    throw new InvalidArgumentError$1("Proxy-Authorization should be sent in ProxyAgent constructor");
  }
}
var proxyAgent = ProxyAgent;
var globalDispatcher = Symbol.for("undici.globalDispatcher.1");
var { InvalidArgumentError: InvalidArgumentError2 } = errors;
var Agent2 = agent;
if (getGlobalDispatcher() === void 0) {
  setGlobalDispatcher(new Agent2());
}
function setGlobalDispatcher(agent2) {
  if (!agent2 || typeof agent2.dispatch !== "function") {
    throw new InvalidArgumentError2("Argument agent must implement Agent");
  }
  Object.defineProperty(globalThis, globalDispatcher, {
    value: agent2,
    writable: true,
    enumerable: false,
    configurable: false
  });
}
function getGlobalDispatcher() {
  return globalThis[globalDispatcher];
}
var global$2 = {
  setGlobalDispatcher,
  getGlobalDispatcher
};
var DecoratorHandler_1 = class DecoratorHandler {
  constructor(handler2) {
    this.handler = handler2;
  }
  onConnect(...args) {
    return this.handler.onConnect(...args);
  }
  onError(...args) {
    return this.handler.onError(...args);
  }
  onUpgrade(...args) {
    return this.handler.onUpgrade(...args);
  }
  onHeaders(...args) {
    return this.handler.onHeaders(...args);
  }
  onData(...args) {
    return this.handler.onData(...args);
  }
  onComplete(...args) {
    return this.handler.onComplete(...args);
  }
  onBodySent(...args) {
    return this.handler.onBodySent(...args);
  }
};
var headers;
var hasRequiredHeaders;
function requireHeaders() {
  if (hasRequiredHeaders)
    return headers;
  hasRequiredHeaders = 1;
  const { kHeadersList } = symbols$2;
  const { kGuard, kHeadersCaseInsensitive } = requireSymbols$1();
  const { kEnumerableProperty: kEnumerableProperty2 } = util$e;
  const {
    makeIterator,
    isValidHeaderName,
    isValidHeaderValue
  } = requireUtil$1();
  const { webidl } = requireWebidl();
  const kHeadersMap = Symbol("headers map");
  const kHeadersSortedMap = Symbol("headers map sorted");
  function headerValueNormalize(potentialValue) {
    return potentialValue.replace(/^[\r\n\t ]+|[\r\n\t ]+$/g, "");
  }
  function fill(headers2, object) {
    if (Array.isArray(object)) {
      for (const header of object) {
        if (header.length !== 2) {
          throw webidl.errors.exception({
            header: "Headers constructor",
            message: `expected name/value pair to be length 2, found ${header.length}.`
          });
        }
        headers2.append(header[0], header[1]);
      }
    } else if (typeof object === "object" && object !== null) {
      for (const [key2, value] of Object.entries(object)) {
        headers2.append(key2, value);
      }
    } else {
      throw webidl.errors.conversionFailed({
        prefix: "Headers constructor",
        argument: "Argument 1",
        types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
      });
    }
  }
  class HeadersList {
    constructor(init3) {
      if (init3 instanceof HeadersList) {
        this[kHeadersMap] = new Map(init3[kHeadersMap]);
        this[kHeadersSortedMap] = init3[kHeadersSortedMap];
      } else {
        this[kHeadersMap] = new Map(init3);
        this[kHeadersSortedMap] = null;
      }
    }
    contains(name) {
      name = name.toLowerCase();
      return this[kHeadersMap].has(name);
    }
    clear() {
      this[kHeadersMap].clear();
      this[kHeadersSortedMap] = null;
    }
    append(name, value) {
      this[kHeadersSortedMap] = null;
      const lowercaseName = name.toLowerCase();
      const exists = this[kHeadersMap].get(lowercaseName);
      if (exists) {
        this[kHeadersMap].set(lowercaseName, { name: exists.name, value: `${exists.value}, ${value}` });
      } else {
        this[kHeadersMap].set(lowercaseName, { name, value });
      }
    }
    set(name, value) {
      this[kHeadersSortedMap] = null;
      const lowercaseName = name.toLowerCase();
      return this[kHeadersMap].set(lowercaseName, { name, value });
    }
    delete(name) {
      this[kHeadersSortedMap] = null;
      name = name.toLowerCase();
      return this[kHeadersMap].delete(name);
    }
    get(name) {
      if (!this.contains(name)) {
        return null;
      }
      return this[kHeadersMap].get(name.toLowerCase())?.value ?? null;
    }
    *[Symbol.iterator]() {
      for (const [name, { value }] of this[kHeadersMap]) {
        yield [name, value];
      }
    }
    get [kHeadersCaseInsensitive]() {
      const flatList = [];
      for (const { name, value } of this[kHeadersMap].values()) {
        flatList.push(name, value);
      }
      return flatList;
    }
  }
  class Headers2 {
    constructor(init3 = void 0) {
      this[kHeadersList] = new HeadersList();
      this[kGuard] = "none";
      if (init3 !== void 0) {
        init3 = webidl.converters.HeadersInit(init3);
        fill(this, init3);
      }
    }
    append(name, value) {
      webidl.brandCheck(this, Headers2);
      webidl.argumentLengthCheck(arguments, 2, { header: "Headers.append" });
      name = webidl.converters.ByteString(name);
      value = webidl.converters.ByteString(value);
      value = headerValueNormalize(value);
      if (!isValidHeaderName(name)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.append",
          value: name,
          type: "header name"
        });
      } else if (!isValidHeaderValue(value)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.append",
          value,
          type: "header value"
        });
      }
      if (this[kGuard] === "immutable") {
        throw new TypeError("immutable");
      } else if (this[kGuard] === "request-no-cors")
        ;
      return this[kHeadersList].append(name, value);
    }
    delete(name) {
      webidl.brandCheck(this, Headers2);
      webidl.argumentLengthCheck(arguments, 1, { header: "Headers.delete" });
      name = webidl.converters.ByteString(name);
      if (!isValidHeaderName(name)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.delete",
          value: name,
          type: "header name"
        });
      }
      if (this[kGuard] === "immutable") {
        throw new TypeError("immutable");
      } else if (this[kGuard] === "request-no-cors")
        ;
      if (!this[kHeadersList].contains(name)) {
        return;
      }
      return this[kHeadersList].delete(name);
    }
    get(name) {
      webidl.brandCheck(this, Headers2);
      webidl.argumentLengthCheck(arguments, 1, { header: "Headers.get" });
      name = webidl.converters.ByteString(name);
      if (!isValidHeaderName(name)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.get",
          value: name,
          type: "header name"
        });
      }
      return this[kHeadersList].get(name);
    }
    has(name) {
      webidl.brandCheck(this, Headers2);
      webidl.argumentLengthCheck(arguments, 1, { header: "Headers.has" });
      name = webidl.converters.ByteString(name);
      if (!isValidHeaderName(name)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.has",
          value: name,
          type: "header name"
        });
      }
      return this[kHeadersList].contains(name);
    }
    set(name, value) {
      webidl.brandCheck(this, Headers2);
      webidl.argumentLengthCheck(arguments, 2, { header: "Headers.set" });
      name = webidl.converters.ByteString(name);
      value = webidl.converters.ByteString(value);
      value = headerValueNormalize(value);
      if (!isValidHeaderName(name)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.set",
          value: name,
          type: "header name"
        });
      } else if (!isValidHeaderValue(value)) {
        throw webidl.errors.invalidArgument({
          prefix: "Headers.set",
          value,
          type: "header value"
        });
      }
      if (this[kGuard] === "immutable") {
        throw new TypeError("immutable");
      } else if (this[kGuard] === "request-no-cors")
        ;
      return this[kHeadersList].set(name, value);
    }
    get [kHeadersSortedMap]() {
      if (!this[kHeadersList][kHeadersSortedMap]) {
        this[kHeadersList][kHeadersSortedMap] = new Map([...this[kHeadersList]].sort((a, b) => a[0] < b[0] ? -1 : 1));
      }
      return this[kHeadersList][kHeadersSortedMap];
    }
    keys() {
      webidl.brandCheck(this, Headers2);
      return makeIterator(() => [...this[kHeadersSortedMap].entries()], "Headers", "key");
    }
    values() {
      webidl.brandCheck(this, Headers2);
      return makeIterator(() => [...this[kHeadersSortedMap].entries()], "Headers", "value");
    }
    entries() {
      webidl.brandCheck(this, Headers2);
      return makeIterator(() => [...this[kHeadersSortedMap].entries()], "Headers", "key+value");
    }
    forEach(callbackFn, thisArg = globalThis) {
      webidl.brandCheck(this, Headers2);
      webidl.argumentLengthCheck(arguments, 1, { header: "Headers.forEach" });
      if (typeof callbackFn !== "function") {
        throw new TypeError("Failed to execute 'forEach' on 'Headers': parameter 1 is not of type 'Function'.");
      }
      for (const [key2, value] of this) {
        callbackFn.apply(thisArg, [value, key2, this]);
      }
    }
    [Symbol.for("nodejs.util.inspect.custom")]() {
      webidl.brandCheck(this, Headers2);
      return this[kHeadersList];
    }
  }
  Headers2.prototype[Symbol.iterator] = Headers2.prototype.entries;
  Object.defineProperties(Headers2.prototype, {
    append: kEnumerableProperty2,
    delete: kEnumerableProperty2,
    get: kEnumerableProperty2,
    has: kEnumerableProperty2,
    set: kEnumerableProperty2,
    keys: kEnumerableProperty2,
    values: kEnumerableProperty2,
    entries: kEnumerableProperty2,
    forEach: kEnumerableProperty2,
    [Symbol.iterator]: { enumerable: false },
    [Symbol.toStringTag]: {
      value: "Headers",
      configurable: true
    }
  });
  webidl.converters.HeadersInit = function(V) {
    if (webidl.util.Type(V) === "Object") {
      if (V[Symbol.iterator]) {
        return webidl.converters["sequence<sequence<ByteString>>"](V);
      }
      return webidl.converters["record<ByteString, ByteString>"](V);
    }
    throw webidl.errors.conversionFailed({
      prefix: "Headers constructor",
      argument: "Argument 1",
      types: ["sequence<sequence<ByteString>>", "record<ByteString, ByteString>"]
    });
  };
  headers = {
    fill,
    Headers: Headers2,
    HeadersList
  };
  return headers;
}
var global$1;
var hasRequiredGlobal;
function requireGlobal() {
  if (hasRequiredGlobal)
    return global$1;
  hasRequiredGlobal = 1;
  const globalOrigin = Symbol.for("undici.globalOrigin.1");
  function getGlobalOrigin() {
    return globalThis[globalOrigin];
  }
  function setGlobalOrigin(newOrigin) {
    if (newOrigin !== void 0 && typeof newOrigin !== "string" && !(newOrigin instanceof URL)) {
      throw new Error("Invalid base url");
    }
    if (newOrigin === void 0) {
      Object.defineProperty(globalThis, globalOrigin, {
        value: void 0,
        writable: true,
        enumerable: false,
        configurable: false
      });
      return;
    }
    const parsedURL = new URL(newOrigin);
    if (parsedURL.protocol !== "http:" && parsedURL.protocol !== "https:") {
      throw new TypeError(`Only http & https urls are allowed, received ${parsedURL.protocol}`);
    }
    Object.defineProperty(globalThis, globalOrigin, {
      value: parsedURL,
      writable: true,
      enumerable: false,
      configurable: false
    });
  }
  global$1 = {
    getGlobalOrigin,
    setGlobalOrigin
  };
  return global$1;
}
var response;
var hasRequiredResponse;
function requireResponse() {
  if (hasRequiredResponse)
    return response;
  hasRequiredResponse = 1;
  const { Headers: Headers2, HeadersList, fill } = requireHeaders();
  const { extractBody: extractBody2, cloneBody, mixinBody } = requireBody();
  const util2 = util$e;
  const { kEnumerableProperty: kEnumerableProperty2 } = util2;
  const {
    isValidReasonPhrase,
    isCancelled,
    isAborted,
    isBlobLike: isBlobLike2,
    serializeJavascriptValueToJSONString,
    isErrorLike,
    isomorphicEncode
  } = requireUtil$1();
  const {
    redirectStatus,
    nullBodyStatus,
    DOMException
  } = requireConstants$1();
  const { kState, kHeaders, kGuard, kRealm } = requireSymbols$1();
  const { webidl } = requireWebidl();
  const { FormData: FormData2 } = requireFormdata();
  const { getGlobalOrigin } = requireGlobal();
  const { URLSerializer } = requireDataURL();
  const { kHeadersList } = symbols$2;
  const assert2 = import_assert.default;
  const { types } = import_util.default;
  const ReadableStream3 = globalThis.ReadableStream || import_web.default.ReadableStream;
  class Response2 {
    static error() {
      const relevantRealm = { settingsObject: {} };
      const responseObject = new Response2();
      responseObject[kState] = makeNetworkError();
      responseObject[kRealm] = relevantRealm;
      responseObject[kHeaders][kHeadersList] = responseObject[kState].headersList;
      responseObject[kHeaders][kGuard] = "immutable";
      responseObject[kHeaders][kRealm] = relevantRealm;
      return responseObject;
    }
    static json(data = void 0, init3 = {}) {
      webidl.argumentLengthCheck(arguments, 1, { header: "Response.json" });
      if (init3 !== null) {
        init3 = webidl.converters.ResponseInit(init3);
      }
      const bytes = new TextEncoder("utf-8").encode(serializeJavascriptValueToJSONString(data));
      const body2 = extractBody2(bytes);
      const relevantRealm = { settingsObject: {} };
      const responseObject = new Response2();
      responseObject[kRealm] = relevantRealm;
      responseObject[kHeaders][kGuard] = "response";
      responseObject[kHeaders][kRealm] = relevantRealm;
      initializeResponse(responseObject, init3, { body: body2[0], type: "application/json" });
      return responseObject;
    }
    static redirect(url, status = 302) {
      const relevantRealm = { settingsObject: {} };
      webidl.argumentLengthCheck(arguments, 1, { header: "Response.redirect" });
      url = webidl.converters.USVString(url);
      status = webidl.converters["unsigned short"](status);
      let parsedURL;
      try {
        parsedURL = new URL(url, getGlobalOrigin());
      } catch (err) {
        throw Object.assign(new TypeError("Failed to parse URL from " + url), {
          cause: err
        });
      }
      if (!redirectStatus.includes(status)) {
        throw new RangeError("Invalid status code " + status);
      }
      const responseObject = new Response2();
      responseObject[kRealm] = relevantRealm;
      responseObject[kHeaders][kGuard] = "immutable";
      responseObject[kHeaders][kRealm] = relevantRealm;
      responseObject[kState].status = status;
      const value = isomorphicEncode(URLSerializer(parsedURL));
      responseObject[kState].headersList.append("location", value);
      return responseObject;
    }
    constructor(body2 = null, init3 = {}) {
      if (body2 !== null) {
        body2 = webidl.converters.BodyInit(body2);
      }
      init3 = webidl.converters.ResponseInit(init3);
      this[kRealm] = { settingsObject: {} };
      this[kState] = makeResponse({});
      this[kHeaders] = new Headers2();
      this[kHeaders][kGuard] = "response";
      this[kHeaders][kHeadersList] = this[kState].headersList;
      this[kHeaders][kRealm] = this[kRealm];
      let bodyWithType = null;
      if (body2 != null) {
        const [extractedBody, type] = extractBody2(body2);
        bodyWithType = { body: extractedBody, type };
      }
      initializeResponse(this, init3, bodyWithType);
    }
    get type() {
      webidl.brandCheck(this, Response2);
      return this[kState].type;
    }
    get url() {
      webidl.brandCheck(this, Response2);
      const urlList = this[kState].urlList;
      const url = urlList[urlList.length - 1] ?? null;
      if (url === null) {
        return "";
      }
      return URLSerializer(url, true);
    }
    get redirected() {
      webidl.brandCheck(this, Response2);
      return this[kState].urlList.length > 1;
    }
    get status() {
      webidl.brandCheck(this, Response2);
      return this[kState].status;
    }
    get ok() {
      webidl.brandCheck(this, Response2);
      return this[kState].status >= 200 && this[kState].status <= 299;
    }
    get statusText() {
      webidl.brandCheck(this, Response2);
      return this[kState].statusText;
    }
    get headers() {
      webidl.brandCheck(this, Response2);
      return this[kHeaders];
    }
    get body() {
      webidl.brandCheck(this, Response2);
      return this[kState].body ? this[kState].body.stream : null;
    }
    get bodyUsed() {
      webidl.brandCheck(this, Response2);
      return !!this[kState].body && util2.isDisturbed(this[kState].body.stream);
    }
    clone() {
      webidl.brandCheck(this, Response2);
      if (this.bodyUsed || this.body && this.body.locked) {
        throw webidl.errors.exception({
          header: "Response.clone",
          message: "Body has already been consumed."
        });
      }
      const clonedResponse = cloneResponse(this[kState]);
      const clonedResponseObject = new Response2();
      clonedResponseObject[kState] = clonedResponse;
      clonedResponseObject[kRealm] = this[kRealm];
      clonedResponseObject[kHeaders][kHeadersList] = clonedResponse.headersList;
      clonedResponseObject[kHeaders][kGuard] = this[kHeaders][kGuard];
      clonedResponseObject[kHeaders][kRealm] = this[kHeaders][kRealm];
      return clonedResponseObject;
    }
  }
  mixinBody(Response2);
  Object.defineProperties(Response2.prototype, {
    type: kEnumerableProperty2,
    url: kEnumerableProperty2,
    status: kEnumerableProperty2,
    ok: kEnumerableProperty2,
    redirected: kEnumerableProperty2,
    statusText: kEnumerableProperty2,
    headers: kEnumerableProperty2,
    clone: kEnumerableProperty2,
    body: kEnumerableProperty2,
    bodyUsed: kEnumerableProperty2,
    [Symbol.toStringTag]: {
      value: "Response",
      configurable: true
    }
  });
  Object.defineProperties(Response2, {
    json: kEnumerableProperty2,
    redirect: kEnumerableProperty2,
    error: kEnumerableProperty2
  });
  function cloneResponse(response2) {
    if (response2.internalResponse) {
      return filterResponse(cloneResponse(response2.internalResponse), response2.type);
    }
    const newResponse = makeResponse(__spreadProps(__spreadValues({}, response2), { body: null }));
    if (response2.body != null) {
      newResponse.body = cloneBody(response2.body);
    }
    return newResponse;
  }
  function makeResponse(init3) {
    return __spreadProps(__spreadValues({
      aborted: false,
      rangeRequested: false,
      timingAllowPassed: false,
      requestIncludesCredentials: false,
      type: "default",
      status: 200,
      timingInfo: null,
      cacheState: "",
      statusText: ""
    }, init3), {
      headersList: init3.headersList ? new HeadersList(init3.headersList) : new HeadersList(),
      urlList: init3.urlList ? [...init3.urlList] : []
    });
  }
  function makeNetworkError(reason) {
    const isError = isErrorLike(reason);
    return makeResponse({
      type: "error",
      status: 0,
      error: isError ? reason : new Error(reason ? String(reason) : reason, {
        cause: isError ? reason : void 0
      }),
      aborted: reason && reason.name === "AbortError"
    });
  }
  function makeFilteredResponse(response2, state) {
    state = __spreadValues({
      internalResponse: response2
    }, state);
    return new Proxy(response2, {
      get(target, p) {
        return p in state ? state[p] : target[p];
      },
      set(target, p, value) {
        assert2(!(p in state));
        target[p] = value;
        return true;
      }
    });
  }
  function filterResponse(response2, type) {
    if (type === "basic") {
      return makeFilteredResponse(response2, {
        type: "basic",
        headersList: response2.headersList
      });
    } else if (type === "cors") {
      return makeFilteredResponse(response2, {
        type: "cors",
        headersList: response2.headersList
      });
    } else if (type === "opaque") {
      return makeFilteredResponse(response2, {
        type: "opaque",
        urlList: Object.freeze([]),
        status: 0,
        statusText: "",
        body: null
      });
    } else if (type === "opaqueredirect") {
      return makeFilteredResponse(response2, {
        type: "opaqueredirect",
        status: 0,
        statusText: "",
        headersList: [],
        body: null
      });
    } else {
      assert2(false);
    }
  }
  function makeAppropriateNetworkError(fetchParams) {
    assert2(isCancelled(fetchParams));
    return isAborted(fetchParams) ? makeNetworkError(new DOMException("The operation was aborted.", "AbortError")) : makeNetworkError("Request was cancelled.");
  }
  function initializeResponse(response2, init3, body2) {
    if (init3.status !== null && (init3.status < 200 || init3.status > 599)) {
      throw new RangeError('init["status"] must be in the range of 200 to 599, inclusive.');
    }
    if ("statusText" in init3 && init3.statusText != null) {
      if (!isValidReasonPhrase(String(init3.statusText))) {
        throw new TypeError("Invalid statusText");
      }
    }
    if ("status" in init3 && init3.status != null) {
      response2[kState].status = init3.status;
    }
    if ("statusText" in init3 && init3.statusText != null) {
      response2[kState].statusText = init3.statusText;
    }
    if ("headers" in init3 && init3.headers != null) {
      fill(response2[kState].headersList, init3.headers);
    }
    if (body2) {
      if (nullBodyStatus.includes(response2.status)) {
        throw webidl.errors.exception({
          header: "Response constructor",
          message: "Invalid response status code " + response2.status
        });
      }
      response2[kState].body = body2.body;
      if (body2.type != null && !response2[kState].headersList.contains("Content-Type")) {
        response2[kState].headersList.append("content-type", body2.type);
      }
    }
  }
  webidl.converters.ReadableStream = webidl.interfaceConverter(ReadableStream3);
  webidl.converters.FormData = webidl.interfaceConverter(FormData2);
  webidl.converters.URLSearchParams = webidl.interfaceConverter(URLSearchParams);
  webidl.converters.XMLHttpRequestBodyInit = function(V) {
    if (typeof V === "string") {
      return webidl.converters.USVString(V);
    }
    if (isBlobLike2(V)) {
      return webidl.converters.Blob(V, { strict: false });
    }
    if (types.isAnyArrayBuffer(V) || types.isTypedArray(V) || types.isDataView(V)) {
      return webidl.converters.BufferSource(V);
    }
    if (util2.isFormDataLike(V)) {
      return webidl.converters.FormData(V, { strict: false });
    }
    if (V instanceof URLSearchParams) {
      return webidl.converters.URLSearchParams(V);
    }
    return webidl.converters.DOMString(V);
  };
  webidl.converters.BodyInit = function(V) {
    if (V instanceof ReadableStream3) {
      return webidl.converters.ReadableStream(V);
    }
    if (V?.[Symbol.asyncIterator]) {
      return V;
    }
    return webidl.converters.XMLHttpRequestBodyInit(V);
  };
  webidl.converters.ResponseInit = webidl.dictionaryConverter([
    {
      key: "status",
      converter: webidl.converters["unsigned short"],
      defaultValue: 200
    },
    {
      key: "statusText",
      converter: webidl.converters.ByteString,
      defaultValue: ""
    },
    {
      key: "headers",
      converter: webidl.converters.HeadersInit
    }
  ]);
  response = {
    makeNetworkError,
    makeResponse,
    makeAppropriateNetworkError,
    filterResponse,
    Response: Response2
  };
  return response;
}
var request;
var hasRequiredRequest;
function requireRequest() {
  if (hasRequiredRequest)
    return request;
  hasRequiredRequest = 1;
  const { extractBody: extractBody2, mixinBody, cloneBody } = requireBody();
  const { Headers: Headers2, fill: fillHeaders, HeadersList } = requireHeaders();
  const { FinalizationRegistry: FinalizationRegistry2 } = dispatcherWeakref();
  const util2 = util$e;
  const {
    isValidHTTPToken,
    sameOrigin,
    normalizeMethod
  } = requireUtil$1();
  const {
    forbiddenMethods,
    corsSafeListedMethods,
    referrerPolicy,
    requestRedirect,
    requestMode,
    requestCredentials,
    requestCache,
    requestDuplex
  } = requireConstants$1();
  const { kEnumerableProperty: kEnumerableProperty2 } = util2;
  const { kHeaders, kSignal: kSignal2, kState, kGuard, kRealm } = requireSymbols$1();
  const { webidl } = requireWebidl();
  const { getGlobalOrigin } = requireGlobal();
  const { URLSerializer } = requireDataURL();
  const { kHeadersList } = symbols$2;
  const assert2 = import_assert.default;
  let TransformStream2 = globalThis.TransformStream;
  const kInit = Symbol("init");
  const requestFinalizer = new FinalizationRegistry2(({ signal, abort: abort2 }) => {
    signal.removeEventListener("abort", abort2);
  });
  class Request4 {
    constructor(input, init3 = {}) {
      if (input === kInit) {
        return;
      }
      webidl.argumentLengthCheck(arguments, 1, { header: "Request constructor" });
      input = webidl.converters.RequestInfo(input);
      init3 = webidl.converters.RequestInit(init3);
      this[kRealm] = {
        settingsObject: {
          baseUrl: getGlobalOrigin()
        }
      };
      let request2 = null;
      let fallbackMode = null;
      const baseUrl = this[kRealm].settingsObject.baseUrl;
      let signal = null;
      if (typeof input === "string") {
        let parsedURL;
        try {
          parsedURL = new URL(input, baseUrl);
        } catch (err) {
          throw new TypeError("Failed to parse URL from " + input, { cause: err });
        }
        if (parsedURL.username || parsedURL.password) {
          throw new TypeError("Request cannot be constructed from a URL that includes credentials: " + input);
        }
        request2 = makeRequest({ urlList: [parsedURL] });
        fallbackMode = "cors";
      } else {
        assert2(input instanceof Request4);
        request2 = input[kState];
        signal = input[kSignal2];
      }
      const origin = this[kRealm].settingsObject.origin;
      let window2 = "client";
      if (request2.window?.constructor?.name === "EnvironmentSettingsObject" && sameOrigin(request2.window, origin)) {
        window2 = request2.window;
      }
      if (init3.window !== void 0 && init3.window != null) {
        throw new TypeError(`'window' option '${window2}' must be null`);
      }
      if (init3.window !== void 0) {
        window2 = "no-window";
      }
      request2 = makeRequest({
        method: request2.method,
        headersList: request2.headersList,
        unsafeRequest: request2.unsafeRequest,
        client: this[kRealm].settingsObject,
        window: window2,
        priority: request2.priority,
        origin: request2.origin,
        referrer: request2.referrer,
        referrerPolicy: request2.referrerPolicy,
        mode: request2.mode,
        credentials: request2.credentials,
        cache: request2.cache,
        redirect: request2.redirect,
        integrity: request2.integrity,
        keepalive: request2.keepalive,
        reloadNavigation: request2.reloadNavigation,
        historyNavigation: request2.historyNavigation,
        urlList: [...request2.urlList]
      });
      if (Object.keys(init3).length > 0) {
        if (request2.mode === "navigate") {
          request2.mode = "same-origin";
        }
        request2.reloadNavigation = false;
        request2.historyNavigation = false;
        request2.origin = "client";
        request2.referrer = "client";
        request2.referrerPolicy = "";
        request2.url = request2.urlList[request2.urlList.length - 1];
        request2.urlList = [request2.url];
      }
      if (init3.referrer !== void 0) {
        const referrer = init3.referrer;
        if (referrer === "") {
          request2.referrer = "no-referrer";
        } else {
          let parsedReferrer;
          try {
            parsedReferrer = new URL(referrer, baseUrl);
          } catch (err) {
            throw new TypeError(`Referrer "${referrer}" is not a valid URL.`, { cause: err });
          }
          request2.referrer = parsedReferrer;
        }
      }
      if (init3.referrerPolicy !== void 0) {
        request2.referrerPolicy = init3.referrerPolicy;
      }
      let mode;
      if (init3.mode !== void 0) {
        mode = init3.mode;
      } else {
        mode = fallbackMode;
      }
      if (mode === "navigate") {
        throw webidl.errors.exception({
          header: "Request constructor",
          message: "invalid request mode navigate."
        });
      }
      if (mode != null) {
        request2.mode = mode;
      }
      if (init3.credentials !== void 0) {
        request2.credentials = init3.credentials;
      }
      if (init3.cache !== void 0) {
        request2.cache = init3.cache;
      }
      if (request2.cache === "only-if-cached" && request2.mode !== "same-origin") {
        throw new TypeError("'only-if-cached' can be set only with 'same-origin' mode");
      }
      if (init3.redirect !== void 0) {
        request2.redirect = init3.redirect;
      }
      if (init3.integrity !== void 0 && init3.integrity != null) {
        request2.integrity = String(init3.integrity);
      }
      if (init3.keepalive !== void 0) {
        request2.keepalive = Boolean(init3.keepalive);
      }
      if (init3.method !== void 0) {
        let method = init3.method;
        if (!isValidHTTPToken(init3.method)) {
          throw TypeError(`'${init3.method}' is not a valid HTTP method.`);
        }
        if (forbiddenMethods.indexOf(method.toUpperCase()) !== -1) {
          throw TypeError(`'${init3.method}' HTTP method is unsupported.`);
        }
        method = normalizeMethod(init3.method);
        request2.method = method;
      }
      if (init3.signal !== void 0) {
        signal = init3.signal;
      }
      this[kState] = request2;
      const ac = new AbortController();
      this[kSignal2] = ac.signal;
      this[kSignal2][kRealm] = this[kRealm];
      if (signal != null) {
        if (!signal || typeof signal.aborted !== "boolean" || typeof signal.addEventListener !== "function") {
          throw new TypeError("Failed to construct 'Request': member signal is not of type AbortSignal.");
        }
        if (signal.aborted) {
          ac.abort(signal.reason);
        } else {
          const abort2 = () => ac.abort(signal.reason);
          signal.addEventListener("abort", abort2, { once: true });
          requestFinalizer.register(this, { signal, abort: abort2 });
        }
      }
      this[kHeaders] = new Headers2();
      this[kHeaders][kHeadersList] = request2.headersList;
      this[kHeaders][kGuard] = "request";
      this[kHeaders][kRealm] = this[kRealm];
      if (mode === "no-cors") {
        if (!corsSafeListedMethods.includes(request2.method)) {
          throw new TypeError(`'${request2.method} is unsupported in no-cors mode.`);
        }
        this[kHeaders][kGuard] = "request-no-cors";
      }
      if (Object.keys(init3).length !== 0) {
        let headers2 = new Headers2(this[kHeaders]);
        if (init3.headers !== void 0) {
          headers2 = init3.headers;
        }
        this[kHeaders][kHeadersList].clear();
        if (headers2.constructor.name === "Headers") {
          for (const [key2, val] of headers2) {
            this[kHeaders].append(key2, val);
          }
        } else {
          fillHeaders(this[kHeaders], headers2);
        }
      }
      const inputBody = input instanceof Request4 ? input[kState].body : null;
      if ((init3.body !== void 0 && init3.body != null || inputBody != null) && (request2.method === "GET" || request2.method === "HEAD")) {
        throw new TypeError("Request with GET/HEAD method cannot have body.");
      }
      let initBody = null;
      if (init3.body !== void 0 && init3.body != null) {
        const [extractedBody, contentType] = extractBody2(init3.body, request2.keepalive);
        initBody = extractedBody;
        if (contentType && !this[kHeaders][kHeadersList].contains("content-type")) {
          this[kHeaders].append("content-type", contentType);
        }
      }
      const inputOrInitBody = initBody ?? inputBody;
      if (inputOrInitBody != null && inputOrInitBody.source == null) {
        if (initBody != null && init3.duplex == null) {
          throw new TypeError("RequestInit: duplex option is required when sending a body.");
        }
        if (request2.mode !== "same-origin" && request2.mode !== "cors") {
          throw new TypeError('If request is made from ReadableStream, mode should be "same-origin" or "cors"');
        }
        request2.useCORSPreflightFlag = true;
      }
      let finalBody = inputOrInitBody;
      if (initBody == null && inputBody != null) {
        if (util2.isDisturbed(inputBody.stream) || inputBody.stream.locked) {
          throw new TypeError("Cannot construct a Request with a Request object that has already been used.");
        }
        if (!TransformStream2) {
          TransformStream2 = import_web.default.TransformStream;
        }
        const identityTransform = new TransformStream2();
        inputBody.stream.pipeThrough(identityTransform);
        finalBody = {
          source: inputBody.source,
          length: inputBody.length,
          stream: identityTransform.readable
        };
      }
      this[kState].body = finalBody;
    }
    get method() {
      webidl.brandCheck(this, Request4);
      return this[kState].method;
    }
    get url() {
      webidl.brandCheck(this, Request4);
      return URLSerializer(this[kState].url);
    }
    get headers() {
      webidl.brandCheck(this, Request4);
      return this[kHeaders];
    }
    get destination() {
      webidl.brandCheck(this, Request4);
      return this[kState].destination;
    }
    get referrer() {
      webidl.brandCheck(this, Request4);
      if (this[kState].referrer === "no-referrer") {
        return "";
      }
      if (this[kState].referrer === "client") {
        return "about:client";
      }
      return this[kState].referrer.toString();
    }
    get referrerPolicy() {
      webidl.brandCheck(this, Request4);
      return this[kState].referrerPolicy;
    }
    get mode() {
      webidl.brandCheck(this, Request4);
      return this[kState].mode;
    }
    get credentials() {
      return this[kState].credentials;
    }
    get cache() {
      webidl.brandCheck(this, Request4);
      return this[kState].cache;
    }
    get redirect() {
      webidl.brandCheck(this, Request4);
      return this[kState].redirect;
    }
    get integrity() {
      webidl.brandCheck(this, Request4);
      return this[kState].integrity;
    }
    get keepalive() {
      webidl.brandCheck(this, Request4);
      return this[kState].keepalive;
    }
    get isReloadNavigation() {
      webidl.brandCheck(this, Request4);
      return this[kState].reloadNavigation;
    }
    get isHistoryNavigation() {
      webidl.brandCheck(this, Request4);
      return this[kState].historyNavigation;
    }
    get signal() {
      webidl.brandCheck(this, Request4);
      return this[kSignal2];
    }
    get body() {
      webidl.brandCheck(this, Request4);
      return this[kState].body ? this[kState].body.stream : null;
    }
    get bodyUsed() {
      webidl.brandCheck(this, Request4);
      return !!this[kState].body && util2.isDisturbed(this[kState].body.stream);
    }
    get duplex() {
      webidl.brandCheck(this, Request4);
      return "half";
    }
    clone() {
      webidl.brandCheck(this, Request4);
      if (this.bodyUsed || this.body?.locked) {
        throw new TypeError("unusable");
      }
      const clonedRequest = cloneRequest(this[kState]);
      const clonedRequestObject = new Request4(kInit);
      clonedRequestObject[kState] = clonedRequest;
      clonedRequestObject[kRealm] = this[kRealm];
      clonedRequestObject[kHeaders] = new Headers2();
      clonedRequestObject[kHeaders][kHeadersList] = clonedRequest.headersList;
      clonedRequestObject[kHeaders][kGuard] = this[kHeaders][kGuard];
      clonedRequestObject[kHeaders][kRealm] = this[kHeaders][kRealm];
      const ac = new AbortController();
      if (this.signal.aborted) {
        ac.abort(this.signal.reason);
      } else {
        this.signal.addEventListener("abort", () => {
          ac.abort(this.signal.reason);
        }, { once: true });
      }
      clonedRequestObject[kSignal2] = ac.signal;
      return clonedRequestObject;
    }
  }
  mixinBody(Request4);
  function makeRequest(init3) {
    const request2 = __spreadProps(__spreadValues({
      method: "GET",
      localURLsOnly: false,
      unsafeRequest: false,
      body: null,
      client: null,
      reservedClient: null,
      replacesClientId: "",
      window: "client",
      keepalive: false,
      serviceWorkers: "all",
      initiator: "",
      destination: "",
      priority: null,
      origin: "client",
      policyContainer: "client",
      referrer: "client",
      referrerPolicy: "",
      mode: "no-cors",
      useCORSPreflightFlag: false,
      credentials: "same-origin",
      useCredentials: false,
      cache: "default",
      redirect: "follow",
      integrity: "",
      cryptoGraphicsNonceMetadata: "",
      parserMetadata: "",
      reloadNavigation: false,
      historyNavigation: false,
      userActivation: false,
      taintedOrigin: false,
      redirectCount: 0,
      responseTainting: "basic",
      preventNoCacheCacheControlHeaderModification: false,
      done: false,
      timingAllowFailed: false
    }, init3), {
      headersList: init3.headersList ? new HeadersList(init3.headersList) : new HeadersList()
    });
    request2.url = request2.urlList[0];
    return request2;
  }
  function cloneRequest(request2) {
    const newRequest = makeRequest(__spreadProps(__spreadValues({}, request2), { body: null }));
    if (request2.body != null) {
      newRequest.body = cloneBody(request2.body);
    }
    return newRequest;
  }
  Object.defineProperties(Request4.prototype, {
    method: kEnumerableProperty2,
    url: kEnumerableProperty2,
    headers: kEnumerableProperty2,
    redirect: kEnumerableProperty2,
    clone: kEnumerableProperty2,
    signal: kEnumerableProperty2,
    duplex: kEnumerableProperty2,
    destination: kEnumerableProperty2,
    body: kEnumerableProperty2,
    bodyUsed: kEnumerableProperty2,
    isHistoryNavigation: kEnumerableProperty2,
    isReloadNavigation: kEnumerableProperty2,
    keepalive: kEnumerableProperty2,
    integrity: kEnumerableProperty2,
    cache: kEnumerableProperty2,
    credentials: kEnumerableProperty2,
    attribute: kEnumerableProperty2,
    referrerPolicy: kEnumerableProperty2,
    referrer: kEnumerableProperty2,
    mode: kEnumerableProperty2,
    [Symbol.toStringTag]: {
      value: "Request",
      configurable: true
    }
  });
  webidl.converters.Request = webidl.interfaceConverter(Request4);
  webidl.converters.RequestInfo = function(V) {
    if (typeof V === "string") {
      return webidl.converters.USVString(V);
    }
    if (V instanceof Request4) {
      return webidl.converters.Request(V);
    }
    return webidl.converters.USVString(V);
  };
  webidl.converters.AbortSignal = webidl.interfaceConverter(AbortSignal);
  webidl.converters.RequestInit = webidl.dictionaryConverter([
    {
      key: "method",
      converter: webidl.converters.ByteString
    },
    {
      key: "headers",
      converter: webidl.converters.HeadersInit
    },
    {
      key: "body",
      converter: webidl.nullableConverter(webidl.converters.BodyInit)
    },
    {
      key: "referrer",
      converter: webidl.converters.USVString
    },
    {
      key: "referrerPolicy",
      converter: webidl.converters.DOMString,
      allowedValues: referrerPolicy
    },
    {
      key: "mode",
      converter: webidl.converters.DOMString,
      allowedValues: requestMode
    },
    {
      key: "credentials",
      converter: webidl.converters.DOMString,
      allowedValues: requestCredentials
    },
    {
      key: "cache",
      converter: webidl.converters.DOMString,
      allowedValues: requestCache
    },
    {
      key: "redirect",
      converter: webidl.converters.DOMString,
      allowedValues: requestRedirect
    },
    {
      key: "integrity",
      converter: webidl.converters.DOMString
    },
    {
      key: "keepalive",
      converter: webidl.converters.boolean
    },
    {
      key: "signal",
      converter: webidl.nullableConverter((signal) => webidl.converters.AbortSignal(signal, { strict: false }))
    },
    {
      key: "window",
      converter: webidl.converters.any
    },
    {
      key: "duplex",
      converter: webidl.converters.DOMString,
      allowedValues: requestDuplex
    }
  ]);
  request = { Request: Request4, makeRequest };
  return request;
}
var fetch_1;
var hasRequiredFetch;
function requireFetch() {
  if (hasRequiredFetch)
    return fetch_1;
  hasRequiredFetch = 1;
  const {
    Response: Response2,
    makeNetworkError,
    makeAppropriateNetworkError,
    filterResponse,
    makeResponse
  } = requireResponse();
  const { Headers: Headers2 } = requireHeaders();
  const { Request: Request4, makeRequest } = requireRequest();
  const zlib = import_zlib.default;
  const {
    bytesMatch,
    makePolicyContainer,
    clonePolicyContainer,
    requestBadPort,
    TAOCheck,
    appendRequestOriginHeader,
    responseLocationURL,
    requestCurrentURL,
    setRequestReferrerPolicyOnRedirect,
    tryUpgradeRequestToAPotentiallyTrustworthyURL,
    createOpaqueTimingInfo,
    appendFetchMetadata,
    corsCheck,
    crossOriginResourcePolicyCheck,
    determineRequestsReferrer,
    coarsenedSharedCurrentTime,
    createDeferredPromise,
    isBlobLike: isBlobLike2,
    sameOrigin,
    isCancelled,
    isAborted,
    isErrorLike,
    fullyReadBody,
    readableStreamClose,
    isomorphicEncode
  } = requireUtil$1();
  const { kState, kHeaders, kGuard, kRealm, kHeadersCaseInsensitive } = requireSymbols$1();
  const assert2 = import_assert.default;
  const { safelyExtractBody } = requireBody();
  const {
    redirectStatus,
    nullBodyStatus,
    safeMethods,
    requestBodyHeader,
    subresource,
    DOMException
  } = requireConstants$1();
  const { kHeadersList } = symbols$2;
  const EE2 = import_events.default;
  const { Readable: Readable2, pipeline: pipeline2 } = import_stream.default;
  const { isErrored: isErrored2, isReadable: isReadable2 } = util$e;
  const { dataURLProcessor, serializeAMimeType } = requireDataURL();
  const { TransformStream: TransformStream2 } = import_web.default;
  const { getGlobalDispatcher: getGlobalDispatcher2 } = requireUndici();
  const { webidl } = requireWebidl();
  let resolveObjectURL;
  let ReadableStream3 = globalThis.ReadableStream;
  const nodeVersion2 = process.versions.node.split(".");
  const nodeMajor2 = Number(nodeVersion2[0]);
  const nodeMinor2 = Number(nodeVersion2[1]);
  class Fetch extends EE2 {
    constructor(dispatcher2) {
      super();
      this.dispatcher = dispatcher2;
      this.connection = null;
      this.dump = false;
      this.state = "ongoing";
      this.setMaxListeners(21);
    }
    terminate(reason) {
      if (this.state !== "ongoing") {
        return;
      }
      this.state = "terminated";
      this.connection?.destroy(reason);
      this.emit("terminated", reason);
    }
    abort(error2) {
      if (this.state !== "ongoing") {
        return;
      }
      this.state = "aborted";
      if (!error2) {
        error2 = new DOMException("The operation was aborted.", "AbortError");
      }
      this.serializedAbortReason = error2;
      this.connection?.destroy(error2);
      this.emit("terminated", error2);
    }
  }
  async function fetch2(input, init3 = {}) {
    webidl.argumentLengthCheck(arguments, 1, { header: "globalThis.fetch" });
    const p = createDeferredPromise();
    let requestObject;
    try {
      requestObject = new Request4(input, init3);
    } catch (e) {
      p.reject(e);
      return p.promise;
    }
    const request2 = requestObject[kState];
    if (requestObject.signal.aborted) {
      abortFetch(p, request2, null, requestObject.signal.reason);
      return p.promise;
    }
    const globalObject = request2.client.globalObject;
    if (globalObject?.constructor?.name === "ServiceWorkerGlobalScope") {
      request2.serviceWorkers = "none";
    }
    let responseObject = null;
    const relevantRealm = null;
    let locallyAborted = false;
    let controller = null;
    requestObject.signal.addEventListener("abort", () => {
      locallyAborted = true;
      abortFetch(p, request2, responseObject, requestObject.signal.reason);
      if (controller != null) {
        controller.abort();
      }
    }, { once: true });
    const handleFetchDone = (response2) => finalizeAndReportTiming(response2, "fetch");
    const processResponse = (response2) => {
      if (locallyAborted) {
        return;
      }
      if (response2.aborted) {
        abortFetch(p, request2, responseObject, controller.serializedAbortReason);
        return;
      }
      if (response2.type === "error") {
        p.reject(Object.assign(new TypeError("fetch failed"), { cause: response2.error }));
        return;
      }
      responseObject = new Response2();
      responseObject[kState] = response2;
      responseObject[kRealm] = relevantRealm;
      responseObject[kHeaders][kHeadersList] = response2.headersList;
      responseObject[kHeaders][kGuard] = "immutable";
      responseObject[kHeaders][kRealm] = relevantRealm;
      p.resolve(responseObject);
    };
    controller = fetching({
      request: request2,
      processResponseEndOfBody: handleFetchDone,
      processResponse,
      dispatcher: init3.dispatcher ?? getGlobalDispatcher2()
    });
    return p.promise;
  }
  function finalizeAndReportTiming(response2, initiatorType = "other") {
    if (response2.type === "error" && response2.aborted) {
      return;
    }
    if (!response2.urlList?.length) {
      return;
    }
    const originalURL = response2.urlList[0];
    let timingInfo = response2.timingInfo;
    let cacheState = response2.cacheState;
    if (!/^https?:/.test(originalURL.protocol)) {
      return;
    }
    if (timingInfo === null) {
      return;
    }
    if (!timingInfo.timingAllowPassed) {
      timingInfo = createOpaqueTimingInfo({
        startTime: timingInfo.startTime
      });
      cacheState = "";
    }
    response2.timingInfo.endTime = coarsenedSharedCurrentTime();
    response2.timingInfo = timingInfo;
    markResourceTiming(timingInfo, originalURL, initiatorType, globalThis, cacheState);
  }
  function markResourceTiming(timingInfo, originalURL, initiatorType, globalThis2, cacheState) {
    if (nodeMajor2 >= 18 && nodeMinor2 >= 2) {
      performance.markResourceTiming(timingInfo, originalURL, initiatorType, globalThis2, cacheState);
    }
  }
  function abortFetch(p, request2, responseObject, error2) {
    if (!error2) {
      error2 = new DOMException("The operation was aborted.", "AbortError");
    }
    p.reject(error2);
    if (request2.body != null && isReadable2(request2.body?.stream)) {
      request2.body.stream.cancel(error2).catch((err) => {
        if (err.code === "ERR_INVALID_STATE") {
          return;
        }
        throw err;
      });
    }
    if (responseObject == null) {
      return;
    }
    const response2 = responseObject[kState];
    if (response2.body != null && isReadable2(response2.body?.stream)) {
      response2.body.stream.cancel(error2).catch((err) => {
        if (err.code === "ERR_INVALID_STATE") {
          return;
        }
        throw err;
      });
    }
  }
  function fetching({
    request: request2,
    processRequestBodyChunkLength,
    processRequestEndOfBody,
    processResponse,
    processResponseEndOfBody,
    processResponseConsumeBody,
    useParallelQueue = false,
    dispatcher: dispatcher2
  }) {
    let taskDestination = null;
    let crossOriginIsolatedCapability = false;
    if (request2.client != null) {
      taskDestination = request2.client.globalObject;
      crossOriginIsolatedCapability = request2.client.crossOriginIsolatedCapability;
    }
    const currenTime = coarsenedSharedCurrentTime(crossOriginIsolatedCapability);
    const timingInfo = createOpaqueTimingInfo({
      startTime: currenTime
    });
    const fetchParams = {
      controller: new Fetch(dispatcher2),
      request: request2,
      timingInfo,
      processRequestBodyChunkLength,
      processRequestEndOfBody,
      processResponse,
      processResponseConsumeBody,
      processResponseEndOfBody,
      taskDestination,
      crossOriginIsolatedCapability
    };
    assert2(!request2.body || request2.body.stream);
    if (request2.window === "client") {
      request2.window = request2.client?.globalObject?.constructor?.name === "Window" ? request2.client : "no-window";
    }
    if (request2.origin === "client") {
      request2.origin = request2.client?.origin;
    }
    if (request2.policyContainer === "client") {
      if (request2.client != null) {
        request2.policyContainer = clonePolicyContainer(request2.client.policyContainer);
      } else {
        request2.policyContainer = makePolicyContainer();
      }
    }
    if (!request2.headersList.contains("accept")) {
      const value = "*/*";
      request2.headersList.append("accept", value);
    }
    if (!request2.headersList.contains("accept-language")) {
      request2.headersList.append("accept-language", "*");
    }
    if (request2.priority === null)
      ;
    if (subresource.includes(request2.destination))
      ;
    mainFetch(fetchParams).catch((err) => {
      fetchParams.controller.terminate(err);
    });
    return fetchParams.controller;
  }
  async function mainFetch(fetchParams, recursive = false) {
    const request2 = fetchParams.request;
    let response2 = null;
    if (request2.localURLsOnly && !/^(about|blob|data):/.test(requestCurrentURL(request2).protocol)) {
      response2 = makeNetworkError("local URLs only");
    }
    tryUpgradeRequestToAPotentiallyTrustworthyURL(request2);
    if (requestBadPort(request2) === "blocked") {
      response2 = makeNetworkError("bad port");
    }
    if (request2.referrerPolicy === "") {
      request2.referrerPolicy = request2.policyContainer.referrerPolicy;
    }
    if (request2.referrer !== "no-referrer") {
      request2.referrer = determineRequestsReferrer(request2);
    }
    if (response2 === null) {
      response2 = await (async () => {
        const currentURL = requestCurrentURL(request2);
        if (sameOrigin(currentURL, request2.url) && request2.responseTainting === "basic" || currentURL.protocol === "data:" || (request2.mode === "navigate" || request2.mode === "websocket")) {
          request2.responseTainting = "basic";
          return await schemeFetch(fetchParams);
        }
        if (request2.mode === "same-origin") {
          return makeNetworkError('request mode cannot be "same-origin"');
        }
        if (request2.mode === "no-cors") {
          if (request2.redirect !== "follow") {
            return makeNetworkError('redirect mode cannot be "follow" for "no-cors" request');
          }
          request2.responseTainting = "opaque";
          return await schemeFetch(fetchParams);
        }
        if (!/^https?:/.test(requestCurrentURL(request2).protocol)) {
          return makeNetworkError("URL scheme must be a HTTP(S) scheme");
        }
        request2.responseTainting = "cors";
        return await httpFetch(fetchParams);
      })();
    }
    if (recursive) {
      return response2;
    }
    if (response2.status !== 0 && !response2.internalResponse) {
      if (request2.responseTainting === "cors")
        ;
      if (request2.responseTainting === "basic") {
        response2 = filterResponse(response2, "basic");
      } else if (request2.responseTainting === "cors") {
        response2 = filterResponse(response2, "cors");
      } else if (request2.responseTainting === "opaque") {
        response2 = filterResponse(response2, "opaque");
      } else {
        assert2(false);
      }
    }
    let internalResponse = response2.status === 0 ? response2 : response2.internalResponse;
    if (internalResponse.urlList.length === 0) {
      internalResponse.urlList.push(...request2.urlList);
    }
    if (!request2.timingAllowFailed) {
      response2.timingAllowPassed = true;
    }
    if (response2.type === "opaque" && internalResponse.status === 206 && internalResponse.rangeRequested && !request2.headers.contains("range")) {
      response2 = internalResponse = makeNetworkError();
    }
    if (response2.status !== 0 && (request2.method === "HEAD" || request2.method === "CONNECT" || nullBodyStatus.includes(internalResponse.status))) {
      internalResponse.body = null;
      fetchParams.controller.dump = true;
    }
    if (request2.integrity) {
      const processBodyError = (reason) => fetchFinale(fetchParams, makeNetworkError(reason));
      if (request2.responseTainting === "opaque" || response2.body == null) {
        processBodyError(response2.error);
        return;
      }
      const processBody = (bytes) => {
        if (!bytesMatch(bytes, request2.integrity)) {
          processBodyError("integrity mismatch");
          return;
        }
        response2.body = safelyExtractBody(bytes)[0];
        fetchFinale(fetchParams, response2);
      };
      await fullyReadBody(response2.body, processBody, processBodyError);
    } else {
      fetchFinale(fetchParams, response2);
    }
  }
  async function schemeFetch(fetchParams) {
    if (isCancelled(fetchParams) && fetchParams.request.redirectCount === 0) {
      return makeAppropriateNetworkError(fetchParams);
    }
    const { request: request2 } = fetchParams;
    const { protocol: scheme } = requestCurrentURL(request2);
    switch (scheme) {
      case "about:": {
        return makeNetworkError("about scheme is not supported");
      }
      case "blob:": {
        if (!resolveObjectURL) {
          resolveObjectURL = import_buffer.default.resolveObjectURL;
        }
        const blobURLEntry = requestCurrentURL(request2);
        if (blobURLEntry.search.length !== 0) {
          return makeNetworkError("NetworkError when attempting to fetch resource.");
        }
        const blobURLEntryObject = resolveObjectURL(blobURLEntry.toString());
        if (request2.method !== "GET" || !isBlobLike2(blobURLEntryObject)) {
          return makeNetworkError("invalid method");
        }
        const bodyWithType = safelyExtractBody(blobURLEntryObject);
        const body2 = bodyWithType[0];
        const length = isomorphicEncode(`${body2.length}`);
        const type = bodyWithType[1] ?? "";
        const response2 = makeResponse({
          statusText: "OK",
          headersList: [
            ["content-length", { name: "Content-Length", value: length }],
            ["content-type", { name: "Content-Type", value: type }]
          ]
        });
        response2.body = body2;
        return response2;
      }
      case "data:": {
        const currentURL = requestCurrentURL(request2);
        const dataURLStruct = dataURLProcessor(currentURL);
        if (dataURLStruct === "failure") {
          return makeNetworkError("failed to fetch the data URL");
        }
        const mimeType = serializeAMimeType(dataURLStruct.mimeType);
        return makeResponse({
          statusText: "OK",
          headersList: [
            ["content-type", { name: "Content-Type", value: mimeType }]
          ],
          body: safelyExtractBody(dataURLStruct.body)[0]
        });
      }
      case "file:": {
        return makeNetworkError("not implemented... yet...");
      }
      case "http:":
      case "https:": {
        return await httpFetch(fetchParams).catch((err) => makeNetworkError(err));
      }
      default: {
        return makeNetworkError("unknown scheme");
      }
    }
  }
  function finalizeResponse(fetchParams, response2) {
    fetchParams.request.done = true;
    if (fetchParams.processResponseDone != null) {
      queueMicrotask(() => fetchParams.processResponseDone(response2));
    }
  }
  async function fetchFinale(fetchParams, response2) {
    if (response2.type === "error") {
      response2.urlList = [fetchParams.request.urlList[0]];
      response2.timingInfo = createOpaqueTimingInfo({
        startTime: fetchParams.timingInfo.startTime
      });
    }
    const processResponseEndOfBody = () => {
      fetchParams.request.done = true;
      if (fetchParams.processResponseEndOfBody != null) {
        queueMicrotask(() => fetchParams.processResponseEndOfBody(response2));
      }
    };
    if (fetchParams.processResponse != null) {
      queueMicrotask(() => fetchParams.processResponse(response2));
    }
    if (response2.body == null) {
      processResponseEndOfBody();
    } else {
      const identityTransformAlgorithm = (chunk, controller) => {
        controller.enqueue(chunk);
      };
      const transformStream = new TransformStream2({
        start() {
        },
        transform: identityTransformAlgorithm,
        flush: processResponseEndOfBody
      }, {
        size() {
          return 1;
        }
      }, {
        size() {
          return 1;
        }
      });
      response2.body = { stream: response2.body.stream.pipeThrough(transformStream) };
    }
    if (fetchParams.processResponseConsumeBody != null) {
      const processBody = (nullOrBytes) => fetchParams.processResponseConsumeBody(response2, nullOrBytes);
      const processBodyError = (failure) => fetchParams.processResponseConsumeBody(response2, failure);
      if (response2.body == null) {
        queueMicrotask(() => processBody(null));
      } else {
        await fullyReadBody(response2.body, processBody, processBodyError);
      }
    }
  }
  async function httpFetch(fetchParams) {
    const request2 = fetchParams.request;
    let response2 = null;
    let actualResponse = null;
    const timingInfo = fetchParams.timingInfo;
    if (request2.serviceWorkers === "all")
      ;
    if (response2 === null) {
      if (request2.redirect === "follow") {
        request2.serviceWorkers = "none";
      }
      actualResponse = response2 = await httpNetworkOrCacheFetch(fetchParams);
      if (request2.responseTainting === "cors" && corsCheck(request2, response2) === "failure") {
        return makeNetworkError("cors failure");
      }
      if (TAOCheck(request2, response2) === "failure") {
        request2.timingAllowFailed = true;
      }
    }
    if ((request2.responseTainting === "opaque" || response2.type === "opaque") && crossOriginResourcePolicyCheck(request2.origin, request2.client, request2.destination, actualResponse) === "blocked") {
      return makeNetworkError("blocked");
    }
    if (redirectStatus.includes(actualResponse.status)) {
      if (request2.redirect !== "manual") {
        fetchParams.controller.connection.destroy();
      }
      if (request2.redirect === "error") {
        response2 = makeNetworkError("unexpected redirect");
      } else if (request2.redirect === "manual") {
        response2 = actualResponse;
      } else if (request2.redirect === "follow") {
        response2 = await httpRedirectFetch(fetchParams, response2);
      } else {
        assert2(false);
      }
    }
    response2.timingInfo = timingInfo;
    return response2;
  }
  async function httpRedirectFetch(fetchParams, response2) {
    const request2 = fetchParams.request;
    const actualResponse = response2.internalResponse ? response2.internalResponse : response2;
    let locationURL;
    try {
      locationURL = responseLocationURL(actualResponse, requestCurrentURL(request2).hash);
      if (locationURL == null) {
        return response2;
      }
    } catch (err) {
      return makeNetworkError(err);
    }
    if (!/^https?:/.test(locationURL.protocol)) {
      return makeNetworkError("URL scheme must be a HTTP(S) scheme");
    }
    if (request2.redirectCount === 20) {
      return makeNetworkError("redirect count exceeded");
    }
    request2.redirectCount += 1;
    if (request2.mode === "cors" && (locationURL.username || locationURL.password) && !sameOrigin(request2, locationURL)) {
      return makeNetworkError('cross origin not allowed for request mode "cors"');
    }
    if (request2.responseTainting === "cors" && (locationURL.username || locationURL.password)) {
      return makeNetworkError('URL cannot contain credentials for request mode "cors"');
    }
    if (actualResponse.status !== 303 && request2.body != null && request2.body.source == null) {
      return makeNetworkError();
    }
    if ([301, 302].includes(actualResponse.status) && request2.method === "POST" || actualResponse.status === 303 && !["GET", "HEAD"].includes(request2.method)) {
      request2.method = "GET";
      request2.body = null;
      for (const headerName of requestBodyHeader) {
        request2.headersList.delete(headerName);
      }
    }
    if (!sameOrigin(requestCurrentURL(request2), locationURL)) {
      request2.headersList.delete("authorization");
    }
    if (request2.body != null) {
      assert2(request2.body.source);
      request2.body = safelyExtractBody(request2.body.source)[0];
    }
    const timingInfo = fetchParams.timingInfo;
    timingInfo.redirectEndTime = timingInfo.postRedirectStartTime = coarsenedSharedCurrentTime(fetchParams.crossOriginIsolatedCapability);
    if (timingInfo.redirectStartTime === 0) {
      timingInfo.redirectStartTime = timingInfo.startTime;
    }
    request2.urlList.push(locationURL);
    setRequestReferrerPolicyOnRedirect(request2, actualResponse);
    return mainFetch(fetchParams, true);
  }
  async function httpNetworkOrCacheFetch(fetchParams, isAuthenticationFetch = false, isNewConnectionFetch = false) {
    const request2 = fetchParams.request;
    let httpFetchParams = null;
    let httpRequest = null;
    let response2 = null;
    if (request2.window === "no-window" && request2.redirect === "error") {
      httpFetchParams = fetchParams;
      httpRequest = request2;
    } else {
      httpRequest = makeRequest(request2);
      httpFetchParams = __spreadValues({}, fetchParams);
      httpFetchParams.request = httpRequest;
    }
    const includeCredentials = request2.credentials === "include" || request2.credentials === "same-origin" && request2.responseTainting === "basic";
    const contentLength = httpRequest.body ? httpRequest.body.length : null;
    let contentLengthHeaderValue = null;
    if (httpRequest.body == null && ["POST", "PUT"].includes(httpRequest.method)) {
      contentLengthHeaderValue = "0";
    }
    if (contentLength != null) {
      contentLengthHeaderValue = isomorphicEncode(`${contentLength}`);
    }
    if (contentLengthHeaderValue != null) {
      httpRequest.headersList.append("content-length", contentLengthHeaderValue);
    }
    if (contentLength != null && httpRequest.keepalive)
      ;
    if (httpRequest.referrer instanceof URL) {
      httpRequest.headersList.append("referer", isomorphicEncode(httpRequest.referrer.href));
    }
    appendRequestOriginHeader(httpRequest);
    appendFetchMetadata(httpRequest);
    if (!httpRequest.headersList.contains("user-agent")) {
      httpRequest.headersList.append("user-agent", "undici");
    }
    if (httpRequest.cache === "default" && (httpRequest.headersList.contains("if-modified-since") || httpRequest.headersList.contains("if-none-match") || httpRequest.headersList.contains("if-unmodified-since") || httpRequest.headersList.contains("if-match") || httpRequest.headersList.contains("if-range"))) {
      httpRequest.cache = "no-store";
    }
    if (httpRequest.cache === "no-cache" && !httpRequest.preventNoCacheCacheControlHeaderModification && !httpRequest.headersList.contains("cache-control")) {
      httpRequest.headersList.append("cache-control", "max-age=0");
    }
    if (httpRequest.cache === "no-store" || httpRequest.cache === "reload") {
      if (!httpRequest.headersList.contains("pragma")) {
        httpRequest.headersList.append("pragma", "no-cache");
      }
      if (!httpRequest.headersList.contains("cache-control")) {
        httpRequest.headersList.append("cache-control", "no-cache");
      }
    }
    if (httpRequest.headersList.contains("range")) {
      httpRequest.headersList.append("accept-encoding", "identity");
    }
    if (!httpRequest.headersList.contains("accept-encoding")) {
      if (/^https:/.test(requestCurrentURL(httpRequest).protocol)) {
        httpRequest.headersList.append("accept-encoding", "br, gzip, deflate");
      } else {
        httpRequest.headersList.append("accept-encoding", "gzip, deflate");
      }
    }
    {
      httpRequest.cache = "no-store";
    }
    if (httpRequest.mode !== "no-store" && httpRequest.mode !== "reload")
      ;
    if (response2 == null) {
      if (httpRequest.mode === "only-if-cached") {
        return makeNetworkError("only if cached");
      }
      const forwardResponse = await httpNetworkFetch(httpFetchParams, includeCredentials, isNewConnectionFetch);
      if (!safeMethods.includes(httpRequest.method) && forwardResponse.status >= 200 && forwardResponse.status <= 399)
        ;
      if (response2 == null) {
        response2 = forwardResponse;
      }
    }
    response2.urlList = [...httpRequest.urlList];
    if (httpRequest.headersList.contains("range")) {
      response2.rangeRequested = true;
    }
    response2.requestIncludesCredentials = includeCredentials;
    if (response2.status === 407) {
      if (request2.window === "no-window") {
        return makeNetworkError();
      }
      if (isCancelled(fetchParams)) {
        return makeAppropriateNetworkError(fetchParams);
      }
      return makeNetworkError("proxy authentication required");
    }
    if (response2.status === 421 && !isNewConnectionFetch && (request2.body == null || request2.body.source != null)) {
      if (isCancelled(fetchParams)) {
        return makeAppropriateNetworkError(fetchParams);
      }
      fetchParams.controller.connection.destroy();
      response2 = await httpNetworkOrCacheFetch(fetchParams, isAuthenticationFetch, true);
    }
    return response2;
  }
  async function httpNetworkFetch(fetchParams, includeCredentials = false, forceNewConnection = false) {
    assert2(!fetchParams.controller.connection || fetchParams.controller.connection.destroyed);
    fetchParams.controller.connection = {
      abort: null,
      destroyed: false,
      destroy(err) {
        if (!this.destroyed) {
          this.destroyed = true;
          this.abort?.(err ?? new DOMException("The operation was aborted.", "AbortError"));
        }
      }
    };
    const request2 = fetchParams.request;
    let response2 = null;
    const timingInfo = fetchParams.timingInfo;
    {
      request2.cache = "no-store";
    }
    if (request2.mode === "websocket")
      ;
    let requestBody = null;
    if (request2.body == null && fetchParams.processRequestEndOfBody) {
      queueMicrotask(() => fetchParams.processRequestEndOfBody());
    } else if (request2.body != null) {
      const processBodyChunk = async function* (bytes) {
        if (isCancelled(fetchParams)) {
          return;
        }
        yield bytes;
        fetchParams.processRequestBodyChunkLength?.(bytes.byteLength);
      };
      const processEndOfBody = () => {
        if (isCancelled(fetchParams)) {
          return;
        }
        if (fetchParams.processRequestEndOfBody) {
          fetchParams.processRequestEndOfBody();
        }
      };
      const processBodyError = (e) => {
        if (isCancelled(fetchParams)) {
          return;
        }
        if (e.name === "AbortError") {
          fetchParams.controller.abort();
        } else {
          fetchParams.controller.terminate(e);
        }
      };
      requestBody = async function* () {
        try {
          for await (const bytes of request2.body.stream) {
            yield* processBodyChunk(bytes);
          }
          processEndOfBody();
        } catch (err) {
          processBodyError(err);
        }
      }();
    }
    try {
      const { body: body2, status, statusText, headersList } = await dispatch({ body: requestBody });
      const iterator = body2[Symbol.asyncIterator]();
      fetchParams.controller.next = () => iterator.next();
      response2 = makeResponse({ status, statusText, headersList });
    } catch (err) {
      if (err.name === "AbortError") {
        fetchParams.controller.connection.destroy();
        return makeAppropriateNetworkError(fetchParams);
      }
      return makeNetworkError(err);
    }
    const pullAlgorithm = () => {
      fetchParams.controller.resume();
    };
    const cancelAlgorithm = (reason) => {
      fetchParams.controller.abort(reason);
    };
    if (!ReadableStream3) {
      ReadableStream3 = import_web.default.ReadableStream;
    }
    const stream2 = new ReadableStream3({
      async start(controller) {
        fetchParams.controller.controller = controller;
      },
      async pull(controller) {
        await pullAlgorithm();
      },
      async cancel(reason) {
        await cancelAlgorithm(reason);
      }
    }, {
      highWaterMark: 0,
      size() {
        return 1;
      }
    });
    response2.body = { stream: stream2 };
    fetchParams.controller.on("terminated", onAborted);
    fetchParams.controller.resume = async () => {
      while (true) {
        let bytes;
        try {
          const { done, value } = await fetchParams.controller.next();
          if (isAborted(fetchParams)) {
            break;
          }
          bytes = done ? void 0 : value;
        } catch (err) {
          if (fetchParams.controller.ended && !timingInfo.encodedBodySize) {
            bytes = void 0;
          } else {
            bytes = err;
          }
        }
        if (bytes === void 0) {
          readableStreamClose(fetchParams.controller.controller);
          finalizeResponse(fetchParams, response2);
          return;
        }
        timingInfo.decodedBodySize += bytes?.byteLength ?? 0;
        if (isErrorLike(bytes)) {
          fetchParams.controller.terminate(bytes);
          return;
        }
        fetchParams.controller.controller.enqueue(new Uint8Array(bytes));
        if (isErrored2(stream2)) {
          fetchParams.controller.terminate();
          return;
        }
        if (!fetchParams.controller.controller.desiredSize) {
          return;
        }
      }
    };
    function onAborted(reason) {
      if (isAborted(fetchParams)) {
        response2.aborted = true;
        if (isReadable2(stream2)) {
          fetchParams.controller.controller.error(fetchParams.controller.serializedAbortReason);
        }
      } else {
        if (isReadable2(stream2)) {
          fetchParams.controller.controller.error(new TypeError("terminated", {
            cause: isErrorLike(reason) ? reason : void 0
          }));
        }
      }
      fetchParams.controller.connection.destroy();
    }
    return response2;
    async function dispatch({ body: body2 }) {
      const url = requestCurrentURL(request2);
      return new Promise((resolve, reject) => fetchParams.controller.dispatcher.dispatch({
        path: url.pathname + url.search,
        origin: url.origin,
        method: request2.method,
        body: fetchParams.controller.dispatcher.isMockActive ? request2.body && request2.body.source : body2,
        headers: request2.headersList[kHeadersCaseInsensitive],
        maxRedirections: 0,
        bodyTimeout: 3e5,
        headersTimeout: 3e5
      }, {
        body: null,
        abort: null,
        onConnect(abort2) {
          const { connection } = fetchParams.controller;
          if (connection.destroyed) {
            abort2(new DOMException("The operation was aborted.", "AbortError"));
          } else {
            fetchParams.controller.on("terminated", abort2);
            this.abort = connection.abort = abort2;
          }
        },
        onHeaders(status, headersList, resume2, statusText) {
          if (status < 200) {
            return;
          }
          let codings = [];
          let location = "";
          const headers2 = new Headers2();
          for (let n = 0; n < headersList.length; n += 2) {
            const key2 = headersList[n + 0].toString("latin1");
            const val = headersList[n + 1].toString("latin1");
            if (key2.toLowerCase() === "content-encoding") {
              codings = val.split(",").map((x) => x.trim());
            } else if (key2.toLowerCase() === "location") {
              location = val;
            }
            headers2.append(key2, val);
          }
          this.body = new Readable2({ read: resume2 });
          const decoders = [];
          const willFollow = request2.redirect === "follow" && location && redirectStatus.includes(status);
          if (request2.method !== "HEAD" && request2.method !== "CONNECT" && !nullBodyStatus.includes(status) && !willFollow) {
            for (const coding of codings) {
              if (/(x-)?gzip/.test(coding)) {
                decoders.push(zlib.createGunzip());
              } else if (/(x-)?deflate/.test(coding)) {
                decoders.push(zlib.createInflate());
              } else if (coding === "br") {
                decoders.push(zlib.createBrotliDecompress());
              } else {
                decoders.length = 0;
                break;
              }
            }
          }
          resolve({
            status,
            statusText,
            headersList: headers2[kHeadersList],
            body: decoders.length ? pipeline2(this.body, ...decoders, () => {
            }) : this.body.on("error", () => {
            })
          });
          return true;
        },
        onData(chunk) {
          if (fetchParams.controller.dump) {
            return;
          }
          const bytes = chunk;
          timingInfo.encodedBodySize += bytes.byteLength;
          return this.body.push(bytes);
        },
        onComplete() {
          if (this.abort) {
            fetchParams.controller.off("terminated", this.abort);
          }
          fetchParams.controller.ended = true;
          this.body.push(null);
        },
        onError(error2) {
          if (this.abort) {
            fetchParams.controller.off("terminated", this.abort);
          }
          this.body?.destroy(error2);
          fetchParams.controller.terminate(error2);
          reject(error2);
        }
      }));
    }
  }
  fetch_1 = {
    fetch: fetch2,
    Fetch,
    fetching,
    finalizeAndReportTiming
  };
  return fetch_1;
}
var symbols;
var hasRequiredSymbols;
function requireSymbols() {
  if (hasRequiredSymbols)
    return symbols;
  hasRequiredSymbols = 1;
  symbols = {
    kState: Symbol("FileReader state"),
    kResult: Symbol("FileReader result"),
    kError: Symbol("FileReader error"),
    kLastProgressEventFired: Symbol("FileReader last progress event fired timestamp"),
    kEvents: Symbol("FileReader events"),
    kAborted: Symbol("FileReader aborted")
  };
  return symbols;
}
var progressevent;
var hasRequiredProgressevent;
function requireProgressevent() {
  if (hasRequiredProgressevent)
    return progressevent;
  hasRequiredProgressevent = 1;
  const { webidl } = requireWebidl();
  const kState = Symbol("ProgressEvent state");
  class ProgressEvent extends Event {
    constructor(type, eventInitDict = {}) {
      type = webidl.converters.DOMString(type);
      eventInitDict = webidl.converters.ProgressEventInit(eventInitDict ?? {});
      super(type, eventInitDict);
      this[kState] = {
        lengthComputable: eventInitDict.lengthComputable,
        loaded: eventInitDict.loaded,
        total: eventInitDict.total
      };
    }
    get lengthComputable() {
      webidl.brandCheck(this, ProgressEvent);
      return this[kState].lengthComputable;
    }
    get loaded() {
      webidl.brandCheck(this, ProgressEvent);
      return this[kState].loaded;
    }
    get total() {
      webidl.brandCheck(this, ProgressEvent);
      return this[kState].total;
    }
  }
  webidl.converters.ProgressEventInit = webidl.dictionaryConverter([
    {
      key: "lengthComputable",
      converter: webidl.converters.boolean,
      defaultValue: false
    },
    {
      key: "loaded",
      converter: webidl.converters["unsigned long long"],
      defaultValue: 0
    },
    {
      key: "total",
      converter: webidl.converters["unsigned long long"],
      defaultValue: 0
    },
    {
      key: "bubbles",
      converter: webidl.converters.boolean,
      defaultValue: false
    },
    {
      key: "cancelable",
      converter: webidl.converters.boolean,
      defaultValue: false
    },
    {
      key: "composed",
      converter: webidl.converters.boolean,
      defaultValue: false
    }
  ]);
  progressevent = {
    ProgressEvent
  };
  return progressevent;
}
var encoding;
var hasRequiredEncoding;
function requireEncoding() {
  if (hasRequiredEncoding)
    return encoding;
  hasRequiredEncoding = 1;
  function getEncoding(label) {
    switch (label.trim().toLowerCase()) {
      case "unicode-1-1-utf-8":
      case "unicode11utf8":
      case "unicode20utf8":
      case "utf-8":
      case "utf8":
      case "x-unicode20utf8":
        return "UTF-8";
      case "866":
      case "cp866":
      case "csibm866":
      case "ibm866":
        return "IBM866";
      case "csisolatin2":
      case "iso-8859-2":
      case "iso-ir-101":
      case "iso8859-2":
      case "iso88592":
      case "iso_8859-2":
      case "iso_8859-2:1987":
      case "l2":
      case "latin2":
        return "ISO-8859-2";
      case "csisolatin3":
      case "iso-8859-3":
      case "iso-ir-109":
      case "iso8859-3":
      case "iso88593":
      case "iso_8859-3":
      case "iso_8859-3:1988":
      case "l3":
      case "latin3":
        return "ISO-8859-3";
      case "csisolatin4":
      case "iso-8859-4":
      case "iso-ir-110":
      case "iso8859-4":
      case "iso88594":
      case "iso_8859-4":
      case "iso_8859-4:1988":
      case "l4":
      case "latin4":
        return "ISO-8859-4";
      case "csisolatincyrillic":
      case "cyrillic":
      case "iso-8859-5":
      case "iso-ir-144":
      case "iso8859-5":
      case "iso88595":
      case "iso_8859-5":
      case "iso_8859-5:1988":
        return "ISO-8859-5";
      case "arabic":
      case "asmo-708":
      case "csiso88596e":
      case "csiso88596i":
      case "csisolatinarabic":
      case "ecma-114":
      case "iso-8859-6":
      case "iso-8859-6-e":
      case "iso-8859-6-i":
      case "iso-ir-127":
      case "iso8859-6":
      case "iso88596":
      case "iso_8859-6":
      case "iso_8859-6:1987":
        return "ISO-8859-6";
      case "csisolatingreek":
      case "ecma-118":
      case "elot_928":
      case "greek":
      case "greek8":
      case "iso-8859-7":
      case "iso-ir-126":
      case "iso8859-7":
      case "iso88597":
      case "iso_8859-7":
      case "iso_8859-7:1987":
      case "sun_eu_greek":
        return "ISO-8859-7";
      case "csiso88598e":
      case "csisolatinhebrew":
      case "hebrew":
      case "iso-8859-8":
      case "iso-8859-8-e":
      case "iso-ir-138":
      case "iso8859-8":
      case "iso88598":
      case "iso_8859-8":
      case "iso_8859-8:1988":
      case "visual":
        return "ISO-8859-8";
      case "csiso88598i":
      case "iso-8859-8-i":
      case "logical":
        return "ISO-8859-8-I";
      case "csisolatin6":
      case "iso-8859-10":
      case "iso-ir-157":
      case "iso8859-10":
      case "iso885910":
      case "l6":
      case "latin6":
        return "ISO-8859-10";
      case "iso-8859-13":
      case "iso8859-13":
      case "iso885913":
        return "ISO-8859-13";
      case "iso-8859-14":
      case "iso8859-14":
      case "iso885914":
        return "ISO-8859-14";
      case "csisolatin9":
      case "iso-8859-15":
      case "iso8859-15":
      case "iso885915":
      case "iso_8859-15":
      case "l9":
        return "ISO-8859-15";
      case "iso-8859-16":
        return "ISO-8859-16";
      case "cskoi8r":
      case "koi":
      case "koi8":
      case "koi8-r":
      case "koi8_r":
        return "KOI8-R";
      case "koi8-ru":
      case "koi8-u":
        return "KOI8-U";
      case "csmacintosh":
      case "mac":
      case "macintosh":
      case "x-mac-roman":
        return "macintosh";
      case "iso-8859-11":
      case "iso8859-11":
      case "iso885911":
      case "tis-620":
      case "windows-874":
        return "windows-874";
      case "cp1250":
      case "windows-1250":
      case "x-cp1250":
        return "windows-1250";
      case "cp1251":
      case "windows-1251":
      case "x-cp1251":
        return "windows-1251";
      case "ansi_x3.4-1968":
      case "ascii":
      case "cp1252":
      case "cp819":
      case "csisolatin1":
      case "ibm819":
      case "iso-8859-1":
      case "iso-ir-100":
      case "iso8859-1":
      case "iso88591":
      case "iso_8859-1":
      case "iso_8859-1:1987":
      case "l1":
      case "latin1":
      case "us-ascii":
      case "windows-1252":
      case "x-cp1252":
        return "windows-1252";
      case "cp1253":
      case "windows-1253":
      case "x-cp1253":
        return "windows-1253";
      case "cp1254":
      case "csisolatin5":
      case "iso-8859-9":
      case "iso-ir-148":
      case "iso8859-9":
      case "iso88599":
      case "iso_8859-9":
      case "iso_8859-9:1989":
      case "l5":
      case "latin5":
      case "windows-1254":
      case "x-cp1254":
        return "windows-1254";
      case "cp1255":
      case "windows-1255":
      case "x-cp1255":
        return "windows-1255";
      case "cp1256":
      case "windows-1256":
      case "x-cp1256":
        return "windows-1256";
      case "cp1257":
      case "windows-1257":
      case "x-cp1257":
        return "windows-1257";
      case "cp1258":
      case "windows-1258":
      case "x-cp1258":
        return "windows-1258";
      case "x-mac-cyrillic":
      case "x-mac-ukrainian":
        return "x-mac-cyrillic";
      case "chinese":
      case "csgb2312":
      case "csiso58gb231280":
      case "gb2312":
      case "gb_2312":
      case "gb_2312-80":
      case "gbk":
      case "iso-ir-58":
      case "x-gbk":
        return "GBK";
      case "gb18030":
        return "gb18030";
      case "big5":
      case "big5-hkscs":
      case "cn-big5":
      case "csbig5":
      case "x-x-big5":
        return "Big5";
      case "cseucpkdfmtjapanese":
      case "euc-jp":
      case "x-euc-jp":
        return "EUC-JP";
      case "csiso2022jp":
      case "iso-2022-jp":
        return "ISO-2022-JP";
      case "csshiftjis":
      case "ms932":
      case "ms_kanji":
      case "shift-jis":
      case "shift_jis":
      case "sjis":
      case "windows-31j":
      case "x-sjis":
        return "Shift_JIS";
      case "cseuckr":
      case "csksc56011987":
      case "euc-kr":
      case "iso-ir-149":
      case "korean":
      case "ks_c_5601-1987":
      case "ks_c_5601-1989":
      case "ksc5601":
      case "ksc_5601":
      case "windows-949":
        return "EUC-KR";
      case "csiso2022kr":
      case "hz-gb-2312":
      case "iso-2022-cn":
      case "iso-2022-cn-ext":
      case "iso-2022-kr":
      case "replacement":
        return "replacement";
      case "unicodefffe":
      case "utf-16be":
        return "UTF-16BE";
      case "csunicode":
      case "iso-10646-ucs-2":
      case "ucs-2":
      case "unicode":
      case "unicodefeff":
      case "utf-16":
      case "utf-16le":
        return "UTF-16LE";
      case "x-user-defined":
        return "x-user-defined";
      default:
        return "failure";
    }
  }
  encoding = {
    getEncoding
  };
  return encoding;
}
var util;
var hasRequiredUtil;
function requireUtil() {
  if (hasRequiredUtil)
    return util;
  hasRequiredUtil = 1;
  const {
    kState,
    kError: kError2,
    kResult,
    kAborted,
    kLastProgressEventFired
  } = requireSymbols();
  const { ProgressEvent } = requireProgressevent();
  const { getEncoding } = requireEncoding();
  const { DOMException } = requireConstants$1();
  const { serializeAMimeType, parseMIMEType } = requireDataURL();
  const { types } = import_util.default;
  const { StringDecoder } = import_string_decoder.default;
  const { btoa: btoa2 } = import_buffer.default;
  const staticPropertyDescriptors = {
    enumerable: true,
    writable: false,
    configurable: false
  };
  function readOperation(fr, blob, type, encodingName) {
    if (fr[kState] === "loading") {
      throw new DOMException("Invalid state", "InvalidStateError");
    }
    fr[kState] = "loading";
    fr[kResult] = null;
    fr[kError2] = null;
    const stream2 = blob.stream();
    const reader = stream2.getReader();
    const bytes = [];
    let chunkPromise = reader.read();
    let isFirstChunk = true;
    (async () => {
      while (!fr[kAborted]) {
        try {
          const { done, value } = await chunkPromise;
          if (isFirstChunk && !fr[kAborted]) {
            queueMicrotask(() => {
              fireAProgressEvent("loadstart", fr);
            });
          }
          isFirstChunk = false;
          if (!done && types.isUint8Array(value)) {
            bytes.push(value);
            if ((fr[kLastProgressEventFired] === void 0 || Date.now() - fr[kLastProgressEventFired] >= 50) && !fr[kAborted]) {
              fr[kLastProgressEventFired] = Date.now();
              queueMicrotask(() => {
                fireAProgressEvent("progress", fr);
              });
            }
            chunkPromise = reader.read();
          } else if (done) {
            queueMicrotask(() => {
              fr[kState] = "done";
              try {
                const result = packageData(bytes, type, blob.type, encodingName);
                if (fr[kAborted]) {
                  return;
                }
                fr[kResult] = result;
                fireAProgressEvent("load", fr);
              } catch (error2) {
                fr[kError2] = error2;
                fireAProgressEvent("error", fr);
              }
              if (fr[kState] !== "loading") {
                fireAProgressEvent("loadend", fr);
              }
            });
            break;
          }
        } catch (error2) {
          if (fr[kAborted]) {
            return;
          }
          queueMicrotask(() => {
            fr[kState] = "done";
            fr[kError2] = error2;
            fireAProgressEvent("error", fr);
            if (fr[kState] !== "loading") {
              fireAProgressEvent("loadend", fr);
            }
          });
          break;
        }
      }
    })();
  }
  function fireAProgressEvent(e, reader) {
    const event = new ProgressEvent(e, {
      bubbles: false,
      cancelable: false
    });
    reader.dispatchEvent(event);
  }
  function packageData(bytes, type, mimeType, encodingName) {
    switch (type) {
      case "DataURL": {
        let dataURL2 = "data:";
        const parsed = parseMIMEType(mimeType || "application/octet-stream");
        if (parsed !== "failure") {
          dataURL2 += serializeAMimeType(parsed);
        }
        dataURL2 += ";base64,";
        const decoder = new StringDecoder("latin1");
        for (const chunk of bytes) {
          dataURL2 += btoa2(decoder.write(chunk));
        }
        dataURL2 += btoa2(decoder.end());
        return dataURL2;
      }
      case "Text": {
        let encoding2 = "failure";
        if (encodingName) {
          encoding2 = getEncoding(encodingName);
        }
        if (encoding2 === "failure" && mimeType) {
          const type2 = parseMIMEType(mimeType);
          if (type2 !== "failure") {
            encoding2 = getEncoding(type2.parameters.get("charset"));
          }
        }
        if (encoding2 === "failure") {
          encoding2 = "UTF-8";
        }
        return decode(bytes, encoding2);
      }
      case "ArrayBuffer": {
        const sequence = combineByteSequences(bytes);
        return sequence.buffer;
      }
      case "BinaryString": {
        let binaryString = "";
        const decoder = new StringDecoder("latin1");
        for (const chunk of bytes) {
          binaryString += decoder.write(chunk);
        }
        binaryString += decoder.end();
        return binaryString;
      }
    }
  }
  function decode(ioQueue, encoding2) {
    const bytes = combineByteSequences(ioQueue);
    const BOMEncoding = BOMSniffing(bytes);
    let slice2 = 0;
    if (BOMEncoding !== null) {
      encoding2 = BOMEncoding;
      slice2 = BOMEncoding === "UTF-8" ? 3 : 2;
    }
    const sliced = bytes.slice(slice2);
    return new TextDecoder(encoding2).decode(sliced);
  }
  function BOMSniffing(ioQueue) {
    const [a, b, c] = ioQueue;
    if (a === 239 && b === 187 && c === 191) {
      return "UTF-8";
    } else if (a === 254 && b === 255) {
      return "UTF-16BE";
    } else if (a === 255 && b === 254) {
      return "UTF-16LE";
    }
    return null;
  }
  function combineByteSequences(sequences) {
    const size = sequences.reduce((a, b) => {
      return a + b.byteLength;
    }, 0);
    let offset = 0;
    return sequences.reduce((a, b) => {
      a.set(b, offset);
      offset += b.byteLength;
      return a;
    }, new Uint8Array(size));
  }
  util = {
    staticPropertyDescriptors,
    readOperation,
    fireAProgressEvent
  };
  return util;
}
var filereader;
var hasRequiredFilereader;
function requireFilereader() {
  if (hasRequiredFilereader)
    return filereader;
  hasRequiredFilereader = 1;
  const {
    staticPropertyDescriptors,
    readOperation,
    fireAProgressEvent
  } = requireUtil();
  const {
    kState,
    kError: kError2,
    kResult,
    kEvents,
    kAborted
  } = requireSymbols();
  const { webidl } = requireWebidl();
  const { kEnumerableProperty: kEnumerableProperty2 } = util$e;
  class FileReader extends EventTarget {
    constructor() {
      super();
      this[kState] = "empty";
      this[kResult] = null;
      this[kError2] = null;
      this[kEvents] = {
        loadend: null,
        error: null,
        abort: null,
        load: null,
        progress: null,
        loadstart: null
      };
    }
    readAsArrayBuffer(blob) {
      webidl.brandCheck(this, FileReader);
      webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsArrayBuffer" });
      blob = webidl.converters.Blob(blob, { strict: false });
      readOperation(this, blob, "ArrayBuffer");
    }
    readAsBinaryString(blob) {
      webidl.brandCheck(this, FileReader);
      webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsBinaryString" });
      blob = webidl.converters.Blob(blob, { strict: false });
      readOperation(this, blob, "BinaryString");
    }
    readAsText(blob, encoding2 = void 0) {
      webidl.brandCheck(this, FileReader);
      webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsText" });
      blob = webidl.converters.Blob(blob, { strict: false });
      if (encoding2 !== void 0) {
        encoding2 = webidl.converters.DOMString(encoding2);
      }
      readOperation(this, blob, "Text", encoding2);
    }
    readAsDataURL(blob) {
      webidl.brandCheck(this, FileReader);
      webidl.argumentLengthCheck(arguments, 1, { header: "FileReader.readAsDataURL" });
      blob = webidl.converters.Blob(blob, { strict: false });
      readOperation(this, blob, "DataURL");
    }
    abort() {
      if (this[kState] === "empty" || this[kState] === "done") {
        this[kResult] = null;
        return;
      }
      if (this[kState] === "loading") {
        this[kState] = "done";
        this[kResult] = null;
      }
      this[kAborted] = true;
      fireAProgressEvent("abort", this);
      if (this[kState] !== "loading") {
        fireAProgressEvent("loadend", this);
      }
    }
    get readyState() {
      webidl.brandCheck(this, FileReader);
      switch (this[kState]) {
        case "empty":
          return this.EMPTY;
        case "loading":
          return this.LOADING;
        case "done":
          return this.DONE;
      }
    }
    get result() {
      webidl.brandCheck(this, FileReader);
      return this[kResult];
    }
    get error() {
      webidl.brandCheck(this, FileReader);
      return this[kError2];
    }
    get onloadend() {
      webidl.brandCheck(this, FileReader);
      return this[kEvents].loadend;
    }
    set onloadend(fn) {
      webidl.brandCheck(this, FileReader);
      if (this[kEvents].loadend) {
        this.removeEventListener("loadend", this[kEvents].loadend);
      }
      if (typeof fn === "function") {
        this[kEvents].loadend = fn;
        this.addEventListener("loadend", fn);
      } else {
        this[kEvents].loadend = null;
      }
    }
    get onerror() {
      webidl.brandCheck(this, FileReader);
      return this[kEvents].error;
    }
    set onerror(fn) {
      webidl.brandCheck(this, FileReader);
      if (this[kEvents].error) {
        this.removeEventListener("error", this[kEvents].error);
      }
      if (typeof fn === "function") {
        this[kEvents].error = fn;
        this.addEventListener("error", fn);
      } else {
        this[kEvents].error = null;
      }
    }
    get onloadstart() {
      webidl.brandCheck(this, FileReader);
      return this[kEvents].loadstart;
    }
    set onloadstart(fn) {
      webidl.brandCheck(this, FileReader);
      if (this[kEvents].loadstart) {
        this.removeEventListener("loadstart", this[kEvents].loadstart);
      }
      if (typeof fn === "function") {
        this[kEvents].loadstart = fn;
        this.addEventListener("loadstart", fn);
      } else {
        this[kEvents].loadstart = null;
      }
    }
    get onprogress() {
      webidl.brandCheck(this, FileReader);
      return this[kEvents].progress;
    }
    set onprogress(fn) {
      webidl.brandCheck(this, FileReader);
      if (this[kEvents].progress) {
        this.removeEventListener("progress", this[kEvents].progress);
      }
      if (typeof fn === "function") {
        this[kEvents].progress = fn;
        this.addEventListener("progress", fn);
      } else {
        this[kEvents].progress = null;
      }
    }
    get onload() {
      webidl.brandCheck(this, FileReader);
      return this[kEvents].load;
    }
    set onload(fn) {
      webidl.brandCheck(this, FileReader);
      if (this[kEvents].load) {
        this.removeEventListener("load", this[kEvents].load);
      }
      if (typeof fn === "function") {
        this[kEvents].load = fn;
        this.addEventListener("load", fn);
      } else {
        this[kEvents].load = null;
      }
    }
    get onabort() {
      webidl.brandCheck(this, FileReader);
      return this[kEvents].abort;
    }
    set onabort(fn) {
      webidl.brandCheck(this, FileReader);
      if (this[kEvents].abort) {
        this.removeEventListener("abort", this[kEvents].abort);
      }
      if (typeof fn === "function") {
        this[kEvents].abort = fn;
        this.addEventListener("abort", fn);
      } else {
        this[kEvents].abort = null;
      }
    }
  }
  FileReader.EMPTY = FileReader.prototype.EMPTY = 0;
  FileReader.LOADING = FileReader.prototype.LOADING = 1;
  FileReader.DONE = FileReader.prototype.DONE = 2;
  Object.defineProperties(FileReader.prototype, {
    EMPTY: staticPropertyDescriptors,
    LOADING: staticPropertyDescriptors,
    DONE: staticPropertyDescriptors,
    readAsArrayBuffer: kEnumerableProperty2,
    readAsBinaryString: kEnumerableProperty2,
    readAsText: kEnumerableProperty2,
    readAsDataURL: kEnumerableProperty2,
    abort: kEnumerableProperty2,
    readyState: kEnumerableProperty2,
    result: kEnumerableProperty2,
    error: kEnumerableProperty2,
    onloadstart: kEnumerableProperty2,
    onprogress: kEnumerableProperty2,
    onload: kEnumerableProperty2,
    onabort: kEnumerableProperty2,
    onerror: kEnumerableProperty2,
    onloadend: kEnumerableProperty2,
    [Symbol.toStringTag]: {
      value: "FileReader",
      writable: false,
      enumerable: false,
      configurable: true
    }
  });
  Object.defineProperties(FileReader, {
    EMPTY: staticPropertyDescriptors,
    LOADING: staticPropertyDescriptors,
    DONE: staticPropertyDescriptors
  });
  filereader = {
    FileReader
  };
  return filereader;
}
var hasRequiredUndici;
function requireUndici() {
  if (hasRequiredUndici)
    return undici;
  hasRequiredUndici = 1;
  const Client4 = client;
  const Dispatcher3 = dispatcher;
  const errors$1 = errors;
  const Pool3 = pool;
  const BalancedPool2 = balancedPool;
  const Agent3 = agent;
  const util2 = util$e;
  const { InvalidArgumentError: InvalidArgumentError3 } = errors$1;
  const api$1 = api;
  const buildConnector2 = connect$2;
  const MockClient3 = mockClient;
  const MockAgent2 = mockAgent;
  const MockPool3 = mockPool;
  const mockErrors$1 = mockErrors;
  const ProxyAgent2 = proxyAgent;
  const { getGlobalDispatcher: getGlobalDispatcher2, setGlobalDispatcher: setGlobalDispatcher2 } = global$2;
  const DecoratorHandler2 = DecoratorHandler_1;
  const RedirectHandler3 = RedirectHandler_1;
  const createRedirectInterceptor2 = redirectInterceptor;
  const nodeVersion2 = process.versions.node.split(".");
  const nodeMajor2 = Number(nodeVersion2[0]);
  const nodeMinor2 = Number(nodeVersion2[1]);
  Object.assign(Dispatcher3.prototype, api$1);
  undici.Dispatcher = Dispatcher3;
  undici.Client = Client4;
  undici.Pool = Pool3;
  undici.BalancedPool = BalancedPool2;
  undici.Agent = Agent3;
  undici.ProxyAgent = ProxyAgent2;
  undici.DecoratorHandler = DecoratorHandler2;
  undici.RedirectHandler = RedirectHandler3;
  undici.createRedirectInterceptor = createRedirectInterceptor2;
  undici.buildConnector = buildConnector2;
  undici.errors = errors$1;
  function makeDispatcher(fn) {
    return (url, opts, handler2) => {
      if (typeof opts === "function") {
        handler2 = opts;
        opts = null;
      }
      if (!url || typeof url !== "string" && typeof url !== "object" && !(url instanceof URL)) {
        throw new InvalidArgumentError3("invalid url");
      }
      if (opts != null && typeof opts !== "object") {
        throw new InvalidArgumentError3("invalid opts");
      }
      if (opts && opts.path != null) {
        if (typeof opts.path !== "string") {
          throw new InvalidArgumentError3("invalid opts.path");
        }
        let path = opts.path;
        if (!opts.path.startsWith("/")) {
          path = `/${path}`;
        }
        url = new URL(util2.parseOrigin(url).origin + path);
      } else {
        if (!opts) {
          opts = typeof url === "object" ? url : {};
        }
        url = util2.parseURL(url);
      }
      const { agent: agent2, dispatcher: dispatcher2 = getGlobalDispatcher2() } = opts;
      if (agent2) {
        throw new InvalidArgumentError3("unsupported opts.agent. Did you mean opts.client?");
      }
      return fn.call(dispatcher2, __spreadProps(__spreadValues({}, opts), {
        origin: url.origin,
        path: url.search ? `${url.pathname}${url.search}` : url.pathname,
        method: opts.method || (opts.body ? "PUT" : "GET")
      }), handler2);
    };
  }
  undici.setGlobalDispatcher = setGlobalDispatcher2;
  undici.getGlobalDispatcher = getGlobalDispatcher2;
  if (nodeMajor2 > 16 || nodeMajor2 === 16 && nodeMinor2 >= 8) {
    let fetchImpl = null;
    undici.fetch = async function fetch2(resource) {
      if (!fetchImpl) {
        fetchImpl = requireFetch().fetch;
      }
      try {
        return await fetchImpl(...arguments);
      } catch (err) {
        Error.captureStackTrace(err, this);
        throw err;
      }
    };
    undici.Headers = requireHeaders().Headers;
    undici.Response = requireResponse().Response;
    undici.Request = requireRequest().Request;
    undici.FormData = requireFormdata().FormData;
    undici.File = requireFile().File;
    undici.FileReader = requireFilereader().FileReader;
    const { setGlobalOrigin, getGlobalOrigin } = requireGlobal();
    undici.setGlobalOrigin = setGlobalOrigin;
    undici.getGlobalOrigin = getGlobalOrigin;
  }
  undici.request = makeDispatcher(api$1.request);
  undici.stream = makeDispatcher(api$1.stream);
  undici.pipeline = makeDispatcher(api$1.pipeline);
  undici.connect = makeDispatcher(api$1.connect);
  undici.upgrade = makeDispatcher(api$1.upgrade);
  undici.MockClient = MockClient3;
  undici.MockPool = MockPool3;
  undici.MockAgent = MockAgent2;
  undici.mockErrors = mockErrors$1;
  return undici;
}
var undiciExports = requireUndici();
var globals = {
  crypto: import_crypto.webcrypto,
  fetch: undiciExports.fetch,
  Response: undiciExports.Response,
  Request: undiciExports.Request,
  Headers: undiciExports.Headers,
  ReadableStream: import_web.ReadableStream,
  TransformStream: import_web.TransformStream,
  WritableStream: import_web.WritableStream,
  FormData: undiciExports.FormData
};
function installPolyfills() {
  for (const name in globals) {
    Object.defineProperty(globalThis, name, {
      enumerable: true,
      configurable: true,
      writable: true,
      value: globals[name]
    });
  }
}
installPolyfills();

// .netlify/server/chunks/prod-ssr.js
var DEV = false;

// .netlify/server/chunks/internal.js
init_index2();
var base = "";
var assets = base;
var initial = { base, assets };
function reset() {
  base = initial.base;
  assets = initial.assets;
}
var public_env = {};
function set_public_env(environment) {
  public_env = environment;
}
function afterUpdate() {
}
var Root = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { stores } = $$props;
  let { page: page2 } = $$props;
  let { constructors } = $$props;
  let { components = [] } = $$props;
  let { form } = $$props;
  let { data_0 = null } = $$props;
  let { data_1 = null } = $$props;
  {
    setContext("__svelte__", stores);
  }
  afterUpdate(stores.page.notify);
  if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0)
    $$bindings.stores(stores);
  if ($$props.page === void 0 && $$bindings.page && page2 !== void 0)
    $$bindings.page(page2);
  if ($$props.constructors === void 0 && $$bindings.constructors && constructors !== void 0)
    $$bindings.constructors(constructors);
  if ($$props.components === void 0 && $$bindings.components && components !== void 0)
    $$bindings.components(components);
  if ($$props.form === void 0 && $$bindings.form && form !== void 0)
    $$bindings.form(form);
  if ($$props.data_0 === void 0 && $$bindings.data_0 && data_0 !== void 0)
    $$bindings.data_0(data_0);
  if ($$props.data_1 === void 0 && $$bindings.data_1 && data_1 !== void 0)
    $$bindings.data_1(data_1);
  let $$settled;
  let $$rendered;
  do {
    $$settled = true;
    {
      stores.page.set(page2);
    }
    $$rendered = `


${constructors[1] ? `${validate_component(constructors[0] || missing_component, "svelte:component").$$render($$result, { data: data_0, this: components[0] }, {
      this: ($$value) => {
        components[0] = $$value;
        $$settled = false;
      }
    }, {
      default: () => {
        return `${validate_component(constructors[1] || missing_component, "svelte:component").$$render($$result, { data: data_1, form, this: components[1] }, {
          this: ($$value) => {
            components[1] = $$value;
            $$settled = false;
          }
        }, {})}`;
      }
    })}` : `${validate_component(constructors[0] || missing_component, "svelte:component").$$render($$result, { data: data_0, form, this: components[0] }, {
      this: ($$value) => {
        components[0] = $$value;
        $$settled = false;
      }
    }, {})}`}

${``}`;
  } while (!$$settled);
  return $$rendered;
});
var options = {
  app_template_contains_nonce: false,
  csp: { "mode": "auto", "directives": { "upgrade-insecure-requests": false, "block-all-mixed-content": false }, "reportOnly": { "upgrade-insecure-requests": false, "block-all-mixed-content": false } },
  csrf_check_origin: true,
  embedded: false,
  env_public_prefix: "PUBLIC_",
  hooks: null,
  preload_strategy: "modulepreload",
  root: Root,
  service_worker: false,
  templates: {
    app: ({ head, body: body2, assets: assets2, nonce, env }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8">\n		<title>Oregon Bicycle Adventures</title>\n		<meta name="viewport" content="width=device-width, initial-scale=1">\n		<meta name="description" content="Oregon Bicycle Adventures offers guided bike tours that unveil the breathtaking beauty of Oregon, while fostering personal growth and inspiration through unique cycling experiences.">\n		<meta name="keywords" content="Oregon Bicycle Adventures, guided bike tours, bicycle tours, Oregon bike tours, Oregon, cycling, cycling experiences, adventure, travel, scenic rides, Bend activites, Bend tours">\n		<meta name="author" content="Your Name or Company Name">\n		<link rel="canonical" href="https://www.oregonbicycleadventures.com">\n		\n		<!-- Open Graph / Facebook -->\n		<meta property="og:type" content="website">\n		<meta property="og:url" content="https://www.oregonbicycleadventures.com">\n		<meta property="og:title" content="Oregon Bicycle Adventures">\n		<meta property="og:description" content="Oregon Bicycle Adventures offers guided bike tours that unveil the breathtaking beauty of Oregon, while fostering personal growth and inspiration through unique cycling experiences.">\n		<meta property="og:image" content="' + assets2 + '/OBA_Instagram_Profile.png">\n\n		<!-- Twitter -->\n		<meta property="twitter:card" content="summary_large_image">\n		<meta property="twitter:url" content="https://www.oregonbicycleadventures.com">\n		<meta property="twitter:title" content="Oregon Bicycle Adventures">\n		<meta property="twitter:description" content="Oregon Bicycle Adventures offers guided bike tours that unveil the breathtaking beauty of Oregon, while fostering personal growth and inspiration through unique cycling experiences.">\n		<meta property="twitter:image" content="' + assets2 + '/OBA_Instagram_Profile.png">\n\n		<link rel="icon" href="' + assets2 + '/OBA_Instagram_Profile.png" />\n		<link rel="stylesheet" href="' + assets2 + '/css/bootstrap/bootstrap.css">\n		<link rel="stylesheet" href="' + assets2 + '/css/style.css">\n		<link rel="stylesheet" href="' + assets2 + '/css/all.css">\n		<link rel="stylesheet" href="' + assets2 + '/css/animations.css">\n		<link rel="stylesheet" href="https://use.typekit.net/bve4csc.css">\n		' + head + `
	</head>
	<!-- Start cookieyes banner --> 
	<!-- <script id="cookieyes" type="text/javascript" src="https://cdn-cookieyes.com/client_data/c3115bc4a5f9197edced380b/script.js"><\/script>  -->
	<!-- End cookieyes banner -->
	<!-- Google tag (gtag.js) -->
	<script async src="https://www.googletagmanager.com/gtag/js?id=G-SVWKMZV73D"><\/script>
	<script>
	window.dataLayer = window.dataLayer || [];
	function gtag(){dataLayer.push(arguments);}
	gtag('js', new Date());

	gtag('config', 'G-SVWKMZV73D');
	<\/script>
	<body data-sveltekit-preload-data="hover" id="the-body">
		<div style="display: contents">` + body2 + '</div>\n	</body>\n	<!-- <script src="' + assets2 + '/js/preload.js"><\/script>\n    <script src="' + assets2 + '/js/animations.js"><\/script> -->\n	<!-- FareHarbor Lightframe API - do not remove - see: https://fareharbor.com/help/website/resources/lightframe-api/ -->\n	<script src="https://fareharbor.com/embeds/api/v1/?autolightframe=yes"><\/script>\n	<!-- <script src="../js/tours.js" crossorigin="anonymous"><\/script> -->\n</html>\n',
    error: ({ status, message }) => '<!DOCTYPE html>\n<html lang="en">\n	<head>\n		<meta charset="utf-8" />\n		<title>' + message + `</title>

		<style>
			body {
				--bg: white;
				--fg: #222;
				--divider: #ccc;
				background: var(--bg);
				color: var(--fg);
				font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
					Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
				display: flex;
				align-items: center;
				justify-content: center;
				height: 100vh;
			}

			.error {
				display: flex;
				align-items: center;
				max-width: 32rem;
				margin: 0 1rem;
			}

			.status {
				font-weight: 200;
				font-size: 3rem;
				line-height: 1;
				position: relative;
				top: -0.05rem;
			}

			.message {
				border-left: 1px solid var(--divider);
				padding: 0 0 0 1rem;
				margin: 0 0 0 1rem;
				min-height: 2.5rem;
				display: flex;
				align-items: center;
			}

			.message h1 {
				font-weight: 400;
				font-size: 1em;
				margin: 0;
			}

			@media (prefers-color-scheme: dark) {
				body {
					--bg: #222;
					--fg: #ddd;
					--divider: #666;
				}
			}
		</style>
	</head>
	<body>
		<div class="error">
			<span class="status">` + status + '</span>\n			<div class="message">\n				<h1>' + message + "</h1>\n			</div>\n		</div>\n	</body>\n</html>\n"
  },
  version_hash: "16sa5ha"
};
function get_hooks() {
  return Promise.resolve().then(() => (init_hooks_server(), hooks_server_exports));
}

// node_modules/devalue/src/utils.js
var escaped = {
  "<": "\\u003C",
  ">": "\\u003E",
  "/": "\\u002F",
  "\\": "\\\\",
  "\b": "\\b",
  "\f": "\\f",
  "\n": "\\n",
  "\r": "\\r",
  "	": "\\t",
  "\0": "\\u0000",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var DevalueError = class extends Error {
  constructor(message, keys) {
    super(message);
    this.name = "DevalueError";
    this.path = keys.join("");
  }
};
function is_primitive(thing) {
  return Object(thing) !== thing;
}
var object_proto_names = Object.getOwnPropertyNames(Object.prototype).sort().join("\0");
function is_plain_object(thing) {
  const proto = Object.getPrototypeOf(thing);
  return proto === Object.prototype || proto === null || Object.getOwnPropertyNames(proto).sort().join("\0") === object_proto_names;
}
function get_type(thing) {
  return Object.prototype.toString.call(thing).slice(8, -1);
}
function stringify_string(str) {
  let result = '"';
  for (let i = 0; i < str.length; i += 1) {
    const char = str.charAt(i);
    const code = char.charCodeAt(0);
    if (char === '"') {
      result += '\\"';
    } else if (char in escaped) {
      result += escaped[char];
    } else if (code <= 31) {
      result += `\\u${code.toString(16).toUpperCase().padStart(4, "0")}`;
    } else if (code >= 55296 && code <= 57343) {
      const next = str.charCodeAt(i + 1);
      if (code <= 56319 && next >= 56320 && next <= 57343) {
        result += char + str[++i];
      } else {
        result += `\\u${code.toString(16).toUpperCase()}`;
      }
    } else {
      result += char;
    }
  }
  result += '"';
  return result;
}

// node_modules/devalue/src/uneval.js
var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_$";
var unsafe_chars = /[<>\b\f\n\r\t\0\u2028\u2029]/g;
var reserved = /^(?:do|if|in|for|int|let|new|try|var|byte|case|char|else|enum|goto|long|this|void|with|await|break|catch|class|const|final|float|short|super|throw|while|yield|delete|double|export|import|native|return|switch|throws|typeof|boolean|default|extends|finally|package|private|abstract|continue|debugger|function|volatile|interface|protected|transient|implements|instanceof|synchronized)$/;
function uneval(value, replacer) {
  const counts = /* @__PURE__ */ new Map();
  const keys = [];
  const custom = /* @__PURE__ */ new Map();
  function walk(thing) {
    if (typeof thing === "function") {
      throw new DevalueError(`Cannot stringify a function`, keys);
    }
    if (!is_primitive(thing)) {
      if (counts.has(thing)) {
        counts.set(thing, counts.get(thing) + 1);
        return;
      }
      counts.set(thing, 1);
      if (replacer) {
        const str2 = replacer(thing);
        if (typeof str2 === "string") {
          custom.set(thing, str2);
          return;
        }
      }
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "BigInt":
        case "String":
        case "Boolean":
        case "Date":
        case "RegExp":
          return;
        case "Array":
          thing.forEach((value2, i) => {
            keys.push(`[${i}]`);
            walk(value2);
            keys.pop();
          });
          break;
        case "Set":
          Array.from(thing).forEach(walk);
          break;
        case "Map":
          for (const [key2, value2] of thing) {
            keys.push(`.get(${is_primitive(key2) ? stringify_primitive(key2) : "..."})`);
            walk(value2);
            keys.pop();
          }
          break;
        default:
          if (!is_plain_object(thing)) {
            throw new DevalueError(`Cannot stringify arbitrary non-POJOs`, keys);
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new DevalueError(`Cannot stringify POJOs with symbolic keys`, keys);
          }
          for (const key2 in thing) {
            keys.push(`.${key2}`);
            walk(thing[key2]);
            keys.pop();
          }
      }
    }
  }
  walk(value);
  const names = /* @__PURE__ */ new Map();
  Array.from(counts).filter((entry) => entry[1] > 1).sort((a, b) => b[1] - a[1]).forEach((entry, i) => {
    names.set(entry[0], get_name(i));
  });
  function stringify3(thing) {
    if (names.has(thing)) {
      return names.get(thing);
    }
    if (is_primitive(thing)) {
      return stringify_primitive(thing);
    }
    if (custom.has(thing)) {
      return custom.get(thing);
    }
    const type = get_type(thing);
    switch (type) {
      case "Number":
      case "String":
      case "Boolean":
        return `Object(${stringify3(thing.valueOf())})`;
      case "RegExp":
        return `new RegExp(${stringify_string(thing.source)}, "${thing.flags}")`;
      case "Date":
        return `new Date(${thing.getTime()})`;
      case "Array":
        const members = thing.map((v, i) => i in thing ? stringify3(v) : "");
        const tail = thing.length === 0 || thing.length - 1 in thing ? "" : ",";
        return `[${members.join(",")}${tail}]`;
      case "Set":
      case "Map":
        return `new ${type}([${Array.from(thing).map(stringify3).join(",")}])`;
      default:
        const obj = `{${Object.keys(thing).map((key2) => `${safe_key(key2)}:${stringify3(thing[key2])}`).join(",")}}`;
        const proto = Object.getPrototypeOf(thing);
        if (proto === null) {
          return Object.keys(thing).length > 0 ? `Object.assign(Object.create(null),${obj})` : `Object.create(null)`;
        }
        return obj;
    }
  }
  const str = stringify3(value);
  if (names.size) {
    const params = [];
    const statements = [];
    const values = [];
    names.forEach((name, thing) => {
      params.push(name);
      if (custom.has(thing)) {
        values.push(custom.get(thing));
        return;
      }
      if (is_primitive(thing)) {
        values.push(stringify_primitive(thing));
        return;
      }
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          values.push(`Object(${stringify3(thing.valueOf())})`);
          break;
        case "RegExp":
          values.push(thing.toString());
          break;
        case "Date":
          values.push(`new Date(${thing.getTime()})`);
          break;
        case "Array":
          values.push(`Array(${thing.length})`);
          thing.forEach((v, i) => {
            statements.push(`${name}[${i}]=${stringify3(v)}`);
          });
          break;
        case "Set":
          values.push(`new Set`);
          statements.push(`${name}.${Array.from(thing).map((v) => `add(${stringify3(v)})`).join(".")}`);
          break;
        case "Map":
          values.push(`new Map`);
          statements.push(`${name}.${Array.from(thing).map(([k, v]) => `set(${stringify3(k)}, ${stringify3(v)})`).join(".")}`);
          break;
        default:
          values.push(Object.getPrototypeOf(thing) === null ? "Object.create(null)" : "{}");
          Object.keys(thing).forEach((key2) => {
            statements.push(`${name}${safe_prop(key2)}=${stringify3(thing[key2])}`);
          });
      }
    });
    statements.push(`return ${str}`);
    return `(function(${params.join(",")}){${statements.join(";")}}(${values.join(",")}))`;
  } else {
    return str;
  }
}
function get_name(num) {
  let name = "";
  do {
    name = chars[num % chars.length] + name;
    num = ~~(num / chars.length) - 1;
  } while (num >= 0);
  return reserved.test(name) ? `${name}0` : name;
}
function escape_unsafe_char(c) {
  return escaped[c] || c;
}
function escape_unsafe_chars(str) {
  return str.replace(unsafe_chars, escape_unsafe_char);
}
function safe_key(key2) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? key2 : escape_unsafe_chars(JSON.stringify(key2));
}
function safe_prop(key2) {
  return /^[_$a-zA-Z][_$a-zA-Z0-9]*$/.test(key2) ? `.${key2}` : `[${escape_unsafe_chars(JSON.stringify(key2))}]`;
}
function stringify_primitive(thing) {
  if (typeof thing === "string")
    return stringify_string(thing);
  if (thing === void 0)
    return "void 0";
  if (thing === 0 && 1 / thing < 0)
    return "-0";
  const str = String(thing);
  if (typeof thing === "number")
    return str.replace(/^(-)?0\./, "$1.");
  if (typeof thing === "bigint")
    return thing + "n";
  return str;
}

// node_modules/devalue/src/constants.js
var UNDEFINED = -1;
var HOLE = -2;
var NAN = -3;
var POSITIVE_INFINITY = -4;
var NEGATIVE_INFINITY = -5;
var NEGATIVE_ZERO = -6;

// node_modules/devalue/src/stringify.js
function stringify2(value, reducers) {
  const stringified = [];
  const indexes = /* @__PURE__ */ new Map();
  const custom = [];
  for (const key2 in reducers) {
    custom.push({ key: key2, fn: reducers[key2] });
  }
  const keys = [];
  let p = 0;
  function flatten(thing) {
    if (typeof thing === "function") {
      throw new DevalueError(`Cannot stringify a function`, keys);
    }
    if (indexes.has(thing))
      return indexes.get(thing);
    if (thing === void 0)
      return UNDEFINED;
    if (Number.isNaN(thing))
      return NAN;
    if (thing === Infinity)
      return POSITIVE_INFINITY;
    if (thing === -Infinity)
      return NEGATIVE_INFINITY;
    if (thing === 0 && 1 / thing < 0)
      return NEGATIVE_ZERO;
    const index6 = p++;
    indexes.set(thing, index6);
    for (const { key: key2, fn } of custom) {
      const value2 = fn(thing);
      if (value2) {
        stringified[index6] = `["${key2}",${flatten(value2)}]`;
        return index6;
      }
    }
    let str = "";
    if (is_primitive(thing)) {
      str = stringify_primitive2(thing);
    } else {
      const type = get_type(thing);
      switch (type) {
        case "Number":
        case "String":
        case "Boolean":
          str = `["Object",${stringify_primitive2(thing)}]`;
          break;
        case "BigInt":
          str = `["BigInt",${thing}]`;
          break;
        case "Date":
          str = `["Date","${thing.toISOString()}"]`;
          break;
        case "RegExp":
          const { source, flags } = thing;
          str = flags ? `["RegExp",${stringify_string(source)},"${flags}"]` : `["RegExp",${stringify_string(source)}]`;
          break;
        case "Array":
          str = "[";
          for (let i = 0; i < thing.length; i += 1) {
            if (i > 0)
              str += ",";
            if (i in thing) {
              keys.push(`[${i}]`);
              str += flatten(thing[i]);
              keys.pop();
            } else {
              str += HOLE;
            }
          }
          str += "]";
          break;
        case "Set":
          str = '["Set"';
          for (const value2 of thing) {
            str += `,${flatten(value2)}`;
          }
          str += "]";
          break;
        case "Map":
          str = '["Map"';
          for (const [key2, value2] of thing) {
            keys.push(`.get(${is_primitive(key2) ? stringify_primitive2(key2) : "..."})`);
            str += `,${flatten(key2)},${flatten(value2)}`;
          }
          str += "]";
          break;
        default:
          if (!is_plain_object(thing)) {
            throw new DevalueError(`Cannot stringify arbitrary non-POJOs`, keys);
          }
          if (Object.getOwnPropertySymbols(thing).length > 0) {
            throw new DevalueError(`Cannot stringify POJOs with symbolic keys`, keys);
          }
          if (Object.getPrototypeOf(thing) === null) {
            str = '["null"';
            for (const key2 in thing) {
              keys.push(`.${key2}`);
              str += `,${stringify_string(key2)},${flatten(thing[key2])}`;
              keys.pop();
            }
            str += "]";
          } else {
            str = "{";
            let started = false;
            for (const key2 in thing) {
              if (started)
                str += ",";
              started = true;
              keys.push(`.${key2}`);
              str += `${stringify_string(key2)}:${flatten(thing[key2])}`;
              keys.pop();
            }
            str += "}";
          }
      }
    }
    stringified[index6] = str;
    return index6;
  }
  const index5 = flatten(value);
  if (index5 < 0)
    return `${index5}`;
  return `[${stringified.join(",")}]`;
}
function stringify_primitive2(thing) {
  const type = typeof thing;
  if (type === "string")
    return stringify_string(thing);
  if (thing instanceof String)
    return stringify_string(thing.toString());
  if (thing === void 0)
    return UNDEFINED.toString();
  if (thing === 0 && 1 / thing < 0)
    return NEGATIVE_ZERO.toString();
  if (type === "bigint")
    return `["BigInt","${thing}"]`;
  return String(thing);
}

// .netlify/server/chunks/index.js
init_index2();
var subscriber_queue = [];
function readable2(value, start) {
  return {
    subscribe: writable(value, start).subscribe
  };
}
function writable(value, start = noop) {
  let stop;
  const subscribers = /* @__PURE__ */ new Set();
  function set(new_value) {
    if (safe_not_equal(value, new_value)) {
      value = new_value;
      if (stop) {
        const run_queue = !subscriber_queue.length;
        for (const subscriber of subscribers) {
          subscriber[1]();
          subscriber_queue.push(subscriber, value);
        }
        if (run_queue) {
          for (let i = 0; i < subscriber_queue.length; i += 2) {
            subscriber_queue[i][0](subscriber_queue[i + 1]);
          }
          subscriber_queue.length = 0;
        }
      }
    }
  }
  function update(fn) {
    set(fn(value));
  }
  function subscribe2(run2, invalidate = noop) {
    const subscriber = [run2, invalidate];
    subscribers.add(subscriber);
    if (subscribers.size === 1) {
      stop = start(set) || noop;
    }
    run2(value);
    return () => {
      subscribers.delete(subscriber);
      if (subscribers.size === 0) {
        stop();
        stop = null;
      }
    };
  }
  return { set, update, subscribe: subscribe2 };
}

// .netlify/server/index.js
var import_cookie = __toESM(require_cookie(), 1);
var set_cookie_parser = __toESM(require_set_cookie(), 1);
function negotiate(accept, types) {
  const parts = [];
  accept.split(",").forEach((str, i) => {
    const match = /([^/]+)\/([^;]+)(?:;q=([0-9.]+))?/.exec(str);
    if (match) {
      const [, type, subtype, q = "1"] = match;
      parts.push({ type, subtype, q: +q, i });
    }
  });
  parts.sort((a, b) => {
    if (a.q !== b.q) {
      return b.q - a.q;
    }
    if (a.subtype === "*" !== (b.subtype === "*")) {
      return a.subtype === "*" ? 1 : -1;
    }
    if (a.type === "*" !== (b.type === "*")) {
      return a.type === "*" ? 1 : -1;
    }
    return a.i - b.i;
  });
  let accepted;
  let min_priority = Infinity;
  for (const mimetype of types) {
    const [type, subtype] = mimetype.split("/");
    const priority = parts.findIndex((part) => (part.type === type || part.type === "*") && (part.subtype === subtype || part.subtype === "*"));
    if (priority !== -1 && priority < min_priority) {
      accepted = mimetype;
      min_priority = priority;
    }
  }
  return accepted;
}
function is_content_type(request2, ...types) {
  const type = request2.headers.get("content-type")?.split(";", 1)[0].trim() ?? "";
  return types.includes(type.toLowerCase());
}
function is_form_content_type(request2) {
  return is_content_type(request2, "application/x-www-form-urlencoded", "multipart/form-data", "text/plain");
}
var HttpError = class HttpError2 {
  constructor(status, body2) {
    this.status = status;
    if (typeof body2 === "string") {
      this.body = { message: body2 };
    } else if (body2) {
      this.body = body2;
    } else {
      this.body = { message: `Error: ${status}` };
    }
  }
  toString() {
    return JSON.stringify(this.body);
  }
};
var Redirect = class Redirect2 {
  constructor(status, location) {
    this.status = status;
    this.location = location;
  }
};
var ActionFailure = class ActionFailure2 {
  constructor(status, data) {
    this.status = status;
    this.data = data;
  }
};
function error(status, message) {
  if (isNaN(status) || status < 400 || status > 599) {
    throw new Error(`HTTP error status codes must be between 400 and 599 \u2014 ${status} is invalid`);
  }
  return new HttpError(status, message);
}
function json(data, init22) {
  const body2 = JSON.stringify(data);
  const headers2 = new Headers(init22?.headers);
  if (!headers2.has("content-length")) {
    headers2.set("content-length", encoder$3.encode(body2).byteLength.toString());
  }
  if (!headers2.has("content-type")) {
    headers2.set("content-type", "application/json");
  }
  return new Response(body2, __spreadProps(__spreadValues({}, init22), {
    headers: headers2
  }));
}
var encoder$3 = new TextEncoder();
function text(body2, init22) {
  const headers2 = new Headers(init22?.headers);
  if (!headers2.has("content-length")) {
    headers2.set("content-length", encoder$3.encode(body2).byteLength.toString());
  }
  return new Response(body2, __spreadProps(__spreadValues({}, init22), {
    headers: headers2
  }));
}
function coalesce_to_error(err) {
  return err instanceof Error || err && err.name && err.message ? err : new Error(JSON.stringify(err));
}
function normalize_error(error2) {
  return error2;
}
function method_not_allowed(mod, method) {
  return text(`${method} method not allowed`, {
    status: 405,
    headers: {
      allow: allowed_methods(mod).join(", ")
    }
  });
}
function allowed_methods(mod) {
  const allowed = ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"].filter((method) => method in mod);
  if ("GET" in mod || "HEAD" in mod)
    allowed.push("HEAD");
  return allowed;
}
function static_error_page(options2, status, message) {
  let page2 = options2.templates.error({ status, message });
  return text(page2, {
    headers: { "content-type": "text/html; charset=utf-8" },
    status
  });
}
async function handle_fatal_error(event, options2, error2) {
  error2 = error2 instanceof HttpError ? error2 : coalesce_to_error(error2);
  const status = error2 instanceof HttpError ? error2.status : 500;
  const body2 = await handle_error_and_jsonify(event, options2, error2);
  const type = negotiate(event.request.headers.get("accept") || "text/html", [
    "application/json",
    "text/html"
  ]);
  if (event.isDataRequest || type === "application/json") {
    return json(body2, {
      status
    });
  }
  return static_error_page(options2, status, body2.message);
}
async function handle_error_and_jsonify(event, options2, error2) {
  if (error2 instanceof HttpError) {
    return error2.body;
  } else {
    return await options2.hooks.handleError({ error: error2, event }) ?? {
      message: event.route.id != null ? "Internal Error" : "Not Found"
    };
  }
}
function redirect_response(status, location) {
  const response2 = new Response(void 0, {
    status,
    headers: { location }
  });
  return response2;
}
function clarify_devalue_error(event, error2) {
  if (error2.path) {
    return `Data returned from \`load\` while rendering ${event.route.id} is not serializable: ${error2.message} (data${error2.path})`;
  }
  if (error2.path === "") {
    return `Data returned from \`load\` while rendering ${event.route.id} is not a plain object`;
  }
  return error2.message;
}
function stringify_uses(node) {
  const uses = [];
  if (node.uses && node.uses.dependencies.size > 0) {
    uses.push(`"dependencies":${JSON.stringify(Array.from(node.uses.dependencies))}`);
  }
  if (node.uses && node.uses.params.size > 0) {
    uses.push(`"params":${JSON.stringify(Array.from(node.uses.params))}`);
  }
  if (node.uses?.parent)
    uses.push(`"parent":1`);
  if (node.uses?.route)
    uses.push(`"route":1`);
  if (node.uses?.url)
    uses.push(`"url":1`);
  return `"uses":{${uses.join(",")}}`;
}
async function render_endpoint(event, mod, state) {
  const method = event.request.method;
  let handler2 = mod[method];
  if (!handler2 && method === "HEAD") {
    handler2 = mod.GET;
  }
  if (!handler2) {
    return method_not_allowed(mod, method);
  }
  const prerender3 = mod.prerender ?? state.prerender_default;
  if (prerender3 && (mod.POST || mod.PATCH || mod.PUT || mod.DELETE)) {
    throw new Error("Cannot prerender endpoints that have mutative methods");
  }
  if (state.prerendering && !prerender3) {
    if (state.depth > 0) {
      throw new Error(`${event.route.id} is not prerenderable`);
    } else {
      return new Response(void 0, { status: 204 });
    }
  }
  try {
    const response2 = await handler2(event);
    if (!(response2 instanceof Response)) {
      throw new Error(`Invalid response from route ${event.url.pathname}: handler should return a Response object`);
    }
    if (state.prerendering) {
      response2.headers.set("x-sveltekit-prerender", String(prerender3));
    }
    return response2;
  } catch (e) {
    if (e instanceof Redirect) {
      return new Response(void 0, {
        status: e.status,
        headers: { location: e.location }
      });
    }
    throw e;
  }
}
function is_endpoint_request(event) {
  const { method, headers: headers2 } = event.request;
  if (method === "PUT" || method === "PATCH" || method === "DELETE" || method === "OPTIONS") {
    return true;
  }
  if (method === "POST" && headers2.get("x-sveltekit-action") === "true")
    return false;
  const accept = event.request.headers.get("accept") ?? "*/*";
  return negotiate(accept, ["*", "text/html"]) !== "text/html";
}
function compact(arr) {
  return arr.filter((val) => val != null);
}
function normalize_path(path, trailing_slash) {
  if (path === "/" || trailing_slash === "ignore")
    return path;
  if (trailing_slash === "never") {
    return path.endsWith("/") ? path.slice(0, -1) : path;
  } else if (trailing_slash === "always" && !path.endsWith("/")) {
    return path + "/";
  }
  return path;
}
function decode_pathname(pathname) {
  return pathname.split("%25").map(decodeURI).join("%25");
}
function decode_params(params) {
  for (const key2 in params) {
    params[key2] = decodeURIComponent(params[key2]);
  }
  return params;
}
var tracked_url_properties = [
  "href",
  "pathname",
  "search",
  "searchParams",
  "toString",
  "toJSON"
];
function make_trackable(url, callback) {
  const tracked = new URL(url);
  for (const property of tracked_url_properties) {
    Object.defineProperty(tracked, property, {
      get() {
        callback();
        return url[property];
      },
      enumerable: true,
      configurable: true
    });
  }
  {
    tracked[Symbol.for("nodejs.util.inspect.custom")] = (depth, opts, inspect) => {
      return inspect(url, opts);
    };
  }
  disable_hash(tracked);
  return tracked;
}
function disable_hash(url) {
  Object.defineProperty(url, "hash", {
    get() {
      throw new Error("Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead");
    }
  });
}
function disable_search(url) {
  for (const property of ["search", "searchParams"]) {
    Object.defineProperty(url, property, {
      get() {
        throw new Error(`Cannot access url.${property} on a page with prerendering enabled`);
      }
    });
  }
}
var DATA_SUFFIX = "/__data.json";
function has_data_suffix(pathname) {
  return pathname.endsWith(DATA_SUFFIX);
}
function add_data_suffix(pathname) {
  return pathname.replace(/\/$/, "") + DATA_SUFFIX;
}
function strip_data_suffix(pathname) {
  return pathname.slice(0, -DATA_SUFFIX.length);
}
function is_action_json_request(event) {
  const accept = negotiate(event.request.headers.get("accept") ?? "*/*", [
    "application/json",
    "text/html"
  ]);
  return accept === "application/json" && event.request.method === "POST";
}
async function handle_action_json_request(event, options2, server) {
  const actions = server?.actions;
  if (!actions) {
    const no_actions_error = error(405, "POST method not allowed. No actions exist for this page");
    return action_json({
      type: "error",
      error: await handle_error_and_jsonify(event, options2, no_actions_error)
    }, {
      status: no_actions_error.status,
      headers: {
        allow: "GET"
      }
    });
  }
  check_named_default_separate(actions);
  try {
    const data = await call_action(event, actions);
    if (false)
      ;
    if (data instanceof ActionFailure) {
      return action_json({
        type: "failure",
        status: data.status,
        data: stringify_action_response(data.data, event.route.id)
      });
    } else {
      return action_json({
        type: "success",
        status: data ? 200 : 204,
        data: stringify_action_response(data, event.route.id)
      });
    }
  } catch (e) {
    const err = normalize_error(e);
    if (err instanceof Redirect) {
      return action_json_redirect(err);
    }
    return action_json({
      type: "error",
      error: await handle_error_and_jsonify(event, options2, check_incorrect_fail_use(err))
    }, {
      status: err instanceof HttpError ? err.status : 500
    });
  }
}
function check_incorrect_fail_use(error2) {
  return error2 instanceof ActionFailure ? new Error(`Cannot "throw fail()". Use "return fail()"`) : error2;
}
function action_json_redirect(redirect) {
  return action_json({
    type: "redirect",
    status: redirect.status,
    location: redirect.location
  });
}
function action_json(data, init22) {
  return json(data, init22);
}
function is_action_request(event) {
  return event.request.method === "POST";
}
async function handle_action_request(event, server) {
  const actions = server?.actions;
  if (!actions) {
    event.setHeaders({
      allow: "GET"
    });
    return {
      type: "error",
      error: error(405, "POST method not allowed. No actions exist for this page")
    };
  }
  check_named_default_separate(actions);
  try {
    const data = await call_action(event, actions);
    if (false)
      ;
    if (data instanceof ActionFailure) {
      return {
        type: "failure",
        status: data.status,
        data: data.data
      };
    } else {
      return {
        type: "success",
        status: 200,
        data
      };
    }
  } catch (e) {
    const err = normalize_error(e);
    if (err instanceof Redirect) {
      return {
        type: "redirect",
        status: err.status,
        location: err.location
      };
    }
    return {
      type: "error",
      error: check_incorrect_fail_use(err)
    };
  }
}
function check_named_default_separate(actions) {
  if (actions.default && Object.keys(actions).length > 1) {
    throw new Error(`When using named actions, the default action cannot be used. See the docs for more info: https://kit.svelte.dev/docs/form-actions#named-actions`);
  }
}
async function call_action(event, actions) {
  const url = new URL(event.request.url);
  let name = "default";
  for (const param of url.searchParams) {
    if (param[0].startsWith("/")) {
      name = param[0].slice(1);
      if (name === "default") {
        throw new Error('Cannot use reserved action name "default"');
      }
      break;
    }
  }
  const action = actions[name];
  if (!action) {
    throw new Error(`No action with name '${name}' found`);
  }
  if (!is_form_content_type(event.request)) {
    throw new Error(`Actions expect form-encoded data (received ${event.request.headers.get("content-type")})`);
  }
  return action(event);
}
function uneval_action_response(data, route_id) {
  return try_deserialize(data, uneval, route_id);
}
function stringify_action_response(data, route_id) {
  return try_deserialize(data, stringify2, route_id);
}
function try_deserialize(data, fn, route_id) {
  try {
    return fn(data);
  } catch (e) {
    const error2 = e;
    if ("path" in error2) {
      let message = `Data returned from action inside ${route_id} is not serializable: ${error2.message}`;
      if (error2.path !== "")
        message += ` (data.${error2.path})`;
      throw new Error(message);
    }
    throw error2;
  }
}
async function unwrap_promises(object) {
  for (const key2 in object) {
    if (typeof object[key2]?.then === "function") {
      return Object.fromEntries(await Promise.all(Object.entries(object).map(async ([key3, value]) => [key3, await value])));
    }
  }
  return object;
}
var INVALIDATED_PARAM = "x-sveltekit-invalidated";
async function load_server_data({ event, state, node, parent }) {
  if (!node?.server)
    return null;
  const uses = {
    dependencies: /* @__PURE__ */ new Set(),
    params: /* @__PURE__ */ new Set(),
    parent: false,
    route: false,
    url: false
  };
  const url = make_trackable(event.url, () => {
    uses.url = true;
  });
  if (state.prerendering) {
    disable_search(url);
  }
  const result = await node.server.load?.call(null, __spreadProps(__spreadValues({}, event), {
    fetch: (info, init22) => {
      const url2 = new URL(info instanceof Request ? info.url : info, event.url);
      uses.dependencies.add(url2.href);
      return event.fetch(info, init22);
    },
    depends: (...deps) => {
      for (const dep of deps) {
        const { href } = new URL(dep, event.url);
        uses.dependencies.add(href);
      }
    },
    params: new Proxy(event.params, {
      get: (target, key2) => {
        uses.params.add(key2);
        return target[key2];
      }
    }),
    parent: async () => {
      uses.parent = true;
      return parent();
    },
    route: new Proxy(event.route, {
      get: (target, key2) => {
        uses.route = true;
        return target[key2];
      }
    }),
    url
  }));
  const data = result ? await unwrap_promises(result) : null;
  return {
    type: "data",
    data,
    uses,
    slash: node.server.trailingSlash
  };
}
async function load_data({
  event,
  fetched,
  node,
  parent,
  server_data_promise,
  state,
  resolve_opts,
  csr: csr2
}) {
  const server_data_node = await server_data_promise;
  if (!node?.universal?.load) {
    return server_data_node?.data ?? null;
  }
  const result = await node.universal.load.call(null, {
    url: event.url,
    params: event.params,
    data: server_data_node?.data ?? null,
    route: event.route,
    fetch: create_universal_fetch(event, state, fetched, csr2, resolve_opts),
    setHeaders: event.setHeaders,
    depends: () => {
    },
    parent
  });
  const data = result ? await unwrap_promises(result) : null;
  return data;
}
function create_universal_fetch(event, state, fetched, csr2, resolve_opts) {
  return async (input, init22) => {
    const cloned_body = input instanceof Request && input.body ? input.clone().body : null;
    let response2 = await event.fetch(input, init22);
    const url = new URL(input instanceof Request ? input.url : input, event.url);
    const same_origin = url.origin === event.url.origin;
    let dependency;
    if (same_origin) {
      if (state.prerendering) {
        dependency = { response: response2, body: null };
        state.prerendering.dependencies.set(url.pathname, dependency);
      }
    } else {
      const mode = input instanceof Request ? input.mode : init22?.mode ?? "cors";
      if (mode === "no-cors") {
        response2 = new Response("", {
          status: response2.status,
          statusText: response2.statusText,
          headers: response2.headers
        });
      } else {
        const acao = response2.headers.get("access-control-allow-origin");
        if (!acao || acao !== event.url.origin && acao !== "*") {
          throw new Error(`CORS error: ${acao ? "Incorrect" : "No"} 'Access-Control-Allow-Origin' header is present on the requested resource`);
        }
      }
    }
    const proxy = new Proxy(response2, {
      get(response22, key2, _receiver) {
        async function text2() {
          const body2 = await response22.text();
          if (!body2 || typeof body2 === "string") {
            const status_number = Number(response22.status);
            if (isNaN(status_number)) {
              throw new Error(`response.status is not a number. value: "${response22.status}" type: ${typeof response22.status}`);
            }
            fetched.push({
              url: same_origin ? url.href.slice(event.url.origin.length) : url.href,
              method: event.request.method,
              request_body: input instanceof Request && cloned_body ? await stream_to_string(cloned_body) : init22?.body,
              request_headers: init22?.headers,
              response_body: body2,
              response: response22
            });
          }
          if (dependency) {
            dependency.body = body2;
          }
          return body2;
        }
        if (key2 === "arrayBuffer") {
          return async () => {
            const buffer = await response22.arrayBuffer();
            if (dependency) {
              dependency.body = new Uint8Array(buffer);
            }
            return buffer;
          };
        }
        if (key2 === "text") {
          return text2;
        }
        if (key2 === "json") {
          return async () => {
            return JSON.parse(await text2());
          };
        }
        return Reflect.get(response22, key2, response22);
      }
    });
    if (csr2) {
      const get = response2.headers.get;
      response2.headers.get = (key2) => {
        const lower = key2.toLowerCase();
        const value = get.call(response2.headers, lower);
        if (value && !lower.startsWith("x-sveltekit-")) {
          const included = resolve_opts.filterSerializedResponseHeaders(lower, value);
          if (!included) {
            throw new Error(`Failed to get response header "${lower}" \u2014 it must be included by the \`filterSerializedResponseHeaders\` option: https://kit.svelte.dev/docs/hooks#server-hooks-handle (at ${event.route.id})`);
          }
        }
        return value;
      };
    }
    return proxy;
  };
}
async function stream_to_string(stream2) {
  let result = "";
  const reader = stream2.getReader();
  const decoder = new TextDecoder();
  while (true) {
    const { done, value } = await reader.read();
    if (done) {
      break;
    }
    result += decoder.decode(value);
  }
  return result;
}
function hash(...values) {
  let hash2 = 5381;
  for (const value of values) {
    if (typeof value === "string") {
      let i = value.length;
      while (i)
        hash2 = hash2 * 33 ^ value.charCodeAt(--i);
    } else if (ArrayBuffer.isView(value)) {
      const buffer = new Uint8Array(value.buffer, value.byteOffset, value.byteLength);
      let i = buffer.length;
      while (i)
        hash2 = hash2 * 33 ^ buffer[--i];
    } else {
      throw new TypeError("value must be a string or TypedArray");
    }
  }
  return (hash2 >>> 0).toString(36);
}
var escape_html_attr_dict = {
  "&": "&amp;",
  '"': "&quot;"
};
var escape_html_attr_regex = new RegExp(`[${Object.keys(escape_html_attr_dict).join("")}]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\udc00-\\udfff]`, "g");
function escape_html_attr(str) {
  const escaped_str = str.replace(escape_html_attr_regex, (match) => {
    if (match.length === 2) {
      return match;
    }
    return escape_html_attr_dict[match] ?? `&#${match.charCodeAt(0)};`;
  });
  return `"${escaped_str}"`;
}
var replacements = {
  "<": "\\u003C",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
};
var pattern = new RegExp(`[${Object.keys(replacements).join("")}]`, "g");
function serialize_data(fetched, filter, prerendering = false) {
  const headers2 = {};
  let cache_control = null;
  let age = null;
  let vary = false;
  for (const [key2, value] of fetched.response.headers) {
    if (filter(key2, value)) {
      headers2[key2] = value;
    }
    if (key2 === "cache-control")
      cache_control = value;
    if (key2 === "age")
      age = value;
    if (key2 === "vary")
      vary = true;
  }
  const payload = {
    status: fetched.response.status,
    statusText: fetched.response.statusText,
    headers: headers2,
    body: fetched.response_body
  };
  const safe_payload = JSON.stringify(payload).replace(pattern, (match) => replacements[match]);
  const attrs = [
    'type="application/json"',
    "data-sveltekit-fetched",
    `data-url=${escape_html_attr(fetched.url)}`
  ];
  if (fetched.request_headers || fetched.request_body) {
    const values = [];
    if (fetched.request_headers) {
      values.push([...new Headers(fetched.request_headers)].join(","));
    }
    if (fetched.request_body) {
      values.push(fetched.request_body);
    }
    attrs.push(`data-hash="${hash(...values)}"`);
  }
  if (!prerendering && fetched.method === "GET" && cache_control && !vary) {
    const match = /s-maxage=(\d+)/g.exec(cache_control) ?? /max-age=(\d+)/g.exec(cache_control);
    if (match) {
      const ttl = +match[1] - +(age ?? "0");
      attrs.push(`data-ttl="${ttl}"`);
    }
  }
  return `<script ${attrs.join(" ")}>${safe_payload}<\/script>`;
}
var s = JSON.stringify;
var encoder$2 = new TextEncoder();
function sha256(data) {
  if (!key[0])
    precompute();
  const out = init.slice(0);
  const array2 = encode(data);
  for (let i = 0; i < array2.length; i += 16) {
    const w = array2.subarray(i, i + 16);
    let tmp;
    let a;
    let b;
    let out0 = out[0];
    let out1 = out[1];
    let out2 = out[2];
    let out3 = out[3];
    let out4 = out[4];
    let out5 = out[5];
    let out6 = out[6];
    let out7 = out[7];
    for (let i2 = 0; i2 < 64; i2++) {
      if (i2 < 16) {
        tmp = w[i2];
      } else {
        a = w[i2 + 1 & 15];
        b = w[i2 + 14 & 15];
        tmp = w[i2 & 15] = (a >>> 7 ^ a >>> 18 ^ a >>> 3 ^ a << 25 ^ a << 14) + (b >>> 17 ^ b >>> 19 ^ b >>> 10 ^ b << 15 ^ b << 13) + w[i2 & 15] + w[i2 + 9 & 15] | 0;
      }
      tmp = tmp + out7 + (out4 >>> 6 ^ out4 >>> 11 ^ out4 >>> 25 ^ out4 << 26 ^ out4 << 21 ^ out4 << 7) + (out6 ^ out4 & (out5 ^ out6)) + key[i2];
      out7 = out6;
      out6 = out5;
      out5 = out4;
      out4 = out3 + tmp | 0;
      out3 = out2;
      out2 = out1;
      out1 = out0;
      out0 = tmp + (out1 & out2 ^ out3 & (out1 ^ out2)) + (out1 >>> 2 ^ out1 >>> 13 ^ out1 >>> 22 ^ out1 << 30 ^ out1 << 19 ^ out1 << 10) | 0;
    }
    out[0] = out[0] + out0 | 0;
    out[1] = out[1] + out1 | 0;
    out[2] = out[2] + out2 | 0;
    out[3] = out[3] + out3 | 0;
    out[4] = out[4] + out4 | 0;
    out[5] = out[5] + out5 | 0;
    out[6] = out[6] + out6 | 0;
    out[7] = out[7] + out7 | 0;
  }
  const bytes = new Uint8Array(out.buffer);
  reverse_endianness(bytes);
  return base64(bytes);
}
var init = new Uint32Array(8);
var key = new Uint32Array(64);
function precompute() {
  function frac(x) {
    return (x - Math.floor(x)) * 4294967296;
  }
  let prime = 2;
  for (let i = 0; i < 64; prime++) {
    let is_prime = true;
    for (let factor = 2; factor * factor <= prime; factor++) {
      if (prime % factor === 0) {
        is_prime = false;
        break;
      }
    }
    if (is_prime) {
      if (i < 8) {
        init[i] = frac(prime ** (1 / 2));
      }
      key[i] = frac(prime ** (1 / 3));
      i++;
    }
  }
}
function reverse_endianness(bytes) {
  for (let i = 0; i < bytes.length; i += 4) {
    const a = bytes[i + 0];
    const b = bytes[i + 1];
    const c = bytes[i + 2];
    const d = bytes[i + 3];
    bytes[i + 0] = d;
    bytes[i + 1] = c;
    bytes[i + 2] = b;
    bytes[i + 3] = a;
  }
}
function encode(str) {
  const encoded = encoder$2.encode(str);
  const length = encoded.length * 8;
  const size = 512 * Math.ceil((length + 65) / 512);
  const bytes = new Uint8Array(size / 8);
  bytes.set(encoded);
  bytes[encoded.length] = 128;
  reverse_endianness(bytes);
  const words = new Uint32Array(bytes.buffer);
  words[words.length - 2] = Math.floor(length / 4294967296);
  words[words.length - 1] = length;
  return words;
}
var chars2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
function base64(bytes) {
  const l = bytes.length;
  let result = "";
  let i;
  for (i = 2; i < l; i += 3) {
    result += chars2[bytes[i - 2] >> 2];
    result += chars2[(bytes[i - 2] & 3) << 4 | bytes[i - 1] >> 4];
    result += chars2[(bytes[i - 1] & 15) << 2 | bytes[i] >> 6];
    result += chars2[bytes[i] & 63];
  }
  if (i === l + 1) {
    result += chars2[bytes[i - 2] >> 2];
    result += chars2[(bytes[i - 2] & 3) << 4];
    result += "==";
  }
  if (i === l) {
    result += chars2[bytes[i - 2] >> 2];
    result += chars2[(bytes[i - 2] & 3) << 4 | bytes[i - 1] >> 4];
    result += chars2[(bytes[i - 1] & 15) << 2];
    result += "=";
  }
  return result;
}
var array = new Uint8Array(16);
function generate_nonce() {
  crypto.getRandomValues(array);
  return base64(array);
}
var quoted = /* @__PURE__ */ new Set([
  "self",
  "unsafe-eval",
  "unsafe-hashes",
  "unsafe-inline",
  "none",
  "strict-dynamic",
  "report-sample",
  "wasm-unsafe-eval",
  "script"
]);
var crypto_pattern = /^(nonce|sha\d\d\d)-/;
var BaseProvider = class {
  #use_hashes;
  #script_needs_csp;
  #style_needs_csp;
  #directives;
  #script_src;
  #style_src;
  #nonce;
  constructor(use_hashes, directives, nonce) {
    this.#use_hashes = use_hashes;
    this.#directives = directives;
    const d = this.#directives;
    this.#script_src = [];
    this.#style_src = [];
    const effective_script_src = d["script-src"] || d["default-src"];
    const effective_style_src = d["style-src"] || d["default-src"];
    this.#script_needs_csp = !!effective_script_src && effective_script_src.filter((value) => value !== "unsafe-inline").length > 0;
    this.#style_needs_csp = !!effective_style_src && effective_style_src.filter((value) => value !== "unsafe-inline").length > 0;
    this.script_needs_nonce = this.#script_needs_csp && !this.#use_hashes;
    this.style_needs_nonce = this.#style_needs_csp && !this.#use_hashes;
    this.#nonce = nonce;
  }
  add_script(content) {
    if (this.#script_needs_csp) {
      if (this.#use_hashes) {
        this.#script_src.push(`sha256-${sha256(content)}`);
      } else if (this.#script_src.length === 0) {
        this.#script_src.push(`nonce-${this.#nonce}`);
      }
    }
  }
  add_style(content) {
    if (this.#style_needs_csp) {
      if (this.#use_hashes) {
        this.#style_src.push(`sha256-${sha256(content)}`);
      } else if (this.#style_src.length === 0) {
        this.#style_src.push(`nonce-${this.#nonce}`);
      }
    }
  }
  get_header(is_meta = false) {
    const header = [];
    const directives = __spreadValues({}, this.#directives);
    if (this.#style_src.length > 0) {
      directives["style-src"] = [
        ...directives["style-src"] || directives["default-src"] || [],
        ...this.#style_src
      ];
    }
    if (this.#script_src.length > 0) {
      directives["script-src"] = [
        ...directives["script-src"] || directives["default-src"] || [],
        ...this.#script_src
      ];
    }
    for (const key2 in directives) {
      if (is_meta && (key2 === "frame-ancestors" || key2 === "report-uri" || key2 === "sandbox")) {
        continue;
      }
      const value = directives[key2];
      if (!value)
        continue;
      const directive = [key2];
      if (Array.isArray(value)) {
        value.forEach((value2) => {
          if (quoted.has(value2) || crypto_pattern.test(value2)) {
            directive.push(`'${value2}'`);
          } else {
            directive.push(value2);
          }
        });
      }
      header.push(directive.join(" "));
    }
    return header.join("; ");
  }
};
var CspProvider = class extends BaseProvider {
  get_meta() {
    const content = escape_html_attr(this.get_header(true));
    return `<meta http-equiv="content-security-policy" content=${content}>`;
  }
};
var CspReportOnlyProvider = class extends BaseProvider {
  constructor(use_hashes, directives, nonce) {
    super(use_hashes, directives, nonce);
    if (Object.values(directives).filter((v) => !!v).length > 0) {
      const has_report_to = directives["report-to"]?.length ?? 0 > 0;
      const has_report_uri = directives["report-uri"]?.length ?? 0 > 0;
      if (!has_report_to && !has_report_uri) {
        throw Error("`content-security-policy-report-only` must be specified with either the `report-to` or `report-uri` directives, or both");
      }
    }
  }
};
var Csp = class {
  nonce = generate_nonce();
  csp_provider;
  report_only_provider;
  constructor({ mode, directives, reportOnly }, { prerender: prerender3 }) {
    const use_hashes = mode === "hash" || mode === "auto" && prerender3;
    this.csp_provider = new CspProvider(use_hashes, directives, this.nonce);
    this.report_only_provider = new CspReportOnlyProvider(use_hashes, reportOnly, this.nonce);
  }
  get script_needs_nonce() {
    return this.csp_provider.script_needs_nonce || this.report_only_provider.script_needs_nonce;
  }
  get style_needs_nonce() {
    return this.csp_provider.style_needs_nonce || this.report_only_provider.style_needs_nonce;
  }
  add_script(content) {
    this.csp_provider.add_script(content);
    this.report_only_provider.add_script(content);
  }
  add_style(content) {
    this.csp_provider.add_style(content);
    this.report_only_provider.add_style(content);
  }
};
function defer() {
  let fulfil;
  let reject;
  const promise = new Promise((f, r) => {
    fulfil = f;
    reject = r;
  });
  return { promise, fulfil, reject };
}
function create_async_iterator() {
  let deferred = [defer()];
  return {
    iterator: {
      [Symbol.asyncIterator]() {
        return {
          next: async () => {
            const next = await deferred[0].promise;
            if (!next.done)
              deferred.shift();
            return next;
          }
        };
      }
    },
    push: (value) => {
      deferred[deferred.length - 1].fulfil({
        value,
        done: false
      });
      deferred.push(defer());
    },
    done: () => {
      deferred[deferred.length - 1].fulfil({ done: true });
    }
  };
}
var SVELTE_KIT_ASSETS = "/_svelte_kit_assets";
var updated = __spreadProps(__spreadValues({}, readable2(false)), {
  check: () => false
});
var encoder$1 = new TextEncoder();
async function render_response({
  branch,
  fetched,
  options: options2,
  manifest,
  state,
  page_config,
  status,
  error: error2 = null,
  event,
  resolve_opts,
  action_result
}) {
  if (state.prerendering) {
    if (options2.csp.mode === "nonce") {
      throw new Error('Cannot use prerendering if config.kit.csp.mode === "nonce"');
    }
    if (options2.app_template_contains_nonce) {
      throw new Error("Cannot use prerendering if page template contains %sveltekit.nonce%");
    }
  }
  const { client: client3 } = manifest._;
  const modulepreloads = new Set(client3.imports);
  const stylesheets5 = new Set(client3.stylesheets);
  const fonts5 = new Set(client3.fonts);
  const link_header_preloads = /* @__PURE__ */ new Set();
  const inline_styles = /* @__PURE__ */ new Map();
  let rendered;
  const form_value = action_result?.type === "success" || action_result?.type === "failure" ? action_result.data ?? null : null;
  let base$1 = base;
  let assets$1 = assets;
  let base_expression = s(base);
  if (!state.prerendering?.fallback) {
    const segments = event.url.pathname.slice(base.length).split("/").slice(2);
    base$1 = segments.map(() => "..").join("/") || ".";
    base_expression = `new URL(${s(base$1)}, location).pathname.slice(0, -1)`;
    if (!assets || assets[0] === "/" && assets !== SVELTE_KIT_ASSETS) {
      assets$1 = base$1;
    }
  }
  if (page_config.ssr) {
    const props = {
      stores: {
        page: writable(null),
        navigating: writable(null),
        updated
      },
      constructors: await Promise.all(branch.map(({ node }) => node.component())),
      form: form_value
    };
    let data2 = {};
    for (let i = 0; i < branch.length; i += 1) {
      data2 = __spreadValues(__spreadValues({}, data2), branch[i].data);
      props[`data_${i}`] = data2;
    }
    props.page = {
      error: error2,
      params: event.params,
      route: event.route,
      status,
      url: event.url,
      data: data2,
      form: form_value
    };
    {
      try {
        rendered = options2.root.render(props);
      } finally {
        reset();
      }
    }
    for (const { node } of branch) {
      for (const url of node.imports)
        modulepreloads.add(url);
      for (const url of node.stylesheets)
        stylesheets5.add(url);
      for (const url of node.fonts)
        fonts5.add(url);
      if (node.inline_styles) {
        Object.entries(await node.inline_styles()).forEach(([k, v]) => inline_styles.set(k, v));
      }
    }
  } else {
    rendered = { head: "", html: "", css: { code: "", map: null } };
  }
  let head = "";
  let body2 = rendered.html;
  const csp = new Csp(options2.csp, {
    prerender: !!state.prerendering
  });
  const prefixed = (path) => {
    if (path.startsWith("/")) {
      return base + path;
    }
    return `${assets$1}/${path}`;
  };
  if (inline_styles.size > 0) {
    const content = Array.from(inline_styles.values()).join("\n");
    const attributes = [];
    if (csp.style_needs_nonce)
      attributes.push(` nonce="${csp.nonce}"`);
    csp.add_style(content);
    head += `
	<style${attributes.join("")}>${content}</style>`;
  }
  for (const dep of stylesheets5) {
    const path = prefixed(dep);
    const attributes = ['rel="stylesheet"'];
    if (inline_styles.has(dep)) {
      attributes.push("disabled", 'media="(max-width: 0)"');
    } else {
      if (resolve_opts.preload({ type: "css", path })) {
        const preload_atts = ['rel="preload"', 'as="style"'];
        link_header_preloads.add(`<${encodeURI(path)}>; ${preload_atts.join(";")}; nopush`);
      }
    }
    head += `
		<link href="${path}" ${attributes.join(" ")}>`;
  }
  for (const dep of fonts5) {
    const path = prefixed(dep);
    if (resolve_opts.preload({ type: "font", path })) {
      const ext = dep.slice(dep.lastIndexOf(".") + 1);
      const attributes = [
        'rel="preload"',
        'as="font"',
        `type="font/${ext}"`,
        `href="${path}"`,
        "crossorigin"
      ];
      head += `
		<link ${attributes.join(" ")}>`;
    }
  }
  const global2 = `__sveltekit_${options2.version_hash}`;
  const { data, chunks } = get_data(event, options2, branch.map((b) => b.server_data), global2);
  if (page_config.ssr && page_config.csr) {
    body2 += `
			${fetched.map((item) => serialize_data(item, resolve_opts.filterSerializedResponseHeaders, !!state.prerendering)).join("\n			")}`;
  }
  if (page_config.csr) {
    const included_modulepreloads = Array.from(modulepreloads, (dep) => prefixed(dep)).filter((path) => resolve_opts.preload({ type: "js", path }));
    for (const path of included_modulepreloads) {
      link_header_preloads.add(`<${encodeURI(path)}>; rel="modulepreload"; nopush`);
      if (options2.preload_strategy !== "modulepreload") {
        head += `
		<link rel="preload" as="script" crossorigin="anonymous" href="${path}">`;
      } else if (state.prerendering) {
        head += `
		<link rel="modulepreload" href="${path}">`;
      }
    }
    const blocks = [];
    const properties = [
      assets && `assets: ${s(assets)}`,
      `base: ${base_expression}`,
      `env: ${s(public_env)}`
    ].filter(Boolean);
    if (chunks) {
      blocks.push(`const deferred = new Map();`);
      properties.push(`defer: (id) => new Promise((fulfil, reject) => {
							deferred.set(id, { fulfil, reject });
						})`);
      properties.push(`resolve: ({ id, data, error }) => {
							const { fulfil, reject } = deferred.get(id);
							deferred.delete(id);

							if (error) reject(error);
							else fulfil(data);
						}`);
    }
    blocks.push(`${global2} = {
						${properties.join(",\n						")}
					};`);
    const args = [`app`, `element`];
    blocks.push(`const element = document.currentScript.parentElement;`);
    if (page_config.ssr) {
      const serialized = { form: "null", error: "null" };
      blocks.push(`const data = ${data};`);
      if (form_value) {
        serialized.form = uneval_action_response(form_value, event.route.id);
      }
      if (error2) {
        serialized.error = uneval(error2);
      }
      const hydrate = [
        `node_ids: [${branch.map(({ node }) => node.index).join(", ")}]`,
        `data`,
        `form: ${serialized.form}`,
        `error: ${serialized.error}`
      ];
      if (status !== 200) {
        hydrate.push(`status: ${status}`);
      }
      if (options2.embedded) {
        hydrate.push(`params: ${uneval(event.params)}`, `route: ${s(event.route)}`);
      }
      args.push(`{
							${hydrate.join(",\n							")}
						}`);
    }
    blocks.push(`Promise.all([
						import(${s(prefixed(client3.start))}),
						import(${s(prefixed(client3.app))})
					]).then(([kit, app]) => {
						kit.start(${args.join(", ")});
					});`);
    if (options2.service_worker) {
      const opts = "";
      blocks.push(`if ('serviceWorker' in navigator) {
						addEventListener('load', function () {
							navigator.serviceWorker.register('${prefixed("service-worker.js")}'${opts});
						});
					}`);
    }
    const init_app = `
				{
					${blocks.join("\n\n					")}
				}
			`;
    csp.add_script(init_app);
    body2 += `
			<script${csp.script_needs_nonce ? ` nonce="${csp.nonce}"` : ""}>${init_app}<\/script>
		`;
  }
  const headers2 = new Headers({
    "x-sveltekit-page": "true",
    "content-type": "text/html"
  });
  if (state.prerendering) {
    const http_equiv = [];
    const csp_headers = csp.csp_provider.get_meta();
    if (csp_headers) {
      http_equiv.push(csp_headers);
    }
    if (state.prerendering.cache) {
      http_equiv.push(`<meta http-equiv="cache-control" content="${state.prerendering.cache}">`);
    }
    if (http_equiv.length > 0) {
      head = http_equiv.join("\n") + head;
    }
  } else {
    const csp_header = csp.csp_provider.get_header();
    if (csp_header) {
      headers2.set("content-security-policy", csp_header);
    }
    const report_only_header = csp.report_only_provider.get_header();
    if (report_only_header) {
      headers2.set("content-security-policy-report-only", report_only_header);
    }
    if (link_header_preloads.size) {
      headers2.set("link", Array.from(link_header_preloads).join(", "));
    }
  }
  head += rendered.head;
  const html = options2.templates.app({
    head,
    body: body2,
    assets: assets$1,
    nonce: csp.nonce,
    env: public_env
  });
  const transformed = await resolve_opts.transformPageChunk({
    html,
    done: true
  }) || "";
  if (!chunks) {
    headers2.set("etag", `"${hash(transformed)}"`);
  }
  return !chunks ? text(transformed, {
    status,
    headers: headers2
  }) : new Response(new ReadableStream({
    async start(controller) {
      controller.enqueue(encoder$1.encode(transformed + "\n"));
      for await (const chunk of chunks) {
        controller.enqueue(encoder$1.encode(chunk));
      }
      controller.close();
    },
    type: "bytes"
  }), {
    headers: {
      "content-type": "text/html"
    }
  });
}
function get_data(event, options2, nodes, global2) {
  let promise_id = 1;
  let count = 0;
  const { iterator, push, done } = create_async_iterator();
  function replacer(thing) {
    if (typeof thing?.then === "function") {
      const id = promise_id++;
      count += 1;
      thing.then((data) => ({ data })).catch(async (error2) => ({
        error: await handle_error_and_jsonify(event, options2, error2)
      })).then(async ({ data, error: error2 }) => {
        count -= 1;
        let str;
        try {
          str = uneval({ id, data, error: error2 }, replacer);
        } catch (e) {
          error2 = await handle_error_and_jsonify(event, options2, new Error(`Failed to serialize promise while rendering ${event.route.id}`));
          data = void 0;
          str = uneval({ id, data, error: error2 }, replacer);
        }
        push(`<script>${global2}.resolve(${str})<\/script>
`);
        if (count === 0)
          done();
      });
      return `${global2}.defer(${id})`;
    }
  }
  try {
    const strings = nodes.map((node) => {
      if (!node)
        return "null";
      return `{"type":"data","data":${uneval(node.data, replacer)},${stringify_uses(node)}${node.slash ? `,"slash":${JSON.stringify(node.slash)}` : ""}}`;
    });
    return {
      data: `[${strings.join(",")}]`,
      chunks: count > 0 ? iterator : null
    };
  } catch (e) {
    throw new Error(clarify_devalue_error(event, e));
  }
}
function get_option(nodes, option) {
  return nodes.reduce((value, node) => {
    return node?.universal?.[option] ?? node?.server?.[option] ?? value;
  }, void 0);
}
async function respond_with_error({
  event,
  options: options2,
  manifest,
  state,
  status,
  error: error2,
  resolve_opts
}) {
  const fetched = [];
  try {
    const branch = [];
    const default_layout = await manifest._.nodes[0]();
    const ssr = get_option([default_layout], "ssr") ?? true;
    const csr2 = get_option([default_layout], "csr") ?? true;
    if (ssr) {
      state.error = true;
      const server_data_promise = load_server_data({
        event,
        state,
        node: default_layout,
        parent: async () => ({})
      });
      const server_data = await server_data_promise;
      const data = await load_data({
        event,
        fetched,
        node: default_layout,
        parent: async () => ({}),
        resolve_opts,
        server_data_promise,
        state,
        csr: csr2
      });
      branch.push({
        node: default_layout,
        server_data,
        data
      }, {
        node: await manifest._.nodes[1](),
        data: null,
        server_data: null
      });
    }
    return await render_response({
      options: options2,
      manifest,
      state,
      page_config: {
        ssr,
        csr: get_option([default_layout], "csr") ?? true
      },
      status,
      error: await handle_error_and_jsonify(event, options2, error2),
      branch,
      fetched,
      event,
      resolve_opts
    });
  } catch (e) {
    if (e instanceof Redirect) {
      return redirect_response(e.status, e.location);
    }
    return static_error_page(options2, e instanceof HttpError ? e.status : 500, (await handle_error_and_jsonify(event, options2, e)).message);
  }
}
function once(fn) {
  let done = false;
  let result;
  return () => {
    if (done)
      return result;
    done = true;
    return result = fn();
  };
}
var encoder = new TextEncoder();
async function render_data(event, route, options2, manifest, state, invalidated_data_nodes, trailing_slash) {
  if (!route.page) {
    return new Response(void 0, {
      status: 404
    });
  }
  try {
    const node_ids = [...route.page.layouts, route.page.leaf];
    const invalidated = invalidated_data_nodes ?? node_ids.map(() => true);
    let aborted = false;
    const url = new URL(event.url);
    url.pathname = normalize_path(url.pathname, trailing_slash);
    const new_event = __spreadProps(__spreadValues({}, event), { url });
    const functions = node_ids.map((n, i) => {
      return once(async () => {
        try {
          if (aborted) {
            return {
              type: "skip"
            };
          }
          const node = n == void 0 ? n : await manifest._.nodes[n]();
          return load_server_data({
            event: new_event,
            state,
            node,
            parent: async () => {
              const data2 = {};
              for (let j = 0; j < i; j += 1) {
                const parent = await functions[j]();
                if (parent) {
                  Object.assign(data2, parent.data);
                }
              }
              return data2;
            }
          });
        } catch (e) {
          aborted = true;
          throw e;
        }
      });
    });
    const promises = functions.map(async (fn, i) => {
      if (!invalidated[i]) {
        return {
          type: "skip"
        };
      }
      return fn();
    });
    let length = promises.length;
    const nodes = await Promise.all(promises.map((p, i) => p.catch(async (error2) => {
      if (error2 instanceof Redirect) {
        throw error2;
      }
      length = Math.min(length, i + 1);
      return {
        type: "error",
        error: await handle_error_and_jsonify(event, options2, error2),
        status: error2 instanceof HttpError ? error2.status : void 0
      };
    })));
    const { data, chunks } = get_data_json(event, options2, nodes);
    if (!chunks) {
      return json_response(data);
    }
    return new Response(new ReadableStream({
      async start(controller) {
        controller.enqueue(encoder.encode(data));
        for await (const chunk of chunks) {
          controller.enqueue(encoder.encode(chunk));
        }
        controller.close();
      },
      type: "bytes"
    }), {
      headers: {
        "content-type": "text/sveltekit-data",
        "cache-control": "private, no-store"
      }
    });
  } catch (e) {
    const error2 = normalize_error(e);
    if (error2 instanceof Redirect) {
      return redirect_json_response(error2);
    } else {
      return json_response(await handle_error_and_jsonify(event, options2, error2), 500);
    }
  }
}
function json_response(json2, status = 200) {
  return text(typeof json2 === "string" ? json2 : JSON.stringify(json2), {
    status,
    headers: {
      "content-type": "application/json",
      "cache-control": "private, no-store"
    }
  });
}
function redirect_json_response(redirect) {
  return json_response({
    type: "redirect",
    location: redirect.location
  });
}
function get_data_json(event, options2, nodes) {
  let promise_id = 1;
  let count = 0;
  const { iterator, push, done } = create_async_iterator();
  const reducers = {
    Promise: (thing) => {
      if (typeof thing?.then === "function") {
        const id = promise_id++;
        count += 1;
        let key2 = "data";
        thing.catch(async (e) => {
          key2 = "error";
          return handle_error_and_jsonify(event, options2, e);
        }).then(async (value) => {
          let str;
          try {
            str = stringify2(value, reducers);
          } catch (e) {
            const error2 = await handle_error_and_jsonify(event, options2, new Error(`Failed to serialize promise while rendering ${event.route.id}`));
            key2 = "error";
            str = stringify2(error2, reducers);
          }
          count -= 1;
          push(`{"type":"chunk","id":${id},"${key2}":${str}}
`);
          if (count === 0)
            done();
        });
        return id;
      }
    }
  };
  try {
    const strings = nodes.map((node) => {
      if (!node)
        return "null";
      if (node.type === "error" || node.type === "skip") {
        return JSON.stringify(node);
      }
      return `{"type":"data","data":${stringify2(node.data, reducers)},${stringify_uses(node)}${node.slash ? `,"slash":${JSON.stringify(node.slash)}` : ""}}`;
    });
    return {
      data: `{"type":"data","nodes":[${strings.join(",")}]}
`,
      chunks: count > 0 ? iterator : null
    };
  } catch (e) {
    throw new Error(clarify_devalue_error(event, e));
  }
}
var MAX_DEPTH = 10;
async function render_page(event, page2, options2, manifest, state, resolve_opts) {
  if (state.depth > MAX_DEPTH) {
    return text(`Not found: ${event.url.pathname}`, {
      status: 404
    });
  }
  if (is_action_json_request(event)) {
    const node = await manifest._.nodes[page2.leaf]();
    return handle_action_json_request(event, options2, node?.server);
  }
  try {
    const nodes = await Promise.all([
      ...page2.layouts.map((n) => n == void 0 ? n : manifest._.nodes[n]()),
      manifest._.nodes[page2.leaf]()
    ]);
    const leaf_node = nodes.at(-1);
    let status = 200;
    let action_result = void 0;
    if (is_action_request(event)) {
      action_result = await handle_action_request(event, leaf_node.server);
      if (action_result?.type === "redirect") {
        return redirect_response(action_result.status, action_result.location);
      }
      if (action_result?.type === "error") {
        const error2 = action_result.error;
        status = error2 instanceof HttpError ? error2.status : 500;
      }
      if (action_result?.type === "failure") {
        status = action_result.status;
      }
    }
    const should_prerender_data = nodes.some((node) => node?.server);
    const data_pathname = add_data_suffix(event.url.pathname);
    const should_prerender = get_option(nodes, "prerender") ?? false;
    if (should_prerender) {
      const mod = leaf_node.server;
      if (mod?.actions) {
        throw new Error("Cannot prerender pages with actions");
      }
    } else if (state.prerendering) {
      return new Response(void 0, {
        status: 204
      });
    }
    state.prerender_default = should_prerender;
    const fetched = [];
    if (get_option(nodes, "ssr") === false) {
      return await render_response({
        branch: [],
        fetched,
        page_config: {
          ssr: false,
          csr: get_option(nodes, "csr") ?? true
        },
        status,
        error: null,
        event,
        options: options2,
        manifest,
        state,
        resolve_opts
      });
    }
    let branch = [];
    let load_error = null;
    const server_promises = nodes.map((node, i) => {
      if (load_error) {
        throw load_error;
      }
      return Promise.resolve().then(async () => {
        try {
          if (node === leaf_node && action_result?.type === "error") {
            throw action_result.error;
          }
          return await load_server_data({
            event,
            state,
            node,
            parent: async () => {
              const data = {};
              for (let j = 0; j < i; j += 1) {
                const parent = await server_promises[j];
                if (parent)
                  Object.assign(data, await parent.data);
              }
              return data;
            }
          });
        } catch (e) {
          load_error = e;
          throw load_error;
        }
      });
    });
    const csr2 = get_option(nodes, "csr") ?? true;
    const load_promises = nodes.map((node, i) => {
      if (load_error)
        throw load_error;
      return Promise.resolve().then(async () => {
        try {
          return await load_data({
            event,
            fetched,
            node,
            parent: async () => {
              const data = {};
              for (let j = 0; j < i; j += 1) {
                Object.assign(data, await load_promises[j]);
              }
              return data;
            },
            resolve_opts,
            server_data_promise: server_promises[i],
            state,
            csr: csr2
          });
        } catch (e) {
          load_error = e;
          throw load_error;
        }
      });
    });
    for (const p of server_promises)
      p.catch(() => {
      });
    for (const p of load_promises)
      p.catch(() => {
      });
    for (let i = 0; i < nodes.length; i += 1) {
      const node = nodes[i];
      if (node) {
        try {
          const server_data = await server_promises[i];
          const data = await load_promises[i];
          branch.push({ node, server_data, data });
        } catch (e) {
          const err = normalize_error(e);
          if (err instanceof Redirect) {
            if (state.prerendering && should_prerender_data) {
              const body2 = JSON.stringify({
                type: "redirect",
                location: err.location
              });
              state.prerendering.dependencies.set(data_pathname, {
                response: text(body2),
                body: body2
              });
            }
            return redirect_response(err.status, err.location);
          }
          const status2 = err instanceof HttpError ? err.status : 500;
          const error2 = await handle_error_and_jsonify(event, options2, err);
          while (i--) {
            if (page2.errors[i]) {
              const index5 = page2.errors[i];
              const node2 = await manifest._.nodes[index5]();
              let j = i;
              while (!branch[j])
                j -= 1;
              return await render_response({
                event,
                options: options2,
                manifest,
                state,
                resolve_opts,
                page_config: { ssr: true, csr: true },
                status: status2,
                error: error2,
                branch: compact(branch.slice(0, j + 1)).concat({
                  node: node2,
                  data: null,
                  server_data: null
                }),
                fetched
              });
            }
          }
          return static_error_page(options2, status2, error2.message);
        }
      } else {
        branch.push(null);
      }
    }
    if (state.prerendering && should_prerender_data) {
      let { data, chunks } = get_data_json(event, options2, branch.map((node) => node?.server_data));
      if (chunks) {
        for await (const chunk of chunks) {
          data += chunk;
        }
      }
      state.prerendering.dependencies.set(data_pathname, {
        response: text(data),
        body: data
      });
    }
    return await render_response({
      event,
      options: options2,
      manifest,
      state,
      resolve_opts,
      page_config: {
        csr: get_option(nodes, "csr") ?? true,
        ssr: true
      },
      status,
      error: null,
      branch: compact(branch),
      action_result,
      fetched
    });
  } catch (e) {
    return await respond_with_error({
      event,
      options: options2,
      manifest,
      state,
      status: 500,
      error: e,
      resolve_opts
    });
  }
}
function exec(match, params, matchers) {
  const result = {};
  const values = match.slice(1);
  let buffered = 0;
  for (let i = 0; i < params.length; i += 1) {
    const param = params[i];
    const value = values[i - buffered];
    if (param.chained && param.rest && buffered) {
      result[param.name] = values.slice(i - buffered, i + 1).filter((s2) => s2).join("/");
      buffered = 0;
      continue;
    }
    if (value === void 0) {
      if (param.rest)
        result[param.name] = "";
      continue;
    }
    if (!param.matcher || matchers[param.matcher](value)) {
      result[param.name] = value;
      const next_param = params[i + 1];
      const next_value = values[i + 1];
      if (next_param && !next_param.rest && next_param.optional && next_value) {
        buffered = 0;
      }
      continue;
    }
    if (param.optional && param.chained) {
      buffered++;
      continue;
    }
    return;
  }
  if (buffered)
    return;
  return result;
}
function get_cookies(request2, url, trailing_slash) {
  const header = request2.headers.get("cookie") ?? "";
  const initial_cookies = (0, import_cookie.parse)(header, { decode: (value) => value });
  const normalized_url = normalize_path(url.pathname, trailing_slash);
  const default_path = normalized_url.split("/").slice(0, -1).join("/") || "/";
  const new_cookies = {};
  const defaults = {
    httpOnly: true,
    sameSite: "lax",
    secure: url.hostname === "localhost" && url.protocol === "http:" ? false : true
  };
  const cookies = {
    get(name, opts) {
      const c = new_cookies[name];
      if (c && domain_matches(url.hostname, c.options.domain) && path_matches(url.pathname, c.options.path)) {
        return c.value;
      }
      const decoder = opts?.decode || decodeURIComponent;
      const req_cookies = (0, import_cookie.parse)(header, { decode: decoder });
      const cookie = req_cookies[name];
      return cookie;
    },
    getAll(opts) {
      const decoder = opts?.decode || decodeURIComponent;
      const cookies2 = (0, import_cookie.parse)(header, { decode: decoder });
      for (const c of Object.values(new_cookies)) {
        if (domain_matches(url.hostname, c.options.domain) && path_matches(url.pathname, c.options.path)) {
          cookies2[c.name] = c.value;
        }
      }
      return Object.entries(cookies2).map(([name, value]) => ({ name, value }));
    },
    set(name, value, opts = {}) {
      let path = opts.path ?? default_path;
      new_cookies[name] = {
        name,
        value,
        options: __spreadProps(__spreadValues(__spreadValues({}, defaults), opts), {
          path
        })
      };
    },
    delete(name, opts = {}) {
      cookies.set(name, "", __spreadProps(__spreadValues({}, opts), {
        maxAge: 0
      }));
    },
    serialize(name, value, opts) {
      return (0, import_cookie.serialize)(name, value, __spreadValues(__spreadValues({}, defaults), opts));
    }
  };
  function get_cookie_header(destination, header2) {
    const combined_cookies = __spreadValues({}, initial_cookies);
    for (const key2 in new_cookies) {
      const cookie = new_cookies[key2];
      if (!domain_matches(destination.hostname, cookie.options.domain))
        continue;
      if (!path_matches(destination.pathname, cookie.options.path))
        continue;
      const encoder2 = cookie.options.encode || encodeURIComponent;
      combined_cookies[cookie.name] = encoder2(cookie.value);
    }
    if (header2) {
      const parsed = (0, import_cookie.parse)(header2, { decode: (value) => value });
      for (const name in parsed) {
        combined_cookies[name] = parsed[name];
      }
    }
    return Object.entries(combined_cookies).map(([name, value]) => `${name}=${value}`).join("; ");
  }
  return { cookies, new_cookies, get_cookie_header };
}
function domain_matches(hostname, constraint) {
  if (!constraint)
    return true;
  const normalized = constraint[0] === "." ? constraint.slice(1) : constraint;
  if (hostname === normalized)
    return true;
  return hostname.endsWith("." + normalized);
}
function path_matches(path, constraint) {
  if (!constraint)
    return true;
  const normalized = constraint.endsWith("/") ? constraint.slice(0, -1) : constraint;
  if (path === normalized)
    return true;
  return path.startsWith(normalized + "/");
}
function add_cookies_to_headers(headers2, cookies) {
  for (const new_cookie of cookies) {
    const { name, value, options: options2 } = new_cookie;
    headers2.append("set-cookie", (0, import_cookie.serialize)(name, value, options2));
  }
}
function create_fetch({ event, options: options2, manifest, state, get_cookie_header }) {
  return async (info, init22) => {
    const original_request = normalize_fetch_input(info, init22, event.url);
    let mode = (info instanceof Request ? info.mode : init22?.mode) ?? "cors";
    let credentials = (info instanceof Request ? info.credentials : init22?.credentials) ?? "same-origin";
    return await options2.hooks.handleFetch({
      event,
      request: original_request,
      fetch: async (info2, init3) => {
        const request2 = normalize_fetch_input(info2, init3, event.url);
        const url = new URL(request2.url);
        if (!request2.headers.has("origin")) {
          request2.headers.set("origin", event.url.origin);
        }
        if (info2 !== original_request) {
          mode = (info2 instanceof Request ? info2.mode : init3?.mode) ?? "cors";
          credentials = (info2 instanceof Request ? info2.credentials : init3?.credentials) ?? "same-origin";
        }
        if ((request2.method === "GET" || request2.method === "HEAD") && (mode === "no-cors" && url.origin !== event.url.origin || url.origin === event.url.origin)) {
          request2.headers.delete("origin");
        }
        if (url.origin !== event.url.origin) {
          if (`.${url.hostname}`.endsWith(`.${event.url.hostname}`) && credentials !== "omit") {
            const cookie = get_cookie_header(url, request2.headers.get("cookie"));
            if (cookie)
              request2.headers.set("cookie", cookie);
          }
          return fetch(request2);
        }
        let response2;
        const prefix = assets || base;
        const decoded = decodeURIComponent(url.pathname);
        const filename = (decoded.startsWith(prefix) ? decoded.slice(prefix.length) : decoded).slice(1);
        const filename_html = `${filename}/index.html`;
        const is_asset = manifest.assets.has(filename);
        const is_asset_html = manifest.assets.has(filename_html);
        if (is_asset || is_asset_html) {
          const file2 = is_asset ? filename : filename_html;
          if (state.read) {
            const type = is_asset ? manifest.mimeTypes[filename.slice(filename.lastIndexOf("."))] : "text/html";
            return new Response(state.read(file2), {
              headers: type ? { "content-type": type } : {}
            });
          }
          return await fetch(request2);
        }
        if (credentials !== "omit") {
          const cookie = get_cookie_header(url, request2.headers.get("cookie"));
          if (cookie) {
            request2.headers.set("cookie", cookie);
          }
          const authorization = event.request.headers.get("authorization");
          if (authorization && !request2.headers.has("authorization")) {
            request2.headers.set("authorization", authorization);
          }
        }
        if (!request2.headers.has("accept")) {
          request2.headers.set("accept", "*/*");
        }
        if (!request2.headers.has("accept-language")) {
          request2.headers.set("accept-language", event.request.headers.get("accept-language"));
        }
        response2 = await respond(request2, options2, manifest, __spreadProps(__spreadValues({}, state), {
          depth: state.depth + 1
        }));
        const set_cookie = response2.headers.get("set-cookie");
        if (set_cookie) {
          for (const str of set_cookie_parser.splitCookiesString(set_cookie)) {
            const _a = set_cookie_parser.parseString(str), { name, value } = _a, options3 = __objRest(_a, ["name", "value"]);
            event.cookies.set(name, value, options3);
          }
        }
        return response2;
      }
    });
  };
}
function normalize_fetch_input(info, init22, url) {
  if (info instanceof Request) {
    return info;
  }
  return new Request(typeof info === "string" ? new URL(info, url) : info, init22);
}
function validator(expected) {
  function validate(module2, file2) {
    if (!module2)
      return;
    for (const key2 in module2) {
      if (key2[0] === "_" || expected.has(key2))
        continue;
      const values = [...expected.values()];
      const hint = hint_for_supported_files(key2, file2?.slice(file2.lastIndexOf("."))) ?? `valid exports are ${values.join(", ")}, or anything with a '_' prefix`;
      throw new Error(`Invalid export '${key2}'${file2 ? ` in ${file2}` : ""} (${hint})`);
    }
  }
  return validate;
}
function hint_for_supported_files(key2, ext = ".js") {
  let supported_files = [];
  if (valid_layout_exports.has(key2)) {
    supported_files.push(`+layout${ext}`);
  }
  if (valid_page_exports.has(key2)) {
    supported_files.push(`+page${ext}`);
  }
  if (valid_layout_server_exports.has(key2)) {
    supported_files.push(`+layout.server${ext}`);
  }
  if (valid_page_server_exports.has(key2)) {
    supported_files.push(`+page.server${ext}`);
  }
  if (valid_server_exports.has(key2)) {
    supported_files.push(`+server${ext}`);
  }
  if (supported_files.length > 0) {
    return `'${key2}' is a valid export in ${supported_files.slice(0, -1).join(`, `)}${supported_files.length > 1 ? " or " : ""}${supported_files.at(-1)}`;
  }
}
var valid_layout_exports = /* @__PURE__ */ new Set([
  "load",
  "prerender",
  "csr",
  "ssr",
  "trailingSlash",
  "config"
]);
var valid_page_exports = /* @__PURE__ */ new Set([...valid_layout_exports, "entries"]);
var valid_layout_server_exports = /* @__PURE__ */ new Set([...valid_layout_exports, "actions"]);
var valid_page_server_exports = /* @__PURE__ */ new Set([...valid_layout_server_exports, "entries"]);
var valid_server_exports = /* @__PURE__ */ new Set([
  "GET",
  "POST",
  "PATCH",
  "PUT",
  "DELETE",
  "OPTIONS",
  "prerender",
  "trailingSlash",
  "config",
  "entries"
]);
var validate_layout_exports = validator(valid_layout_exports);
var validate_page_exports = validator(valid_page_exports);
var validate_layout_server_exports = validator(valid_layout_server_exports);
var validate_page_server_exports = validator(valid_page_server_exports);
var validate_server_exports = validator(valid_server_exports);
var default_transform = ({ html }) => html;
var default_filter = () => false;
var default_preload = ({ type }) => type === "js" || type === "css";
async function respond(request2, options2, manifest, state) {
  let url = new URL(request2.url);
  if (options2.csrf_check_origin) {
    const forbidden = is_form_content_type(request2) && (request2.method === "POST" || request2.method === "PUT" || request2.method === "PATCH" || request2.method === "DELETE") && request2.headers.get("origin") !== url.origin;
    if (forbidden) {
      const csrf_error = error(403, `Cross-site ${request2.method} form submissions are forbidden`);
      if (request2.headers.get("accept") === "application/json") {
        return json(csrf_error.body, { status: csrf_error.status });
      }
      return text(csrf_error.body.message, { status: csrf_error.status });
    }
  }
  let decoded;
  try {
    decoded = decode_pathname(url.pathname);
  } catch {
    return text("Malformed URI", { status: 400 });
  }
  let route = null;
  let params = {};
  if (base && !state.prerendering?.fallback) {
    if (!decoded.startsWith(base)) {
      return text("Not found", { status: 404 });
    }
    decoded = decoded.slice(base.length) || "/";
  }
  const is_data_request = has_data_suffix(decoded);
  let invalidated_data_nodes;
  if (is_data_request) {
    decoded = strip_data_suffix(decoded) || "/";
    url.pathname = strip_data_suffix(url.pathname) || "/";
    invalidated_data_nodes = url.searchParams.get(INVALIDATED_PARAM)?.split("").map((node) => node === "1");
    url.searchParams.delete(INVALIDATED_PARAM);
  }
  if (!state.prerendering?.fallback) {
    const matchers = await manifest._.matchers();
    for (const candidate of manifest._.routes) {
      const match = candidate.pattern.exec(decoded);
      if (!match)
        continue;
      const matched = exec(match, candidate.params, matchers);
      if (matched) {
        route = candidate;
        params = decode_params(matched);
        break;
      }
    }
  }
  let trailing_slash = void 0;
  const headers2 = {};
  let cookies_to_add = {};
  const event = {
    cookies: null,
    fetch: null,
    getClientAddress: state.getClientAddress || (() => {
      throw new Error(`${"@sveltejs/adapter-netlify"} does not specify getClientAddress. Please raise an issue`);
    }),
    locals: {},
    params,
    platform: state.platform,
    request: request2,
    route: { id: route?.id ?? null },
    setHeaders: (new_headers) => {
      for (const key2 in new_headers) {
        const lower = key2.toLowerCase();
        const value = new_headers[key2];
        if (lower === "set-cookie") {
          throw new Error(`Use \`event.cookies.set(name, value, options)\` instead of \`event.setHeaders\` to set cookies`);
        } else if (lower in headers2) {
          throw new Error(`"${key2}" header is already set`);
        } else {
          headers2[lower] = value;
          if (state.prerendering && lower === "cache-control") {
            state.prerendering.cache = value;
          }
        }
      }
    },
    url,
    isDataRequest: is_data_request
  };
  let resolve_opts = {
    transformPageChunk: default_transform,
    filterSerializedResponseHeaders: default_filter,
    preload: default_preload
  };
  try {
    if (route) {
      if (url.pathname === base || url.pathname === base + "/") {
        trailing_slash = "always";
      } else if (route.page) {
        const nodes = await Promise.all([
          ...route.page.layouts.map((n) => n == void 0 ? n : manifest._.nodes[n]()),
          manifest._.nodes[route.page.leaf]()
        ]);
        if (DEV)
          ;
        trailing_slash = get_option(nodes, "trailingSlash");
      } else if (route.endpoint) {
        const node = await route.endpoint();
        trailing_slash = node.trailingSlash;
        if (DEV)
          ;
      }
      if (!is_data_request) {
        const normalized = normalize_path(url.pathname, trailing_slash ?? "never");
        if (normalized !== url.pathname && !state.prerendering?.fallback) {
          return new Response(void 0, {
            status: 308,
            headers: {
              "x-sveltekit-normalize": "1",
              location: (normalized.startsWith("//") ? url.origin + normalized : normalized) + (url.search === "?" ? "" : url.search)
            }
          });
        }
      }
    }
    const { cookies, new_cookies, get_cookie_header } = get_cookies(request2, url, trailing_slash ?? "never");
    cookies_to_add = new_cookies;
    event.cookies = cookies;
    event.fetch = create_fetch({ event, options: options2, manifest, state, get_cookie_header });
    if (state.prerendering && !state.prerendering.fallback)
      disable_search(url);
    const response2 = await options2.hooks.handle({
      event,
      resolve: (event2, opts) => resolve(event2, opts).then((response22) => {
        for (const key2 in headers2) {
          const value = headers2[key2];
          response22.headers.set(key2, value);
        }
        add_cookies_to_headers(response22.headers, Object.values(cookies_to_add));
        if (state.prerendering && event2.route.id !== null) {
          response22.headers.set("x-sveltekit-routeid", encodeURI(event2.route.id));
        }
        return response22;
      })
    });
    if (response2.status === 200 && response2.headers.has("etag")) {
      let if_none_match_value = request2.headers.get("if-none-match");
      if (if_none_match_value?.startsWith('W/"')) {
        if_none_match_value = if_none_match_value.substring(2);
      }
      const etag = response2.headers.get("etag");
      if (if_none_match_value === etag) {
        const headers22 = new Headers({ etag });
        for (const key2 of [
          "cache-control",
          "content-location",
          "date",
          "expires",
          "vary",
          "set-cookie"
        ]) {
          const value = response2.headers.get(key2);
          if (value)
            headers22.set(key2, value);
        }
        return new Response(void 0, {
          status: 304,
          headers: headers22
        });
      }
    }
    if (is_data_request && response2.status >= 300 && response2.status <= 308) {
      const location = response2.headers.get("location");
      if (location) {
        return redirect_json_response(new Redirect(response2.status, location));
      }
    }
    return response2;
  } catch (e) {
    if (e instanceof Redirect) {
      const response2 = is_data_request ? redirect_json_response(e) : route?.page && is_action_json_request(event) ? action_json_redirect(e) : redirect_response(e.status, e.location);
      add_cookies_to_headers(response2.headers, Object.values(cookies_to_add));
      return response2;
    }
    return await handle_fatal_error(event, options2, e);
  }
  async function resolve(event2, opts) {
    try {
      if (opts) {
        if ("ssr" in opts) {
          throw new Error("ssr has been removed, set it in the appropriate +layout.js instead. See the PR for more information: https://github.com/sveltejs/kit/pull/6197");
        }
        resolve_opts = {
          transformPageChunk: opts.transformPageChunk || default_transform,
          filterSerializedResponseHeaders: opts.filterSerializedResponseHeaders || default_filter,
          preload: opts.preload || default_preload
        };
      }
      if (state.prerendering?.fallback) {
        return await render_response({
          event: event2,
          options: options2,
          manifest,
          state,
          page_config: { ssr: false, csr: true },
          status: 200,
          error: null,
          branch: [],
          fetched: [],
          resolve_opts
        });
      }
      if (route) {
        let response2;
        if (is_data_request) {
          response2 = await render_data(event2, route, options2, manifest, state, invalidated_data_nodes, trailing_slash ?? "never");
        } else if (route.endpoint && (!route.page || is_endpoint_request(event2))) {
          response2 = await render_endpoint(event2, await route.endpoint(), state);
        } else if (route.page) {
          response2 = await render_page(event2, route.page, options2, manifest, state, resolve_opts);
        } else {
          throw new Error("This should never happen");
        }
        return response2;
      }
      if (state.error) {
        return text("Internal Server Error", {
          status: 500
        });
      }
      if (state.depth === 0) {
        return await respond_with_error({
          event: event2,
          options: options2,
          manifest,
          state,
          status: 404,
          error: new Error(`Not found: ${event2.url.pathname}`),
          resolve_opts
        });
      }
      if (state.prerendering) {
        return text("not found", { status: 404 });
      }
      return await fetch(request2);
    } catch (e) {
      return await handle_fatal_error(event2, options2, e);
    } finally {
      event2.cookies.set = () => {
        throw new Error("Cannot use `cookies.set(...)` after the response has been generated");
      };
      event2.setHeaders = () => {
        throw new Error("Cannot use `setHeaders(...)` after the response has been generated");
      };
    }
  }
}
var Server = class {
  #options;
  #manifest;
  constructor(manifest) {
    this.#options = options;
    this.#manifest = manifest;
  }
  async init({ env }) {
    const entries = Object.entries(env);
    const prefix = this.#options.env_public_prefix;
    Object.fromEntries(entries.filter(([k]) => !k.startsWith(prefix)));
    const pub = Object.fromEntries(entries.filter(([k]) => k.startsWith(prefix)));
    set_public_env(pub);
    if (!this.#options.hooks) {
      try {
        const module2 = await get_hooks();
        this.#options.hooks = {
          handle: module2.handle || (({ event, resolve }) => resolve(event)),
          handleError: module2.handleError || (({ error: error2 }) => console.error(error2)),
          handleFetch: module2.handleFetch || (({ request: request2, fetch: fetch2 }) => fetch2(request2))
        };
      } catch (error2) {
        {
          throw error2;
        }
      }
    }
  }
  async respond(request2, options2) {
    if (!(request2 instanceof Request)) {
      throw new Error("The first argument to server.respond must be a Request object. See https://github.com/sveltejs/kit/pull/3384 for details");
    }
    return respond(request2, this.#options, this.#manifest, __spreadProps(__spreadValues({}, options2), {
      error: false,
      depth: 0
    }));
  }
};

// .netlify/serverless.js
var setCookie = { exports: {} };
var defaultParseOptions = {
  decodeValues: true,
  map: false,
  silent: false
};
function isNonEmptyString(str) {
  return typeof str === "string" && !!str.trim();
}
function parseString2(setCookieValue, options2) {
  var parts = setCookieValue.split(";").filter(isNonEmptyString);
  var nameValuePairStr = parts.shift();
  var parsed = parseNameValuePair(nameValuePairStr);
  var name = parsed.name;
  var value = parsed.value;
  options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
  try {
    value = options2.decodeValues ? decodeURIComponent(value) : value;
  } catch (e) {
    console.error("set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.", e);
  }
  var cookie = {
    name,
    value
  };
  parts.forEach(function(part) {
    var sides = part.split("=");
    var key2 = sides.shift().trimLeft().toLowerCase();
    var value2 = sides.join("=");
    if (key2 === "expires") {
      cookie.expires = new Date(value2);
    } else if (key2 === "max-age") {
      cookie.maxAge = parseInt(value2, 10);
    } else if (key2 === "secure") {
      cookie.secure = true;
    } else if (key2 === "httponly") {
      cookie.httpOnly = true;
    } else if (key2 === "samesite") {
      cookie.sameSite = value2;
    } else {
      cookie[key2] = value2;
    }
  });
  return cookie;
}
function parseNameValuePair(nameValuePairStr) {
  var name = "";
  var value = "";
  var nameValueArr = nameValuePairStr.split("=");
  if (nameValueArr.length > 1) {
    name = nameValueArr.shift();
    value = nameValueArr.join("=");
  } else {
    value = nameValuePairStr;
  }
  return { name, value };
}
function parse3(input, options2) {
  options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
  if (!input) {
    if (!options2.map) {
      return [];
    } else {
      return {};
    }
  }
  if (input.headers && input.headers["set-cookie"]) {
    input = input.headers["set-cookie"];
  } else if (input.headers) {
    var sch = input.headers[Object.keys(input.headers).find(function(key2) {
      return key2.toLowerCase() === "set-cookie";
    })];
    if (!sch && input.headers.cookie && !options2.silent) {
      console.warn("Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning.");
    }
    input = sch;
  }
  if (!Array.isArray(input)) {
    input = [input];
  }
  options2 = options2 ? Object.assign({}, defaultParseOptions, options2) : defaultParseOptions;
  if (!options2.map) {
    return input.filter(isNonEmptyString).map(function(str) {
      return parseString2(str, options2);
    });
  } else {
    var cookies = {};
    return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
      var cookie = parseString2(str, options2);
      cookies2[cookie.name] = cookie;
      return cookies2;
    }, cookies);
  }
}
function splitCookiesString2(cookiesString) {
  if (Array.isArray(cookiesString)) {
    return cookiesString;
  }
  if (typeof cookiesString !== "string") {
    return [];
  }
  var cookiesStrings = [];
  var pos = 0;
  var start;
  var ch;
  var lastComma;
  var nextStart;
  var cookiesSeparatorFound;
  function skipWhitespace() {
    while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
      pos += 1;
    }
    return pos < cookiesString.length;
  }
  function notSpecialChar() {
    ch = cookiesString.charAt(pos);
    return ch !== "=" && ch !== ";" && ch !== ",";
  }
  while (pos < cookiesString.length) {
    start = pos;
    cookiesSeparatorFound = false;
    while (skipWhitespace()) {
      ch = cookiesString.charAt(pos);
      if (ch === ",") {
        lastComma = pos;
        pos += 1;
        skipWhitespace();
        nextStart = pos;
        while (pos < cookiesString.length && notSpecialChar()) {
          pos += 1;
        }
        if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
          cookiesSeparatorFound = true;
          pos = nextStart;
          cookiesStrings.push(cookiesString.substring(start, lastComma));
          start = pos;
        } else {
          pos = lastComma + 1;
        }
      } else {
        pos += 1;
      }
    }
    if (!cookiesSeparatorFound || pos >= cookiesString.length) {
      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
    }
  }
  return cookiesStrings;
}
setCookie.exports = parse3;
setCookie.exports.parse = parse3;
setCookie.exports.parseString = parseString2;
var splitCookiesString_1 = setCookie.exports.splitCookiesString = splitCookiesString2;
function split_headers(headers2) {
  const h = {};
  const m = {};
  headers2.forEach((value, key2) => {
    if (key2 === "set-cookie") {
      m[key2] = splitCookiesString_1(value);
    } else {
      h[key2] = value;
    }
  });
  return {
    headers: h,
    multiValueHeaders: m
  };
}
function init2(manifest) {
  const server = new Server(manifest);
  let init_promise = server.init({
    env: process.env
  });
  return async (event, context) => {
    if (init_promise !== null) {
      await init_promise;
      init_promise = null;
    }
    const response2 = await server.respond(to_request(event), {
      platform: { context },
      getClientAddress() {
        return event.headers["x-nf-client-connection-ip"];
      }
    });
    const partial_response = __spreadValues({
      statusCode: response2.status
    }, split_headers(response2.headers));
    if (!is_text(response2.headers.get("content-type"))) {
      return __spreadProps(__spreadValues({}, partial_response), {
        isBase64Encoded: true,
        body: Buffer.from(await response2.arrayBuffer()).toString("base64")
      });
    }
    return __spreadProps(__spreadValues({}, partial_response), {
      body: await response2.text()
    });
  };
}
function to_request(event) {
  const { httpMethod, headers: headers2, rawUrl, body: body2, isBase64Encoded } = event;
  const init3 = {
    method: httpMethod,
    headers: new Headers(headers2)
  };
  if (httpMethod !== "GET" && httpMethod !== "HEAD") {
    const encoding2 = isBase64Encoded ? "base64" : "utf-8";
    init3.body = typeof body2 === "string" ? Buffer.from(body2, encoding2) : body2;
  }
  return new Request(rawUrl, init3);
}
var text_types = /* @__PURE__ */ new Set([
  "application/xml",
  "application/json",
  "application/x-www-form-urlencoded",
  "multipart/form-data"
]);
function is_text(content_type) {
  if (!content_type)
    return true;
  const type = content_type.split(";")[0].toLowerCase();
  return type.startsWith("text/") || type.endsWith("+xml") || text_types.has(type);
}

// .netlify/functions-internal/render.mjs
var handler = init2({
  appDir: "_app",
  appPath: "_app",
  assets: /* @__PURE__ */ new Set(["css/all.css", "css/animations.css", "css/bootstrap/bootstrap.css", "css/bootstrap/bootstrap.min.css", "css/style.css", "favicon.png", "fonts/Mohave-Italic-VariableFont_wght.ttf", "fonts/Mohave-VariableFont_wght.ttf", "fonts/OpenSans-Italic-VariableFont_wdth,wght.ttf", "fonts/OpenSans-VariableFont_wdth,wght.ttf", "fonts/Open_Sans/OFL.txt", "fonts/Open_Sans/OpenSans-Italic-VariableFont_wdth,wght.ttf", "fonts/Open_Sans/OpenSans-VariableFont_wdth,wght.ttf", "fonts/Open_Sans/README.txt", "fonts/Open_Sans/static/OpenSans-Bold.ttf", "fonts/Open_Sans/static/OpenSans-BoldItalic.ttf", "fonts/Open_Sans/static/OpenSans-ExtraBold.ttf", "fonts/Open_Sans/static/OpenSans-ExtraBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans-Italic.ttf", "fonts/Open_Sans/static/OpenSans-Light.ttf", "fonts/Open_Sans/static/OpenSans-LightItalic.ttf", "fonts/Open_Sans/static/OpenSans-Medium.ttf", "fonts/Open_Sans/static/OpenSans-MediumItalic.ttf", "fonts/Open_Sans/static/OpenSans-Regular.ttf", "fonts/Open_Sans/static/OpenSans-SemiBold.ttf", "fonts/Open_Sans/static/OpenSans-SemiBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-Bold.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-BoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-ExtraBold.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-ExtraBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-Italic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-Light.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-LightItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-Medium.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-MediumItalic.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-Regular.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-SemiBold.ttf", "fonts/Open_Sans/static/OpenSans_Condensed-SemiBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-Bold.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-BoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-ExtraBold.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-ExtraBoldItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-Italic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-Light.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-LightItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-Medium.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-MediumItalic.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-Regular.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-SemiBold.ttf", "fonts/Open_Sans/static/OpenSans_SemiCondensed-SemiBoldItalic.ttf", "fonts/Roboto/LICENSE.txt", "fonts/Roboto-Black.ttf", "fonts/Roboto-BlackItalic.ttf", "fonts/Roboto-Bold.ttf", "fonts/Roboto-BoldItalic.ttf", "fonts/Roboto-Italic.ttf", "fonts/Roboto-Light.ttf", "fonts/Roboto-LightItalic.ttf", "fonts/Roboto-Medium.ttf", "fonts/Roboto-MediumItalic.ttf", "fonts/Roboto-Regular.ttf", "fonts/Roboto-Thin.ttf", "fonts/Roboto-ThinItalic.ttf", "fonts/Sanchez-Italic.ttf", "fonts/Sanchez-Regular.ttf", "img/20210623_090917.jpg", "img/20210623_090950.jpg", "img/20210623_161858_2.jpg", "img/20230603_074215.jpg", "img/about.jpeg", "img/about.jpg", "img/about1.jpg", "img/about2.jpg", "img/blog/1. Post 1/blog1-banner.jpg", "img/blog/2. Post 2/blog2-banner.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip- (1).mp4", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-1.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-10.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-11.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-12.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-13.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-14.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-15.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-16.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-17.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-18.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-19.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-2.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-3.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-4.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-5.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-6.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-7.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-8.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-9.jpg", "img/blog/transam/Biking The TransAm Week 0 - Roadtrip/Biking The TransAm Week 0 - Roadtrip-banner.jpg", "img/blog/transam/Let's Bike Across America/Let's Bike Across America-1.jpg", "img/blog/transam/Let's Bike Across America/Let's Bike Across America-banner.jpg", "img/blog/transam/week 1/day0/Biking The TransAm Week 0 - Roadtrip-2.jpg", "img/blog/transam/week 1/day0/day0-1.jpg", "img/blog/transam/week 1/day0/day0-2.jpg", "img/blog/transam/week 1/day0/day0-3.jpg", "img/blog/transam/week 1/day0/day0-4.jpg", "img/blog/transam/week 1/day0/day0-5.jpg", "img/blog/transam/week 1/day0/day0-6.jpg", "img/blog/transam/week 1/day0/day0-7.jpg", "img/blog/transam/week 1/day1/day1-1.jpg", "img/blog/transam/week 1/day1/day1-10.jpg", "img/blog/transam/week 1/day1/day1-11.jpg", "img/blog/transam/week 1/day1/day1-12.jpg", "img/blog/transam/week 1/day1/day1-2.jpg", "img/blog/transam/week 1/day1/day1-3.jpg", "img/blog/transam/week 1/day1/day1-4.jpg", "img/blog/transam/week 1/day1/day1-5.jpg", "img/blog/transam/week 1/day1/day1-6.jpg", "img/blog/transam/week 1/day1/day1-7.jpg", "img/blog/transam/week 1/day1/day1-8.jpg", "img/blog/transam/week 1/day1/day1-9.jpg", "img/blog/transam/week 1/day1/day1-elevation.jpg", "img/blog/transam/week 1/day1/day1-elevation.png", "img/blog/transam/week 1/day1/day1-map.jpg", "img/blog/transam/week 1/day1/day1-map.png", "img/blog/transam/week 1/day2/day2-1.jpg", "img/blog/transam/week 1/day2/day2-2.jpg", "img/blog/transam/week 1/day2/day2-3.jpg", "img/blog/transam/week 1/day2/day2-4.jpg", "img/blog/transam/week 1/day2/day2-5.jpg", "img/blog/transam/week 1/day2/day2-6.HEIC", "img/blog/transam/week 1/day2/day2-6.jpg", "img/blog/transam/week 1/day2/day2-7.jpg", "img/blog/transam/week 1/day2/day2-8.jpg", "img/blog/transam/week 1/day2/day2-elevation.jpg", "img/blog/transam/week 1/day2/day2-map.jpg", "img/blog/transam/week 1/day2-elevation.png", "img/blog/transam/week 1/day2-map.png", "img/blog/transam/week 1/day3/day3- (3).jpg", "img/blog/transam/week 1/day3/day3-1.jpg", "img/blog/transam/week 1/day3/day3-2.jpg", "img/blog/transam/week 1/day3/day3-3.mp4", "img/blog/transam/week 1/day3/day3-5.jpg", "img/blog/transam/week 1/day3/day3-6.jpg", "img/blog/transam/week 1/day3/day3-elevation.jpg", "img/blog/transam/week 1/day3/day3-map.jpg", "img/blog/transam/week 1/day3- (9).jpg", "img/blog/transam/week 1/day4/day4- (12).jpg", "img/blog/transam/week 1/day4/day4- (13).jpg", "img/blog/transam/week 1/day4/day4-1.jpg", "img/blog/transam/week 1/day4/day4-10.jpg", "img/blog/transam/week 1/day4/day4-11.jpg", "img/blog/transam/week 1/day4/day4-2.jpg", "img/blog/transam/week 1/day4/day4-3.jpg", "img/blog/transam/week 1/day4/day4-4.jpg", "img/blog/transam/week 1/day4/day4-5.jpg", "img/blog/transam/week 1/day4/day4-6.jpg", "img/blog/transam/week 1/day4/day4-7.jpg", "img/blog/transam/week 1/day4/day4-8.jpg", "img/blog/transam/week 1/day4/day4-9.jpg", "img/blog/transam/week 1/day4/day4-elevation.jpg", "img/blog/transam/week 1/day4/day4-map.jpg", "img/blog/transam/week 1/day4- (3).jpg", "img/blog/transam/week 1/day4- (6).jpg", "img/blog/transam/week 1/day5/day5-1.jpg", "img/blog/transam/week 1/day5/day5-10.jpg", "img/blog/transam/week 1/day5/day5-11.jpg", "img/blog/transam/week 1/day5/day5-2.jpg", "img/blog/transam/week 1/day5/day5-3.jpg", "img/blog/transam/week 1/day5/day5-4.jpg", "img/blog/transam/week 1/day5/day5-5.jpg", "img/blog/transam/week 1/day5/day5-6.jpg", "img/blog/transam/week 1/day5/day5-7.jpg", "img/blog/transam/week 1/day5/day5-8.jpg", "img/blog/transam/week 1/day5/day5-9.HEIC", "img/blog/transam/week 1/day5/day5-9.jpg", "img/blog/transam/week 1/day5/day5-elevation.jpg", "img/blog/transam/week 1/day5/day5-map.jpg", "img/blog/transam/week 1/day6/day6- (2).jpg", "img/blog/transam/week 1/day6/day6- (61).jpg", "img/blog/transam/week 1/day6/day6- (8).jpg", "img/blog/transam/week 1/day6/day6-.HEIC", "img/blog/transam/week 1/day6/day6-1.jpg", "img/blog/transam/week 1/day6/day6-2.jpg", "img/blog/transam/week 1/day6/day6-3.jpg", "img/blog/transam/week 1/day6/day6-4.jpg", "img/blog/transam/week 1/day6/day6-5.jpg", "img/blog/transam/week 1/day6/day6-6.jpg", "img/blog/transam/week 1/day6/day6-7.jpg", "img/blog/transam/week 1/day6/day6-8.jpg", "img/blog/transam/week 1/day6/day6-elevation.jpg", "img/blog/transam/week 1/day6/day6-map.jpg", "img/blog/transam/week 1/day7/day (8).jpg", "img/blog/transam/week 1/day7/day7-1.jpg", "img/blog/transam/week 1/day7/day7-2.jpg", "img/blog/transam/week 1/day7/day7-3.jpg", "img/blog/transam/week 1/day7/day7-4.jpg", "img/blog/transam/week 1/day7/day7-5.jpg", "img/blog/transam/week 1/day7/day7-6.jpg", "img/blog/transam/week 1/day7/day7-8.jpg", "img/blog/transam/week 1/day7/day7-9.jpg", "img/blog/transam/week 1/day7/day7-elevation.jpg", "img/blog/transam/week 1/day7/day7-map.jpg", "img/blog/transam/week 1/IMG_3952.jpg", "img/blog/transam/week 1/morgan.jpg", "img/blog/transam/week 1/scrap (1).jpg", "img/blog/transam/week 1/scrap (2).jpg", "img/blog/transam/week 1/scrap (3).jpg", "img/blog/transam/week 1/Screenshot 2023-03-31 145036.png", "img/blog/transam/week 1/Screenshot 2023-03-31 145057.png", "img/blog/transam/week 1/Screenshot 2023-03-31 145204.png", "img/blog/transam/week 1/week1-banner.jpg", "img/blog.jpg", "img/carl-and-morgan.jpg", "img/carl-and-morgan.png", "img/carl.heic", "img/carl.jpg", "img/contact.jpg", "img/hero-10.jpg", "img/hero-2.jpg", "img/hero-3.jpg", "img/hero-4.jpg", "img/hero-5.jpg", "img/hero-6.jpg", "img/hero-7.jpg", "img/hero-8.jpg", "img/hero-9.jpg", "img/hero-c.jpg", "img/hero.jpg", "img/logo-1.png", "img/logo-2.png", "img/morgan.jpg", "img/OBA_Icon.png", "img/OBA_PrimaryLogo_WhiteType.png", "img/Screenshot 2023-04-29 155737.png", "img/test.jpg", "img/tour1-cover.jpg", "img/tour2-cover-old.jpg", "img/tour2-cover.jpg", "img/tour2-cover2.jpg", "img/tour3-cover.jpeg", "img/tour4-cover.jpg", "img/tours/1. McKenzie Pass/tour1-0.jpg", "img/tours/1. McKenzie Pass/tour1-1.jpg", "img/tours/1. McKenzie Pass/tour1-11.jpg", "img/tours/1. McKenzie Pass/tour1-2.jpg", "img/tours/1. McKenzie Pass/tour1-21.jpg", "img/tours/1. McKenzie Pass/tour1-3.jpg", "img/tours/1. McKenzie Pass/tour1-4.jpg", "img/tours/1. McKenzie Pass/tour1-5.jpg", "img/tours/1. McKenzie Pass/tour1-6.jpg", "img/tours/1. McKenzie Pass/tour1-7.jpg", "img/tours/1. McKenzie Pass/tour1-cover.jpg", "img/tours/1. McKenzie Pass/tour1-cover1.jpg", "img/tours/2. Twin Bridges/tour2-0.jpg", "img/tours/2. Twin Bridges/tour2-1.jpg", "img/tours/2. Twin Bridges/tour2-2.jpg", "img/tours/2. Twin Bridges/tour2-3.jpg", "img/tours/2. Twin Bridges/tour2-4.png", "img/tours/2. Twin Bridges/tour2-cover.jpg", "img/tours/3. COAT/20210704_171649.jpg", "img/tours/3. COAT/20230411_093011.jpg", "img/tours/3. COAT/92d4bd95_z.jpg", "img/tours/3. COAT/e16c1c_65398a7a2d9f41a7a122920512e08aa8~mv2_d_4280_2887_s_4_2.jpg", "img/tours/3. COAT/OSF2020-1.jpg", "img/tours/3. COAT/Screenshot 2023-06-14 114425.png", "img/tours/3. COAT/tour----.jpg", "img/tours/3. COAT/tour1-1.jpg", "img/tours/3. COAT/tour1-11.jpg", "img/tours/3. COAT/tour1-21.jpg", "img/tours/3. COAT/tour1-4.jpg", "img/tours/3. COAT/tour1-5.jpg", "img/tours/3. COAT/tour1-6.jpg", "img/tours/3. COAT/tour1-7.jpg", "img/tours/3. COAT/tour3----.jpg", "img/tours/3. COAT/tour3--.jpg", "img/tours/3. COAT/tour3-0-x.jpg", "img/tours/3. COAT/tour3-0.jpg", "img/tours/3. COAT/tour3-1.jpg", "img/tours/3. COAT/tour3-10.jpg", "img/tours/3. COAT/tour3-10.png", "img/tours/3. COAT/tour3-11.jpg", "img/tours/3. COAT/tour3-12.jpg", "img/tours/3. COAT/tour3-2.jpg", "img/tours/3. COAT/tour3-2XX.jpg", "img/tours/3. COAT/tour3-3.jpg", "img/tours/3. COAT/tour3-4.jpg", "img/tours/3. COAT/tour3-5-old.jpg", "img/tours/3. COAT/tour3-5.jpg", "img/tours/3. COAT/tour3-6.jpg", "img/tours/3. COAT/tour3-7.jpg", "img/tours/3. COAT/tour3-8.jpg", "img/tours/3. COAT/tour3-9.jpg", "img/tours/3. COAT/tour3-cover.jpeg", "img/tours/3. COAT/tour3-cover.jpg", "img/tours/3. COAT/TravelOregonphoto1.jpg", "img/tours/3. COAT/XXX.jpg", "img/tours/4. Custom Tour/tour4-cover.jpg", "img/tours/5. Madras/tour5-cover.jpg", "img/tours/6. Shuttle/tour6-cover.jpg", "img/tours-2.jpg", "js/animations.js", "js/preload.js", "js/tours.js", "OBA_Instagram_Profile.png", "webfonts/DIN-Next-LT-Pro-Regular.ttf", "webfonts/fa-brands-400.ttf", "webfonts/fa-brands-400.woff2", "webfonts/fa-regular-400.ttf", "webfonts/fa-regular-400.woff2", "webfonts/fa-solid-900.ttf", "webfonts/fa-solid-900.woff2", "webfonts/fa-v4compatibility.ttf", "webfonts/fa-v4compatibility.woff2"]),
  mimeTypes: { ".css": "text/css", ".png": "image/png", ".ttf": "font/ttf", ".txt": "text/plain", ".jpg": "image/jpeg", ".jpeg": "image/jpeg", ".mp4": "video/mp4", ".HEIC": "image/heic", ".heic": "image/heic", ".js": "application/javascript", ".woff2": "font/woff2" },
  _: {
    client: { "start": "_app/immutable/entry/start.9a6c48cb.js", "app": "_app/immutable/entry/app.000c4b31.js", "imports": ["_app/immutable/entry/start.9a6c48cb.js", "_app/immutable/chunks/index.ccc3dc3a.js", "_app/immutable/chunks/singletons.6a1b0d15.js", "_app/immutable/chunks/index.d2e4c5b0.js", "_app/immutable/entry/app.000c4b31.js", "_app/immutable/chunks/index.ccc3dc3a.js"], "stylesheets": [], "fonts": [] },
    nodes: [
      () => Promise.resolve().then(() => (init__(), __exports)),
      () => Promise.resolve().then(() => (init__2(), __exports2)),
      () => Promise.resolve().then(() => (init__3(), __exports3)),
      () => Promise.resolve().then(() => (init__4(), __exports4))
    ],
    routes: [
      {
        id: "/store/[itemName]",
        pattern: /^\/store\/([^/]+?)\/?$/,
        params: [{ "name": "itemName", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0], errors: [1], leaf: 2 },
        endpoint: null
      },
      {
        id: "/tours/[tourName]",
        pattern: /^\/tours\/([^/]+?)\/?$/,
        params: [{ "name": "tourName", "optional": false, "rest": false, "chained": false }],
        page: { layouts: [0], errors: [1], leaf: 3 },
        endpoint: null
      }
    ],
    matchers: async () => {
      return {};
    }
  }
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  handler
});
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015-2022 Douglas Christopher Wilson
 * MIT Licensed
 */
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */
/*! formdata-polyfill. MIT License. Jimmy Wärting <https://jimmy.warting.se/opensource> */
//# sourceMappingURL=render.js.map
